Starting experiment #1 for 10_nell_finances_nell_sports

Start learning from source dataset

Source train facts examples: 5307
Source train pos examples: 778
Source train neg examples: 549655

WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( countryhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | then return 0.8337586911970732;  // std dev = 0.154, 82.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=80 */
%   | else return -0.14185106490048796;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | then if ( acquired(G, H) )
%   | | | then return 0.8487149728353601;  // std dev = 0.995, 106.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=105 */
%   | | | else return 0.6874172277824382;  // std dev = 2.409, 41.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | else return -0.1418510649004882;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.11434728220694913;  // std dev = 4.802, 121.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | else if ( acquired(J, A), cityhascompanyoffice(K, J) )
%   | | | then return 0.13649945056342885;  // std dev = 4.414, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
%   | | | else return 0.18833761434479063;  // std dev = 18.116, 1,484.000 (wgt'ed) examples reached here.  /* #neg=994 #pos=490 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.797084451014795;  // std dev = 0.055, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( companyalsoknownas(C, E), acquired(F, E) )
%   | | then if ( companyceo(A, G) )
%   | | | then return 0.05577364081611211;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2533205463689964;  // std dev = 1.655, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( acquired(H, C), cityhascompanyoffice(I, C) )
%   | | | then return 0.13776065875345256;  // std dev = 1.811, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.005119236679371115;  // std dev = 4.111, 141.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=22 */
%   else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | then return 0.7216160919940195;  // std dev = 0.011, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( acquired(A, K), economicsectorcompany(B, K) )
%   | | then return 0.7768938362651856;  // std dev = 0.057, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( companyalsoknownas(A, L) )
%   | | | then return 0.06933527539777558;  // std dev = 5.933, 232.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=53 */
%   | | | else return 0.15997076394714344;  // std dev = 19.687, 1,873.000 (wgt'ed) examples reached here.  /* #neg=1,258 #pos=615 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( countryhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | then if ( acquired(A, F), bankboughtbank(A, F) )
%   | | then return 0.3099414556732431;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6705741298822238;  // std dev = 0.055, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else return -0.1405896844530676;  // std dev = 0.082, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   else if ( bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A) )
%   | then if ( companyceo(I, G), economicsectorcompany(B, I) )
%   | | then return 0.6687203599938935;  // std dev = 0.147, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(H, J), economicsectorcompany(B, J) )
%   | | | then return 0.054973503808976885;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14407111026833713;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( companyalsoknownas(A, K), economicsectorcompany(B, K) )
%   | | then return 0.5653789504809922;  // std dev = 0.162, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( acquired(L, A), countryhascompanyoffice(M, L) )
%   | | | then return 0.25976896284378;  // std dev = 2.137, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.14236305576433742;  // std dev = 20.333, 1,998.000 (wgt'ed) examples reached here.  /* #neg=1,331 #pos=667 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( companyceo(C, E), acquired(F, C) )
%   | then if ( companyceo(F, G) )
%   | | then return -2.0791629188458518E-4;  // std dev = 0.338, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( economicsectorcompany(B, F) )
%   | | | then return 0.780052257096942;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18827739038375169;  // std dev = 1.481, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( countryhascompanyoffice(H, C) )
%   | | then return 0.110101955581637;  // std dev = 0.378, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.056676701069544415;  // std dev = 0.390, 111.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   else if ( acquired(A, I), companyceo(I, J) )
%   | then return 0.07694605999284473;  // std dev = 0.358, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | then return 0.6412081150122603;  // std dev = 0.108, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( companyalsoknownas(A, L), economicsectorcompany(B, L) )
%   | | | then return 0.40940776534832657;  // std dev = 0.038, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.11560681898518411;  // std dev = 19.851, 1,977.000 (wgt'ed) examples reached here.  /* #neg=1,323 #pos=654 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( companyceo(A, D), acquired(A, E) )
%   | then return 0.4258458718031659;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.31524853257555585;  // std dev = 0.034, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( acquired(A, F), economicsectorcompany(B, F) )
%   | then if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | then return 0.3689604969354508;  // std dev = 0.193, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.3812205691150906;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.587961189274591;  // std dev = 0.453, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( cityhascompanyoffice(I, J), economicsectorcompany(B, J) )
%   | | | then return 0.574197415043892;  // std dev = 2.404, 151.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=144 */
%   | | | else return -0.16569355948617914;  // std dev = 0.567, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | | else if ( acquired(K, A), bankboughtbank(K, L) )
%   | | | then return -0.013849238865474395;  // std dev = 1.724, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.09538422525006068;  // std dev = 19.074, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=575 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( acquired(A, D), economicsectorcompany(B, D) )
%   | then return 0.37683137380250514;  // std dev = 0.122, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( acquired(E, A), acquired(F, E) )
%   | | then return -0.11235756284651045;  // std dev = 0.276, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( economicsectorcompany(B, C) )
%   | | | then return 0.27408397971190634;  // std dev = 0.281, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.0011765745806209592;  // std dev = 5.421, 254.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=56 */
%   else if ( countryhascompanyoffice(G, A) )
%   | then return 0.034487123863313866;  // std dev = 0.282, 199.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=61 */
%   | else if ( acquired(A, H), companyceo(A, I) )
%   | | then if ( acquired(H, J), acquired(K, A) )
%   | | | then return 0.1334540414161152;  // std dev = 0.921, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.00887934069750919;  // std dev = 3.278, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | else if ( acquired(L, A), economicsectorcompany(B, L) )
%   | | | then return 0.507683888764653;  // std dev = 0.598, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.08407349132589367;  // std dev = 18.454, 1,674.000 (wgt'ed) examples reached here.  /* #neg=1,111 #pos=563 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | | then return 0.23241603358458027;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( acquired(A, F), cityhascompanyoffice(C, F) )
%   | | | then return 0.2669408155466387;  // std dev = 0.808, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.3969563081701525;  // std dev = 2.781, 154.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=145 */
%   | else return -0.15101180530091723;  // std dev = 0.360, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
%   else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | then return 0.41280391962308166;  // std dev = 0.095, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( companyceo(A, H), acquired(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.3975061436039735;  // std dev = 0.284, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.010943164077553377;  // std dev = 3.201, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.2091352324115399;  // std dev = 0.074, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.0684376865662614;  // std dev = 18.642, 1,647.000 (wgt'ed) examples reached here.  /* #neg=1,099 #pos=548 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then if ( acquired(D, A), companyalsoknownas(D, E) )
%   | then return 0.32169475252475094;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17547181516157828;  // std dev = 0.047, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( acquired(F, A), bankboughtbank(G, F) )
%   | then if ( acquired(H, F), economicsectorcompany(B, H) )
%   | | then return 0.501792785908966;  // std dev = 0.292, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(I, F) )
%   | | | then return -0.27747041726364685;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.029786050687111376;  // std dev = 0.890, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( companyalsoknownas(A, J), countryhascompanyoffice(K, J) )
%   | | then if ( acquired(A, L), acquired(J, M) )
%   | | | then return 0.02677479678358867;  // std dev = 1.550, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return -0.1854378690611927;  // std dev = 0.246, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( cityhascompanyoffice(N, A) )
%   | | | then return 0.012091158828787828;  // std dev = 5.195, 471.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=148 */
%   | | | else return 0.04625231762609367;  // std dev = 19.052, 1,792.000 (wgt'ed) examples reached here.  /* #neg=1,203 #pos=589 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.28068256031726757;  // std dev = 0.082, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( acquired(D, A) )
%   | then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | | then if ( countryhascompanyoffice(G, E) )
%   | | | then return -0.034221462937657696;  // std dev = 0.952, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.15737707360324862;  // std dev = 1.235, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( companyceo(D, H) )
%   | | | then return -0.06749466169006399;  // std dev = 4.240, 165.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=30 */
%   | | | else return -0.016735979790602904;  // std dev = 3.913, 124.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=31 */
%   | else if ( acquired(A, I), countryhascompanyoffice(J, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.22049127749833955;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.02574968202914932;  // std dev = 2.489, 101.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=24 */
%   | | else if ( cityhascompanyoffice(K, A) )
%   | | | then return 0.023685906194505123;  // std dev = 4.665, 342.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=119 */
%   | | | else return 0.038838205750302;  // std dev = 18.121, 1,581.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=522 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then return 0.20162839966001567;  // std dev = 0.067, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.2853121604511185;  // std dev = 0.126, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( cityhascompanyoffice(E, C), acquired(F, A) )
%   | | | then return -0.1429662959638902;  // std dev = 0.777, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.02543281933581814;  // std dev = 6.151, 378.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=90 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return 0.0071144025220715055;  // std dev = 0.236, 325.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=103 */
%   | else if ( companyceo(A, H) )
%   | | then if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | | | then return -0.07775580669515979;  // std dev = 0.665, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.02941429146859789;  // std dev = 4.301, 92.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=30 */
%   | | else if ( countryhascompanyoffice(K, A), bankbankincountry(L, K) )
%   | | | then return 0.017799479969045823;  // std dev = 2.750, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.04425095101953441;  // std dev = 17.397, 1,402.000 (wgt'ed) examples reached here.  /* #neg=918 #pos=484 */


Starting fold 1

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamplaysinleague(E, C) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(I, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.2939428120454434;  // std dev = 0.949, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3127653111418118;  // std dev = 1.183, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamplaysinleague(E, C) )
%   | then return 0.45954777650511397;  // std dev = 0.432, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A), teamplaysagainstteam(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return -0.16395564228754037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysinleague(I, J) )
%   | | | then return 0.1722577398588201;  // std dev = 1.067, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplaysforteam(E, D) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return 0.19881371328917058;  // std dev = 1.454, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.16878992270227103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysinleague(A, E) )
%   | then return 0.19678853604524701;  // std dev = 1.213, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18092246179452928;  // std dev = 0.500, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return -0.14641280871115364;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.15114611006696269;  // std dev = 1.208, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( athleteplaysforteam(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14039796431999593;  // std dev = 0.500, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(C, F) )
%   | | | then return 0.12077626062348341;  // std dev = 0.976, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return -0.12904485567169668;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.10428897211220867;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return -0.11522208094399251;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F), teamplaysinleague(F, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.0917808512960447;  // std dev = 0.974, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.07910094733396433;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(C, D) )
%   | then return -0.1039862247678832;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, F) )
%   | then return 0.06531611910630776;  // std dev = 1.395, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.03507284009971941;  // std dev = 1.401, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.530261
   AUC PR    = 0.00272
   CLL	      = -0.660542
   Precision = 0.002874 at threshold = 0.5
   Recall    = 0.541353
   F1        = 0.005719


Total learning time: 1.651 seconds
Total inference time: 219.803 seconds
AUC ROC: 0.530261


Results scoring model
   AUC ROC   = 0.8
   AUC PR    = 0.805833
   CLL	      = -0.574908
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.666667


Total scoring time: 0.686 seconds
Parameter learned model CLL: -0.574908


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'true': 'teamplaysinleague(E, C)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,false': 'teamplaysagainstteam(I, J)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)', 'true': 'teamalsoknownas(D, E)', 'true,true': 'athleteplaysforteam(F, A)'}, {'true,true,true': [0.949, 2, 2], 'true,true,false': [1.183, 3, 3], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'true': 'teamplaysinleague(E, C)', 'false': 'athleteledsportsteam(F, A), teamplaysagainstteam(G, A)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,false': 'teamplaysinleague(I, J)'}, {'true,true': [0.432, 1, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [1.067, 3, 2], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'athleteplaysforteam(E, D)', 'true,true': 'athleteplaysforteam(F, G)'}, {'true,true,true': [1.454, 5, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(A, E)', 'false,false': 'teamplaysagainstteam(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false,true': [1.213, 3, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.5, 1, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'athleteplaysforteam(E, A)'}, {'true': [0.0, 1, 0], 'false,true': [1.208, 3, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.5, 1, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'true,true': 'teamalsoknownas(A, E)', 'true,true,false': 'teamplaysagainstteam(C, F)', 'false': 'athleteplaysforteam(G, A)', 'false,false': 'teamalsoknownas(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.976, 2, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false': [1.0, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamalsoknownas(A, F), teamplaysinleague(F, G)', 'false,false': 'teamplaysagainstteam(H, A)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.974, 2, 3], 'false,false,false': [1.0, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamplaysinleague(C, D)', 'false': 'athleteplaysforteam(E, F)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.395, 4, 5], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [1.401, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.18750000000000006, 0.22222222222222224], 'false': [0.0, 0.24000000000000005], 'false,false': [0.0, 0.25], 'false,false,false': [0.25, nan], 'true': [0.18750000000000006, nan], 'false,true': [0.0, nan]}, {'': [0.23005186683000103, nan], 'true': [0.23005186683000103, nan], 'true,true': [0.22529527789960693, 0.23308121152803718]}, {'': [0.1870169915781868, 0.20555868294137436], 'false': [nan, 0.20555868294137436], 'false,false': [0.0, 0.22783051314060007], 'false,false,false': [0.22783051314060007, nan], 'true': [0.1870169915781868, nan]}, {'': [0.2114556332491515, nan], 'true': [0.2114556332491515, nan], 'true,true': [0.2114556332491515, nan]}, {'': [0.0, 0.21895309863263468], 'false': [0.21002661487100943, 0.25], 'false,false': [nan, 0.25], 'true': [nan, 0.0]}, {'': [0.0, 0.21766310533027186], 'false': [0.2083983208703817, 0.25], 'false,false': [nan, 0.25]}, {'': [0.19032296852619615, 0.20871924809757333], 'false': [nan, 0.20871924809757333], 'false,false': [0.0, 0.2500101250843088], 'true': [0.19032296852619615, nan], 'true,true': [nan, 0.19032296852619615], 'true,true,false': [0.19032296852619615, nan]}, {'': [0.0, 0.21646297081969665], 'false': [nan, 0.21646297081969665], 'false,false': [0.1895534736665342, 0.2500105200586566], 'true': [0.0, nan]}, {'': [0.0, 0.21622215529211666], 'false': [0.21622215529211666, nan], 'true': [0.0, nan]}, {'': [0.19637647111238685, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteplaysinleague(D, C).;true;true
0;false;teamplaysagainstteam(F, A).;true;true
0;false,false;teamalsoknownas(A, H).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteplaysinleague(D, C).;true;true
2;false;teamalsoknownas(A, H).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
6;false;teamalsoknownas(A, H).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.783739631656287;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.17326700864975822;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then return 0.3996237771544091;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then return -0.10763608483936489;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.17565549191565327;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5486041974107836;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.17649385195395603;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return -0.08323005744153635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.414283868637572;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.17025941829961586;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return -0.07709569789482537;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.31966047156832167;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14786414860264252;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.07732557131800136;  // std dev = 0.394, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamalsoknownas(A, D) )
%   | then return -0.07178593823145721;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.09185301944410232;  // std dev = 0.436, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return -0.06714723065829455;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.23966967125163063;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14016713596430852;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return -0.06306151594140197;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.19908646717881184;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12430725677935836;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1694504695730128;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10111902809747883;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.989383
   AUC PR    = 0.142585
   CLL	      = -0.157221
   Precision = 0.12654 at threshold = 0.5
   Recall    = 0.849624
   F1        = 0.220273


Total learning time: 1.186 seconds
Total inference time: 5.252 seconds
AUC ROC: 0.989383


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.128654
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.484 seconds
Refined model CLL: -0.128654


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989383
   AUC PR    = 0.142585
   CLL	      = -0.157221
   Precision = 0.12654 at threshold = 0.5
   Recall    = 0.849624
   F1        = 0.220273


Total learning time: 4.007 seconds
Total inference time: 5.252 seconds
AUC ROC: 0.989383
Total revision time: 4.007
Best scored revision CLL: -0.128654


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:50
{'AUC ROC': 0.989383, 'AUC PR': 0.142585, 'CLL': -0.157221, 'Precision': [0.12654, 0.5], 'Recall': 0.849624, 'F1': 0.220273, 'Learning time': 4.007, 'Inference time': 5.252, 'parameter_5': {'AUC ROC': 0.530261, 'AUC PR': 0.00272, 'CLL': -0.660542, 'Precision': [0.002874, 0.5], 'Recall': 0.541353, 'F1': 0.005719, 'Learning time': 1.651, 'Inference time': 219.803}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.024815601766178873;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(H, I) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.30539620781212357;  // std dev = 2.145, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.48016196199424954;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return -0.02030814344846617;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.17494632805349294;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.19765421263986616;  // std dev = 2.038, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.3085324495957128;  // std dev = 1.410, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, D) )
%   | | then return -0.015439743309445452;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.046534698019918566;  // std dev = 0.433, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.2342164816579478;  // std dev = 1.405, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.02354316236137849;  // std dev = 0.415, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamplaysinleague(E, C) )
%   | | then return 0.0656081391868293;  // std dev = 1.597, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14359760905411423;  // std dev = 0.435, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.06973499294121109;  // std dev = 0.429, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.054575332061695;  // std dev = 1.919, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.04265233325723453;  // std dev = 1.918, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.52451
   AUC PR    = 0.00262
   CLL	      = -0.656677
   Precision = 0.002835 at threshold = 0.5
   Recall    = 0.473684
   F1        = 0.005636


Total learning time: 1.77 seconds
Total inference time: 166.628 seconds
AUC ROC: 0.52451


Results scoring model
   AUC ROC   = 0.795
   AUC PR    = 0.793882
   CLL	      = -0.558023
   Precision = 0.777778 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.736842


Total scoring time: 0.671 seconds
Parameter learned model CLL: -0.558023


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamplaysinleague(H, I)'}, {'true,true': [1.247, 2, 7], 'true,false': [0.0, 0, 0], 'false,true,true': [0.373, 5, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.095, 3, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.145, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.416, 2, 7], 'true,false': [0.0, 0, 0], 'false,true,true': [0.913, 5, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.095, 3, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamplaysagainstteam(C, E)'}, {'true,true': [2.038, 10, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, D)'}, {'true': [1.41, 3, 8], 'false,true,true': [0.894, 4, 1], 'false,true,false': [0.0, 0, 0], 'false,false': [0.433, 3, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)'}, {'true': [1.405, 3, 8], 'false': [0.415, 7, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'teamplaysinleague(D, C)', 'true,true': 'teamplaysinleague(E, C)'}, {'true,true,true': [1.597, 7, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.435, 3, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.429, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [1.919, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [1.918, 10, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.17283950617283939, 0.1983471074380166], 'false': [0.13888888888888892, 0.24000000000000005], 'false,false': [0.24000000000000005, nan], 'true': [0.17283950617283939, nan], 'false,true': [0.13888888888888892, nan]}, {'': [0.22998097336466308, nan]}, {'': [0.17283950617283944, 0.19430079277613174], 'false': [0.13888888888888892, 0.23999999999999994], 'false,false': [0.23999999999999994, nan], 'true': [0.17283950617283944, nan], 'false,true': [0.13888888888888892, nan]}, {'': [0.20761337636497337, nan], 'true': [0.20761337636497337, nan]}, {'': [0.18072040911994633, 0.1724609620267769], 'false': [0.15999999999999995, 0.18749999999999994], 'false,true': [0.15999999999999995, nan]}, {'': [0.17946197684869228, 0.17236537917563632]}, {'': [0.18208529099696294, 0.18914137564841974], 'true': [0.18208529099696294, nan], 'true,true': [0.18208529099696294, nan]}, {'': [0.18439830506658306, nan]}, {'': [0.18407308652369062, nan]}, {'': [0.18387545615475326, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
0;true;teamplaysagainstteam(E, C).;true;true
0;false;teamplaysinleague(A, F).;true;true
0;false,true;teamplaysinleague(G, F).;true;true
0;false,false;teamplaysinleague(H, I).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
2;true;teamplaysagainstteam(E, C).;true;true
2;false;teamplaysinleague(A, F).;true;true
2;false,true;teamplaysinleague(G, F).;true;true
2;false,false;teamplaysagainstteam(H, I).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true
3;true;teamplaysagainstteam(C, E).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false;teamplaysinleague(A, D).;true;true
4;false,true;teamplaysinleague(E, D).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
6;true;teamplaysinleague(D, C).;true;true
6;true,true;teamplaysinleague(E, C).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, H) )
%   | then if ( teamplaysinleague(I, H) )
%   | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(J, K) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(E, F) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5033803635396505;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8339435044313748;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1602203537757366;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | | then return 0.5816305029854137;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.13103696605247833;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, H) )
%   | then if ( teamplaysinleague(I, H) )
%   | | then return -7.020983659689802E-4;  // std dev = 0.793, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(J, K) )
%   | | then return 0.17545850526992704;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then if ( teamplaysinleague(A, G), athleteplaysinleague(F, G) )
%   | | | then return 0.3439151328998971;  // std dev = 0.611, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6587882145881061;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15170337284070073;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.3719337792256857;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.018328705480538762;  // std dev = 0.605, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.02583408933347814;  // std dev = 0.609, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -8.746230259831372E-4;  // std dev = 0.542, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.29055547863601233;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.01513997586610448;  // std dev = 0.606, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamplaysinleague(A, F) )
%   | then return 0.022517235537018586;  // std dev = 0.605, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -7.332399989310179E-4;  // std dev = 0.542, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamplaysinleague(E, C) )
%   | | then if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | | | then return 0.27001512879232586;  // std dev = 0.315, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14501890194244865;  // std dev = 0.145, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13575259909467574;  // std dev = 0.732, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then if ( athleteledsportsteam(E, F), teamplaysagainstteam(F, A) )
%   | | | then return 0.18205843851238154;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06622141777728936;  // std dev = 0.395, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.46569760408968675;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1308480298373774;  // std dev = 0.099, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(E, F) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return 0.14454361632263035;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.060568470588185985;  // std dev = 0.371, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.33307574748477475;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11679481936042158;  // std dev = 0.090, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.14352202222414517;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.25680944234601155;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return 0.029660841356541807;  // std dev = 0.314, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return -0.11917162245984662;  // std dev = 0.172, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1428504168486482;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.99224
   AUC PR    = 0.204179
   CLL	      = -0.121492
   Precision = 0.139241 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.244218


Total learning time: 869.901 seconds
Total inference time: 4186.5560000000005 seconds
AUC ROC: 0.99224


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.153128
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 11.367 seconds
Refined model CLL: -0.153128


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99224
   AUC PR    = 0.204179
   CLL	      = -0.121492
   Precision = 0.139241 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.244218


Total learning time: 883.709 seconds
Total inference time: 4186.5560000000005 seconds
AUC ROC: 0.99224
Total revision time: 883.709
Best scored revision CLL: -0.153128


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:31:07
{'AUC ROC': 0.99224, 'AUC PR': 0.204179, 'CLL': -0.121492, 'Precision': [0.139241, 0.5], 'Recall': 0.992481, 'F1': 0.244218, 'Learning time': 883.709, 'Inference time': 4186.5560000000005, 'parameter_10': {'AUC ROC': 0.52451, 'AUC PR': 0.00262, 'CLL': -0.656677, 'Precision': [0.002835, 0.5], 'Recall': 0.473684, 'F1': 0.005636, 'Learning time': 1.77, 'Inference time': 166.628}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.6914822684328455;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.10814893509951219;  // std dev = 0.433, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysagainstteam(I, J) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.2854426685986243;  // std dev = 2.297, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else return 0.36976856678468595;  // std dev = 1.231, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.010982733626468334;  // std dev = 0.400, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysinleague(G, H) )
%   | | then return 0.5236804268015933;  // std dev = 1.284, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, I) )
%   | | then return 0.05319883533664849;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( athleteledsportsteam(J, K) )
%   | | | then return 0.11664990695421376;  // std dev = 1.418, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysinleague(D, E) )
%   | then if ( teamplaysinleague(F, G) )
%   | | then return 0.19734188891748752;  // std dev = 2.465, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.18221771477141324;  // std dev = 1.050, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.504431596217287;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteledsportsteam(E, A) )
%   | then return -0.023032023012279725;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.29858896240702504;  // std dev = 1.240, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05869392930627041;  // std dev = 0.473, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.17771353915787366;  // std dev = 0.403, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return -0.019066305914920968;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.14692765077253303;  // std dev = 0.469, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.11269809138308011;  // std dev = 0.419, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.4038394611556643;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(C, F) )
%   | | | then return 0.11652780786169356;  // std dev = 1.575, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then return 0.023332299514123554;  // std dev = 0.472, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0700884508941243;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.09611113466159746;  // std dev = 1.000, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F), athleteledsportsteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.09130606697056633;  // std dev = 1.572, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else return 0.02315733005027318;  // std dev = 1.412, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteledsportsteam(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07541885320351811;  // std dev = 1.000, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamplaysinleague(E, F) )
%   | then return 0.0506658801068255;  // std dev = 2.116, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.0442278710511167;  // std dev = 2.341, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.502933
   AUC PR    = 0.002518
   CLL	      = -0.666514
   Precision = 0.002635 at threshold = 0.5
   Recall    = 0.398496
   F1        = 0.005236


Total learning time: 2.688 seconds
Total inference time: 204.132 seconds
AUC ROC: 0.502933


Results scoring model
   AUC ROC   = 0.804444
   AUC PR    = 0.843472
   CLL	      = -0.554832
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.740741


Total scoring time: 0.787 seconds
Parameter learned model CLL: -0.554832


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,false': 'teamplaysagainstteam(I, J)'}, {'true,true': [0.894, 4, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.373, 2, 10], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.433, 3, 1], 'false,false,false,true': [1.414, 6, 3], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamalsoknownas(C, E)', 'true,true': 'teamplaysinleague(A, F)'}, {'true,true,true': [2.297, 12, 11], 'true,true,false': [1.231, 3, 4], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysinleague(G, H)', 'false,false': 'teamalsoknownas(A, I)', 'false,false,false': 'athleteledsportsteam(J, K)'}, {'true,true': [0.4, 4, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [1.284, 2, 10], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.866, 3, 1], 'false,false,false,true': [1.418, 6, 3], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamplaysinleague(D, E)', 'true,true': 'teamplaysinleague(F, G)'}, {'true,true,true': [2.465, 15, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamplaysinleague(A, D)', 'false': 'athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(F, A)', 'false,false,true': 'teamplaysagainstteam(F, G)'}, {'true,true': [1.05, 3, 3], 'true,false': [0.0, 0, 1], 'false,true': [0.894, 4, 1], 'false,false,true,true': [1.24, 2, 7], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.473, 6, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysinleague(A, E)'}, {'true': [0.403, 3, 4], 'false,true': [0.894, 4, 1], 'false,false,true': [0.469, 5, 7], 'false,false,false': [0.419, 3, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'true,true': 'teamalsoknownas(A, E)', 'true,true,false': 'teamplaysagainstteam(C, F)', 'false': 'teamplaysinleague(A, G)', 'false,false': 'teamalsoknownas(A, H)'}, {'true,true,true': [0.078, 0, 3], 'true,true,false,true': [1.575, 6, 8], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.472, 6, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.866, 3, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamalsoknownas(A, F), athleteledsportsteam(G, F)', 'false,false': 'teamplaysagainstteam(H, A)'}, {'true,true': [1.0, 3, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.572, 6, 8], 'false,false,false': [1.412, 6, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'athleteledsportsteam(D, C)', 'false': 'teamplaysinleague(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.0, 3, 4], 'false,true': [2.116, 12, 11], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.341, 15, 15], 'false': [0.0, 0, 0]}]]
[{'': [0.16000000000000003, 0.24639999999999954], 'false': [0.1388888888888887, 0.21301775147928975], 'false,false': [0.18750000000000003, 0.2222222222222221], 'false,false,false': [0.2222222222222221, nan], 'true': [0.16000000000000003, nan], 'false,true': [0.1388888888888887, nan]}, {'': [0.2277111321820291, nan], 'true': [0.2277111321820291, nan], 'true,true': [0.2294232174118942, 0.2166340521701549]}, {'': [0.15999999999999998, 0.22223082917683826], 'false': [0.1374368984727272, 0.21316698876518936], 'false,false': [0.1875, 0.22333575825382887], 'false,false,false': [0.22333575825382887, nan], 'true': [0.15999999999999998, nan], 'false,true': [0.1374368984727272, nan]}, {'': [0.20248469530740348, nan], 'true': [0.20248469530740348, nan], 'true,true': [0.20248469530740348, nan]}, {'': [0.1703571264123411, 0.20728264790030404], 'false': [0.15999999999999998, 0.21157493675158096], 'false,false': [0.17083621298557172, 0.22353884706438404], 'false,false,true': [0.17083621298557172, nan], 'true': [0.18391829718633856, 0.0]}, {'': [0.16241572064164017, 0.19934542428590216], 'false': [0.15999999999999998, 0.20507987292439034], 'false,false': [0.21952065336678148, 0.17541720354894408]}, {'': [0.15831553174794888, 0.21348056304165103], 'false': [0.22234211483925437, 0.1875], 'false,false': [nan, 0.1875], 'true': [0.15831553174794888, nan], 'true,true': [0.0020538702377967586, 0.17723288183215116], 'true,true,false': [0.17723288183215116, nan]}, {'': [0.14282854744761447, 0.19526823313775815], 'false': [nan, 0.19526823313775815], 'false,false': [0.1765507394509728, 0.22155739943641561], 'true': [0.14282854744761447, nan]}, {'': [0.14296392245410808, 0.19460203590309327], 'false': [0.19460203590309327, nan], 'true': [nan, 0.14296392245410808]}, {'': [0.1826129449518422, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;true;teamplaysinleague(A, D).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
6;true;teamalsoknownas(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.7277332527275757;  // std dev = 0.059, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( teamplaysinleague(A, E) )
%   | then return -0.1351559740992042;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.0954213547591701;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.5533258750977683;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.36047937571761196;  // std dev = 0.668, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.5533258750977683;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6365783096474852;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11669625175839089;  // std dev = 0.038, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.43230561220574476;  // std dev = 0.074, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, G) )
%   | | then return -0.1621002199227887;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10031736247379318;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.057916203144160364;  // std dev = 0.627, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.11226618941622335;  // std dev = 0.499, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.34191631056086036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then if ( athleteledsportsteam(E, G) )
%   | | | then return 0.3161517589326225;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4162011957107595;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2124740748297484;  // std dev = 0.522, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.10104430451396523;  // std dev = 0.058, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.25205814724518205;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1284498561579674;  // std dev = 0.490, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysagainstteam(F, A), teamplaysagainstteam(A, F) )
%   | | then return 0.3573876750813338;  // std dev = 0.155, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2824026321726662;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09421597137580598;  // std dev = 0.056, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.2264948470206725;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | | then return 0.22656836173839248;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( athleteledsportsteam(G, A) )
%   | | | then return -0.13620739625331413;  // std dev = 0.216, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08096500183194201;  // std dev = 0.386, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( athleteplayssport(H, B) )
%   | then return 0.22946290240289352;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09293230828917694;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.18995322554541358;  // std dev = 0.046, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, G) )
%   | | then return -0.14063279187301939;  // std dev = 0.188, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07779980182603745;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.018972971438727882;  // std dev = 0.413, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then if ( teamalsoknownas(F, E) )
%   | | then return 0.16761885192598733;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.00947698745989517;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(G, A), teamalsoknownas(G, H) )
%   | | then return 0.23432857100735083;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16313844392831428;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07639274802240179;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.1426854777984873;  // std dev = 0.032, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return 0.0023393608491298276;  // std dev = 0.348, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( teamalsoknownas(A, G) )
%   | | | then return -0.07425489069751537;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11263083691473774;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09527857414668361;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.989063
   AUC PR    = 0.208416
   CLL	      = -0.097914
   Precision = 0.190058 at threshold = 0.5
   Recall    = 0.977444
   F1        = 0.318237


Total learning time: 53.495 seconds
Total inference time: 6.097 seconds
AUC ROC: 0.989063


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.117659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.781 seconds
Refined model CLL: -0.117659


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989063
   AUC PR    = 0.208416
   CLL	      = -0.097914
   Precision = 0.190058 at threshold = 0.5
   Recall    = 0.977444
   F1        = 0.318237


Total learning time: 57.751 seconds
Total inference time: 6.097 seconds
AUC ROC: 0.989063
Total revision time: 57.751
Best scored revision CLL: -0.117659


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:35:36
{'AUC ROC': 0.989063, 'AUC PR': 0.208416, 'CLL': -0.097914, 'Precision': [0.190058, 0.5], 'Recall': 0.977444, 'F1': 0.318237, 'Learning time': 57.751, 'Inference time': 6.097, 'parameter_15': {'AUC ROC': 0.502933, 'AUC PR': 0.002518, 'CLL': -0.666514, 'Precision': [0.002635, 0.5], 'Recall': 0.398496, 'F1': 0.005236, 'Learning time': 2.688, 'Inference time': 204.132}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( teamplaysagainstteam(G, F) )
%   | | then return 0.5724346493852266;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, A) )
%   | | then return 0.5248156017661789;  // std dev = 0.471, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( teamplaysagainstteam(I, J) )
%   | | | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.2703034941958408;  // std dev = 2.664, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else return 0.4160851717459231;  // std dev = 1.507, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.013292495202010628;  // std dev = 0.400, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( teamplaysinleague(G, H) )
%   | | then return 0.43255204599149133;  // std dev = 1.681, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A) )
%   | | then return 0.39375968681968754;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( athleteledsportsteam(J, K) )
%   | | | then return 0.11385332422353503;  // std dev = 1.817, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysinleague(C, E) )
%   | then if ( teamplaysinleague(F, G) )
%   | | then return 0.20110042133345285;  // std dev = 2.986, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.16940123784279712;  // std dev = 1.429, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.565678073975938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteledsportsteam(E, A) )
%   | then return 0.028535908489134003;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then if ( teamplaysagainstteam(G, F) )
%   | | | then return 0.3009557275589849;  // std dev = 1.465, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.055263614408517056;  // std dev = 0.469, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.15879232790712539;  // std dev = 0.460, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.023576731028325797;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.07933699897415221;  // std dev = 0.464, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return 0.20016202162073962;  // std dev = 0.460, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then if ( teamalsoknownas(E, A) )
%   | | then return 0.053356584714935984;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysagainstteam(F, C) )
%   | | | then return 0.15266179931448878;  // std dev = 1.722, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then return 0.02085656407061013;  // std dev = 0.462, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return 0.38693095840858616;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07925679633698299;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.1038685333240081;  // std dev = 1.439, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A), athleteledsportsteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.11746866563006704;  // std dev = 1.719, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else return 0.0041030716427744324;  // std dev = 1.805, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteledsportsteam(D, C) )
%   | then return -0.13227742895878525;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.1692427380610926;  // std dev = 1.153, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( teamplaysinleague(E, F) )
%   | then return 0.04677174170357904;  // std dev = 2.503, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.04207144553490012;  // std dev = 2.874, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.492912
   AUC PR    = 0.002365
   CLL	      = -0.635535
   Precision = 0.002551 at threshold = 0.5
   Recall    = 0.43609
   F1        = 0.005072


Total learning time: 3.202 seconds
Total inference time: 203.555 seconds
AUC ROC: 0.492912


Results scoring model
   AUC ROC   = 0.7575
   AUC PR    = 0.765894
   CLL	      = -0.60498
   Precision = 0.7 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.7


Total scoring time: 0.811 seconds
Parameter learned model CLL: -0.60498


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(A, F)', 'false,true': 'teamplaysagainstteam(G, F)', 'false,false': 'teamalsoknownas(H, A)', 'false,false,false': 'teamplaysagainstteam(I, J)'}, {'true,true': [0.894, 4, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.452, 4, 10], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.471, 2, 4], 'false,false,false,true': [1.826, 10, 5], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'true,true': 'teamplaysinleague(A, F)'}, {'true,true,true': [2.664, 16, 14], 'true,true,false': [1.507, 4, 6], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(A, F)', 'false,true': 'teamplaysinleague(G, H)', 'false,false': 'teamalsoknownas(I, A)', 'false,false,false': 'athleteledsportsteam(J, K)'}, {'true,true': [0.4, 4, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [1.681, 4, 10], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.146, 2, 4], 'false,false,false,true': [1.817, 10, 5], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamplaysinleague(C, E)', 'true,true': 'teamplaysinleague(F, G)'}, {'true,true,true': [2.986, 20, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamplaysinleague(A, D)', 'false': 'athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(A, F)', 'false,false,true': 'teamplaysagainstteam(G, F)'}, {'true,true': [1.429, 4, 5], 'true,false': [0.0, 0, 1], 'false,true': [0.866, 3, 1], 'false,false,true,true': [1.465, 3, 8], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.469, 10, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysinleague(A, E)'}, {'true': [0.46, 4, 6], 'false,true': [0.866, 3, 1], 'false,false,true': [0.464, 9, 8], 'false,false,false': [0.46, 4, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, C)', 'true,true': 'teamalsoknownas(E, A)', 'true,true,false': 'teamplaysagainstteam(F, C)', 'false': 'teamplaysinleague(A, G)', 'false,false': 'teamalsoknownas(H, A)'}, {'true,true,true': [0.904, 2, 2], 'true,true,false,true': [1.722, 6, 9], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.462, 8, 5], 'false,false,true': [0.0, 0, 1], 'false,false,false': [1.309, 4, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamalsoknownas(F, A), athleteledsportsteam(G, F)', 'false,false': 'teamplaysagainstteam(A, H)'}, {'true,true': [1.439, 4, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.719, 6, 9], 'false,false,false': [1.805, 10, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'athleteledsportsteam(D, C)', 'false': 'teamplaysinleague(E, F)'}, {'true,true': [0.742, 2, 1], 'true,false': [1.153, 2, 5], 'false,true': [2.503, 16, 14], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.874, 20, 20], 'false': [0.0, 0, 0]}]]
[{'': [0.16000000000000003, 0.24816326530612207], 'false': [0.20408163265306115, 0.2448979591836735], 'false,false': [0.22222222222222213, 0.22222222222222202], 'false,false,false': [0.22222222222222202, nan], 'false,true': [0.20408163265306115, nan], 'true': [0.16000000000000003, nan]}, {'': [0.23811091036595813, nan], 'true': [0.23811091036595813, nan], 'true,true': [0.23650407950113195, 0.22699217982845007]}, {'': [0.15999999999999998, 0.2358688600530653], 'false': [0.2017318346035404, 0.2358309359942564], 'false,false': [0.21906071064577656, 0.22015400561313145], 'false,false,false': [0.22015400561313145, nan], 'false,true': [0.2017318346035404, nan], 'true': [0.15999999999999998, nan]}, {'': [0.22289452596283996, nan], 'true': [0.22289452596283996, nan], 'true,true': [0.22289452596283996, nan]}, {'': [0.218380033402312, 0.22115137813038618], 'false': [0.18749999999999997, 0.22405174112611853], 'false,false': [0.19498173154503703, 0.21983087280194635], 'true': [0.2269409484725552, 0.0], 'false,false,true': [0.19498173154503703, nan]}, {'': [0.21128780448961165, 0.21449314563189698], 'false': [0.1875, 0.21737624414931034], 'false,false': [0.21561097995481318, 0.2111653373161605]}, {'': [0.20066292976033223, 0.22019816568114864], 'false': [0.21389101794195858, 0.22463952256767114], 'false,false': [0.0, 0.24489795918367344], 'true': [0.20066292976033223, nan], 'true,true': [0.20440898213588246, 0.19758787179773002], 'true,true,false': [0.19758787179773002, nan]}, {'': [0.20711658703896663, 0.21027568405161107], 'false': [nan, 0.21027568405161107], 'false,false': [0.1970037740427337, 0.21712171511044256], 'true': [0.20711658703896663, nan]}, {'': [0.2069884924239994, 0.20882278199193968], 'false': [0.20882278199193968, nan], 'true': [0.18356271575835026, 0.18975378765908335]}, {'': [0.20650786177733432, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;true;teamplaysinleague(A, D).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;false;teamplaysinleague(A, G).;true;true
6;false,false;teamalsoknownas(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.7227447557564459;  // std dev = 0.060, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( teamplaysinleague(A, E) )
%   | then return -0.13125253989691096;  // std dev = 0.090, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.05597007709234596;  // std dev = 0.811, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(E, D) )
%   | then if ( athleteledsportsteam(C, F), athleteledsportsteam(E, F) )
%   | | then return 0.554558483356744;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3041067712104301;  // std dev = 0.613, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0.6537283865373713;  // std dev = 0.155, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.554558483356744;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.11594414171700525;  // std dev = 0.035, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.4169146195578537;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2503600781776957;  // std dev = 0.577, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysagainstteam(A, F), teamplaysagainstteam(F, A) )
%   | | then return 0.5303943459276192;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4207102790159768;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10458529452457986;  // std dev = 0.032, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.3333731805367117;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09165164433611814;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.31948001837920115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | then return 0.33045999438024865;  // std dev = 0.076, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(H, I) )
%   | | then return 0.008418962556597645;  // std dev = 0.548, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return -0.12127565940511817;  // std dev = 0.192, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10847532143911179;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then if ( athleteledsportsteam(C, E), athleteplaysforteam(C, E) )
%   | | then return 0.27064683326292915;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0769974147787516;  // std dev = 0.430, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0.3462572880786214;  // std dev = 0.197, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25882854565461655;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08868029572389391;  // std dev = 0.028, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.21771080945108037;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return -0.13447400304149223;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.017503574080956992;  // std dev = 0.451, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( teamplaysinleague(A, G) )
%   | then if ( athleteplayssport(H, B) )
%   | | then return 0.21514138717131565;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07613112194189259;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamalsoknownas(I, A) )
%   | | then return 0.20842076820205457;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.21708010245234297;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09082805333500649;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.17676074863266927;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08242987613488005;  // std dev = 0.399, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then return 0.2521666176600083;  // std dev = 0.202, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18189614673541632;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07682970104312034;  // std dev = 0.029, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.1580637139162984;  // std dev = 0.074, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, G) )
%   | | then return -0.1377245763922518;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07031129499100501;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.009040942959377001;  // std dev = 0.389, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then if ( teamplaysagainstteam(D, A), teamplaysagainstteam(D, E) )
%   | | then return 0.19959899742263038;  // std dev = 0.181, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13584115720930542;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.014144472920540496;  // std dev = 0.326, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1340008636328477;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06779165377779359;  // std dev = 0.033, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.989178
   AUC PR    = 0.236868
   CLL	      = -0.091444
   Precision = 0.156511 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.270103


Total learning time: 78.06700000000001 seconds
Total inference time: 8.065 seconds
AUC ROC: 0.989178


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110475
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.765 seconds
Refined model CLL: -0.110475


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989178
   AUC PR    = 0.236868
   CLL	      = -0.091444
   Precision = 0.156511 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.270103


Total learning time: 82.84500000000001 seconds
Total inference time: 8.065 seconds
AUC ROC: 0.989178
Total revision time: 82.84500000000001
Best scored revision CLL: -0.110475


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:40:31
{'AUC ROC': 0.989178, 'AUC PR': 0.236868, 'CLL': -0.091444, 'Precision': [0.156511, 0.5], 'Recall': 0.984962, 'F1': 0.270103, 'Learning time': 82.84500000000001, 'Inference time': 8.065, 'parameter_20': {'AUC ROC': 0.492912, 'AUC PR': 0.002365, 'CLL': -0.635535, 'Precision': [0.002551, 0.5], 'Recall': 0.43609, 'F1': 0.005072, 'Learning time': 3.202, 'Inference time': 203.555}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( teamplaysagainstteam(G, F) )
%   | | then return 0.5052077586289241;  // std dev = 0.478, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, A) )
%   | | then return 0.5248156017661789;  // std dev = 0.471, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( teamplaysagainstteam(I, J) )
%   | | | then return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.2511990900703452;  // std dev = 2.935, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else return 0.45228342899025;  // std dev = 1.765, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return -0.012208745353897774;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( teamplaysinleague(G, H) )
%   | | then return 0.3794457634287583;  // std dev = 1.949, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A) )
%   | | then return 0.39559876626660745;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( athleteledsportsteam(J, K) )
%   | | | then return 0.19057301691591325;  // std dev = 2.258, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysinleague(C, E) )
%   | then if ( teamplaysinleague(F, G) )
%   | | then return 0.20258538318512598;  // std dev = 3.402, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.1839937563054429;  // std dev = 1.432, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.5559439828779118;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteledsportsteam(E, A) )
%   | then return -0.00856307530984054;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then if ( teamplaysagainstteam(G, F) )
%   | | | then return 0.24582088603676494;  // std dev = 1.765, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11237730744709053;  // std dev = 0.492, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.16850275140698756;  // std dev = 0.459, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return -0.007153142641496868;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.07171053557878643;  // std dev = 0.490, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return 0.22038521316480425;  // std dev = 0.465, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then if ( teamalsoknownas(E, A) )
%   | | then return 0.0772617429320333;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysagainstteam(F, C) )
%   | | | then return 0.1164075027750971;  // std dev = 1.987, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then return 0.056535918427369644;  // std dev = 0.486, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return 0.3776041419938455;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08299375740047266;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.10502818839960829;  // std dev = 1.439, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A), athleteledsportsteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.0898983369876176;  // std dev = 1.984, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else return 0.03809649920684767;  // std dev = 2.249, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteledsportsteam(D, C) )
%   | then return -0.11562445943847943;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.16341037451255871;  // std dev = 1.162, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( teamplaysinleague(E, F) )
%   | then return 0.048142398363259065;  // std dev = 3.001, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.04154793218280285;  // std dev = 3.318, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.490704
   AUC PR    = 0.002329
   CLL	      = -0.622056
   Precision = 0.002487 at threshold = 0.5
   Recall    = 0.383459
   F1        = 0.004942


Total learning time: 3.737 seconds
Total inference time: 202.458 seconds
AUC ROC: 0.490704


Results scoring model
   AUC ROC   = 0.7104
   AUC PR    = 0.731391
   CLL	      = -0.633069
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.56
   F1        = 0.608696


Total scoring time: 0.805 seconds
Parameter learned model CLL: -0.633069


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(A, F)', 'false,true': 'teamplaysagainstteam(G, F)', 'false,false': 'teamalsoknownas(H, A)', 'false,false,false': 'teamplaysagainstteam(I, J)'}, {'true,true': [0.913, 5, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.478, 6, 11], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.471, 2, 4], 'false,false,false,true': [2.268, 12, 9], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'true,true': 'teamplaysinleague(A, F)'}, {'true,true,true': [2.935, 20, 16], 'true,true,false': [1.765, 5, 9], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(A, F)', 'false,true': 'teamplaysinleague(G, H)', 'false,false': 'teamalsoknownas(I, A)', 'false,false,false': 'athleteledsportsteam(J, K)'}, {'true,true': [0.373, 5, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [1.949, 6, 11], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.143, 2, 4], 'false,false,false,true': [2.258, 12, 9], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamplaysinleague(C, E)', 'true,true': 'teamplaysinleague(F, G)'}, {'true,true,true': [3.402, 25, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamplaysinleague(A, D)', 'false': 'athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(A, F)', 'false,false,true': 'teamplaysagainstteam(G, F)'}, {'true,true': [1.432, 4, 5], 'true,false': [0.0, 0, 1], 'false,true': [0.894, 4, 1], 'false,false,true,true': [1.765, 5, 9], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.492, 12, 9]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysinleague(A, E)'}, {'true': [0.459, 4, 6], 'false,true': [0.894, 4, 1], 'false,false,true': [0.49, 12, 10], 'false,false,false': [0.465, 5, 8]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, C)', 'true,true': 'teamalsoknownas(E, A)', 'true,true,false': 'teamplaysagainstteam(F, C)', 'false': 'teamplaysinleague(A, G)', 'false,false': 'teamalsoknownas(H, A)'}, {'true,true,true': [0.911, 2, 2], 'true,true,false,true': [1.987, 9, 10], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.486, 9, 7], 'false,false,true': [0.0, 0, 1], 'false,false,false': [1.581, 5, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamalsoknownas(F, A), athleteledsportsteam(G, F)', 'false,false': 'teamplaysagainstteam(A, H)'}, {'true,true': [1.439, 4, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.984, 9, 10], 'false,false,false': [2.249, 12, 9]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'athleteledsportsteam(D, C)', 'false': 'teamplaysinleague(E, F)'}, {'true,true': [0.746, 2, 1], 'true,false': [1.162, 2, 5], 'false,true': [3.001, 21, 19], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.318, 25, 25], 'false': [0.0, 0, 0]}]]
[{'': [0.13888888888888892, 0.2479338842975219], 'false': [0.228373702422145, 0.24965706447187883], 'false,false': [0.22222222222222213, 0.2448979591836735], 'false,false,false': [0.2448979591836735, nan], 'false,true': [0.228373702422145, nan], 'true': [0.13888888888888892, nan]}, {'': [0.24276593259373183, nan], 'true': [0.24276593259373183, nan], 'true,true': [0.23927884490323711, 0.2226195933337702]}, {'': [0.1388888888888889, 0.2412753334472039], 'false': [0.22356152631001122, 0.2444932664809139], 'false,false': [0.2179104742199879, 0.24274711489585485], 'false,false,false': [0.24274711489585485, nan], 'false,true': [0.22356152631001122, nan], 'true': [0.1388888888888889, nan]}, {'': [0.23140631643919707, nan], 'true': [0.23140631643919707, nan], 'true,true': [0.23140631643919707, nan]}, {'': [0.21751401867700898, 0.23221992274463338], 'false': [0.15999999999999998, 0.23873871702217592], 'false,false': [0.22254650723177521, 0.2424106480823824], 'false,false,true': [0.22254650723177521, nan], 'true': [0.22784754586972333, 0.0]}, {'': [0.21100794062750278, 0.2290393359255228], 'false': [0.15999999999999998, 0.2366547262881653], 'false,false': [0.2404240806615804, 0.21638177561223726]}, {'': [0.20791306519772537, 0.23594802361499564], 'false': [0.23582591852403473, 0.23444589080250033], 'false,false': [0.0, 0.24999999999999994], 'true': [0.20791306519772537, nan], 'true,true': [0.20748434599242252, 0.20773681917449285], 'true,true,false': [0.20773681917449285, nan]}, {'': [0.20714820208595625, 0.22551328420170985], 'false': [nan, 0.22551328420170985], 'false,false': [0.20719809520204682, 0.240809540048323], 'true': [0.20714820208595625, nan]}, {'': [0.20700529087881275, 0.2250935970051413], 'false': [0.2250935970051413, nan], 'true': [0.18561157198043474, 0.19281589598212115]}, {'': [0.22022233670011523, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;true;teamplaysinleague(A, D).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;false;teamplaysinleague(A, G).;true;true
6;false,false;teamalsoknownas(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then if ( athleteledsportsteam(C, E), teamplaysagainstteam(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.724653039491316;  // std dev = 0.084, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamplaysinleague(A, E) )
%   | then return -0.13009095962320705;  // std dev = 0.091, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.015375036594832914;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then return 0.5540870437340654;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.30373125378676563;  // std dev = 0.613, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5730644786325209;  // std dev = 0.182, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.11503879565999553;  // std dev = 0.030, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then return 0.41590753750151505;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2136300141351095;  // std dev = 0.569, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.43738033130504894;  // std dev = 0.196, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.10383965022809712;  // std dev = 0.028, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.3231962226734546;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09188606447740992;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.31147194732621974;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | then return 0.3322444540404741;  // std dev = 0.144, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(H, I) )
%   | | then if ( athleteledsportsteam(J, I) )
%   | | | then return -0.09188606447740992;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09841600039488226;  // std dev = 0.466, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10948971310670812;  // std dev = 0.190, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then if ( athleteledsportsteam(C, D) )
%   | | then return 0.26073875393134405;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.33426079482064885;  // std dev = 0.157, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.09374791289559865;  // std dev = 0.446, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2512946878162135;  // std dev = 0.063, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.08749502037536944;  // std dev = 0.029, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.22022415276100407;  // std dev = 0.084, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | then if ( athleteledsportsteam(H, G), athleteplaysforteam(I, A) )
%   | | | then return -0.08044502186346604;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.15260623995895492;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.07298189532886165;  // std dev = 0.368, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(A, J) )
%   | then if ( athleteplayssport(K, B) )
%   | | then return 0.21057403414194248;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07699667658148734;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamalsoknownas(L, A) )
%   | | then return 0.2048889900298011;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(M, B) )
%   | | | then return 0.21700130036973597;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08767662237532105;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.18183675996932594;  // std dev = 0.108, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, G) )
%   | | then return -0.11734324845191332;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07467850950979828;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.00797351932327789;  // std dev = 0.400, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), teamplaysagainstteam(A, E) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then return 0.1539890934792207;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.020751129431955395;  // std dev = 0.315, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.23453206614107827;  // std dev = 0.146, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1498142812959807;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.07108037161783011;  // std dev = 0.032, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.13737355841873344;  // std dev = 0.076, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, G) )
%   | | then return -0.10429191441035608;  // std dev = 0.157, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06521309246393166;  // std dev = 0.018, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.011591689538352176;  // std dev = 0.349, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.993885
   AUC PR    = 0.278821
   CLL	      = -0.088965
   Precision = 0.164122 at threshold = 0.5
   Recall    = 0.969925
   F1        = 0.28074


Total learning time: 35.973 seconds
Total inference time: 7.737 seconds
AUC ROC: 0.993885


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106169
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.695 seconds
Refined model CLL: -0.106169


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.993885
   AUC PR    = 0.278821
   CLL	      = -0.088965
   Precision = 0.164122 at threshold = 0.5
   Recall    = 0.969925
   F1        = 0.28074


Total learning time: 41.21 seconds
Total inference time: 7.737 seconds
AUC ROC: 0.993885
Total revision time: 41.21
Best scored revision CLL: -0.106169


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:44:43
{'AUC ROC': 0.993885, 'AUC PR': 0.278821, 'CLL': -0.088965, 'Precision': [0.164122, 0.5], 'Recall': 0.969925, 'F1': 0.28074, 'Learning time': 41.21, 'Inference time': 7.737, 'parameter_25': {'AUC ROC': 0.490704, 'AUC PR': 0.002329, 'CLL': -0.622056, 'Precision': [0.002487, 0.5], 'Recall': 0.383459, 'F1': 0.004942, 'Learning time': 3.737, 'Inference time': 202.458}}


Starting fold 2

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplaysforteam(H, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.30374112718356666;  // std dev = 0.471, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.43010639064904127;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return -0.1627224077692002;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(H, I) )
%   | | | then return -0.1627224077692002;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(E, D) )
%   | then return 0.19216237450080847;  // std dev = 1.381, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return -0.005709305891094696;  // std dev = 0.424, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.3748227174160929;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( athleteplaysforteam(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.16677335250546999;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return -0.004515511283716874;  // std dev = 0.424, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.2816913746812789;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.14486670377534597;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.0773197465907616;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( athleteplaysforteam(C, F) )
%   | | | then return 0.1621804840000023;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, G) )
%   | then return -0.16535734881473876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.05217549583910697;  // std dev = 0.441, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return -0.009027568031028369;  // std dev = 0.726, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F), teamplaysagainstteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return 0.12352144659807193;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.04402802033182044;  // std dev = 0.435, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.060573056040146706;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return -0.14267109258762412;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(E, F) )
%   | then return 0.07022710227174889;  // std dev = 0.367, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.03601312254574738;  // std dev = 1.210, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.478505
   AUC PR    = 0.002303
   CLL	      = -0.659273
   Precision = 0.002209 at threshold = 0.5
   Recall    = 0.421053
   F1        = 0.004394


Total learning time: 1.061 seconds
Total inference time: 101.024 seconds
AUC ROC: 0.478505


Results scoring model
   AUC ROC   = 0.84
   AUC PR    = 0.756429
   CLL	      = -0.461233
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.8


Total scoring time: 0.606 seconds
Parameter learned model CLL: -0.461233


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamplaysinleague(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,false': 'teamalsoknownas(A, G)', 'false,false,false': 'athleteplaysforteam(H, I)'}, {'true,true': [1.195, 2, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [0.471, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamplaysinleague(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,false': 'teamalsoknownas(A, G)', 'false,false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.452, 2, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)', 'true': 'teamplaysagainstteam(E, D)'}, {'true,true': [1.381, 5, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'athleteplaysforteam(E, A)'}, {'true': [0.424, 2, 1], 'false,true': [0.894, 1, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 2, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, A)'}, {'true': [0.424, 2, 1], 'false,true': [0.894, 1, 4], 'false,false': [0.0, 2, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'athleteplaysforteam(C, D)', 'true,true': 'teamalsoknownas(A, E)', 'true,true,false': 'athleteplaysforteam(C, F)', 'false': 'teamalsoknownas(A, G)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false,true': [0.866, 1, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [0.441, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamalsoknownas(A, F), teamplaysagainstteam(G, F)', 'false,false': 'athleteplaysforteam(H, A)'}, {'true,true': [0.726, 2, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.866, 1, 3], 'false,false,false': [0.435, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamplaysagainstteam(D, C)', 'false': 'teamplaysagainstteam(E, F)'}, {'true,true': [0.707, 1, 1], 'true,false': [0.0, 1, 0], 'false,true': [0.367, 3, 4], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [1.21, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.20408163265306106, 0.0], 'true': [0.20408163265306106, nan], 'false': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.22180018063846846, nan]}, {'': [0.20408163265306123, 4.625929269271485e-18], 'true': [0.20408163265306123, nan], 'false': [nan, 4.625929269271485e-18], 'false,false': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.19064170988845214, nan], 'true': [0.19064170988845214, nan]}, {'': [0.17963748022256545, 0.17414822509275155], 'false': [0.16, 0.0], 'false,false': [nan, 0.0]}, {'': [0.17970229877737523, 0.15141873352992], 'false': [0.16, 0.0]}, {'': [0.20993363216747554, 0.057473947782121296], 'true': [0.20993363216747554, nan], 'true,true': [0.24999999999999997, 0.18750000000000003], 'true,true,false': [0.18750000000000003, nan], 'false': [0.0, 0.06480179575036318]}, {'': [0.17574562403713243, 0.1357827914516345], 'true': [0.17574562403713243, nan], 'false': [nan, 0.1357827914516345], 'false,false': [0.18750000000000003, 0.06321553920454843]}, {'': [0.17584626310031723, 0.13452106163117716], 'true': [0.25000000000000006, 0.0], 'false': [0.13452106163117716, nan]}, {'': [0.1464632038909858, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamplaysinleague(C, D).;true;true
0;false;teamalsoknownas(A, G).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamplaysinleague(C, D).;true;true
2;false;teamalsoknownas(A, G).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;teamplaysagainstteam(D, A).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
5;false;teamplaysagainstteam(D, A).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
6;false;teamalsoknownas(A, G).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
8;true;teamplaysagainstteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(A, G) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7422198280150732;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14198458662441546;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B), teamplaysinleague(A, F) )
%   | then return 0.5883007368083123;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08459167206610622;  // std dev = 0.570, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(A, G) )
%   | then return -0.11067786598881653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11067786598881653;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.46197924949087305;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12373461916768806;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.022185890833988187;  // std dev = 0.341, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.26474717416336224;  // std dev = 0.476, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.08962289224177568;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.01911888003621572;  // std dev = 0.340, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.21126572732749027;  // std dev = 0.454, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.08257445701923084;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return 0.10918867381987814;  // std dev = 0.511, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(A, D) )
%   | then return -0.09305058845691835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.06255977459295559;  // std dev = 0.341, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2524831226435399;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1281794898855309;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.03809934476102109;  // std dev = 0.260, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return -0.07598632761726305;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.0667605071757881;  // std dev = 0.170, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.1927939712818645;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14908784441629533;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.02500968226017609;  // std dev = 0.242, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.992058
   AUC PR    = 0.167499
   CLL	      = -0.170927
   Precision = 0.120063 at threshold = 0.5
   Recall    = 0.571429
   F1        = 0.198433


Total learning time: 4.793 seconds
Total inference time: 7.984 seconds
AUC ROC: 0.992058


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.155795
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.526 seconds
Refined model CLL: -0.155795


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.992058
   AUC PR    = 0.167499
   CLL	      = -0.170927
   Precision = 0.120063 at threshold = 0.5
   Recall    = 0.571429
   F1        = 0.198433


Total learning time: 6.986 seconds
Total inference time: 7.984 seconds
AUC ROC: 0.992058
Total revision time: 6.986
Best scored revision CLL: -0.155795


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:46:40
{'AUC ROC': 0.992058, 'AUC PR': 0.167499, 'CLL': -0.170927, 'Precision': [0.120063, 0.5], 'Recall': 0.571429, 'F1': 0.198433, 'Learning time': 6.986, 'Inference time': 7.984, 'parameter_5': {'AUC ROC': 0.478505, 'AUC PR': 0.002303, 'CLL': -0.659273, 'Precision': [0.002209, 0.5], 'Recall': 0.421053, 'F1': 0.004394, 'Learning time': 1.061, 'Inference time': 101.024}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then if ( teamalsoknownas(G, H) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamalsoknownas(J, A), teamplaysinleague(J, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D), teamalsoknownas(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(F, C), teamplaysinleague(C, G) )
%   | | then return 0.32895152751901957;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, H) )
%   | then return 0.38253761953963056;  // std dev = 1.479, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( teamalsoknownas(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20554676391121784;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.6812046567905123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.43120465679051234;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then if ( teamplaysinleague(H, G) )
%   | | then return 0.14676530276037703;  // std dev = 1.601, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return 0.6362936699085813;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamalsoknownas(J, A), athleteledsportsteam(K, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13598824636772108;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.2507278387492954;  // std dev = 0.500, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.13004157569915845;  // std dev = 0.551, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.25345733127039255;  // std dev = 1.261, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.15077257265410451;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.10091578316541736;  // std dev = 0.546, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.19496936065753362;  // std dev = 1.256, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamalsoknownas(F, A) )
%   | | then return 0.20093831526282402;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, G) )
%   | | then if ( teamplaysinleague(H, G) )
%   | | | then return 0.14557128698039098;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08661839478677098;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.07783201335681891;  // std dev = 0.543, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamalsoknownas(E, A), teamalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14858970721464487;  // std dev = 0.443, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( athleteledsportsteam(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then if ( teamalsoknownas(H, I), teamalsoknownas(J, A) )
%   | | | then return 0.1571978637092999;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09942987913280976;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.07617526516421567;  // std dev = 1.345, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( teamalsoknownas(A, F), teamplaysinleague(F, C) )
%   | | | then return 0.12096210091107373;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.0963821834784739;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return 0.3376025083438362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05044145854248302;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(D, A), teamplaysagainstteam(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07875184572253485;  // std dev = 1.359, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return 0.09210440989559321;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H), athleteledsportsteam(I, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return 0.07562692371942945;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04009761443873957;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.06968531000944453;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E), athleteledsportsteam(F, E) )
%   | | then return 0.02351853507547247;  // std dev = 0.381, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.04980759569182588;  // std dev = 1.648, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.08667737399462654;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, A) )
%   | then return 0.05252599426582283;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysinleague(C, E), teamalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.017981037463809607;  // std dev = 0.539, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysinleague(A, G) )
%   | then return 0.038102426416526836;  // std dev = 1.648, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( teamalsoknownas(H, A), teamplaysinleague(H, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(J, A), athleteplaysinleague(J, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06876184738229563;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.500672
   AUC PR    = 0.002654
   CLL	      = -0.633168
   Precision = 0.002725 at threshold = 0.5
   Recall    = 0.285714
   F1        = 0.005398


Total learning time: 1.056 seconds
Total inference time: 16.505 seconds
AUC ROC: 0.500672


Results scoring model
   AUC ROC   = 0.71
   AUC PR    = 0.749964
   CLL	      = -0.613891
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.625


Total scoring time: 0.62 seconds
Parameter learned model CLL: -0.613891


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,true,true': 'teamalsoknownas(G, H)', 'false,false': 'teamplaysagainstteam(A, I)', 'false,false,false': 'teamalsoknownas(J, A), teamplaysinleague(J, K)'}, {'true,true': [0.894, 1, 4], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.595, 7, 4], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamplaysagainstteam(C, D), teamalsoknownas(E, D)', 'true,false': 'teamalsoknownas(F, C), teamplaysinleague(C, G)', 'false': 'teamplaysagainstteam(A, H)', 'false,false': 'teamalsoknownas(A, I)', 'false,false,false': 'teamplaysagainstteam(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.707, 1, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [1.479, 4, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.369, 5, 3]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'true,true': 'teamalsoknownas(A, F)', 'false': 'teamplaysinleague(A, G)', 'false,true': 'teamplaysinleague(H, G)', 'false,false': 'teamplaysagainstteam(A, I)', 'false,false,false': 'teamalsoknownas(J, A), athleteledsportsteam(K, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.866, 1, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [1.601, 7, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'teamalsoknownas(A, F)', 'false,false': 'teamalsoknownas(G, A)', 'false,false,false': 'teamplaysagainstteam(A, H)'}, {'true,true': [0.5, 1, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.551, 1, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.261, 3, 5], 'false,false,false,false': [1.369, 5, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamalsoknownas(A, D)', 'false': 'teamalsoknownas(A, E)', 'false,true': 'teamalsoknownas(F, A)', 'false,false': 'teamplaysinleague(A, G)', 'false,false,true': 'teamplaysinleague(H, G)', 'false,false,false': 'teamalsoknownas(I, A)'}, {'true,true': [0.546, 1, 1], 'true,false': [1.256, 3, 5], 'false,true,true': [0.707, 1, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.095, 3, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamalsoknownas(A, D)', 'true,false': 'teamalsoknownas(E, A), teamalsoknownas(F, E)', 'false': 'athleteledsportsteam(G, A)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,true': 'teamalsoknownas(H, I), teamalsoknownas(J, A)', 'false,false,false': 'teamalsoknownas(K, A)'}, {'true,true': [0.543, 1, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.443, 3, 5], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.368, 5, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'teamplaysinleague(D, C)', 'true,true': 'teamplaysagainstteam(A, E)', 'true,true,false': 'teamalsoknownas(A, F), teamplaysinleague(F, C)', 'false': 'teamalsoknownas(G, A)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,false': 'teamplaysagainstteam(A, I)'}, {'true,true,true': [1.345, 4, 5], 'true,true,false,true': [0.707, 1, 1], 'true,true,false,false': [1.095, 3, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.816, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamalsoknownas(D, A), teamplaysagainstteam(D, E)', 'false': 'teamalsoknownas(F, A)', 'false,true': 'teamalsoknownas(G, F)', 'false,false': 'teamplaysagainstteam(A, H), athleteledsportsteam(I, H)', 'false,false,false': 'teamplaysinleague(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.359, 4, 6], 'false,true,true': [0.707, 1, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [0.816, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false': 'teamalsoknownas(A, E), athleteledsportsteam(F, E)', 'false,false,false': 'teamplaysinleague(A, G)'}, {'true': [0.707, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.381, 1, 1], 'false,false,false,true': [1.648, 6, 6], 'false,false,false,false': [0.838, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, A)', 'true,false': 'teamplaysinleague(C, E), teamalsoknownas(F, A)', 'false': 'teamplaysinleague(A, G)', 'false,false': 'teamalsoknownas(H, A), teamplaysinleague(H, I)', 'false,false,false': 'athleteledsportsteam(J, A), athleteplaysinleague(J, K)'}, {'true,true': [0.707, 1, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.539, 1, 1], 'false,true': [1.648, 6, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.839, 2, 2]}]]
[{'': [0.15999999999999986, 0.24000000000000007], 'false': [0.2314049586776858, 0.25], 'false,false': [0.0, 0.22222222222222224], 'false,true': [0.2314049586776858, nan], 'false,true,true': [0.2314049586776858, nan], 'false,false,false': [nan, 0.22222222222222224], 'true': [0.15999999999999986, nan]}, {'': [0.25000000000000006, 0.23329716687694113], 'true': [nan, 0.25000000000000006], 'true,false': [0.25000000000000006, nan], 'false': [0.21861529510974348, 0.23424630493256182], 'false,false': [nan, 0.23424630493256182], 'false,false,false': [nan, 0.23424630493256182]}, {'': [0.16, 0.23042218759510838], 'false': [0.23305590685204453, 0.21359895107124166], 'false,true': [0.23305590685204453, nan], 'false,false': [0.0, 0.2222222222222223], 'false,false,false': [nan, 0.2222222222222223], 'true': [0.16, nan], 'true,true': [0.0, 0.18749999999999997]}, {'': [0.25, 0.21207799501534647], 'true': [0.25, nan], 'false': [0.15169132055719564, 0.21904915470417516], 'false,false': [nan, 0.21904915470417516], 'false,false,false': [0.19866199230092751, 0.2341642372813802]}, {'': [0.18899014828155886, 0.23827867662650734], 'false': [0.25, 0.23414789040317532], 'false,true': [0.25, nan], 'false,false': [0.24, 0.2222222222222222], 'false,false,true': [0.24, nan], 'false,false,false': [nan, 0.2222222222222222], 'true': [0.14907625036353653, 0.19719940767325128]}, {'': [0.1875916765181761, 0.23761155443418533], 'false': [nan, 0.23761155443418533], 'false,false': [0.25, 0.23384701503432584], 'false,false,true': [0.25, nan], 'false,false,false': [nan, 0.23384701503432584], 'true': [0.147479091230028, 0.1966184925921976], 'true,false': [nan, 0.1966184925921976]}, {'': [0.2194937215127275, 0.18212819201473202], 'true': [0.2194937215127275, nan], 'true,true': [0.2009018827249116, 0.24298044333489663], 'true,true,false': [0.24999999999999997, 0.24000000000000005], 'false': [nan, 0.18212819201473202], 'false,false': [nan, 0.18212819201473202], 'false,false,false': [0.0, 0.2222222222222222]}, {'': [0.1845627177908539, 0.23704544960085117], 'false': [0.25, 0.2336291923531684], 'false,true': [0.25, nan], 'false,false': [nan, 0.2336291923531684], 'false,false,false': [0.24, 0.22222222222222224], 'true': [nan, 0.1845627177908539]}, {'': [0.24999999999999997, 0.2063819632900334], 'false': [nan, 0.2063819632900334], 'false,false': [0.1453565717077524, 0.2138700581366015], 'false,false,false': [0.22624426505953896, 0.17572790195371585]}, {'': [0.19793242306564532, 0.21386889655699998], 'false': [0.2262756834715749, 0.17594353574280794], 'true': [0.25, 0.14526816911106413], 'false,false': [nan, 0.17594353574280794], 'false,false,false': [nan, 0.17594353574280794], 'true,false': [nan, 0.14526816911106413]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteledsportsteam(C, A), athleteplaysinleague(C, D).;true;true
0;false;teamplaysinleague(A, F).;true;true
0;false,false;teamplaysagainstteam(A, I).;true;true
2;;teamplayssport(A, B) :- athleteledsportsteam(C, A), athleteplaysinleague(C, D).;true;true
2;true;teamalsoknownas(A, F).;true;true
2;false;teamplaysinleague(A, G).;true;true
2;false,false;teamplaysagainstteam(A, I).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
6;false;teamplaysagainstteam(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7462649890773739;  // std dev = 0.108, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14536821526137883;  // std dev = 0.114, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.5976267069695591;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.39413906813119365;  // std dev = 0.705, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(A, F) )
%   | then return 0.1293225581168394;  // std dev = 0.317, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0.5487412393353097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.13600520954038423;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.4852119103881565;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.569033640366794;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | then return -0.1792880968805951;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1356384219551246;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0.264, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A), athleteledsportsteam(C, D) )
%   | then return 0.356122765167522;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.41730787150264687;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteplaysforteam(E, A), athleteplaysinleague(E, F) )
%   | then return -0.15673818628677127;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1199499486038612;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.29246328407020517;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( athleteplaysforteam(E, A), athleteplaysinleague(E, F) )
%   | | then return -0.1377637486776959;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09778399576084097;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.23245689351789678;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.056352983474198065;  // std dev = 0.464, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.23167822381358474;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.29334843781367376;  // std dev = 0.157, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | then return -0.12352989680436044;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return -0.08815913015416588;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11498711276192339;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D), teamplaysinleague(A, E) )
%   | then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, F) )
%   | | then return 0.20358623597046976;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18496095281198946;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2387427331232694;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(G, A), teamalsoknownas(H, G) )
%   | then return -0.10413441954084109;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09603012153888434;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then if ( teamalsoknownas(D, E) )
%   | | then return 0.17255659940134516;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15550026020863222;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20368920353495315;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplaysforteam(F, A), athleteplaysinleague(F, G) )
%   | then return -0.1017030950247461;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | then return -0.07401792480849052;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09529555954660023;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.990296
   AUC PR    = 0.115397
   CLL	      = -0.14822
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 7.285 seconds
Total inference time: 5.945 seconds
AUC ROC: 0.990296


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.126456
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.555 seconds
Refined model CLL: -0.126456


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990296
   AUC PR    = 0.115397
   CLL	      = -0.14822
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 9.516 seconds
Total inference time: 5.945 seconds
AUC ROC: 0.990296
Total revision time: 9.516
Best scored revision CLL: -0.126456


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:47:12
{'AUC ROC': 0.990296, 'AUC PR': 0.115397, 'CLL': -0.14822, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 9.516, 'Inference time': 5.945, 'parameter_10': {'AUC ROC': 0.500672, 'AUC PR': 0.002654, 'CLL': -0.633168, 'Precision': [0.002725, 0.5], 'Recall': 0.285714, 'F1': 0.005398, 'Learning time': 1.056, 'Inference time': 16.505}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.31968739663797374;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, F) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then return 0.35669390091964026;  // std dev = 1.985, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else return 0.8146197929547555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1761184630750754;  // std dev = 0.480, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.5315122318678162;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, G) )
%   | then if ( teamplaysinleague(H, I) )
%   | | then return 0.2691638055755434;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(J, A), athleteledsportsteam(K, J) )
%   | | then return 0.11098999978181684;  // std dev = 1.304, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.1575549197179822;  // std dev = 1.355, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( teamplaysinleague(C, E), teamplaysagainstteam(F, C) )
%   | then if ( teamplaysinleague(F, G) )
%   | | then return 0.11290484457687527;  // std dev = 1.343, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, H), teamplaysinleague(H, I) )
%   | then return 0.6773554458997385;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(J, A) )
%   | | then return 0.20665719281613426;  // std dev = 0.948, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.11216448771071968;  // std dev = 0.478, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(A, D) )
%   then return 0.2040528432603167;  // std dev = 1.533, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.5861435662353969;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then if ( teamalsoknownas(H, G) )
%   | | | then return 0.2077340699465172;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.021241890561247367;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.023496781688155628;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.17563495063305495;  // std dev = 1.540, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else if ( teamplaysagainstteam(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.01666383799765196;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, G), teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07131463122119554;  // std dev = 1.575, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, C) )
%   | | then return 0.010090224779348345;  // std dev = 0.608, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1769497600820251;  // std dev = 1.009, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0.11773241808931903;  // std dev = 1.614, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( teamplaysinleague(A, G), teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.004745930312811619;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.09098232930942558;  // std dev = 1.732, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F) )
%   | | then if ( teamplaysagainstteam(A, G), teamplaysagainstteam(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04077042740181979;  // std dev = 1.567, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.07007980694551336;  // std dev = 1.730, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.09571334541481669;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.004540496207015909;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.07357762792157166;  // std dev = 1.516, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.07246662333372245;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( teamplaysagainstteam(G, A), teamalsoknownas(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.04407257494901885;  // std dev = 1.184, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( athleteledsportsteam(I, A), athleteplaysinleague(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04401303360048133;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.488829
   AUC PR    = 0.002458
   CLL	      = -0.681499
   Precision = 0.002549 at threshold = 0.5
   Recall    = 0.406015
   F1        = 0.005066


Total learning time: 1.499 seconds
Total inference time: 50.638 seconds
AUC ROC: 0.488829


Results scoring model
   AUC ROC   = 0.822222
   AUC PR    = 0.843069
   CLL	      = -0.551161
   Precision = 0.909091 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.769231


Total scoring time: 0.639 seconds
Parameter learned model CLL: -0.551161


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamalsoknownas(G, F)', 'false,true,true': 'teamplaysagainstteam(G, H)', 'false,false': 'teamplaysagainstteam(I, A), teamalsoknownas(I, J)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.225, 3, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 4, 0], 'false,false,false': [1.797, 7, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamplaysinleague(C, D)', 'true': 'teamplaysagainstteam(E, F)', 'true,true': 'teamplaysinleague(A, G)', 'false': 'teamplaysagainstteam(A, H)'}, {'true,true,true': [1.985, 8, 10], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.48, 7, 4]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'true,true': 'teamplaysagainstteam(A, F)', 'false': 'teamalsoknownas(A, G)', 'false,true': 'teamplaysinleague(H, I)', 'false,false': 'teamplaysagainstteam(J, A), athleteledsportsteam(K, J)'}, {'true,true,true': [0.926, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.225, 3, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.304, 6, 3], 'false,false,false': [1.355, 5, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'teamplaysinleague(C, E), teamplaysagainstteam(F, C)', 'true,true': 'teamplaysinleague(F, G)', 'false': 'teamplaysagainstteam(A, H), teamplaysinleague(H, I)', 'false,false': 'teamplaysagainstteam(J, A)'}, {'true,true,true': [1.343, 6, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.152, 0, 4], 'false,false,true': [0.948, 2, 2], 'false,false,false': [0.478, 7, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), teamplaysagainstteam(A, D)', 'false': 'teamplaysagainstteam(A, E)', 'false,true': 'teamplaysagainstteam(F, A)', 'false,false': 'teamalsoknownas(A, G)', 'false,false,true': 'teamalsoknownas(H, G)', 'false,false,false': 'teamplaysagainstteam(I, A)'}, {'true': [1.533, 6, 9], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.0, 2, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.808, 2, 1], 'false,false,false,false': [1.195, 5, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(D, A), teamplaysagainstteam(E, D)', 'false,false': 'athleteledsportsteam(F, A)', 'false,false,false': 'teamplaysagainstteam(A, G), teamplaysinleague(A, H)'}, {'true': [1.54, 6, 10], 'false,true': [0.808, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.575, 7, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, C)', 'true,true': 'teamplaysagainstteam(A, E), teamalsoknownas(E, C)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamplaysinleague(A, G), teamplaysagainstteam(A, H)'}, {'true,true,true': [0.608, 1, 1], 'true,true,false': [1.009, 2, 3], 'true,false': [0.0, 0, 0], 'false,true': [1.614, 7, 9], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.452, 5, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'athleteledsportsteam(E, F)', 'false,false,true': 'teamplaysagainstteam(A, G), teamplaysagainstteam(F, H)'}, {'true': [1.732, 8, 11], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.567, 7, 4], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(A, E), athleteledsportsteam(F, E)', 'false,false,false': 'teamalsoknownas(A, G)'}, {'true': [1.73, 8, 11], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.195, 5, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, A)', 'false': 'teamalsoknownas(A, E)', 'false,false': 'teamplaysinleague(A, F)', 'false,false,true': 'teamplaysagainstteam(G, A), teamalsoknownas(G, H)', 'false,false,false': 'athleteledsportsteam(I, A), athleteplaysinleague(I, J)'}, {'true,true': [1.516, 6, 10], 'true,false': [0.0, 0, 0], 'false,true': [1.0, 2, 2], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.184, 5, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}]]
[{'': [0.12244897959183662, 0.23818525519848777], 'false': [0.24999999999999992, 0.2283737024221454], 'false,true': [0.24999999999999992, nan], 'false,true,true': [0.24999999999999992, nan], 'false,false': [0.0, 0.24852071005917156], 'true': [0.12244897959183662, nan]}, {'': [0.2177345576479995, 0.2308299483888735], 'false': [nan, 0.2308299483888735], 'true': [0.2177345576479995, nan], 'true,true': [0.2187942839304006, 0.0]}, {'': [0.12244897959183672, 0.223022254596541], 'false': [0.250235339073528, 0.20857406259086428], 'false,true': [0.250235339073528, nan], 'false,false': [0.1889485800983876, 0.2295048112232566], 'true': [0.12244897959183672, nan], 'true,true': [0.12244897959183672, nan]}, {'': [0.16389957077624018, 0.230833251226221], 'false': [0.005763099208700551, 0.22946409825738964], 'false,false': [0.22483782987308248, 0.22876534531836137], 'true': [0.16389957077624018, nan], 'true,true': [0.16389957077624018, nan]}, {'': [0.15662731795359913, 0.2281913610541691], 'false': [0.0, 0.22711735691141627], 'false,false': [0.25, 0.20819484338776056], 'false,false,true': [0.25, nan], 'false,false,false': [0.21778877592826307, 0.20408163265306123], 'false,true': [0.0, nan]}, {'': [0.14820411190212204, 0.2244076740226048], 'false': [0.21775417083746687, 0.22558225668609194], 'false,false': [nan, 0.22558225668609194], 'false,false,false': [nan, 0.22558225668609194]}, {'': [0.2039356932766224, 0.17803342510954517], 'true': [0.2039356932766224, nan], 'true,true': [0.18484618118867635, 0.20361661110567936], 'false': [0.16275204626836579, 0.20408163265306117], 'false,false': [nan, 0.2040816326530612]}, {'': [0.15787804337251457, 0.22317293679597275], 'false': [nan, 0.22317293679597275], 'false,false': [0.22317293679597275, nan], 'false,false,true': [nan, 0.22317293679597275]}, {'': [0.1575117952930366, 0.22310503331870998], 'false': [nan, 0.22310503331870998], 'false,false': [nan, 0.22310503331870998], 'false,false,false': [0.24999999999999997, 0.20408163265306126]}, {'': [0.14373063381522824, 0.22202946583892105], 'false': [0.25, 0.20852112482733567], 'false,false': [0.20032150361375214, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,false,true': [nan, 0.20032150361375214], 'true': [0.14373063381522824, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteledsportsteam(C, A), athleteplaysinleague(C, D).;true;true
0;false;teamalsoknownas(A, F).;true;true
0;false,false;teamplaysagainstteam(I, A), teamalsoknownas(I, J).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamplaysinleague(C, D).;true;true
1;true;teamplaysinleague(A, G).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(A, D).;true;true
4;false;teamplaysagainstteam(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A), athleteplayssport(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( teamplaysagainstteam(G, A), teamalsoknownas(G, H) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.7408312900412906;  // std dev = 0.106, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14528721947617723;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.7641072739982947;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14424870301009812;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5833659502894324;  // std dev = 0.190, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12790910365504807;  // std dev = 0.114, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamalsoknownas(D, E) )
%   | then return 0.5255111661306835;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4187559599048291;  // std dev = 0.107, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.1144040712825217;  // std dev = 0.104, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(A, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then return 0.30978981081318424;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3578589142460523;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10875735907035565;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.31437500704196597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.341434295844381;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09980731628810445;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamalsoknownas(D, E) )
%   | then return 0.3164181246749978;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteledsportsteam(F, A), athleteplaysforteam(F, A) )
%   | | then return 0.27045092757074973;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2419058181494885;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( teamalsoknownas(A, G) )
%   | then return -0.1265800571207849;  // std dev = 0.000901, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0861448225787414;  // std dev = 0.062, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then return 0.2005251283489283;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return 0.25224031726380336;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.21710001899949213;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamalsoknownas(A, F) )
%   | then return -0.11323434111075037;  // std dev = 0.000818, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(A, G), teamalsoknownas(H, G) )
%   | | then return -0.09443658514665933;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07468820509377876;  // std dev = 0.000838, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then return 0.1702957392741673;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(A, E), teamplaysagainstteam(E, A) )
%   | | then return 0.21078250314916527;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.181016906423636;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamalsoknownas(A, F) )
%   | then return -0.10235244011637419;  // std dev = 0.000748, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, A), athleteplaysinleague(G, H) )
%   | | then return -0.08715365381106528;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06954754855852344;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.1704560627086345;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | | then return 0.16332672641089768;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14548588771600796;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( teamalsoknownas(A, F) )
%   | then return -0.0933240210229979;  // std dev = 0.000689, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, A), athleteplaysinleague(G, H) )
%   | | then return -0.08051891378484173;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06517962522427709;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D), teamalsoknownas(D, E) )
%   | then return 0.1544265026268922;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then return 0.13846978243548955;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.12732738176030542;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamalsoknownas(A, H) )
%   | then return -0.08572150789175187;  // std dev = 0.000638, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(A, I), teamalsoknownas(J, I) )
%   | | then return -0.07504532894959369;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06123687395148839;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.991785
   AUC PR    = 0.133024
   CLL	      = -0.115991
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 16.181 seconds
Total inference time: 7.76 seconds
AUC ROC: 0.991785


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098336
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.622 seconds
Refined model CLL: -0.098336


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991785
   AUC PR    = 0.133024
   CLL	      = -0.115991
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 18.941000000000003 seconds
Total inference time: 7.76 seconds
AUC ROC: 0.991785
Total revision time: 18.941000000000003
Best scored revision CLL: -0.098336


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:48:30
{'AUC ROC': 0.991785, 'AUC PR': 0.133024, 'CLL': -0.115991, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 18.941000000000003, 'Inference time': 7.76, 'parameter_15': {'AUC ROC': 0.488829, 'AUC PR': 0.002458, 'CLL': -0.681499, 'Precision': [0.002549, 0.5], 'Recall': 0.406015, 'F1': 0.005066, 'Learning time': 1.499, 'Inference time': 50.638}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( teamplaysagainstteam(G, F) )
%   | | then if ( teamalsoknownas(G, H) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A), teamplaysagainstteam(I, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19148226843284563;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, F) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then return 0.38809379726573207;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.16679450876845162;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, H) )
%   | then return 0.41115546941013204;  // std dev = 1.073, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.29104560140682456;  // std dev = 0.486, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.674957897660253;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.47160077653690036;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, G) )
%   | then if ( teamplaysinleague(H, I) )
%   | | then return 0.2549542133063319;  // std dev = 1.703, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(J, A), athleteledsportsteam(K, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12163302936184645;  // std dev = 1.984, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(C, D) )
%   then if ( teamplaysinleague(C, E), teamalsoknownas(F, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(G, C) )
%   | | then return 0.23674150364486837;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, H), teamplaysinleague(H, I) )
%   | then return 0.21671695363246132;  // std dev = 1.317, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( teamalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19362886305281576;  // std dev = 0.474, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamalsoknownas(A, D) )
%   then return 0.1450267419830845;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamalsoknownas(F, A) )
%   | | then return -0.19201620124201202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteledsportsteam(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7024542498549025;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then if ( teamplaysagainstteam(I, H) )
%   | | | then return 0.23526619721038;  // std dev = 2.017, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039185223448060455;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.13111608126710725;  // std dev = 1.247, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( teamalsoknownas(D, A), teamalsoknownas(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return 0.19088889475701362;  // std dev = 1.392, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( teamalsoknownas(A, G), teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08650740915004312;  // std dev = 2.233, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then if ( teamalsoknownas(A, E), teamplaysagainstteam(E, C) )
%   | | then return -0.013109292422153473;  // std dev = 0.574, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.16645320678211215;  // std dev = 2.058, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.03709320004436977;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, G), teamalsoknownas(A, H) )
%   | | then return -0.35827259950710055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.04897578392838733;  // std dev = 0.462, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.031364625189840734;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F) )
%   | | then if ( teamalsoknownas(A, G), teamalsoknownas(F, H) )
%   | | | then return 0.1467856416894835;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06645786488965028;  // std dev = 2.496, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.024508476169173104;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E), athleteledsportsteam(F, E) )
%   | | then return -0.045217763463889976;  // std dev = 0.406, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.12507244689107533;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 4.6307174254432243E-4;  // std dev = 1.754, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, A) )
%   | then return 0.017987385145313218;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(C, E), teamalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10996802271521103;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.06307738248276512;  // std dev = 2.011, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then if ( teamalsoknownas(I, A), teamplaysagainstteam(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014821852705024884;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( athleteledsportsteam(K, A), athleteplaysinleague(K, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06851148062830847;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */


Results
   AUC ROC   = 0.474699
   AUC PR    = 0.002369
   CLL	      = -0.655218
   Precision = 0.002264 at threshold = 0.5
   Recall    = 0.300752
   F1        = 0.004494


Total learning time: 1.205 seconds
Total inference time: 29.112 seconds
AUC ROC: 0.474699


Results scoring model
   AUC ROC   = 0.74625
   AUC PR    = 0.705431
   CLL	      = -0.602774
   Precision = 0.785714 at threshold = 0.5
   Recall    = 0.55
   F1        = 0.647059


Total scoring time: 0.667 seconds
Parameter learned model CLL: -0.602774


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(A, F)', 'false,true': 'teamplaysagainstteam(G, F)', 'false,true,true': 'teamalsoknownas(G, H)', 'false,false': 'teamalsoknownas(I, A), teamplaysagainstteam(I, J)'}, {'true,true': [1.265, 2, 8], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.651, 6, 5], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.0, 12, 6]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, F)', 'true,true': 'teamplaysinleague(A, G)', 'false': 'teamalsoknownas(A, H)'}, {'true,true,true': [1.085, 2, 3], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.073, 2, 3], 'false,false': [0.486, 15, 14]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'true,true': 'teamalsoknownas(A, F)', 'false': 'teamplaysagainstteam(A, G)', 'false,true': 'teamplaysinleague(H, I)', 'false,false': 'teamalsoknownas(J, A), athleteledsportsteam(K, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [1.253, 2, 7], 'true,false': [0.0, 0, 0], 'false,true,true': [1.703, 6, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.984, 12, 6]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysagainstteam(C, D)', 'true': 'teamplaysinleague(C, E), teamalsoknownas(F, C)', 'true,false': 'athleteledsportsteam(G, C)', 'false': 'teamalsoknownas(A, H), teamplaysinleague(H, I)', 'false,false': 'teamalsoknownas(J, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.816, 1, 2], 'true,false,false': [0.0, 0, 0], 'false,true': [1.317, 4, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.474, 15, 14]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), teamalsoknownas(A, D)', 'false': 'teamalsoknownas(A, E)', 'false,true': 'teamalsoknownas(F, A)', 'false,true,false': 'athleteledsportsteam(G, A)', 'false,false': 'teamplaysagainstteam(A, H)', 'false,false,true': 'teamplaysagainstteam(I, H)', 'false,false,false': 'teamalsoknownas(J, A)'}, {'true': [1.141, 3, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.017, 7, 12], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.664, 9, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(D, A), teamalsoknownas(E, D)', 'false,false': 'athleteledsportsteam(F, A)', 'false,false,false': 'teamalsoknownas(A, G), teamplaysinleague(A, H)'}, {'true': [1.247, 4, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [1.392, 3, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.233, 13, 9]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, C)', 'true,true': 'teamalsoknownas(A, E), teamplaysagainstteam(E, C)', 'false': 'teamalsoknownas(F, A)', 'false,false': 'teamplaysinleague(A, G), teamalsoknownas(A, H)'}, {'true,true,true': [0.574, 1, 1], 'true,true,false': [2.058, 7, 13], 'true,false': [0.0, 0, 0], 'false,true': [0.757, 2, 1], 'false,false,true': [0.0, 1, 0], 'false,false,false': [0.462, 9, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false': 'athleteledsportsteam(E, F)', 'false,false,true': 'teamalsoknownas(A, G), teamalsoknownas(F, H)'}, {'true': [1.113, 3, 3], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.914, 2, 3], 'false,false,true,false': [2.496, 15, 14], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false': 'teamalsoknownas(A, E), athleteledsportsteam(F, E)', 'false,false,false': 'teamplaysagainstteam(A, G)'}, {'true': [1.112, 3, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.406, 1, 1], 'false,false,false,true': [1.877, 6, 11], 'false,false,false,false': [1.754, 10, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, A)', 'true,false': 'teamplaysagainstteam(C, E), teamalsoknownas(F, A)', 'false': 'teamplaysagainstteam(A, G)', 'false,false': 'teamplaysinleague(A, H)', 'false,false,true': 'teamalsoknownas(I, A), teamplaysagainstteam(I, J)', 'false,false,false': 'athleteledsportsteam(K, A), athleteplaysinleague(K, L)'}, {'true,true': [0.755, 2, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.895, 2, 3], 'false,true': [2.011, 7, 12], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.414, 6, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.866, 3, 1]}]]
[{'': [0.15999999999999986, 0.23999999999999952], 'false': [0.25, 0.22222222222222232], 'false,true': [0.25, nan], 'false,true,true': [0.24793388429752045, 0.0], 'false,false': [nan, 0.2222222222222221], 'true': [0.15999999999999986, nan]}, {'': [0.23888221343481875, 0.23715743882170154], 'true': [0.23888221343481875, nan], 'true,true': [0.2353418174262015, 0.0], 'false': [0.230140109285641, 0.2362457966962689]}, {'': [0.16074606562647414, 0.23217404379620446], 'false': [0.24171318863675953, 0.21870479866715736], 'false,true': [0.24171318863675953, nan], 'false,false': [nan, 0.21870479866715736], 'true': [0.16074606562647414, nan], 'true,true': [0.0, 0.1744713277138134]}, {'': [0.2222222222222222, 0.22279168936541993], 'false': [0.21694997369962382, 0.2242879409349458], 'false,false': [nan, 0.2242879409349458], 'true': [nan, 0.2222222222222222], 'true,false': [0.2222222222222222, nan]}, {'': [0.21712139391486288, 0.22218383157620059], 'false': [0.2000193469713794, 0.22298544738904727], 'false,false': [0.21418605211828895, 0.21301775147929], 'false,false,true': [0.21418605211828895, nan], 'false,false,false': [nan, 0.21301775147929], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.19444160074960623, 0.21864025475000037], 'false': [nan, 0.2186402547500004], 'false,false': [0.19366032587266255, 0.22658992583308857], 'false,false,false': [nan, 0.22658992583308857]}, {'': [0.21007533752650762, 0.20679965266151118], 'true': [0.21007533752650762, nan], 'true,true': [0.16445963049624107, 0.2117057544913087], 'false': [0.19083098684003433, 0.20995453737512298], 'false,false': [0.0, 0.21389454032405328]}, {'': [0.20631746661009207, 0.2086521473433038], 'false': [nan, 0.2086521473433038], 'false,false': [0.2086521473433038, nan], 'false,false,true': [0.16725621867434362, 0.21484047175862903]}, {'': [0.20614043439662721, 0.20810644990662233], 'false': [nan, 0.20810644990662233], 'false,false': [0.16505561806271984, 0.21006083058902367], 'false,false,false': [0.20713511884531824, 0.2051276547827203]}, {'': [0.17326490205142228, 0.21428635492050957], 'false': [0.21293593700696659, 0.21301775147928984], 'false,false': [0.2222222222222222, 0.1875], 'false,false,true': [nan, 0.2222222222222222], 'false,false,false': [nan, 0.1875], 'true': [0.18978512526317104, 0.16018010399146115], 'true,false': [nan, 0.16018010399146118]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteledsportsteam(C, A), athleteplaysinleague(C, D).;true;true
0;false;teamplaysagainstteam(A, F).;true;true
0;false,true;teamalsoknownas(G, H).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysinleague(C, D).;true;true
1;true;teamplaysinleague(A, G).;true;true
2;;teamplayssport(A, B) :- athleteledsportsteam(C, A), athleteplaysinleague(C, D).;true;true
2;true;teamalsoknownas(A, F).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamalsoknownas(A, D).;true;true
4;false;teamalsoknownas(A, E).;true;true
4;false,true;teamalsoknownas(F, A).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;false;teamalsoknownas(F, A).;true;true
6;false,false;teamplaysinleague(A, G), teamalsoknownas(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, A), athleteplayssport(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then if ( teamalsoknownas(H, I) )
%   | | then if ( athleteplayssport(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(K, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, E) )
%   | then return 0.373236217867204;  // std dev = 0.949, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.7261635345062833;  // std dev = 0.110, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.12787698383663024;  // std dev = 0.040, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.5537138083732809;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplaysforteam(F, A), athleteplayssport(G, B) )
%   | | then return 0.5819570378944899;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.11076000156220629;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( athleteplayssport(H, B) )
%   | then return 0.5607746157535832;  // std dev = 0.081, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.11543977224786015;  // std dev = 0.059, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, A) )
%   | then return 0.48539485724455655;  // std dev = 0.237, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4200830560619962;  // std dev = 0.085, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.11424596799551678;  // std dev = 0.156, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamalsoknownas(A, D) )
%   then return 0.11608935154842992;  // std dev = 0.555, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamalsoknownas(F, A) )
%   | | then return -0.09137326528292591;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.31752482653800573;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then if ( athleteledsportsteam(G, A) )
%   | | | then return 0.3849816223628043;  // std dev = 0.222, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3166934727679555;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | | then return -0.11033508664718557;  // std dev = 0.132, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09117152239585734;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | | then if ( teamalsoknownas(E, G), teamplaysagainstteam(E, F) )
%   | | | then return 0.2537841614298046;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2798693401847371;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.24377578459502405;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysinleague(A, H), athleteledsportsteam(C, I) )
%   | | then return 0.33813436756771087;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2531142197263192;  // std dev = 0.000136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(J, A) )
%   | then return -0.14896168206421476;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0883048613343561;  // std dev = 0.055, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(D, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then if ( athleteledsportsteam(F, D), athleteplaysforteam(F, E) )
%   | | | then return 0.27353959161271246;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20792234468332377;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.10085769135504037;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(H, G) )
%   | | then return 0.22008705236120668;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11407466892005665;  // std dev = 0.233, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(I, A) )
%   | then return 0.028202750490123826;  // std dev = 0.331, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, J), teamalsoknownas(A, K) )
%   | | then return -0.0935000250148835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysinleague(A, L), athleteplaysinleague(M, L) )
%   | | | then return 0.061612794369417835;  // std dev = 0.337, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.005946372714992466;  // std dev = 0.350, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.17940803287645282;  // std dev = 0.017, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.23933438306671553;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return -0.11749030162026429;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07638383183501085;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.21580347090033797;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return -0.10086077982656665;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07793025867094301;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then if ( athleteledsportsteam(C, E), teamplaysagainstteam(A, E) )
%   | | then if ( athleteledsportsteam(D, A), teamalsoknownas(F, E) )
%   | | | then return 0.15664184532463912;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1415008890842466;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16336470234692732;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.19986731275411612;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1691782292231513;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08001282865327557;  // std dev = 0.022, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then if ( athleteplaysinleague(E, C) )
%   | | | then return 0.1335213632329308;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1375245761056757;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17027282247487846;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteplaysforteam(F, A), athleteledsportsteam(F, G) )
%   | | then return -0.0925375171816198;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.06476177258433108;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07757957951815964;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.04016133855954096;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Results
   AUC ROC   = 0.991525
   AUC PR    = 0.176718
   CLL	      = -0.119472
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 26.447 seconds
Total inference time: 51.329 seconds
AUC ROC: 0.991525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107185
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.827 seconds
Refined model CLL: -0.107185


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991525
   AUC PR    = 0.176718
   CLL	      = -0.119472
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 29.146 seconds
Total inference time: 51.329 seconds
AUC ROC: 0.991525
Total revision time: 29.146
Best scored revision CLL: -0.107185


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:50:21
{'AUC ROC': 0.991525, 'AUC PR': 0.176718, 'CLL': -0.119472, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 29.146, 'Inference time': 51.329, 'parameter_20': {'AUC ROC': 0.474699, 'AUC PR': 0.002369, 'CLL': -0.655218, 'Precision': [0.002264, 0.5], 'Recall': 0.300752, 'F1': 0.004494, 'Learning time': 1.205, 'Inference time': 29.112}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.6763307532813305;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then if ( teamalsoknownas(G, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return 0.10814893509951219;  // std dev = 0.433, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(J, A), athleteplaysforteam(K, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2494532829255993;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E), teamalsoknownas(F, E) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then return 0.42133535624380597;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, C), athleteplaysforteam(I, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1583260140734973;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(A, J) )
%   | then return 0.38708982095258465;  // std dev = 2.236, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | else if ( teamalsoknownas(A, K) )
%   | | then return 0.4772047670185411;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19300292723966928;  // std dev = 2.104, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.6762474184376122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4739846996441187;  // std dev = 1.267, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(G, A) )
%   | then if ( teamplaysinleague(H, I) )
%   | | then return 0.24255135619956214;  // std dev = 1.706, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, J) )
%   | | then return 0.03663520204847881;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(K, A), athleteledsportsteam(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18303422774724235;  // std dev = 2.337, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteplaysforteam(D, C) )
%   then if ( teamplaysinleague(C, E), teamalsoknownas(F, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(G, C) )
%   | | then return 0.22350719079524742;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, H), teamplaysinleague(H, I) )
%   | then return 0.24342840414649558;  // std dev = 1.404, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( teamalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, K) )
%   | | | then return 0.2480447104198295;  // std dev = 2.006, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.13127944630484947;  // std dev = 2.106, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysinleague(A, D), teamalsoknownas(A, E) )
%   | then return 0.21758155833733447;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.18955852659659642;  // std dev = 2.159, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(G, A) )
%   | | then return 0.05760651780606966;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteledsportsteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29666236389445605;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then if ( athleteplaysforteam(I, J) )
%   | | | then return -0.2828085018570275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1283616669741282;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.16438505221228827;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamalsoknownas(E, A), teamalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14497866568033155;  // std dev = 0.459, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else if ( athleteledsportsteam(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H), teamplaysinleague(A, I) )
%   | | then if ( teamalsoknownas(H, J), teamalsoknownas(K, A) )
%   | | | then return 0.21262176450898942;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.045252245176199996;  // std dev = 0.649, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamalsoknownas(L, A) )
%   | | | then return -0.28737823549101055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.11047417206215031;  // std dev = 2.150, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.1359000387507859;  // std dev = 2.052, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else if ( teamalsoknownas(A, F), athleteplaysforteam(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12166315392623565;  // std dev = 0.524, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(G, A) )
%   | then return 0.03404015096138138;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, H), teamalsoknownas(A, I) )
%   | | then return -0.4243442696638335;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0.016115747717862904;  // std dev = 0.977, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10505770487920982;  // std dev = 2.120, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(D, A), teamplaysagainstteam(D, E) )
%   | then return 0.05232598847254003;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.08917408315440747;  // std dev = 2.128, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return 0.02693105180480067;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H), athleteledsportsteam(I, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(J, A) )
%   | | | then return 0.09476645603742481;  // std dev = 0.520, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.0616503024803867;  // std dev = 2.157, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.03062321928420514;  // std dev = 1.128, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E), athleteledsportsteam(F, E) )
%   | | then return -0.1194568577444885;  // std dev = 0.432, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( athleteplaysforteam(G, A) )
%   | | | then return 0.11282834304851795;  // std dev = 1.827, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.03660528768580076;  // std dev = 2.370, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, A) )
%   | then return 0.014703008888487653;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteplaysforteam(E, C), teamalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13520131770155222;  // std dev = 1.001, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( athleteplaysforteam(G, A) )
%   | then return 0.040265881598315734;  // std dev = 1.939, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then if ( teamalsoknownas(I, A), athleteplaysforteam(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040074617820471566;  // std dev = 1.977, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( athleteledsportsteam(K, A), athleteplaysinleague(K, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.022970206977577307;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.469164
   AUC PR    = 0.002431
   CLL	      = -0.65847
   Precision = 0.002209 at threshold = 0.5
   Recall    = 0.406015
   F1        = 0.004395


Total learning time: 1.258 seconds
Total inference time: 11.939 seconds
AUC ROC: 0.469164


Results scoring model
   AUC ROC   = 0.7136
   AUC PR    = 0.73604
   CLL	      = -0.618439
   Precision = 0.695652 at threshold = 0.5
   Recall    = 0.64
   F1        = 0.666667


Total scoring time: 0.568 seconds
Parameter learned model CLL: -0.618439


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,true,true': 'teamalsoknownas(G, H)', 'false,false': 'teamplaysagainstteam(A, I)', 'false,false,false': 'teamalsoknownas(J, A), athleteplaysforteam(K, J)'}, {'true,true': [1.279, 2, 9], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [1.491, 5, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.433, 3, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.341, 14, 9]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(C, D)', 'true': 'teamplaysagainstteam(C, E), teamalsoknownas(F, E)', 'true,true': 'teamplaysinleague(A, G)', 'true,false': 'teamalsoknownas(H, C), athleteplaysforteam(I, C)', 'false': 'teamplaysagainstteam(A, J)', 'false,false': 'teamalsoknownas(A, K)', 'false,false,false': 'teamplaysagainstteam(A, L)'}, {'true,true,true': [0.816, 1, 2], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.816, 2, 1], 'false,true': [2.236, 9, 13], 'false,false,true': [0.799, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.104, 12, 7]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'true,true': 'teamalsoknownas(A, F)', 'false': 'athleteplaysforteam(G, A)', 'false,true': 'teamplaysinleague(H, I)', 'false,false': 'teamplaysagainstteam(A, J)', 'false,false,false': 'teamalsoknownas(K, A), athleteledsportsteam(L, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [1.267, 2, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [1.706, 6, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.866, 3, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.337, 14, 9]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), athleteplaysforteam(D, C)', 'true': 'teamplaysinleague(C, E), teamalsoknownas(F, C)', 'true,false': 'athleteledsportsteam(G, C)', 'false': 'teamalsoknownas(A, H), teamplaysinleague(H, I)', 'false,false': 'teamalsoknownas(J, A)', 'false,false,false': 'teamplaysagainstteam(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.816, 1, 2], 'true,false,false': [0.0, 0, 0], 'false,true': [1.404, 4, 5], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.006, 8, 11], 'false,false,false,false': [2.106, 12, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysinleague(A, D), teamalsoknownas(A, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamalsoknownas(G, A)', 'false,true,false': 'athleteledsportsteam(H, A)', 'false,false': 'athleteplaysforteam(I, A)', 'false,false,true': 'athleteplaysforteam(I, J)', 'false,false,false': 'teamalsoknownas(K, A)'}, {'true,true': [0.764, 1, 2], 'true,false': [2.159, 9, 13], 'false,true,true': [0.816, 2, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.786, 1, 2], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.068, 11, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamalsoknownas(A, D)', 'true,false': 'teamalsoknownas(E, A), teamalsoknownas(F, E)', 'false': 'athleteledsportsteam(G, A)', 'false,false': 'teamalsoknownas(A, H), teamplaysinleague(A, I)', 'false,false,true': 'teamalsoknownas(H, J), teamalsoknownas(K, A)', 'false,false,false': 'teamalsoknownas(L, A)'}, {'true,true': [0.764, 1, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.459, 9, 13], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.649, 1, 1], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [2.15, 12, 8]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'athleteplaysforteam(C, D)', 'true,true': 'teamplaysagainstteam(A, E)', 'true,true,false': 'teamalsoknownas(A, F), athleteplaysforteam(C, F)', 'false': 'teamalsoknownas(G, A)', 'false,false': 'teamplaysinleague(A, H), teamalsoknownas(A, I)', 'false,false,false': 'teamplaysagainstteam(A, J)'}, {'true,true,true': [2.052, 7, 13], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.524, 1, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.779, 2, 1], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [0.977, 3, 2], 'false,false,false,false': [2.12, 11, 8]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamalsoknownas(D, A), teamplaysagainstteam(D, E)', 'false': 'teamalsoknownas(F, A)', 'false,true': 'teamalsoknownas(G, F)', 'false,false': 'teamplaysagainstteam(A, H), athleteledsportsteam(I, H)', 'false,false,false': 'athleteplaysforteam(J, A)'}, {'true,true': [0.816, 1, 2], 'true,false': [2.128, 9, 13], 'false,true,true': [0.778, 2, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.52, 1, 1], 'false,false,false,false': [2.157, 12, 8]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false': 'teamalsoknownas(A, E), athleteledsportsteam(F, E)', 'false,false,false': 'athleteplaysforteam(G, A)'}, {'true': [1.128, 3, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.432, 1, 1], 'false,false,false,true': [1.827, 6, 11], 'false,false,false,false': [2.37, 15, 10]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, A)', 'true,false': 'athleteplaysforteam(E, C), teamalsoknownas(F, A)', 'false': 'athleteplaysforteam(G, A)', 'false,false': 'teamplaysinleague(A, H)', 'false,false,true': 'teamalsoknownas(I, A), athleteplaysforteam(J, I)', 'false,false,false': 'athleteledsportsteam(K, A), athleteplaysinleague(K, L)'}, {'true,true': [0.777, 2, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.001, 2, 4], 'false,true': [1.939, 7, 11], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.977, 10, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.147, 4, 2]}]]
[{'': [0.14876033057851218, 0.24194608809993376], 'false': [0.25, 0.2331961591220851], 'false,true': [0.25, nan], 'false,true,true': [0.22222222222222224, 0.2469135802469134], 'false,false': [0.18750000000000003, 0.23818525519848777], 'false,false,false': [nan, 0.23818525519848777], 'true': [0.14876033057851218, nan]}, {'': [0.23951570073943684, 0.2395489372145401], 'false': [0.22725465086713437, 0.23977919332379968], 'false,false': [0.21300370508509892, 0.232992717574837], 'true': [0.22222222222222224, 0.22222222222222224], 'false,false,false': [nan, 0.232992717574837], 'true,true': [0.22222222222222224, nan], 'true,false': [nan, 0.22222222222222224]}, {'': [0.14939495260721775, 0.2371264239799679], 'false': [0.24256478326328124, 0.23268033116045592], 'false,true': [0.24256478326328124, nan], 'false,false': [0.1875, 0.2373625689874751], 'false,false,false': [nan, 0.23736256898747515], 'true': [0.14939495260721775, nan], 'true,true': [0.0, 0.16061533810305456]}, {'': [0.22222222222222224, 0.22516363885679908], 'false': [0.21894552725623972, 0.22608278864595274], 'false,false': [nan, 0.22608278864595274], 'false,false,false': [0.21182862198982827, 0.2335198918501567], 'true': [nan, 0.22222222222222224], 'true,false': [0.22222222222222224, nan]}, {'': [0.20985677132428712, 0.23324542250602678], 'false': [0.22843103069570359, 0.23357582857905052], 'false,false': [0.0, 0.23765432098765413], 'false,false,false': [nan, 0.23765432098765413], 'false,true': [0.22222222222222224, 0.206065990394668], 'true': [0.19469710785682934, 0.21182976332380557], 'false,true,false': [nan, 0.206065990394668], 'false,false,true': [0.0, nan]}, {'': [0.20917241624717378, 0.22899794971748688], 'false': [nan, 0.22899794971748688], 'false,false': [0.23715189022781313, 0.22722091861667393], 'false,false,true': [0.24999999999999997, 0.21029750245478185], 'false,false,false': [0.0, 0.23104451034770532], 'true': [0.19469536019590306, 0.2111013673135779], 'true,false': [nan, 0.2111013673135779]}, {'': [0.20392503734193373, 0.22648217529089018], 'false': [0.20212758684954646, 0.22929464731505467], 'false,false': [0.0, 0.22840896658441742], 'false,false,false': [0.1909178305888452, 0.2366269983910359], 'true': [0.20392503734193373, nan], 'true,true': [0.21054549585343513, 0.13753618960009445], 'true,true,false': [nan, 0.13753618960009445]}, {'': [0.20801213882802774, 0.2212813554345075], 'false': [0.20186607873920578, 0.223758068537355], 'false,false': [nan, 0.223758068537355], 'false,false,false': [0.1349911805354513, 0.23253505918968959], 'true': [0.2222222222222222, 0.20591146633356286], 'false,true': [0.20186607873920578, nan]}, {'': [0.212030744994729, 0.21481130629812178], 'false': [nan, 0.21481130629812178], 'false,false': [0.1862751793841152, 0.21458212546433492], 'false,false,false': [0.19639721377584235, 0.22459621729655563]}, {'': [0.18180337699592442, 0.21955889490179897], 'false': [0.20877258549138866, 0.22787882617333197], 'false,false': [0.22986845719141846, 0.21930375355506337], 'false,false,true': [nan, 0.22986845719141846], 'false,false,false': [nan, 0.21930375355506337], 'true': [0.20143716259213396, 0.16714653672221677], 'true,false': [nan, 0.16714653672221672]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;teamplayssport(A, B) :- athleteledsportsteam(C, A), athleteplaysinleague(C, D).;true;true
2;true;teamalsoknownas(A, F).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false;teamalsoknownas(A, F).;true;true
4;false,false;athleteplaysforteam(I, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
5;false;teamalsoknownas(A, H), teamplaysinleague(A, I).;true;true
5;false,false;teamalsoknownas(L, A).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
6;false;teamalsoknownas(G, A).;true;true
6;false,false;teamplaysinleague(A, H), teamalsoknownas(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplaysforteam(F, A), athleteplayssport(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.11024456011969057;  // std dev = 0.545, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( athleteplayssport(H, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.42193319824108544;  // std dev = 0.108, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10337154600906363;  // std dev = 0.030, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.32664402327343695;  // std dev = 0.100, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09663436236292014;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.11360384179378741;  // std dev = 0.505, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return -0.09254208909426076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return 0.31974977268183563;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.09254208909426076;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.25939917982900595;  // std dev = 0.090, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08852687302109906;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamalsoknownas(A, E), teamplaysinleague(A, F) )
%   | then return 0.0965135239449253;  // std dev = 0.398, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then return -0.10253409201215713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.2596463460592847;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.08505812310288909;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.21224559253814787;  // std dev = 0.066, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.082592352756187;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.023544092434860775;  // std dev = 0.309, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, F), teamalsoknownas(A, G) )
%   | | then return -0.11176218394262279;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.2200877388044084;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.07855095145257192;  // std dev = 0.000839, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1849762075053667;  // std dev = 0.129, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07783432798848067;  // std dev = 0.054, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1587988359788696;  // std dev = 0.115, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07243626612211322;  // std dev = 0.051, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13878840883758525;  // std dev = 0.104, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.0677242911168658;  // std dev = 0.048, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.991261
   AUC PR    = 0.127473
   CLL	      = -0.105174
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 3.029 seconds
Total inference time: 4.294 seconds
AUC ROC: 0.991261


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09865
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.559 seconds
Refined model CLL: -0.09865


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991261
   AUC PR    = 0.127473
   CLL	      = -0.105174
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 5.414000000000001 seconds
Total inference time: 4.294 seconds
AUC ROC: 0.991261
Total revision time: 5.414000000000001
Best scored revision CLL: -0.09865


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:50:43
{'AUC ROC': 0.991261, 'AUC PR': 0.127473, 'CLL': -0.105174, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 5.414000000000001, 'Inference time': 4.294, 'parameter_25': {'AUC ROC': 0.469164, 'AUC PR': 0.002431, 'CLL': -0.65847, 'Precision': [0.002209, 0.5], 'Recall': 0.406015, 'F1': 0.004395, 'Learning time': 1.258, 'Inference time': 11.939}}


Starting fold 3

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos	 examples: 131
Target test neg examples: 53329

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamplaysinleague(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( teamplaysagainstteam(G, F) )
%   | | then if ( teamalsoknownas(G, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A), teamplaysagainstteam(I, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, H) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2866769192812665;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamplaysinleague(E, C) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6581754954978506;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, A), teamplaysagainstteam(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A), teamplaysinleague(I, J) )
%   | | then return 0.6846689160841062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1708325028176875;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(C, D) )
%   then if ( athleteplaysforteam(E, C), teamalsoknownas(F, C) )
%   | then if ( athleteplaysforteam(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5226453282837168;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, H), athleteplaysforteam(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13957213576524943;  // std dev = 0.323, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamalsoknownas(F, A) )
%   | | then return 0.39364837295869715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10923724273359771;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then if ( teamplaysagainstteam(I, H) )
%   | | | then return 0.1965045984091329;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05064208647405985;  // std dev = 0.507, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.10275636652172532;  // std dev = 0.285, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamalsoknownas(D, A), teamalsoknownas(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.15119074709070937;  // std dev = 0.839, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( teamalsoknownas(A, G), athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16303840125808722;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then if ( teamalsoknownas(A, E), teamplaysagainstteam(E, C) )
%   | | then return 0.28324806347116926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.12074618460326798;  // std dev = 0.710, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(G, A), teamalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.005148876871586255;  // std dev = 0.244, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.2294083828990986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, F) )
%   | | then if ( teamalsoknownas(A, G), teamalsoknownas(E, H) )
%   | | | then return -0.10811074782612888;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07021502928604743;  // std dev = 0.854, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.1913807615092883;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E), teamplaysinleague(E, F) )
%   | | then return -0.09811944097125098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.07881442128350392;  // std dev = 0.704, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.01806584696993105;  // std dev = 0.468, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, A) )
%   | then return 0.16349583938947965;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(C, E), teamalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08977248885231685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.061597792458265396;  // std dev = 0.704, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.3947143113044873;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.17500450537215537;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.49833
   AUC PR    = 0.002464
   CLL	      = -0.719885
   Precision = 0.002476 at threshold = 0.5
   Recall    = 0.503817
   F1        = 0.004928


Total learning time: 1.647 seconds
Total inference time: 194.99 seconds
AUC ROC: 0.49833


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.28497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.761 seconds
Parameter learned model CLL: -0.28497


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'true': 'teamplaysinleague(E, C)', 'false': 'teamplaysagainstteam(A, F)', 'false,true': 'teamplaysagainstteam(G, F)', 'false,true,true': 'teamalsoknownas(G, H)', 'false,false': 'teamalsoknownas(I, A), teamplaysagainstteam(I, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.816, 2, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 3, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), athleteplaysforteam(D, C)', 'true': 'teamalsoknownas(E, F)', 'true,true': 'athleteplaysforteam(G, A)', 'false': 'teamalsoknownas(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [0.433, 4, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'true': 'teamplaysinleague(E, C)', 'true,true': 'teamalsoknownas(A, F)', 'false': 'athleteledsportsteam(G, A), teamplaysagainstteam(A, H)', 'false,false': 'teamalsoknownas(I, A), teamplaysinleague(I, J)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.082, 5, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysagainstteam(C, D)', 'true': 'athleteplaysforteam(E, C), teamalsoknownas(F, C)', 'true,true': 'athleteplaysforteam(G, F)', 'false': 'teamalsoknownas(A, H), athleteplaysforteam(I, H)', 'false,false': 'teamalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.323, 5, 4]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(A, D)', 'false': 'teamalsoknownas(A, E)', 'false,true': 'teamalsoknownas(F, A)', 'false,true,false': 'teamplaysinleague(A, G)', 'false,false': 'teamplaysagainstteam(A, H)', 'false,false,true': 'teamplaysagainstteam(I, H)', 'false,false,false': 'teamalsoknownas(J, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.734, 2, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.507, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(D, A), teamalsoknownas(E, D)', 'false,false': 'teamplaysinleague(A, F)', 'false,false,false': 'teamalsoknownas(A, G), athleteplaysforteam(H, A)'}, {'true': [0.285, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.839, 3, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, C)', 'true,true': 'teamalsoknownas(A, E), teamplaysagainstteam(E, C)', 'false': 'teamalsoknownas(F, A)', 'false,false': 'athleteplaysforteam(G, A), teamalsoknownas(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.71, 2, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.244, 3, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false': 'teamplaysinleague(E, F)', 'false,false,true': 'teamalsoknownas(A, G), teamalsoknownas(E, H)'}, {'true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.854, 4, 4], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false': 'teamalsoknownas(A, E), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(A, G)'}, {'true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [0.704, 2, 3], 'false,false,false,false': [0.468, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, A)', 'true,false': 'teamplaysagainstteam(C, E), teamalsoknownas(F, A)', 'false': 'teamplaysagainstteam(A, G)', 'false,false': 'athleteplaysforteam(H, A)', 'false,false,false': 'teamplaysinleague(A, I), athleteplaysinleague(J, I)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.704, 2, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.032, 2, 0]}]]
[{'': [0.0, 0.13888888888888892], 'false': [0.22222222222222224, 0.0], 'false,true': [0.22222222222222224, nan], 'false,true,true': [0.22222222222222224, nan], 'true': [0.0, nan], 'false,false': [nan, 0.0]}, {'': [0.0, 0.18346498323768654], 'false': [0.0, 0.1875265307633463], 'true': [0.0, nan], 'true,true': [nan, 0.0]}, {'': [0.0, 0.10278209077295992], 'false': [nan, 0.10278209077295991], 'false,false': [0.0, 0.0013580626370548632], 'true': [0.0, nan], 'true,true': [nan, 0.0]}, {'': [0.0, 0.10408995370706038], 'false': [nan, 0.10408995370706038], 'false,false': [nan, 0.10408995370706038], 'true': [0.0, nan], 'true,true': [nan, 0.0]}, {'': [nan, 0.09614813054923256], 'false': [0.06322348561755461, 0.10437925987669347], 'false,false': [0.10766548883576592, 0.08560479136906692], 'false,false,true': [0.10766548883576592, nan], 'false,false,false': [nan, 0.08560479136906692], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.04072695049176815, 0.09886255325040097], 'false': [nan, 0.09886255325040097], 'false,false': [0.10064328043431413, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.08757330420432519, 0.05949678359489724], 'true': [0.08757330420432519, nan], 'true,true': [0.0, 0.10068682160592383], 'false': [nan, 0.05949678359489724], 'false,false': [nan, 0.05949678359489724]}, {'': [0.0, 0.08420266518343988], 'false': [nan, 0.08420266518343988], 'false,false': [0.08420266518343988, nan], 'false,false,true': [0.0, 0.09119465579996304]}, {'': [0.0, 0.08253120589008647], 'false': [nan, 0.08253120589008647], 'false,false': [0.0, 0.0902072518824344], 'false,false,false': [0.09920646754516806, 0.07290206581050436]}, {'': [0.016036211522598594, 0.08962644552393027], 'false': [0.09910343225838505, 0.07246864337861544], 'false,false': [nan, 0.07246864337861544], 'false,false,false': [0.0, 0.0005097883761118333], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteplaysinleague(D, C).;true;true
0;false;teamplaysagainstteam(A, F).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A), athleteplaysforteam(D, C).;true;true
1;false;teamalsoknownas(A, H).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteplaysinleague(D, C).;true;true
2;false;teamalsoknownas(I, A), teamplaysinleague(I, J).;true;true
3;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysagainstteam(C, D).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, E).;true;true
4;true;teamalsoknownas(F, A).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
5;false;teamplaysinleague(A, F).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;true;teamalsoknownas(A, E), teamplaysagainstteam(E, C).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
7;false;teamalsoknownas(A, G), teamalsoknownas(E, H).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false;teamalsoknownas(A, E), teamplaysinleague(E, F).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
9;true;teamalsoknownas(D, A).;true;true
9;false;teamplaysagainstteam(A, G).;true;true
9;false,false;teamplaysinleague(A, I), athleteplaysinleague(J, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteplaysforteam(D, C) )
%   then return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14611957364842149;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamalsoknownas(E, A), teamplaysinleague(E, F) )
%   | then return 0.6846689160841062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.12555718504043062;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(C, D) )
%   then return 0.5226453282837168;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11244234098241981;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, A) )
%   | then return 0.39364837295869715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.09068536087412783;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10448650911671109;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.11054292463382051;  // std dev = 0.274, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09987765873077363;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08087951250068098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(A, D), teamplaysagainstteam(D, C) )
%   | then return 0.2816699188495829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.0858465798426632;  // std dev = 0.339, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.007851144708530797;  // std dev = 0.252, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.22831270266637982;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(A, D), teamalsoknownas(E, F) )
%   | then return -0.09168030612315696;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(H, G) )
%   | | then return 0.1199072177981371;  // std dev = 0.263, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.011175874471496716;  // std dev = 0.258, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.19059079294248882;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then return -0.08432608106444626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.18649282773274609;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.0933241284299359;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, A) )
%   | then return 0.16290549634210438;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.07803892977740609;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.049436594240428254;  // std dev = 0.281, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.18334422719576993;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.06703534246746072;  // std dev = 0.000840, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.893486
   AUC PR    = 0.019137
   CLL	      = -0.420111
   Precision = 0.014703 at threshold = 0.5
   Recall    = 0.648855
   F1        = 0.028755


Total learning time: 1.015 seconds
Total inference time: 6.569 seconds
AUC ROC: 0.893486


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.123383
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.489 seconds
Refined model CLL: -0.123383


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.893486
   AUC PR    = 0.019137
   CLL	      = -0.420111
   Precision = 0.014703 at threshold = 0.5
   Recall    = 0.648855
   F1        = 0.028755


Total learning time: 3.912 seconds
Total inference time: 6.569 seconds
AUC ROC: 0.893486
Total revision time: 3.912
Best scored revision CLL: -0.123383


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:54:09
{'AUC ROC': 0.893486, 'AUC PR': 0.019137, 'CLL': -0.420111, 'Precision': [0.014703, 0.5], 'Recall': 0.648855, 'F1': 0.028755, 'Learning time': 3.912, 'Inference time': 6.569, 'parameter_5': {'AUC ROC': 0.49833, 'AUC PR': 0.002464, 'CLL': -0.719885, 'Precision': [0.002476, 0.5], 'Recall': 0.503817, 'F1': 0.004928, 'Learning time': 1.647, 'Inference time': 194.99}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(H, I) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.3074902658371011;  // std dev = 2.202, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.4293431187806699;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.1981245074465621;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.11934118639110232;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.20306987582755678;  // std dev = 2.162, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.09365069777294373;  // std dev = 1.673, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, D) )
%   | | then return 0.3576232011235276;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22683359430543115;  // std dev = 0.500, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.07204603345977907;  // std dev = 1.670, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else return 0.22114645507225297;  // std dev = 0.490, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamplaysinleague(E, C) )
%   | | then return 0.11303014848309591;  // std dev = 1.733, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.062063187708196306;  // std dev = 0.465, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.07229353705602397;  // std dev = 0.475, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.0548116685882005;  // std dev = 2.123, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.04146582678773051;  // std dev = 2.123, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.493541
   AUC PR    = 0.002396
   CLL	      = -0.68278
   Precision = 0.002419 at threshold = 0.5
   Recall    = 0.664122
   F1        = 0.00482


Total learning time: 1.608 seconds
Total inference time: 171.125 seconds
AUC ROC: 0.493541


Results scoring model
   AUC ROC   = 0.745
   AUC PR    = 0.670747
   CLL	      = -0.644758
   Precision = 0.7 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.7


Total scoring time: 0.678 seconds
Parameter learned model CLL: -0.644758


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamplaysinleague(H, I)'}, {'true,true': [1.195, 2, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [0.495, 4, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.155, 4, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.202, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.452, 2, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [1.309, 4, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.155, 4, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamplaysagainstteam(C, E)'}, {'true,true': [2.162, 10, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, D)'}, {'true': [1.673, 7, 6], 'false,true,true': [0.816, 1, 2], 'false,true,false': [0.0, 0, 0], 'false,false': [0.5, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)'}, {'true': [1.67, 7, 6], 'false': [0.49, 3, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'teamplaysinleague(D, C)', 'true,true': 'teamplaysinleague(E, C)'}, {'true,true,true': [1.733, 6, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.465, 4, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.475, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.123, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.123, 10, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.20408163265306106, 0.23668639053254437], 'false': [0.24489795918367335, 0.22222222222222224], 'false,true': [0.24489795918367335, nan], 'false,false': [0.22222222222222224, nan], 'true': [0.20408163265306106, nan]}, {'': [0.2423671347121628, nan]}, {'': [0.2040816326530612, 0.23597475567728857], 'false': [0.2448979591836735, 0.2222222222222223], 'false,true': [0.2448979591836735, nan], 'false,false': [0.2222222222222223, nan], 'true': [0.2040816326530612, nan]}, {'': [0.233752005583333, nan], 'true': [0.233752005583333, nan]}, {'': [0.21531914060299423, 0.24228444329971952], 'false': [0.22222222222222224, 0.25000000000000006], 'false,true': [0.22222222222222224, nan]}, {'': [0.21460421722668624, 0.24040036841438767]}, {'': [0.23096636070203924, 0.2157805073938752], 'true': [0.23096636070203924, nan], 'true,true': [0.23096636070203924, nan]}, {'': [0.22566505926661148, nan]}, {'': [0.22543317138150326, nan]}, {'': [0.22529027983648095, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
0;true;teamplaysagainstteam(E, C).;true;true
0;false;teamplaysinleague(A, F).;true;true
0;false,true;teamplaysinleague(G, F).;true;true
0;false,false;teamplaysinleague(H, I).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
2;true;teamplaysagainstteam(E, C).;true;true
2;false;teamplaysinleague(A, F).;true;true
2;false,true;teamplaysinleague(G, F).;true;true
2;false,false;teamplaysagainstteam(H, I).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true
3;true;teamplaysagainstteam(C, E).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false;teamplaysinleague(A, D).;true;true
4;false,true;teamplaysinleague(E, D).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
6;true;teamplaysinleague(D, C).;true;true
6;true,true;teamplaysinleague(E, C).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, H) )
%   | then if ( teamplaysinleague(I, H) )
%   | | then if ( athleteplayssport(J, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(K, L) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), athleteledsportsteam(E, G) )
%   | | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.8047724714763999;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.15025456067242754;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then if ( athleteplayssport(F, B), teamplaysinleague(A, G) )
%   | | then return 0.5892185920666306;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08010925015730408;  // std dev = 0.556, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, H) )
%   | then if ( teamplaysinleague(I, H) )
%   | | then if ( athleteplayssport(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10986648371979157;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(K, L) )
%   | | then return 0.13229557386766555;  // std dev = 0.967, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then if ( teamplaysinleague(A, G), athleteledsportsteam(F, H) )
%   | | | then return 0.4134090830609032;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5978301984093579;  // std dev = 0.131, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return -0.11880655030196718;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.16431358732479293;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3396204040357344;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return -0.10699754938440342;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12938193065484835;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(A, G) )
%   | then if ( teamplaysinleague(H, G) )
%   | | then return 0.18459891587938634;  // std dev = 0.336, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18771035341377107;  // std dev = 0.661, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.268383709977799;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then return -0.11640613836808908;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09611605473450392;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.37711535767773563;  // std dev = 0.189, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14691097737005276;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamplaysinleague(E, C) )
%   | | then if ( athleteplayssport(F, B) )
%   | | | then return 0.21435303010141477;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.09066544846363361;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplayssport(G, B) )
%   | then return 0.33330512302617343;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.13225390557971167;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), athleteledsportsteam(E, G) )
%   | | then return 0.17224069499038608;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.25629583526779204;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return -0.08349237924088004;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11782862313626148;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.0425032070822654;  // std dev = 0.135, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(F, A), athleteledsportsteam(E, G) )
%   | | then return 0.1428298328236671;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.20555615240307734;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return -0.08042116505381924;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11023565978602749;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.985749
   AUC PR    = 0.10788
   CLL	      = -0.127663
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 235.216 seconds
Total inference time: 2979.03 seconds
AUC ROC: 0.985749


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.12338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.314 seconds
Refined model CLL: -0.12338


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985749
   AUC PR    = 0.10788
   CLL	      = -0.127663
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 240.816 seconds
Total inference time: 2979.03 seconds
AUC ROC: 0.985749
Total revision time: 240.816
Best scored revision CLL: -0.12338


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 02:50:41
{'AUC ROC': 0.985749, 'AUC PR': 0.10788, 'CLL': -0.127663, 'Precision': [0.119444, 0.5], 'Recall': 0.984733, 'F1': 0.213047, 'Learning time': 240.816, 'Inference time': 2979.03, 'parameter_10': {'AUC ROC': 0.493541, 'AUC PR': 0.002396, 'CLL': -0.68278, 'Precision': [0.002419, 0.5], 'Recall': 0.664122, 'F1': 0.00482, 'Learning time': 1.608, 'Inference time': 171.125}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamplaysinleague(E, C) )
%   | then return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( teamplaysagainstteam(G, F) )
%   | | then if ( teamalsoknownas(G, H) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A), teamplaysagainstteam(I, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then return -0.17266576078189197;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.827334239218108;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, H) )
%   | then return 0.21014658489304874;  // std dev = 1.011, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.32491477712658207;  // std dev = 0.485, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamplaysinleague(E, C) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.7236168097693959;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.4273583285050797;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, A), teamplaysagainstteam(A, H) )
%   | then if ( athleteplaysforteam(G, I) )
%   | | then return -0.14937431704722362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(J, A), teamplaysinleague(J, K) )
%   | | then return 0.24793732754404985;  // std dev = 0.607, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.07879418948763883;  // std dev = 1.681, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(C, D) )
%   then if ( athleteplaysforteam(E, C), teamalsoknownas(F, C) )
%   | then if ( athleteplaysforteam(G, F) )
%   | | then return -0.13137095233891236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.6204784510880303;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, H), athleteplaysforteam(I, H) )
%   | then return -0.21790614831350147;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(J, A) )
%   | | then return -0.220708055731185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2266974006933345;  // std dev = 0.460, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(A, D) )
%   then return 0.503039837624371;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamalsoknownas(F, A) )
%   | | then return 0.14136622260138137;  // std dev = 0.462, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.20690818804145333;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then if ( teamplaysagainstteam(I, H) )
%   | | | then return 0.1329219005641877;  // std dev = 1.775, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(J, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18824321306176586;  // std dev = 1.409, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.10577467778917037;  // std dev = 0.717, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamalsoknownas(D, A), teamalsoknownas(E, D) )
%   | then return -0.1315480363202451;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.0952819907089047;  // std dev = 1.734, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( teamalsoknownas(A, G), athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20349201365106512;  // std dev = 1.407, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then if ( teamalsoknownas(A, E), teamplaysagainstteam(E, C) )
%   | | then return 0.11933702845054772;  // std dev = 0.407, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.0963859144571921;  // std dev = 1.778, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return -0.22528794381778863;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplaysforteam(G, A), teamalsoknownas(A, H) )
%   | | then return 0.3551093459297021;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08544279531422899;  // std dev = 0.433, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.020879599185128984;  // std dev = 0.440, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, F) )
%   | | then if ( teamalsoknownas(A, G), teamalsoknownas(E, H) )
%   | | | then return 0.04952657694556157;  // std dev = 0.515, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08092939057683872;  // std dev = 2.238, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.0173944869228586;  // std dev = 0.439, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E), teamplaysinleague(E, F) )
%   | | then return 0.015930339853076417;  // std dev = 0.253, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.05191210524302698;  // std dev = 1.783, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.07667765457271267;  // std dev = 1.398, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, A) )
%   | then return 0.08766862097896254;  // std dev = 0.399, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(C, E), teamalsoknownas(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.03385854634866432;  // std dev = 0.511, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.025254278903623584;  // std dev = 1.752, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.41752903427801225;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09534307047197832;  // std dev = 1.183, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.47933
   AUC PR    = 0.002294
   CLL	      = -0.665151
   Precision = 0.002391 at threshold = 0.5
   Recall    = 0.526718
   F1        = 0.00476


Total learning time: 2.609 seconds
Total inference time: 195.257 seconds
AUC ROC: 0.47933


Results scoring model
   AUC ROC   = 0.868889
   AUC PR    = 0.878562
   CLL	      = -0.532569
   Precision = 0.785714 at threshold = 0.5
   Recall    = 0.733333
   F1        = 0.758621


Total scoring time: 0.848 seconds
Parameter learned model CLL: -0.532569


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'true': 'teamplaysinleague(E, C)', 'false': 'teamplaysagainstteam(A, F)', 'false,true': 'teamplaysagainstteam(G, F)', 'false,true,true': 'teamalsoknownas(G, H)', 'false,false': 'teamalsoknownas(I, A), teamplaysagainstteam(I, J)'}, {'true,true': [1.519, 3, 10], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.369, 5, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.247, 7, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), athleteplaysforteam(D, C)', 'true': 'teamalsoknownas(E, F)', 'true,true': 'athleteplaysforteam(G, A)', 'false': 'teamalsoknownas(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [1.011, 3, 2], 'false,false': [0.485, 11, 12]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'true': 'teamplaysinleague(E, C)', 'true,true': 'teamalsoknownas(A, F)', 'false': 'athleteledsportsteam(G, A), teamplaysagainstteam(A, H)', 'false,true': 'athleteplaysforteam(G, I)', 'false,false': 'teamalsoknownas(J, A), teamplaysinleague(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [1.477, 3, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.607, 1, 1], 'false,false,false': [1.681, 10, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysagainstteam(C, D)', 'true': 'athleteplaysforteam(E, C), teamalsoknownas(F, C)', 'true,true': 'athleteplaysforteam(G, F)', 'false': 'teamalsoknownas(A, H), athleteplaysforteam(I, H)', 'false,false': 'teamalsoknownas(J, A)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false': [0.46, 12, 14]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(A, D)', 'false': 'teamalsoknownas(A, E)', 'false,true': 'teamalsoknownas(F, A)', 'false,true,false': 'teamplaysinleague(A, G)', 'false,false': 'teamplaysagainstteam(A, H)', 'false,false,true': 'teamplaysagainstteam(I, H)', 'false,false,false': 'teamalsoknownas(J, A)'}, {'true': [0.0, 0, 2], 'false,true,true': [0.462, 1, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.034, 2, 0], 'false,false,true,true': [1.775, 7, 7], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.409, 5, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(D, A), teamalsoknownas(E, D)', 'false,false': 'teamplaysinleague(A, F)', 'false,false,false': 'teamalsoknownas(A, G), athleteplaysforteam(H, A)'}, {'true': [0.717, 3, 3], 'false,true': [0.0, 1, 0], 'false,false,true': [1.734, 7, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.407, 4, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, C)', 'true,true': 'teamalsoknownas(A, E), teamplaysagainstteam(E, C)', 'false': 'teamalsoknownas(F, A)', 'false,false': 'athleteplaysforteam(G, A), teamalsoknownas(A, H)'}, {'true,true,true': [0.407, 1, 1], 'true,true,false': [1.778, 7, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.433, 6, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false': 'teamplaysinleague(E, F)', 'false,false,true': 'teamalsoknownas(A, G), teamalsoknownas(E, H)'}, {'true': [0.44, 2, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.515, 2, 2], 'false,false,true,false': [2.238, 11, 12], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false': 'teamalsoknownas(A, E), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(A, G)'}, {'true': [0.439, 2, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.253, 1, 1], 'false,false,false,true': [1.783, 7, 8], 'false,false,false,false': [1.398, 5, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, A)', 'true,false': 'teamplaysagainstteam(C, E), teamalsoknownas(F, A)', 'false': 'teamplaysagainstteam(A, G)', 'false,false': 'athleteplaysforteam(H, A)', 'false,false,false': 'teamplaysinleague(A, I), athleteplaysinleague(J, I)'}, {'true,true': [0.399, 1, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.511, 2, 2], 'false,true': [1.752, 7, 7], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 3], 'false,false,false,false': [1.183, 5, 2]}]]
[{'': [0.1775147928994082, 0.20761245674740478], 'false': [0.2343749999999999, 0.17283950617283952], 'false,true': [0.2343749999999999, nan], 'false,true,true': [0.2343749999999999, nan], 'true': [0.1775147928994082, nan], 'false,false': [nan, 0.17283950617283952]}, {'': [0.25000000000000006, 0.23186441740936098], 'true': [0.25000000000000006, nan], 'true,true': [0.0, 0.0], 'false': [0.20427803147812185, 0.23550936176695372]}, {'': [0.17925772954733266, 0.19415758204440978], 'false': [0.0, 0.20263618541821002], 'false,false': [0.1840005584528651, 0.20172224269788447], 'true': [0.17925772954733266, nan], 'true,true': [0.0, 0.1983471074380165], 'false,true': [0.0, nan]}, {'': [0.14131938135836242, 0.21001517040464374], 'false': [0.0, 0.21125021615599576], 'false,false': [0.0, 0.21196145993493123], 'true': [0.14131938135836242, nan], 'true,true': [0.0, 0.0]}, {'': [0.0, 0.20040033169759836], 'false': [0.08389433616997455, 0.21472884298631348], 'false,false': [0.22511303598346905, 0.1984057116806967], 'false,false,true': [0.22511303598346905, nan], 'false,false,false': [nan, 0.1984057116806967], 'false,true': [0.10657194174135166, 0.0005691980442905087], 'false,true,false': [nan, 0.0005691980442905087]}, {'': [0.085624613282409, 0.21319688979189877], 'false': [0.0, 0.21955200813597883], 'false,false': [0.20054964720383386, 0.24754486375431003], 'false,false,false': [nan, 0.24754486375431003]}, {'': [0.19573171747720702, 0.1716986835970679], 'true': [0.19573171747720702, nan], 'true,true': [0.082797393233658, 0.21072765636063678], 'false': [0.0, 0.17746658361396705], 'false,false': [0.0, 0.187539905353651]}, {'': [0.06460844362104852, 0.19548561366326048], 'false': [nan, 0.19548561366326048], 'false,false': [0.19548561366326048, nan], 'false,false,true': [0.06634805608820198, 0.21779822500197535]}, {'': [0.06412116228488213, 0.19515610347907375], 'false': [nan, 0.19515610347907375], 'false,false': [0.06388627465617497, 0.20550171147538407], 'false,false,false': [0.2119063795514027, 0.19552670990119542]}, {'': [0.07063568585089348, 0.2096042678232594], 'false': [0.21936949938343112, 0.1952874780371998], 'false,false': [nan, 0.1952874780371998], 'false,false,false': [0.0, 0.2000707727325084], 'true': [0.07952238700266288, 0.06522716056443605], 'true,false': [nan, 0.06522716056443605]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamalsoknownas(C, A), athleteplaysforteam(D, C).;true;true
1;true;athleteplaysforteam(G, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteplaysinleague(D, C).;true;true
2;true;teamalsoknownas(A, F).;true;true
2;false;athleteledsportsteam(G, A), teamplaysagainstteam(A, H).;true;true
3;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysagainstteam(C, D).;true;true
3;true;athleteplaysforteam(G, F).;true;true
3;false;teamalsoknownas(A, H), athleteplaysforteam(I, H).;true;true
3;false,false;teamalsoknownas(J, A).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamalsoknownas(A, D).;true;true
4;false;teamalsoknownas(A, E).;true;true
4;false,true;teamalsoknownas(F, A).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
5;false;teamalsoknownas(D, A), teamalsoknownas(E, D).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;false;teamalsoknownas(F, A).;true;true
6;false,false;athleteplaysforteam(G, A), teamalsoknownas(A, H).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
9;false;teamplaysagainstteam(A, G).;true;true
9;false,false;teamplaysinleague(A, I), athleteplaysinleague(J, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteplaysforteam(D, C) )
%   then if ( athleteplaysforteam(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(G, A), teamplaysagainstteam(A, H) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(C, D) )
%   then if ( athleteplaysforteam(E, F) )
%   | then return 0.15795862733523686;  // std dev = 0.367, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, G), athleteplaysforteam(H, G) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(I, A) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(A, D) )
%   then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamalsoknownas(F, A) )
%   | | then return 0.1434895654825255;  // std dev = 0.334, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.09471268053880734;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.09683261519431408;  // std dev = 0.469, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamalsoknownas(D, A), teamalsoknownas(E, D) )
%   | then return -0.10751626654718224;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.2551722425694894;  // std dev = 2.11e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.08502735879333718;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.2256031561913929;  // std dev = 0.108, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.08281449045400673;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamalsoknownas(E, A) )
%   | then return -0.11497652118974956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplaysforteam(F, A), teamalsoknownas(A, G) )
%   | | then return 0.23720821026310213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08104134797589765;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.18549267514909948;  // std dev = 0.100, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07793156383799844;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.16382516818980888;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.07328758482448561;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.15388771059839193;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.07232611366206766;  // std dev = 0.030, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.0449574877591374;  // std dev = 0.312, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.13012167815143932;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06553003252113006;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.13290377814894705;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.007336325977898471;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.986694
   AUC PR    = 0.121613
   CLL	      = -0.118496
   Precision = 0.119181 at threshold = 0.5
   Recall    = 0.977099
   F1        = 0.212448


Total learning time: 4.083 seconds
Total inference time: 12.187 seconds
AUC ROC: 0.986694


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103378
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.58 seconds
Refined model CLL: -0.103378


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986694
   AUC PR    = 0.121613
   CLL	      = -0.118496
   Precision = 0.119181 at threshold = 0.5
   Recall    = 0.977099
   F1        = 0.212448


Total learning time: 8.12 seconds
Total inference time: 12.187 seconds
AUC ROC: 0.986694
Total revision time: 8.12
Best scored revision CLL: -0.103378


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 02:54:17
{'AUC ROC': 0.986694, 'AUC PR': 0.121613, 'CLL': -0.118496, 'Precision': [0.119181, 0.5], 'Recall': 0.977099, 'F1': 0.212448, 'Learning time': 8.12, 'Inference time': 12.187, 'parameter_15': {'AUC ROC': 0.47933, 'AUC PR': 0.002294, 'CLL': -0.665151, 'Precision': [0.002391, 0.5], 'Recall': 0.526718, 'F1': 0.00476, 'Learning time': 2.609, 'Inference time': 195.257}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.35814893509951234;  // std dev = 0.500, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(H, I) )
%   | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.3079260825873399;  // std dev = 3.132, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.37215593188889;  // std dev = 0.479, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.2565625131217504;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.09148913176197385;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.20399693941691033;  // std dev = 3.097, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.12789220344256436;  // std dev = 2.155, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, D) )
%   | | then return 0.24558968085495833;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11354868064166077;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.09781511916850716;  // std dev = 2.153, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0.14962045215015415;  // std dev = 0.492, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamplaysinleague(E, C) )
%   | | then return 0.08474928762935899;  // std dev = 2.579, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11570341949902925;  // std dev = 0.465, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.0721964474121305;  // std dev = 0.486, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.05465712401835743;  // std dev = 3.076, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.041287355450573035;  // std dev = 3.075, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.492276
   AUC PR    = 0.002405
   CLL	      = -0.648234
   Precision = 0.002361 at threshold = 0.5
   Recall    = 0.396947
   F1        = 0.004693


Total learning time: 2.262 seconds
Total inference time: 170.071 seconds
AUC ROC: 0.492276


Results scoring model
   AUC ROC   = 0.68625
   AUC PR    = 0.70254
   CLL	      = -0.667484
   Precision = 0.642857 at threshold = 0.5
   Recall    = 0.45
   F1        = 0.529412


Total scoring time: 0.728 seconds
Parameter learned model CLL: -0.667484


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamplaysinleague(H, I)'}, {'true,true': [1.793, 5, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [0.5, 8, 8], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.449, 7, 3], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [3.132, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.479, 5, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [2.0, 8, 8], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.449, 7, 3], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamplaysagainstteam(C, E)'}, {'true,true': [3.097, 20, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, D)'}, {'true': [2.155, 10, 10], 'false,true,true': [1.708, 5, 7], 'false,true,false': [0.0, 0, 0], 'false,false': [0.484, 5, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)'}, {'true': [2.153, 10, 10], 'false': [0.492, 10, 10]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'teamplaysinleague(D, C)', 'true,true': 'teamplaysinleague(E, C)'}, {'true,true,true': [2.579, 13, 14], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.465, 7, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.486, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.076, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [3.075, 20, 20], 'false': [0.0, 0, 0]}]]
[{'': [0.22959183673469377, 0.24408284023668642], 'false': [0.24999999999999997, 0.20999999999999988], 'false,true': [0.24999999999999997, nan], 'true': [0.22959183673469377, nan], 'false,false': [0.20999999999999988, nan]}, {'': [0.24518450997313262, nan]}, {'': [0.22959183673469366, 0.2410649044339766], 'false': [0.25000000000000033, 0.21000000000000002], 'false,true': [0.25000000000000033, nan], 'true': [0.22959183673469366, nan], 'false,false': [0.21000000000000002, nan]}, {'': [0.23971765544512752, nan], 'true': [0.23971765544512752, nan]}, {'': [0.23229302182256478, 0.24376769151029212], 'false': [0.24305555555555555, 0.23437500000000006], 'false,true': [0.24305555555555555, nan]}, {'': [0.23170522947296002, 0.24187131012934718]}, {'': [0.24635128975829695, 0.21665179881211477], 'true': [0.24635128975829695, nan], 'true,true': [0.24635128975829695, nan]}, {'': [0.2365905838227489, nan]}, {'': [0.23647412876078894, nan]}, {'': [0.2364032373548027, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
0;true;teamplaysagainstteam(E, C).;true;true
0;false;teamplaysinleague(A, F).;true;true
0;false,true;teamplaysinleague(G, F).;true;true
0;false,false;teamplaysinleague(H, I).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
2;true;teamplaysagainstteam(E, C).;true;true
2;false;teamplaysinleague(A, F).;true;true
2;false,true;teamplaysinleague(G, F).;true;true
2;false,false;teamplaysagainstteam(H, I).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true
3;true;teamplaysagainstteam(C, E).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false;teamplaysinleague(A, D).;true;true
4;false,true;teamplaysinleague(E, D).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
6;true;teamplaysinleague(D, C).;true;true
6;true,true;teamplaysinleague(E, C).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then if ( teamplaysinleague(H, G) )
%   | | then if ( athleteplayssport(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(J, K) )
%   | | then if ( athleteplayssport(L, B), athleteledsportsteam(L, M) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(E, F) )
%   | | then return 0.7194734122109542;  // std dev = 7.30e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.4378340619645058;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.5704856455552632;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then if ( teamplaysinleague(H, G) )
%   | | then if ( athleteplayssport(I, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(J, K) )
%   | | then if ( athleteplayssport(L, B), athleteledsportsteam(L, M) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12224649076573;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then if ( athleteledsportsteam(F, G) )
%   | | | then return 0.41608547479923536;  // std dev = 0.008, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.2674783469970711;  // std dev = 0.529, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.10131123879529431;  // std dev = 0.002, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3379739775692634;  // std dev = 0.125, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09254886679367502;  // std dev = 0.001, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(F, E) )
%   | | then if ( athleteplayssport(G, B) )
%   | | | then return 0.3210230486355323;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.09271525498772137;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | | then return 0.32102304863553255;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11439421495788978;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.26736462028713814;  // std dev = 0.112, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08506388571309545;  // std dev = 0.000975, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.25538457941875753;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09435790011891329;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamplaysinleague(E, C) )
%   | | then if ( athleteplayssport(F, B) )
%   | | | then return 0.21207326431815657;  // std dev = 0.073, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.07855342982586087;  // std dev = 0.001, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | then return 0.20702280122190375;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | | then return 0.042353412952950344;  // std dev = 0.292, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0956647733399463;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.1870750608538945;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.17689096495292522;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09338747916188503;  // std dev = 0.292, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.07313726716501436;  // std dev = 0.012, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(E, F) )
%   | | then return 0.1515993680050154;  // std dev = 0.027, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.0908707971869512;  // std dev = 0.323, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.0683320985409219;  // std dev = 0.011, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(E, F) )
%   | | then return 0.13311823057489314;  // std dev = 0.024, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.07622179837064515;  // std dev = 0.321, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06410853798108236;  // std dev = 0.011, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.988304
   AUC PR    = 0.218085
   CLL	      = -0.091363
   Precision = 0.129328 at threshold = 0.5
   Recall    = 0.969466
   F1        = 0.228212


Total learning time: 674.064 seconds
Total inference time: 3040.062 seconds
AUC ROC: 0.988304


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102686
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 4.395 seconds
Refined model CLL: -0.102686


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988304
   AUC PR    = 0.218085
   CLL	      = -0.091363
   Precision = 0.129328 at threshold = 0.5
   Recall    = 0.969466
   F1        = 0.228212


Total learning time: 681.449 seconds
Total inference time: 3040.062 seconds
AUC ROC: 0.988304
Total revision time: 681.449
Best scored revision CLL: -0.102686


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 03:59:09
{'AUC ROC': 0.988304, 'AUC PR': 0.218085, 'CLL': -0.091363, 'Precision': [0.129328, 0.5], 'Recall': 0.969466, 'F1': 0.228212, 'Learning time': 681.449, 'Inference time': 3040.062, 'parameter_20': {'AUC ROC': 0.492276, 'AUC PR': 0.002405, 'CLL': -0.648234, 'Precision': [0.002361, 0.5], 'Recall': 0.396947, 'F1': 0.004693, 'Learning time': 2.262, 'Inference time': 170.071}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.24276431971489695;  // std dev = 0.487, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( teamalsoknownas(I, J) )
%   | | | then return 0.3844647245731965;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.33234490573795067;  // std dev = 2.871, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | else return 0.25537738301323726;  // std dev = 1.971, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.4345575564449733;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamplaysinleague(G, H) )
%   | | then return 0.08088009022158212;  // std dev = 1.186, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return 0.16262481095368578;  // std dev = 1.762, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( athleteledsportsteam(J, K) )
%   | | | then return 0.27941900247626283;  // std dev = 2.175, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( teamplaysinleague(C, E) )
%   | then if ( teamplaysinleague(F, G) )
%   | | then return 0.2033957768918715;  // std dev = 3.439, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.13522955138903064;  // std dev = 2.132, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0.2241044173739716;  // std dev = 1.211, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( athleteledsportsteam(E, A) )
%   | then return 0.5607681411556644;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then if ( teamalsoknownas(G, F) )
%   | | | then return -0.00395376341797346;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17938569145321986;  // std dev = 0.499, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.1210224001270829;  // std dev = 0.481, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.421531876404428;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.1630737682651287;  // std dev = 0.499, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.04839732235151052;  // std dev = 0.471, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.13839692715449198;  // std dev = 0.916, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamalsoknownas(F, C) )
%   | | | then return -0.024055528132010506;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then return 0.07489328358564575;  // std dev = 0.478, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.24352824068328074;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.11053463851322423;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.06512732565049044;  // std dev = 2.440, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return -0.019304380730443313;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.09904064082602415;  // std dev = 2.185, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteledsportsteam(D, C) )
%   | then return 0.0840456310343127;  // std dev = 2.259, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | else return -0.14110665843181425;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamplaysinleague(E, F) )
%   | then return 0.05970738848817833;  // std dev = 2.349, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.04114958021113595;  // std dev = 3.375, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.505561
   AUC PR    = 0.002428
   CLL	      = -0.62136
   Precision = 0.002532 at threshold = 0.5
   Recall    = 0.419847
   F1        = 0.005034


Total learning time: 2.933 seconds
Total inference time: 129.652 seconds
AUC ROC: 0.505561


Results scoring model
   AUC ROC   = 0.6816
   AUC PR    = 0.689369
   CLL	      = -0.649072
   Precision = 0.636364 at threshold = 0.5
   Recall    = 0.56
   F1        = 0.595745


Total scoring time: 0.797 seconds
Parameter learned model CLL: -0.649072


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamalsoknownas(G, F)', 'false,false': 'teamplaysagainstteam(A, H)', 'false,false,false': 'teamalsoknownas(I, J)'}, {'true,true': [1.477, 3, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [0.452, 5, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.487, 8, 5], 'false,false,false,true': [2.176, 9, 10], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'true,true': 'teamplaysinleague(A, F)'}, {'true,true,true': [2.871, 16, 18], 'true,true,false': [1.971, 9, 7], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamplaysinleague(G, H)', 'false,false': 'teamplaysagainstteam(A, I)', 'false,false,false': 'athleteledsportsteam(J, K)'}, {'true,true': [0.445, 3, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [1.186, 5, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.762, 8, 5], 'false,false,false,true': [2.175, 9, 10], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)', 'true': 'teamplaysinleague(C, E)', 'true,true': 'teamplaysinleague(F, G)'}, {'true,true,true': [3.439, 25, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysinleague(A, D)', 'false': 'athleteledsportsteam(E, A)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,true': 'teamalsoknownas(G, F)'}, {'true,true': [2.132, 10, 10], 'true,false': [1.211, 3, 3], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.858, 3, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.499, 9, 10]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysinleague(A, E)'}, {'true': [0.481, 13, 13], 'false,true': [0.0, 0, 1], 'false,false,true': [0.499, 6, 7], 'false,false,false': [0.471, 6, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, C)', 'true,true': 'teamplaysagainstteam(A, E)', 'true,true,false': 'teamalsoknownas(F, C)', 'false': 'teamplaysinleague(A, G)', 'false,false': 'teamplaysagainstteam(A, H)'}, {'true,true,true': [0.916, 2, 2], 'true,true,false,true': [0.845, 3, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.478, 14, 15], 'false,false,true': [1.095, 2, 3], 'false,false,false': [1.414, 4, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, E)', 'false': 'teamplaysagainstteam(A, F), athleteledsportsteam(G, F)', 'false,false': 'teamalsoknownas(A, H)'}, {'true,true': [2.44, 13, 13], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.845, 3, 1], 'false,false,false': [2.185, 9, 11]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'athleteledsportsteam(D, C)', 'false': 'teamplaysinleague(E, F)'}, {'true,true': [2.259, 10, 12], 'true,false': [0.821, 3, 1], 'false,true': [2.349, 12, 12], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [3.375, 25, 25], 'false': [0.0, 0, 0]}]]
[{'': [0.19834710743801634, 0.24589086127547616], 'false': [0.20408163265306126, 0.24902343749999953], 'false,false': [0.2366863905325442, 0.2493074792243767], 'false,false,false': [0.2493074792243767, nan], 'false,true': [0.20408163265306126, nan], 'true': [0.19834710743801634, nan]}, {'': [0.24379137174696644, nan], 'true': [0.24379137174696644, nan], 'true,true': [0.24240884508663676, 0.24270092120319006]}, {'': [0.19834710743801667, 0.243116794749687], 'false': [0.20106046861433136, 0.24821918000940135], 'false,false': [0.23891882126343658, 0.24904097457270472], 'false,false,false': [0.24904097457270472, nan], 'false,true': [0.20106046861433136, nan], 'true': [0.19834710743801667, nan]}, {'': [0.23653754206541966, nan], 'true': [0.23653754206541966, nan], 'true,true': [0.23653754206541966, nan]}, {'': [0.2326453767025297, 0.23922060665188224], 'false': [0.0, 0.24250524899720885], 'false,false': [0.1839083245806997, 0.24899564261773843], 'true': [0.2273188213364369, 0.2443246060224482], 'false,false,true': [0.1839083245806997, nan]}, {'': [0.23166564875977377, 0.23429524946569621], 'false': [0.0, 0.24052118114445334], 'false,false': [0.24931426918146876, 0.22165716955651069]}, {'': [0.2007504099388894, 0.23691788187870827], 'false': [0.22856934901624315, 0.25034018892737675], 'false,false': [0.24000000000000005, 0.24999999999999997], 'true': [0.2007504099388894, nan], 'true,true': [0.20996298881910008, 0.17834243094437213], 'true,true,false': [0.17834243094437213, nan]}, {'': [0.2289112556766297, 0.2305662115597538], 'false': [nan, 0.2305662115597538], 'false,false': [0.17843855838035394, 0.23865748484110041], 'true': [0.2289112556766297, nan]}, {'': [0.22880365254282087, 0.22983163861584435], 'false': [0.22983163861584435, nan], 'true': [0.2319357789258871, 0.16868241220747762]}, {'': [0.22787925032628975, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false;athleteledsportsteam(E, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
5;false;athleteledsportsteam(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then if ( teamalsoknownas(E, D), athleteledsportsteam(C, F) )
%   | | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5158003855941143;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.25682830473263174;  // std dev = 0.719, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, E), teamplaysagainstteam(A, E) )
%   | | then return 0.31837574397490265;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4039479599697713;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteledsportsteam(F, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | | then return 0.3318786633071648;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.15195299226532302;  // std dev = 0.325, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, E), teamplaysagainstteam(A, E) )
%   | | then return 0.253588864414671;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3138984231338198;  // std dev = 0.148, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteledsportsteam(F, A) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | | then return 0.26288329948578326;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1357396069537262;  // std dev = 0.302, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.20998884066908097;  // std dev = 0.064, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.08490457256401841;  // std dev = 0.568, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07719137155287568;  // std dev = 0.015, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.17729662493241707;  // std dev = 0.056, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.066127413448408;  // std dev = 0.569, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07186982174127138;  // std dev = 0.014, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.15291597397542722;  // std dev = 0.050, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.051700666244454595;  // std dev = 0.571, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06722137460369264;  // std dev = 0.013, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then return 0.13415542031721964;  // std dev = 0.045, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.04055624900310347;  // std dev = 0.573, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06312752368769324;  // std dev = 0.013, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.98464
   AUC PR    = 0.171622
   CLL	      = -0.088719
   Precision = 0.128486 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.227313


Total learning time: 21.43 seconds
Total inference time: 5.379 seconds
AUC ROC: 0.98464


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111818
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.655 seconds
Refined model CLL: -0.111818


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98464
   AUC PR    = 0.171622
   CLL	      = -0.088719
   Precision = 0.128486 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.227313


Total learning time: 25.815 seconds
Total inference time: 5.379 seconds
AUC ROC: 0.98464
Total revision time: 25.815
Best scored revision CLL: -0.111818


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 04:01:50
{'AUC ROC': 0.98464, 'AUC PR': 0.171622, 'CLL': -0.088719, 'Precision': [0.128486, 0.5], 'Recall': 0.984733, 'F1': 0.227313, 'Learning time': 25.815, 'Inference time': 5.379, 'parameter_25': {'AUC ROC': 0.505561, 'AUC PR': 0.002428, 'CLL': -0.62136, 'Precision': [0.002532, 0.5], 'Recall': 0.419847, 'F1': 0.005034, 'Learning time': 2.933, 'Inference time': 129.652}}


Starting fold 1

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, J) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.30572315705370834;  // std dev = 1.517, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.11963826299713338;  // std dev = 0.471, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysinleague(G, H) )
%   | | then return 0.6538776451725778;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(J, K) )
%   | | | then return 0.1748893015032245;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysinleague(D, E) )
%   | then if ( teamplaysinleague(F, G) )
%   | | then return 0.20023057583933807;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.15719619052256578;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, F) )
%   | | | then return 0.44571968102568493;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10287121777295347;  // std dev = 0.490, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.12341110375625329;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.12410905747810975;  // std dev = 0.458, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(C, F) )
%   | | | then return 0.13932334906097893;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then return 0.053402181650528645;  // std dev = 0.490, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, D), athleteledsportsteam(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.10813231259352678;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.04121133810617592;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(D, E) )
%   | then return 0.057751382234939294;  // std dev = 1.421, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.04449477620805918;  // std dev = 1.422, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.520112
   AUC PR    = 0.002654
   CLL	      = -0.717462
   Precision = 0.002645 at threshold = 0.5
   Recall    = 0.37594
   F1        = 0.005253


Total learning time: 1.476 seconds
Total inference time: 201.755 seconds
AUC ROC: 0.520112


Results scoring model
   AUC ROC   = 0.68
   AUC PR    = 0.776667
   CLL	      = -0.594966
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 0.625 seconds
Parameter learned model CLL: -0.594966


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,false': 'teamplaysagainstteam(I, J)'}, {'true,true': [0.816, 2, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamalsoknownas(C, E)', 'true,true': 'teamplaysinleague(A, F)'}, {'true,true,true': [1.517, 5, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysinleague(G, H)', 'false,false': 'teamalsoknownas(A, I)', 'false,false,false': 'athleteledsportsteam(J, K)'}, {'true,true': [0.471, 2, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamplaysinleague(D, E)', 'true,true': 'teamplaysinleague(F, G)'}, {'true,true,true': [1.445, 5, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.882, 2, 2], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.49, 3, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysinleague(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.88, 2, 2], 'false,false,true': [0.458, 3, 3], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'true,true': 'teamalsoknownas(A, E)', 'true,true,false': 'teamplaysagainstteam(C, F)', 'false': 'teamplaysinleague(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.9, 2, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.49, 3, 2], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(A, D), athleteledsportsteam(E, D)', 'false,false': 'teamplaysagainstteam(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.9, 2, 3], 'false,false,false': [1.095, 3, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysinleague(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [1.421, 5, 5], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [1.422, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.22222222222222224, 0.24489795918367338], 'false': [0.0, 0.24000000000000005], 'false,false': [nan, 0.24000000000000005], 'false,false,false': [0.24000000000000005, nan], 'true': [0.22222222222222224, nan], 'false,true': [0.0, nan]}, {'': [0.23007734418411746, nan], 'true': [0.23007734418411746, nan], 'true,true': [0.23007734418411746, nan]}, {'': [0.2222222222222222, 0.2182509864022674], 'true': [0.2222222222222222, nan], 'false': [0.0, 0.23999999999999994], 'false,false': [nan, 0.23999999999999994], 'false,false,false': [0.23999999999999994, nan], 'false,true': [0.0, nan]}, {'': [0.2088362345571301, nan], 'true': [0.2088362345571301, nan], 'true,true': [0.2088362345571301, nan]}, {'': [nan, 0.2075634334297518], 'false': [0.19441526819070115, 0.21632570399371656], 'false,false': [0.0, 0.24], 'false,false,true': [0.0, nan]}, {'': [nan, 0.2030001583306455], 'false': [0.19352922551063104, 0.20931391868822927], 'false,false': [0.20931391868822927, nan]}, {'': [0.16203103590725748, 0.24000000000000005], 'false': [0.24000000000000005, nan], 'true': [0.16203103590725748, nan], 'true,true': [nan, 0.16203103590725748], 'true,true,false': [0.16203103590725748, nan]}, {'': [nan, 0.20219119712639336], 'false': [nan, 0.20219119712639336], 'false,false': [0.16214318583961845, 0.24]}, {'': [nan, 0.2019522652880564], 'false': [0.2019522652880564, nan]}, {'': [0.20213022514979512, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteledsportsteam(C, A), athleteplaysinleague(C, D).;true;true
0;false;teamplaysagainstteam(F, A).;true;true
2;;teamplayssport(A, B) :- athleteledsportsteam(C, A), athleteplaysinleague(C, D).;true;true
2;false;teamplaysagainstteam(F, A).;true;true
4;;teamplayssport(A, B) :- athleteledsportsteam(D, A).;true;true
4;false;teamplaysagainstteam(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7839239249243338;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.17247761081691712;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), athleteplaysinleague(C, D) )
%   then return 0.13561668691910433;  // std dev = 0.685, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.5393999296041266;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18079954423335245;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5516190390525921;  // std dev = 0.267, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.17118055747191185;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then return 0.1342222491057383;  // std dev = 0.576, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.28229787070884604;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.11024002546685999;  // std dev = 0.723, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.388621310916974;  // std dev = 0.268, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.16396809104408008;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.30579241765760373;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14271458874211568;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2476668325168995;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1261311116751782;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20607481734241814;  // std dev = 0.175, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11287395659565762;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17542362440238604;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10205751349111973;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.985019
   AUC PR    = 0.127819
   CLL	      = -0.19725
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 1.283 seconds
Total inference time: 2.945 seconds
AUC ROC: 0.985019


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.132634
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.496 seconds
Refined model CLL: -0.132634


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985019
   AUC PR    = 0.127819
   CLL	      = -0.19725
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 3.88 seconds
Total inference time: 2.945 seconds
AUC ROC: 0.985019
Total revision time: 3.88
Best scored revision CLL: -0.132634


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 04:05:20
{'AUC ROC': 0.985019, 'AUC PR': 0.127819, 'CLL': -0.19725, 'Precision': [0.129032, 0.5], 'Recall': 0.992481, 'F1': 0.228374, 'Learning time': 3.88, 'Inference time': 2.945, 'parameter_5': {'AUC ROC': 0.520112, 'AUC PR': 0.002654, 'CLL': -0.717462, 'Precision': [0.002645, 0.5], 'Recall': 0.37594, 'F1': 0.005253, 'Learning time': 1.476, 'Inference time': 201.755}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.3385341295678042;  // std dev = 1.468, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.28088190556344245;  // std dev = 1.612, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.41396768629950376;  // std dev = 0.460, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( athleteplaysforteam(G, H) )
%   | | then return 0.08259279406510618;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(J, K) )
%   | | | then return 0.12378263712488886;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteplaysforteam(E, C) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return 0.2008205818594206;  // std dev = 2.125, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.15468157782093206;  // std dev = 0.590, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return -0.25127167100332626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.2414259462967373;  // std dev = 1.421, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( teamplaysinleague(G, F) )
%   | | | then return 0.14872832899667374;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06498774073244844;  // std dev = 0.471, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.011044511280360316;  // std dev = 0.371, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.18163823911865512;  // std dev = 1.421, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( athleteplaysforteam(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09434425629855375;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.00875684937464205;  // std dev = 0.642, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(F, C) )
%   | | | then return 0.09594231570810985;  // std dev = 1.757, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1446301854565265;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.006937347580588699;  // std dev = 0.642, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F), teamplaysagainstteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.0734086196053231;  // std dev = 1.757, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.1121979727377454;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.5267515252521577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.2551372215756025;  // std dev = 0.062, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplaysforteam(E, F) )
%   | then return 0.0631957531614483;  // std dev = 1.975, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.03985943056877285;  // std dev = 2.039, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.532603
   AUC PR    = 0.002708
   CLL	      = -0.640874
   Precision = 0.002822 at threshold = 0.5
   Recall    = 0.526316
   F1        = 0.005613


Total learning time: 1.931 seconds
Total inference time: 178.749 seconds
AUC ROC: 0.532603


Results scoring model
   AUC ROC   = 0.74
   AUC PR    = 0.75574
   CLL	      = -0.605604
   Precision = 0.7 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.7


Total scoring time: 0.719 seconds
Parameter learned model CLL: -0.605604


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteledsportsteam(D, C)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,false': 'teamplaysinleague(I, J)'}, {'true,true': [1.449, 3, 7], 'true,false': [0.0, 0, 0], 'false,true,true': [0.452, 5, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)', 'true': 'teamalsoknownas(D, E)', 'true,true': 'athleteplaysforteam(F, A)'}, {'true,true,true': [1.468, 4, 5], 'true,true,false': [1.612, 6, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteledsportsteam(D, C)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'athleteplaysforteam(G, H)', 'false,false': 'teamalsoknownas(A, I)', 'false,false,false': 'teamplaysagainstteam(J, K)'}, {'true,true': [0.46, 3, 7], 'true,false': [0.0, 0, 0], 'false,true,true': [1.198, 5, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'athleteplaysforteam(E, C)', 'true,true': 'athleteplaysforteam(F, G)'}, {'true,true,true': [2.125, 10, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysagainstteam(E, A)', 'false,false': 'teamplaysinleague(A, F)', 'false,false,true': 'teamplaysinleague(G, F)'}, {'true,true': [0.59, 1, 1], 'true,false': [0.0, 1, 0], 'false,true': [1.421, 3, 6], 'false,false,true,true': [1.095, 3, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.471, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'athleteplaysforteam(E, A)'}, {'true': [0.371, 2, 1], 'false,true': [1.421, 3, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.484, 5, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'teamplaysinleague(D, C)', 'true,true': 'teamalsoknownas(A, E)', 'true,true,false': 'teamplaysinleague(F, C)', 'false': 'athleteplaysforteam(G, A)', 'false,false': 'teamalsoknownas(A, H)'}, {'true,true,true': [0.642, 2, 1], 'true,true,false,true': [1.757, 6, 7], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.904, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamalsoknownas(A, F), teamplaysagainstteam(G, F)', 'false,false': 'teamplaysinleague(A, H)'}, {'true,true': [0.642, 2, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.757, 6, 7], 'false,false,false': [0.902, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamplaysagainstteam(D, C)', 'false': 'athleteplaysforteam(E, F)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.062, 2, 0], 'false,true': [1.975, 8, 9], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.039, 10, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.20999999999999988, 0.20999999999999988], 'true': [0.20999999999999988, nan], 'false': [0.20408163265306126, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,true': [0.20408163265306126, nan]}, {'': [0.2385208247174786, nan], 'true': [0.2385208247174786, nan], 'true,true': [0.23943543372214116, 0.23627680773942653]}, {'': [0.21142406463651908, 0.2104274720071037], 'true': [0.21142406463651908, nan], 'false': [0.20486359810638038, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,true': [0.20486359810638038, nan]}, {'': [0.2258341734013126, nan], 'true': [0.2258341734013126, nan], 'true,true': [0.2258341734013126, nan]}, {'': [0.15252238468000143, 0.23318176720672226], 'false': [0.22433862768524662, 0.23497688476837358], 'false,false': [0.24, 0.2222222222222223], 'false,false,true': [0.24, nan], 'true': [0.1738508969430121, 0.0]}, {'': [0.13767458959482248, 0.23100249307656417], 'false': [0.22439006494082558, 0.23440723032166036], 'false,false': [nan, 0.23440723032166036]}, {'': [0.2198114861164082, 0.20433416857812556], 'true': [0.2198114861164082, nan], 'true,true': [0.13744701303417337, 0.23739342742359895], 'true,true,false': [0.23739342742359895, nan], 'false': [nan, 0.20433416857812556], 'false,false': [nan, 0.20433416857812556]}, {'': [0.13726902275841116, 0.22970698907721307], 'false': [nan, 0.22970698907721307], 'false,false': [0.2374007174969865, 0.20355178460038392], 'true': [0.13726902275841116, nan]}, {'': [0.13712956498231646, 0.2295178563854281], 'false': [0.2295178563854281, nan], 'true': [0.0, 0.0019110100015129472]}, {'': [0.2078880122071209, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;true;athleteplaysforteam(D, A).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
8;true;teamplaysagainstteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.11401028548544435;  // std dev = 0.292, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2592947569149455;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08693977868951862;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2126982420345806;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08028384981464967;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17927110040474004;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07455378785807601;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.18008425606571732;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.07531354029720208;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.1515522164154034;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.06813625840563466;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.012350669079178256;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13307604494811776;  // std dev = 9.13e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.06393527614686044;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.99054
   AUC PR    = 0.12617
   CLL	      = -0.097645
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 1.57 seconds
Total inference time: 3.02 seconds
AUC ROC: 0.99054


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097454
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.508 seconds
Refined model CLL: -0.097454


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99054
   AUC PR    = 0.12617
   CLL	      = -0.097645
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 4.728 seconds
Total inference time: 3.02 seconds
AUC ROC: 0.99054
Total revision time: 4.728
Best scored revision CLL: -0.097454


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 04:08:27
{'AUC ROC': 0.99054, 'AUC PR': 0.12617, 'CLL': -0.097645, 'Precision': [0.129032, 0.5], 'Recall': 0.992481, 'F1': 0.228374, 'Learning time': 4.728, 'Inference time': 3.02, 'parameter_10': {'AUC ROC': 0.532603, 'AUC PR': 0.002708, 'CLL': -0.640874, 'Precision': [0.002822, 0.5], 'Recall': 0.526316, 'F1': 0.005613, 'Learning time': 1.931, 'Inference time': 178.749}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.5724346493852266;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, I) )
%   | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.30628629302152516;  // std dev = 2.660, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.429588365088812;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return -0.16306946863941685;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.1620795460032816;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(E, D) )
%   | then return 0.19957358966565314;  // std dev = 2.569, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.23442261510439483;  // std dev = 1.899, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.042078255586417666;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.18052888858067984;  // std dev = 1.887, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return 0.03331656154586312;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteplaysforteam(C, E) )
%   | | then return 0.061934462943510966;  // std dev = 1.731, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12469030142038505;  // std dev = 0.466, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.07211123741771992;  // std dev = 0.457, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.05537025901356591;  // std dev = 2.500, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.042434660395445994;  // std dev = 2.499, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.516335
   AUC PR    = 0.002553
   CLL	      = -0.647964
   Precision = 0.00282 at threshold = 0.5
   Recall    = 0.496241
   F1        = 0.005609


Total learning time: 2.08 seconds
Total inference time: 171.889 seconds
AUC ROC: 0.516335


Results scoring model
   AUC ROC   = 0.768889
   AUC PR    = 0.763662
   CLL	      = -0.608449
   Precision = 0.714286 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.689655


Total scoring time: 0.728 seconds
Parameter learned model CLL: -0.608449


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'athleteplaysforteam(H, I)'}, {'true,true': [1.69, 4, 10], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.754, 8, 5], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [2.66, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.452, 4, 10], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.754, 8, 5], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)', 'true': 'teamplaysagainstteam(E, D)'}, {'true,true': [2.569, 15, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'athleteplaysforteam(D, A)'}, {'true': [1.899, 7, 11], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 8, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)'}, {'true': [1.887, 7, 11], 'false': [0.471, 8, 4]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'athleteplaysforteam(C, D)', 'true,true': 'athleteplaysforteam(C, E)'}, {'true,true,true': [1.731, 7, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.466, 8, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.457, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.5, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [2.499, 15, 15], 'false': [0.0, 0, 0]}]]
[{'': [0.20408163265306115, 0.2148437499999999], 'false': [0.0, 0.2366863905325442], 'false,false': [0.2366863905325442, nan], 'true': [0.20408163265306115, nan], 'false,true': [0.0, nan]}, {'': [0.23576593647114558, nan]}, {'': [0.2040816326530611, 0.20841376022644859], 'false': [0.0, 0.23668639053254442], 'false,false': [0.23668639053254442, nan], 'true': [0.2040816326530611, nan], 'false,true': [0.0, nan]}, {'': [0.2199359932176356, nan], 'true': [0.2199359932176356, nan]}, {'': [0.20036870572799292, 0.2222222222222221], 'false': [nan, 0.2222222222222221]}, {'': [0.1977846652148449, 0.22222222222222224]}, {'': [0.1997185901940151, 0.21748264422450173], 'true': [0.1997185901940151, nan], 'true,true': [0.1997185901940151, nan]}, {'': [0.20871094219969777, nan]}, {'': [0.20836779839702974, nan]}, {'': [0.2081473077347, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(C, D).;true;true
0;false;athleteplaysforteam(F, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(C, D).;true;true
2;false;athleteplaysforteam(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(F, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 4.21e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(F, A) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.987957
   AUC PR    = 0.129557
   CLL	      = -0.09468
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 2.133 seconds
Total inference time: 3.868 seconds
AUC ROC: 0.987957


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.534 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987957
   AUC PR    = 0.129557
   CLL	      = -0.09468
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 5.475 seconds
Total inference time: 3.868 seconds
AUC ROC: 0.987957
Total revision time: 5.475
Best scored revision CLL: -0.094637


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 04:11:29
{'AUC ROC': 0.987957, 'AUC PR': 0.129557, 'CLL': -0.09468, 'Precision': [0.129032, 0.5], 'Recall': 0.992481, 'F1': 0.228374, 'Learning time': 5.475, 'Inference time': 3.868, 'parameter_15': {'AUC ROC': 0.516335, 'AUC PR': 0.002553, 'CLL': -0.647964, 'Precision': [0.00282, 0.5], 'Recall': 0.496241, 'F1': 0.005609, 'Learning time': 2.08, 'Inference time': 171.889}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.4581489350995123;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, I) )
%   | | then return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.30734908224993934;  // std dev = 3.114, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.3377877676704855;  // std dev = 0.490, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return -0.16321456773759954;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.25666876681705025;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(E, D) )
%   | then return 0.202065712694453;  // std dev = 3.059, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.17649799017018636;  // std dev = 2.356, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1294600609185323;  // std dev = 0.499, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.13682315940756096;  // std dev = 2.348, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   else return 0.09994513248644786;  // std dev = 0.499, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteplaysforteam(C, E) )
%   | | then return 0.016289730606273117;  // std dev = 2.002, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1648705992143325;  // std dev = 0.488, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.07140573479407107;  // std dev = 0.478, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.05422270123269368;  // std dev = 3.018, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.04109357005491572;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.516335
   AUC PR    = 0.002553
   CLL	      = -0.634358
   Precision = 0.00282 at threshold = 0.5
   Recall    = 0.496241
   F1        = 0.005609


Total learning time: 2.367 seconds
Total inference time: 176.85399999999998 seconds
AUC ROC: 0.516335


Results scoring model
   AUC ROC   = 0.675
   AUC PR    = 0.657106
   CLL	      = -0.646851
   Precision = 0.6 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.6


Total scoring time: 0.794 seconds
Parameter learned model CLL: -0.646851


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'athleteplaysforteam(H, I)'}, {'true,true': [2.191, 8, 12], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.0, 8, 8], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [3.114, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.49, 8, 12], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.0, 8, 8], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)', 'true': 'teamplaysagainstteam(E, D)'}, {'true,true': [3.059, 20, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'athleteplaysforteam(D, A)'}, {'true': [2.356, 12, 13], 'false,true': [0.0, 0, 0], 'false,false': [0.499, 8, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)'}, {'true': [2.348, 12, 13], 'false': [0.499, 8, 7]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'athleteplaysforteam(C, D)', 'true,true': 'athleteplaysforteam(C, E)'}, {'true,true,true': [2.002, 11, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.488, 9, 12]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.478, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.018, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [3.017, 20, 20], 'false': [0.0, 0, 0]}]]
[{'': [0.2399999999999996, 0.24000000000000005], 'false': [0.0, 0.24999999999999997], 'false,false': [0.24999999999999997, nan], 'true': [0.2399999999999996, nan], 'false,true': [0.0, nan]}, {'': [0.24238224827013335, nan]}, {'': [0.23999999999999994, 0.228208322341877], 'true': [0.23999999999999994, nan], 'false': [0.0, 0.2499999999999999], 'false,false': [0.2499999999999999, nan], 'false,true': [0.0, nan]}, {'': [0.23399257116355643, nan], 'true': [0.23399257116355643, nan]}, {'': [0.22211176185643322, 0.24888888888888885], 'false': [nan, 0.24888888888888885]}, {'': [0.22043684802151767, 0.2488888888888888]}, {'': [0.2110234782148124, 0.23779341784346175], 'true': [0.2110234782148124, nan], 'true,true': [0.2110234782148124, nan]}, {'': [0.22809024092041041, nan]}, {'': [0.22777678652548125, nan]}, {'': [0.22756268796407547, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(C, D).;true;true
0;false;athleteplaysforteam(F, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(C, D).;true;true
2;false;athleteplaysforteam(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, F) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(G, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7194734122109542;  // std dev = 7.30e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysinleague(E, F), teamplaysinleague(A, F) )
%   | | then return 0.6089694448144723;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( athleteplaysforteam(G, A), athleteplayssport(G, H) )
%   | | | then return 0.2577684421250763;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(I, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(J, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A), athleteledsportsteam(D, A) )
%   | then return 0.5037998526069588;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteplaysforteam(C, A) )
%   | | then return 0.17458407048834132;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4156599329773972;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.10159632948783633;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.2043961686020086;  // std dev = 0.747, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.327794413393656;  // std dev = 0.076, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then return 0.3152305276717576;  // std dev = 0.155, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteplaysforteam(C, E), teamplaysagainstteam(A, E) )
%   | | then return 0.0198560690151451;  // std dev = 0.626, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.25765490491672455;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.1017819515271835;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.21722594172779952;  // std dev = 0.099, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.07877675473109176;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.07977838291992148;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18265980273603172;  // std dev = 0.088, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then return 0.20552277233332103;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(A, E), athleteplaysforteam(C, E) )
%   | | then return -0.04711777272711012;  // std dev = 0.605, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1524718307438134;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.0375875044734679;  // std dev = 0.656, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.14052557278738043;  // std dev = 0.110, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.06419184008202619;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.987776
   AUC PR    = 0.138767
   CLL	      = -0.094465
   Precision = 0.12537 at threshold = 0.5
   Recall    = 0.954887
   F1        = 0.22164


Total learning time: 9.776 seconds
Total inference time: 6.961 seconds
AUC ROC: 0.987776


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.124287
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.671 seconds
Refined model CLL: -0.124287


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987776
   AUC PR    = 0.138767
   CLL	      = -0.094465
   Precision = 0.12537 at threshold = 0.5
   Recall    = 0.954887
   F1        = 0.22164


Total learning time: 13.607999999999999 seconds
Total inference time: 6.961 seconds
AUC ROC: 0.987776
Total revision time: 13.607999999999999
Best scored revision CLL: -0.124287


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 04:14:47
{'AUC ROC': 0.987776, 'AUC PR': 0.138767, 'CLL': -0.094465, 'Precision': [0.12537, 0.5], 'Recall': 0.954887, 'F1': 0.22164, 'Learning time': 13.607999999999999, 'Inference time': 6.961, 'parameter_20': {'AUC ROC': 0.516335, 'AUC PR': 0.002553, 'CLL': -0.634358, 'Precision': [0.00282, 0.5], 'Recall': 0.496241, 'F1': 0.005609, 'Learning time': 2.367, 'Inference time': 176.85399999999998}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.4945125714631487;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return 0.10814893509951218;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, I) )
%   | | then return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.3078302742164315;  // std dev = 3.497, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.366961334295439;  // std dev = 0.481, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return 0.04963598059994778;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.2156699823197;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(E, D) )
%   | then return 0.2037314412074469;  // std dev = 3.454, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.19257084107089895;  // std dev = 2.662, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   else if ( athleteplaysforteam(D, A) )
%   | then if ( athleteplaysforteam(D, E) )
%   | | then return 0.7559594558503476;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07124469602589625;  // std dev = 0.487, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.14815326194291972;  // std dev = 2.656, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   else return 0.08386855959445612;  // std dev = 0.489, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteplaysforteam(C, E) )
%   | | then return 0.05012821422233843;  // std dev = 2.376, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1390987957910677;  // std dev = 0.484, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.07212080094594453;  // std dev = 0.481, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.054695854640965796;  // std dev = 3.398, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.041390335375984355;  // std dev = 3.398, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.511225
   AUC PR    = 0.002535
   CLL	      = -0.645854
   Precision = 0.00282 at threshold = 0.5
   Recall    = 0.496241
   F1        = 0.005609


Total learning time: 2.724 seconds
Total inference time: 177.992 seconds
AUC ROC: 0.511225


Results scoring model
   AUC ROC   = 0.7
   AUC PR    = 0.671026
   CLL	      = -0.656109
   Precision = 0.636364 at threshold = 0.5
   Recall    = 0.56
   F1        = 0.595745


Total scoring time: 0.759 seconds
Parameter learned model CLL: -0.656109


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'athleteplaysforteam(H, I)'}, {'true,true': [2.256, 8, 14], 'true,false': [0.0, 0, 0], 'false,true,true': [0.433, 6, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.225, 11, 9], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [3.497, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.481, 8, 14], 'true,false': [0.0, 0, 0], 'false,true,true': [1.225, 6, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.225, 11, 9], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)', 'true': 'teamplaysagainstteam(E, D)'}, {'true,true': [3.454, 25, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'athleteplaysforteam(D, A)', 'false,true': 'athleteplaysforteam(D, E)'}, {'true': [2.662, 14, 17], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false': [0.487, 11, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)'}, {'true': [2.656, 14, 17], 'false': [0.489, 11, 8]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'athleteplaysforteam(C, D)', 'true,true': 'athleteplaysforteam(C, E)'}, {'true,true,true': [2.376, 13, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.484, 12, 13]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.481, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.398, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [3.398, 25, 25], 'false': [0.0, 0, 0]}]]
[{'': [0.23140495867768554, 0.23852040816326528], 'false': [0.18750000000000003, 0.2475], 'false,false': [0.2475, nan], 'true': [0.23140495867768554, nan], 'false,true': [0.18750000000000003, nan]}, {'': [0.24463844961344322, nan]}, {'': [0.23140495867768615, 0.2359831203524642], 'false': [0.18750000000000006, 0.2474999999999999], 'false,false': [0.2474999999999999, nan], 'true': [0.23140495867768615, nan], 'false,true': [0.18750000000000006, nan]}, {'': [0.23856081634738555, nan], 'true': [0.23856081634738555, nan]}, {'': [0.22853442228861567, 0.2485229784475457], 'false': [0.0, 0.23765432098765438], 'false,true': [0.0, nan]}, {'': [0.22751431528341493, 0.23952399080954526]}, {'': [0.22579864036499434, 0.23463715178439032], 'true': [0.22579864036499434, nan], 'true,true': [0.22579864036499434, nan]}, {'': [0.23114193699980579, nan]}, {'': [0.23097291530516395, nan]}, {'': [0.2308682617802849, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
4;false;athleteplaysforteam(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, A), athleteplaysforteam(C, A) )
%   | then return 0.5155129923615089;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | | then return 0.1821796590281756;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysinleague(D, E), teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(D, A) )
%   | | | then return 0.40890947007347833;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplaysforteam(F, A), athleteplaysinleague(F, G) )
%   | | | then return 0.08691001786984316;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(H, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.19302512717860706;  // std dev = 0.827, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.25751763269656786;  // std dev = 0.046, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.15068832113360625;  // std dev = 0.831, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2114353023406947;  // std dev = 0.040, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109176;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D), athleteplaysinleague(C, D) )
%   | then if ( athleteplaysforteam(C, A) )
%   | | then return 0.24647026890464535;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17651097734187515;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteplaysforteam(E, A), athleteplaysinleague(E, F) )
%   | | then return -0.01850491976402398;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17651097734187515;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.0924984380690289;  // std dev = 0.807, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.1554953189421411;  // std dev = 0.062, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   | then return 0.07570505923632688;  // std dev = 0.810, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.13617722673508906;  // std dev = 0.056, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.987288
   AUC PR    = 0.132105
   CLL	      = -0.096082
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 69.556 seconds
Total inference time: 6.763 seconds
AUC ROC: 0.987288


Results scoring model
   AUC ROC   = 0.9992
   AUC PR    = 0.999231
   CLL	      = -0.127361
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.795 seconds
Refined model CLL: -0.127361


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987288
   AUC PR    = 0.132105
   CLL	      = -0.096082
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 73.834 seconds
Total inference time: 6.763 seconds
AUC ROC: 0.987288
Total revision time: 73.834
Best scored revision CLL: -0.127361


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 04:19:06
{'AUC ROC': 0.987288, 'AUC PR': 0.132105, 'CLL': -0.096082, 'Precision': [0.129032, 0.5], 'Recall': 0.992481, 'F1': 0.228374, 'Learning time': 73.834, 'Inference time': 6.763, 'parameter_25': {'AUC ROC': 0.511225, 'AUC PR': 0.002535, 'CLL': -0.645854, 'Precision': [0.00282, 0.5], 'Recall': 0.496241, 'F1': 0.005609, 'Learning time': 2.724, 'Inference time': 177.992}}


Starting fold 2

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, I) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.29701438684128156;  // std dev = 1.336, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.6558459784192016;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return -0.16180800894656575;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return -0.16180800894656575;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(E, D) )
%   | then return 0.1781017839416223;  // std dev = 1.009, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.2766075712540828;  // std dev = 0.737, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1640300666814059;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.21672030012047266;  // std dev = 0.707, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.14275755948691335;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteplaysforteam(C, E) )
%   | | then return 0.21993374246134878;  // std dev = 0.518, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05719360633754942;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.06241230263004388;  // std dev = 0.244, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.05150313158249189;  // std dev = 0.766, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.042502093231312335;  // std dev = 0.763, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.483493
   AUC PR    = 0.002377
   CLL	      = -0.69927
   Precision = 0.002327 at threshold = 0.5
   Recall    = 0.413534
   F1        = 0.004628


Total learning time: 1.176 seconds
Total inference time: 180.578 seconds
AUC ROC: 0.483493


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.269952
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.657 seconds
Parameter learned model CLL: -0.269952


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'athleteplaysforteam(H, I)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 4, 0], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [1.336, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 4, 0], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)', 'true': 'teamplaysagainstteam(E, D)'}, {'true,true': [1.009, 5, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'athleteplaysforteam(D, A)'}, {'true': [0.737, 2, 5], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 3, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)'}, {'true': [0.707, 2, 5], 'false': [1.86e-09, 3, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'athleteplaysforteam(C, D)', 'true,true': 'athleteplaysforteam(C, E)'}, {'true,true,true': [0.518, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.202, 4, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.244, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.766, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [0.763, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'false': [0.0, 0.0], 'false,true': [0.0, nan], 'false,false': [0.0, nan]}, {'': [0.17847162811629408, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [0.0, 0.0], 'false,true': [0.0, nan], 'false,false': [0.0, nan]}, {'': [0.1018541174660168, nan], 'true': [0.1018541174660168, nan]}, {'': [0.0776646111861468, 0.0], 'false': [nan, 0.0]}, {'': [0.07132628409791829, 2.3129646346357427e-18]}, {'': [0.05362320885988806, 0.04064941158458567], 'true': [0.05362320885988806, nan], 'true,true': [0.05362320885988806, nan]}, {'': [0.05947887718038501, nan]}, {'': [0.058703375249824254, nan]}, {'': [0.05819328255058441, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(C, D).;true;true
0;false;athleteplaysforteam(F, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(C, D).;true;true
2;false;athleteplaysforteam(F, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B), athleteplaysforteam(E, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.04510976492720925;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A), athleteplayssport(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.039284748623196745;  // std dev = 0.333, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.22832830189997494;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0872808397394666;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.19086380264436967;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08058215840163166;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.16328321469612825;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07481697126156077;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.14230179767721002;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06980569156895304;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.990871
   AUC PR    = 0.118754
   CLL	      = -0.214845
   Precision = 0.115385 at threshold = 0.5
   Recall    = 0.496241
   F1        = 0.187234


Total learning time: 1.577 seconds
Total inference time: 5.697 seconds
AUC ROC: 0.990871


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101308
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.511 seconds
Refined model CLL: -0.101308


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990871
   AUC PR    = 0.118754
   CLL	      = -0.214845
   Precision = 0.115385 at threshold = 0.5
   Recall    = 0.496241
   F1        = 0.187234


Total learning time: 3.9210000000000003 seconds
Total inference time: 5.697 seconds
AUC ROC: 0.990871
Total revision time: 3.9210000000000003
Best scored revision CLL: -0.101308


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 04:22:17
{'AUC ROC': 0.990871, 'AUC PR': 0.118754, 'CLL': -0.214845, 'Precision': [0.115385, 0.5], 'Recall': 0.496241, 'F1': 0.187234, 'Learning time': 3.9210000000000003, 'Inference time': 5.697, 'parameter_5': {'AUC ROC': 0.483493, 'AUC PR': 0.002377, 'CLL': -0.69927, 'Precision': [0.002327, 0.5], 'Recall': 0.413534, 'F1': 0.004628, 'Learning time': 1.176, 'Inference time': 180.578}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.33946709860870944;  // std dev = 0.480, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2067520796336177;  // std dev = 0.486, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.45106699457035804;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.46459289429111994;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, A) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.25070652252308423;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | | then return 0.3025619154970176;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.030820414899838666;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.1939173737378052;  // std dev = 0.460, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.5990040355556788;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1352888009742855;  // std dev = 0.483, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.14299698337098823;  // std dev = 1.600, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, A) )
%   | | | then return 0.2906914129143865;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1092801919512599;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.11089301474734625;  // std dev = 1.596, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( teamplaysagainstteam(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.22415385812281785;  // std dev = 0.616, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.06854986923837536;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09971956524298649;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(C, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17736960283941958;  // std dev = 1.059, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0.0651491415558712;  // std dev = 1.329, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06950130857945624;  // std dev = 0.483, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.07810278586708767;  // std dev = 1.705, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(E, F) )
%   | | then if ( teamplaysagainstteam(A, G), teamplaysagainstteam(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05460961565887644;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.05962133466898079;  // std dev = 1.704, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04269836850600038;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.025879965955074528;  // std dev = 1.584, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | then return 0.1238072336927122;  // std dev = 0.608, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(A, H), teamplaysinleague(H, I) )
%   | | | then return 0.010143092280045729;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.04867857621740146;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.492656
   AUC PR    = 0.002518
   CLL	      = -0.56493
   Precision = 0.002864 at threshold = 0.5
   Recall    = 0.165414
   F1        = 0.005631


Total learning time: 1.318 seconds
Total inference time: 35.778 seconds
AUC ROC: 0.492656


Results scoring model
   AUC ROC   = 0.775
   AUC PR    = 0.823906
   CLL	      = -0.598502
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.625


Total scoring time: 0.563 seconds
Parameter learned model CLL: -0.598502


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'athleteledsportsteam(F, A)', 'false,true': 'athleteledsportsteam(F, G)', 'false,true,true': 'teamplaysagainstteam(G, H)', 'false,false': 'teamplaysagainstteam(I, A), athleteledsportsteam(J, I)'}, {'true,true': [1.225, 2, 6], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.0, 2, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.894, 4, 1], 'false,false,false': [0.816, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(D, E)', 'false': 'teamplaysagainstteam(A, F)'}, {'true,true': [0.48, 7, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.486, 3, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'true,true': 'teamplaysagainstteam(A, F)', 'false': 'athleteledsportsteam(G, A)', 'false,true': 'athleteledsportsteam(G, H)', 'false,false': 'teamplaysagainstteam(I, A), teamalsoknownas(I, J)'}, {'true,true,true': [0.866, 1, 3], 'true,true,false': [0.851, 1, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [1.0, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.707, 1, 1], 'false,false,false': [0.913, 5, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteledsportsteam(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysagainstteam(A, F)', 'false,false': 'teamplaysagainstteam(G, A)'}, {'true,true': [0.46, 7, 7], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.483, 3, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(A, D)', 'false,false': 'athleteledsportsteam(E, A)', 'false,false,false': 'teamplaysagainstteam(F, A)'}, {'true': [1.6, 6, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.631, 1, 2], 'false,false,false,false': [1.08, 3, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(D, A), teamplaysagainstteam(E, D)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'teamplaysagainstteam(A, G)'}, {'true': [1.596, 6, 6], 'false,true': [0.616, 1, 2], 'false,false,true': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'true': 'athleteledsportsteam(C, D)', 'true,true': 'teamplaysagainstteam(A, E), athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamplaysagainstteam(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.059, 2, 3], 'true,false': [0.0, 0, 0], 'false,true': [1.329, 5, 5], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.483, 3, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamalsoknownas(E, F)', 'false,false,true': 'teamplaysagainstteam(A, G), teamplaysagainstteam(E, H)'}, {'true': [1.705, 7, 8], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.081, 3, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(A, E), teamalsoknownas(E, F)', 'false,false,false': 'athleteledsportsteam(G, A)'}, {'true': [1.704, 7, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.081, 3, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, A)', 'false': 'athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(F, A), athleteledsportsteam(G, F)', 'false,false,false': 'teamalsoknownas(A, H), teamplaysinleague(H, I)'}, {'true,true': [1.584, 6, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.608, 1, 2], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.816, 2, 1]}]]
[{'': [0.1874999999999999, 0.22222222222222207], 'false': [0.25, 0.18750000000000003], 'false,true': [0.25, nan], 'false,true,true': [0.25, nan], 'false,false': [0.16000000000000003, 0.22222222222222224], 'true': [0.1874999999999999, nan]}, {'': [0.23079556027592454, 0.2357589921581682], 'false': [nan, 0.2357589921581682], 'true': [0.23079556027592454, nan]}, {'': [0.18425573754225164, 0.2170572182784317], 'false': [0.24999999999999994, 0.18749387761772743], 'false,true': [0.24999999999999994, nan], 'false,false': [0.25, 0.1388725589350935], 'true': [0.18425573754225164, nan], 'true,true': [0.18750000000000003, 0.1809200001028752]}, {'': [0.21141263727050125, 0.22434573246198464], 'false': [0.0, 0.23337624249056882], 'false,false': [nan, 0.23337624249056882], 'true': [0.21141263727050125, nan]}, {'': [0.2132629007140194, 0.20340831641289148], 'false': [nan, 0.20340831641289148], 'false,false': [nan, 0.20340831641289148], 'false,false,false': [0.13274206942974484, 0.23346680294352976]}, {'': [0.2122635995676068, 0.19787156415705923], 'false': [0.12666611773680447, 0.2335665053210981], 'false,false': [0.25, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}, {'': [0.22418178792834292, 0.1956250874679951], 'true': [0.22418178792834292, nan], 'true,true': [nan, 0.22418178792834292], 'false': [0.17665856779524547, 0.23354549924162682], 'false,false': [nan, 0.23354549924162682]}, {'': [0.193764825035827, 0.2336051620165262], 'false': [nan, 0.2336051620165262], 'false,false': [0.2336051620165262, nan], 'false,false,true': [nan, 0.2336051620165262]}, {'': [0.1935096030339485, 0.233652819799619], 'false': [nan, 0.233652819799619], 'false,false': [nan, 0.233652819799619], 'false,false,false': [nan, 0.233652819799619]}, {'': [0.20903786303336078, 0.1941599618919236], 'true': [0.20903786303336078, nan], 'false': [nan, 0.1941599618919236], 'false,false': [0.12315326115796695, 0.233689729378682], 'false,false,false': [0.25, 0.2222222222222222]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteledsportsteam(D, C).;true;true
3;false;teamplaysagainstteam(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.10604763597062224;  // std dev = 0.569, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3349635967297594;  // std dev = 0.090, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09839176124735441;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.26510131394847575;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09000827503768663;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.21688680129067336;  // std dev = 0.070, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0829082017277005;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1823967657305849;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07682257231453046;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1568119255683375;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07155169550191533;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13721578867434517;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06694444944992012;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.991029
   AUC PR    = 0.121471
   CLL	      = -0.104922
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 1.996 seconds
Total inference time: 3.91 seconds
AUC ROC: 0.991029


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097488
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.53 seconds
Refined model CLL: -0.097488


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991029
   AUC PR    = 0.121471
   CLL	      = -0.104922
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 4.407 seconds
Total inference time: 3.91 seconds
AUC ROC: 0.991029
Total revision time: 4.407
Best scored revision CLL: -0.097488


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 04:23:02
{'AUC ROC': 0.991029, 'AUC PR': 0.121471, 'CLL': -0.104922, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 4.407, 'Inference time': 3.91, 'parameter_10': {'AUC ROC': 0.492656, 'AUC PR': 0.002518, 'CLL': -0.56493, 'Precision': [0.002864, 0.5], 'Recall': 0.165414, 'F1': 0.005631, 'Learning time': 1.318, 'Inference time': 35.778}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.3271723261913954;  // std dev = 0.479, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2540763890061322;  // std dev = 0.473, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.4431056180056715;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5366556929402915;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, A) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.3873818806417864;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | | then return 0.20098412244998318;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.07970481854827224;  // std dev = 0.950, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.19108971693841353;  // std dev = 0.455, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.591839045094657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1649639532162253;  // std dev = 0.443, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.16759837200573985;  // std dev = 1.907, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, A) )
%   | | | then return 0.15217589478245652;  // std dev = 0.739, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1331703470982971;  // std dev = 1.320, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.1297677584791636;  // std dev = 1.901, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else if ( teamplaysagainstteam(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.11966509643536777;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.26324307261383106;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.01936936466093303;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(C, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2255752977609147;  // std dev = 1.185, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0.034896134315895486;  // std dev = 1.597, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07890672004012303;  // std dev = 0.428, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.07451243025425668;  // std dev = 2.011, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(E, F) )
%   | | then if ( teamplaysagainstteam(A, G), teamplaysagainstteam(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06268420330510022;  // std dev = 1.283, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.0571582067863536;  // std dev = 2.009, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04962909811882889;  // std dev = 1.282, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.04091965041390022;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | then return 0.05602543922040919;  // std dev = 0.714, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamalsoknownas(A, H), teamplaysinleague(H, I) )
%   | | | then return 0.15095718753461837;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.050209636935501026;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.486417
   AUC PR    = 0.0024
   CLL	      = -0.611543
   Precision = 0.002297 at threshold = 0.5
   Recall    = 0.406015
   F1        = 0.004569


Total learning time: 1.343 seconds
Total inference time: 37.095 seconds
AUC ROC: 0.486417


Results scoring model
   AUC ROC   = 0.822222
   AUC PR    = 0.806856
   CLL	      = -0.566077
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.774194


Total scoring time: 0.587 seconds
Parameter learned model CLL: -0.566077


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'athleteledsportsteam(F, A)', 'false,true': 'athleteledsportsteam(F, G)', 'false,true,true': 'teamplaysagainstteam(G, H)', 'false,false': 'teamplaysagainstteam(I, A), athleteledsportsteam(J, I)'}, {'true,true': [1.265, 2, 8], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.155, 2, 4], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.247, 7, 2], 'false,false,false': [0.894, 4, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(D, E)', 'false': 'teamplaysagainstteam(A, F)'}, {'true,true': [0.479, 10, 11], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.473, 5, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'true,true': 'teamplaysagainstteam(A, F)', 'false': 'athleteledsportsteam(G, A)', 'false,true': 'athleteledsportsteam(G, H)', 'false,false': 'teamplaysagainstteam(I, A), teamalsoknownas(I, J)'}, {'true,true,true': [0.866, 1, 3], 'true,true,false': [0.907, 1, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [1.155, 2, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.095, 3, 2], 'false,false,false': [0.95, 8, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteledsportsteam(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysagainstteam(A, F)', 'false,false': 'teamplaysagainstteam(G, A)'}, {'true,true': [0.455, 10, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.443, 5, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(A, D)', 'false,false': 'athleteledsportsteam(E, A)', 'false,false,false': 'teamplaysagainstteam(F, A)'}, {'true': [1.907, 8, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.739, 2, 2], 'false,false,false,false': [1.32, 5, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(D, A), teamplaysagainstteam(E, D)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'teamplaysagainstteam(A, G)'}, {'true': [1.901, 8, 9], 'false,true': [0.728, 2, 2], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 4, 1]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'true': 'athleteledsportsteam(C, D)', 'true,true': 'teamplaysagainstteam(A, E), athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamplaysagainstteam(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.185, 2, 5], 'true,false': [0.0, 0, 0], 'false,true': [1.597, 8, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.428, 5, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamalsoknownas(E, F)', 'false,false,true': 'teamplaysagainstteam(A, G), teamplaysagainstteam(E, H)'}, {'true': [2.011, 10, 11], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.283, 5, 4], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(A, E), teamalsoknownas(E, F)', 'false,false,false': 'athleteledsportsteam(G, A)'}, {'true': [2.009, 10, 11], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.282, 5, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, A)', 'false': 'athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(F, A), athleteledsportsteam(G, F)', 'false,false,false': 'teamalsoknownas(A, H), teamplaysinleague(H, I)'}, {'true,true': [1.877, 8, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.714, 2, 2], 'false,false,false,true': [0.866, 1, 3], 'false,false,false,false': [0.894, 4, 1]}]]
[{'': [0.15999999999999986, 0.2275000000000001], 'false': [0.22222222222222213, 0.1683673469387754], 'false,true': [0.22222222222222213, nan], 'false,true,true': [0.22222222222222213, nan], 'false,false': [0.17283950617283952, 0.16000000000000003], 'true': [0.15999999999999986, nan]}, {'': [0.2296585884677678, 0.22381183792461407], 'true': [0.2296585884677678, nan], 'false': [nan, 0.22381183792461407]}, {'': [0.15944336168075438, 0.2127135269496208], 'false': [0.22222222222222232, 0.168266753341808], 'false,true': [0.22222222222222232, nan], 'false,false': [0.23999999999999994, 0.10027699192898312], 'true': [0.15944336168075438, nan], 'true,true': [0.18749999999999997, 0.13723828952648146]}, {'': [0.20742008705357545, 0.19268190659441262], 'true': [0.20742008705357545, nan], 'false': [0.0, 0.1958687729205032], 'false,false': [nan, 0.1958687729205032]}, {'': [0.2138211966876816, 0.17608447736806118], 'false': [nan, 0.17608447736806118], 'false,false': [nan, 0.17608447736806118], 'false,false,false': [0.13656259089805542, 0.1935386184458423]}, {'': [0.21267230331735046, 0.17369686997475303], 'false': [0.13251787385274583, 0.19194315795120548], 'false,false': [0.18750000000000003, 0.15999999999999998], 'false,false,false': [nan, 0.15999999999999998]}, {'': [0.2004997412768225, 0.18316529042784277], 'true': [0.2004997412768225, nan], 'true,true': [nan, 0.2004997412768225], 'false': [0.1821934410728539, 0.18349805421372165], 'false,false': [nan, 0.18349805421372165]}, {'': [0.19264380096107686, 0.18289887099357732], 'false': [nan, 0.18289887099357732], 'false,false': [0.18289887099357732, nan], 'false,false,true': [nan, 0.18289887099357732]}, {'': [0.19225660766874264, 0.18249262999195617], 'false': [nan, 0.18249262999195617], 'false,false': [nan, 0.18249262999195617], 'false,false,false': [nan, 0.18249262999195617]}, {'': [0.20718133829841842, 0.16542367445232015], 'true': [0.20718133829841842, nan], 'false': [nan, 0.16542367445232015], 'false,false': [0.12744862960710274, 0.18221434352281277], 'false,false,false': [0.1875, 0.15999999999999998]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteledsportsteam(D, C).;true;true
3;false;teamplaysagainstteam(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.991187
   AUC PR    = 0.123952
   CLL	      = -0.102292
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 3.18 seconds
Total inference time: 3.977 seconds
AUC ROC: 0.991187


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.585 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991187
   AUC PR    = 0.123952
   CLL	      = -0.102292
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 5.695 seconds
Total inference time: 3.977 seconds
AUC ROC: 0.991187
Total revision time: 5.695
Best scored revision CLL: -0.094637


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 04:23:49
{'AUC ROC': 0.991187, 'AUC PR': 0.123952, 'CLL': -0.102292, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 5.695, 'Inference time': 3.977, 'parameter_15': {'AUC ROC': 0.486417, 'AUC PR': 0.0024, 'CLL': -0.611543, 'Precision': [0.002297, 0.5], 'Recall': 0.406015, 'F1': 0.004569, 'Learning time': 1.343, 'Inference time': 37.095}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.35814893509951234;  // std dev = 0.500, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.30635002846185144;  // std dev = 3.071, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.4975168370810349;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.25685266657161426;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, I) )
%   | | then return -0.055864551448777014;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamalsoknownas(E, D) )
%   | then return 0.19997629832980016;  // std dev = 2.967, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.33444731845019565;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamplaysagainstteam(D, E) )
%   | | then return 0.16344225311687383;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07820383745158387;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.2510474613570646;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return 0.07486719748148919;  // std dev = 0.469, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamplaysagainstteam(C, E) )
%   | | then return 0.09726250759559553;  // std dev = 2.616, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07821006283771566;  // std dev = 0.349, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.07081421389267814;  // std dev = 0.455, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.05477999876673949;  // std dev = 2.877, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.042303969646496305;  // std dev = 2.876, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.49243
   AUC PR    = 0.002448
   CLL	      = -0.597509
   Precision = 0.002613 at threshold = 0.5
   Recall    = 0.18797
   F1        = 0.005155


Total learning time: 2.477 seconds
Total inference time: 160.197 seconds
AUC ROC: 0.49243


Results scoring model
   AUC ROC   = 0.7225
   AUC PR    = 0.671908
   CLL	      = -0.603742
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.533333


Total scoring time: 0.727 seconds
Parameter learned model CLL: -0.603742


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [1.265, 2, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [0.5, 11, 11], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.935, 7, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.071, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamalsoknownas(H, I)'}, {'true,true': [0.4, 2, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [2.345, 11, 11], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.935, 7, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamalsoknownas(E, D)'}, {'true,true': [2.967, 20, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamplaysagainstteam(D, E)'}, {'true': [1.265, 2, 8], 'false,true,true': [2.345, 11, 11], 'false,true,false': [0.0, 0, 0], 'false,false': [0.331, 7, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)'}, {'true': [1.265, 2, 8], 'false': [0.469, 18, 12]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'true,true': 'teamplaysagainstteam(C, E)'}, {'true,true,true': [2.616, 13, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.349, 7, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [0.455, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [2.877, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.876, 20, 20], 'false': [0.0, 0, 0]}]]
[{'': [0.15999999999999986, 0.23999999999999952], 'false': [0.24999999999999958, 0.10937500000000004], 'false,true': [0.24999999999999958, nan], 'true': [0.15999999999999986, nan], 'false,false': [0.10937500000000004, nan]}, {'': [0.23584153337763172, nan]}, {'': [0.16, 0.23162378031840977], 'false': [0.25000000000000017, 0.109375], 'false,true': [0.25000000000000017, nan], 'true': [0.16, nan], 'false,false': [0.109375, nan]}, {'': [0.22010957079682622, nan], 'true': [0.22010957079682622, nan]}, {'': [0.15999999999999995, 0.22391904291479497], 'false': [0.25000000000000006, 0.10937499999999997], 'false,true': [0.25000000000000006, nan]}, {'': [0.1600000000000001, 0.2196989571027628]}, {'': [0.24449800021726206, 0.12151019480698089], 'true': [0.24449800021726206, nan], 'true,true': [0.24449800021726206, nan]}, {'': [0.20727732860863082, nan]}, {'': [0.2069972936487988, nan]}, {'': [0.20681576222433443, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysinleague(C, D).;true;true
0;true;teamalsoknownas(C, E).;true;true
0;false;teamplaysagainstteam(F, A).;true;true
0;false,true;teamplaysagainstteam(F, G).;true;true
0;false,false;teamplaysagainstteam(H, I).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysinleague(C, D).;true;true
2;true;teamalsoknownas(C, E).;true;true
2;false;teamplaysagainstteam(F, A).;true;true
2;false,true;teamplaysagainstteam(F, G).;true;true
2;false,false;teamalsoknownas(H, I).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
3;true;teamalsoknownas(E, D).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;false;teamplaysagainstteam(D, A).;true;true
4;false,true;teamplaysagainstteam(D, E).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
6;true;teamplaysagainstteam(C, D).;true;true
6;true,true;teamplaysagainstteam(C, E).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(C, D).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, D).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then if ( athleteplayssport(F, B), teamplaysinleague(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(H, A) )
%   | then if ( teamplaysagainstteam(H, I) )
%   | | then if ( athleteplayssport(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(K, L) )
%   | | then if ( teamplaysinleague(A, M) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.7308466201130136;  // std dev = 0.153, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.13371461257640344;  // std dev = 0.074, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then if ( athleteplayssport(F, B), teamplaysinleague(A, G) )
%   | | then return 0.5525562594230471;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.13609339043085814;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(H, A) )
%   | then if ( teamplaysagainstteam(H, I) )
%   | | then if ( athleteplayssport(J, B) )
%   | | | then return 0.5525562594230472;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.11149448989330599;  // std dev = 9.13e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(K, L) )
%   | | then if ( teamplaysinleague(A, M) )
%   | | | then return 0.13609339043085814;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11149448989330601;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamalsoknownas(E, D) )
%   | then if ( athleteplayssport(F, B) )
%   | | then if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.41543257205390655;  // std dev = 4.21e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.520195848832207;  // std dev = 0.287, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1141598906637892;  // std dev = 0.118, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then return 0.0837343358213315;  // std dev = 0.471, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.3474410395404403;  // std dev = 0.229, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.3193013462614797;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.09102196673067965;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, I) )
%   | | then return 0.08381839378484546;  // std dev = 0.577, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09102196673067965;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then return 0.069225180804731;  // std dev = 0.464, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.2759806690732226;  // std dev = 0.212, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysagainstteam(A, G) )
%   | | then return 0.2542095505265054;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.34758527983883897;  // std dev = 0.229, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09256379049402469;  // std dev = 0.106, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamplaysagainstteam(C, E) )
%   | | then if ( athleteplayssport(F, B) )
%   | | | then return 0.2163812110035382;  // std dev = 0.109, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.09164805021266606;  // std dev = 0.124, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplayssport(G, B) )
%   | then return 0.28049054049177896;  // std dev = 0.265, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09801013294555684;  // std dev = 0.088, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysinleague(A, G) )
%   | | then return 0.16107717001976202;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.19093831692602492;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2926334695565722;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08627999593880124;  // std dev = 0.142, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysinleague(A, G) )
%   | | then return 0.14050006141401403;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.16329809365457498;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.23797541496237526;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07979528981879315;  // std dev = 0.133, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysinleague(A, G) )
%   | | then return 0.12438876694355462;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0.19994376823564566;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14189832085687415;  // std dev = 0.133, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.07419317108477372;  // std dev = 0.125, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.991192
   AUC PR    = 0.130374
   CLL	      = -0.122467
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 443.397 seconds
Total inference time: 1161.279 seconds
AUC ROC: 0.991192


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104245
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 7.62 seconds
Refined model CLL: -0.104245


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991192
   AUC PR    = 0.130374
   CLL	      = -0.122467
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 454.221 seconds
Total inference time: 1161.279 seconds
AUC ROC: 0.991192
Total revision time: 454.221
Best scored revision CLL: -0.104245


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 04:53:26
{'AUC ROC': 0.991192, 'AUC PR': 0.130374, 'CLL': -0.122467, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 454.221, 'Inference time': 1161.279, 'parameter_20': {'AUC ROC': 0.49243, 'AUC PR': 0.002448, 'CLL': -0.597509, 'Precision': [0.002613, 0.5], 'Recall': 0.18797, 'F1': 0.005155, 'Learning time': 2.477, 'Inference time': 160.197}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.35814893509951234;  // std dev = 0.500, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.30703295489846266;  // std dev = 3.462, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.49737272898023177;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.2567269678237828;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, I) )
%   | | then return 0.007650923227373879;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamalsoknownas(E, D) )
%   | then return 0.20186177948187145;  // std dev = 3.378, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.3338440702128456;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamplaysagainstteam(D, E) )
%   | | then return 0.16289661132026195;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.02700414532086718;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.25059660273891393;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return 0.08861541765710686;  // std dev = 0.481, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamplaysagainstteam(C, E) )
%   | | then return 0.09655946269465808;  // std dev = 2.974, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08418309073196564;  // std dev = 0.389, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.07168300612104274;  // std dev = 0.468, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.055094775411530614;  // std dev = 3.309, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.04226136791083385;  // std dev = 3.308, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.49243
   AUC PR    = 0.002448
   CLL	      = -0.619207
   Precision = 0.002613 at threshold = 0.5
   Recall    = 0.18797
   F1        = 0.005155


Total learning time: 2.849 seconds
Total inference time: 158.187 seconds
AUC ROC: 0.49243


Results scoring model
   AUC ROC   = 0.6856
   AUC PR    = 0.65188
   CLL	      = -0.630419
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.32
   F1        = 0.457143


Total scoring time: 0.733 seconds
Parameter learned model CLL: -0.630419


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [1.265, 2, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [0.5, 15, 15], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.265, 8, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.462, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamalsoknownas(H, I)'}, {'true,true': [0.4, 2, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [2.739, 15, 15], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.265, 8, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamalsoknownas(E, D)'}, {'true,true': [3.378, 25, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamplaysagainstteam(D, E)'}, {'true': [1.265, 2, 8], 'false,true,true': [2.739, 15, 15], 'false,true,false': [0.0, 0, 0], 'false,false': [0.4, 8, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)'}, {'true': [1.265, 2, 8], 'false': [0.481, 23, 17]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'true,true': 'teamplaysagainstteam(C, E)'}, {'true,true,true': [2.974, 17, 19], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.389, 8, 6]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [0.468, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [3.309, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.308, 25, 25], 'false': [0.0, 0, 0]}]]
[{'': [0.15999999999999986, 0.2443749999999995], 'false': [0.24999999999999953, 0.16000000000000003], 'false,true': [0.24999999999999953, nan], 'false,false': [0.16000000000000003, nan], 'true': [0.15999999999999986, nan]}, {'': [0.239719144203467, nan]}, {'': [0.16000000000000006, 0.23913228924846103], 'false': [0.24999999999999992, 0.1599999999999999], 'false,true': [0.24999999999999992, nan], 'true': [0.16000000000000006, nan], 'false,false': [0.1599999999999999, nan]}, {'': [0.22825247253801284, nan], 'true': [0.22825247253801284, nan]}, {'': [0.16000000000000006, 0.23426168075741388], 'false': [0.2500000000000002, 0.1600000000000001], 'false,true': [0.2500000000000002, nan]}, {'': [0.16000000000000006, 0.2316007876775723]}, {'': [0.24569454798285464, 0.1516054611733459], 'true': [0.24569454798285464, nan], 'true,true': [0.24569454798285464, nan]}, {'': [0.21914574876627413, nan]}, {'': [0.2189986052140607, nan]}, {'': [0.21891161346343424, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysinleague(C, D).;true;true
0;true;teamalsoknownas(C, E).;true;true
0;false;teamplaysagainstteam(F, A).;true;true
0;false,true;teamplaysagainstteam(F, G).;true;true
0;false,false;teamplaysagainstteam(H, I).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysinleague(C, D).;true;true
2;true;teamalsoknownas(C, E).;true;true
2;false;teamplaysagainstteam(F, A).;true;true
2;false,true;teamplaysagainstteam(F, G).;true;true
2;false,false;teamalsoknownas(H, I).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
3;true;teamalsoknownas(E, D).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;false;teamplaysagainstteam(D, A).;true;true
4;false,true;teamplaysagainstteam(D, E).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
6;true;teamplaysagainstteam(C, D).;true;true
6;true,true;teamplaysagainstteam(C, E).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(C, D).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, D).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then if ( athleteplayssport(F, B), teamplaysinleague(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(H, A) )
%   | then if ( teamplaysagainstteam(H, I) )
%   | | then if ( athleteplayssport(J, B) )
%   | | | then return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(K, L) )
%   | | then if ( teamplaysinleague(A, M) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.7389077624832034;  // std dev = 0.148, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(G, A), athleteledsportsteam(H, G) )
%   | | then return -0.1387000451502688;  // std dev = 0.144, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.11646515365036103;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then if ( athleteplayssport(F, B), teamplaysinleague(A, G) )
%   | | then return 0.5505624060729409;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.13595587044357488;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(H, A) )
%   | then if ( teamplaysagainstteam(H, I) )
%   | | then if ( athleteplayssport(J, B) )
%   | | | then return 0.5243954826766535;  // std dev = 0.803, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.11100157138901208;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(K, L) )
%   | | then if ( teamplaysinleague(A, M) )
%   | | | then return 0.2294582015111669;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamalsoknownas(E, D) )
%   | then if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | | then if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.4308076580636028;  // std dev = 0.038, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.5249838218451339;  // std dev = 0.276, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamplaysagainstteam(I, A), teamalsoknownas(A, J) )
%   | | | then return -0.20567079597335347;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08668543230484597;  // std dev = 0.722, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then return 0.08369555791314268;  // std dev = 0.462, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.34423935509119774;  // std dev = 0.229, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.3114403750207576;  // std dev = 0.690, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.09225875698838995;  // std dev = 0.009, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, I) )
%   | | then return 0.1262727463794106;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.09395291571877472;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then return 0.0694047795431088;  // std dev = 0.455, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.27377859833881163;  // std dev = 0.212, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | then if ( teamplaysagainstteam(A, H) )
%   | | then return 0.2687055105551917;  // std dev = 2.98e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.39335104173490604;  // std dev = 0.153, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamalsoknownas(A, I) )
%   | | then return -0.17912349302251282;  // std dev = 0.239, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.04115896967709705;  // std dev = 0.598, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.13532730516423058;  // std dev = 0.205, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamplaysagainstteam(C, E) )
%   | | then if ( athleteplayssport(F, B) )
%   | | | then return 0.21112472800133375;  // std dev = 0.648, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.09185486881185731;  // std dev = 0.116, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplayssport(G, B) )
%   | then return 0.2787516526873996;  // std dev = 0.235, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1149886382163184;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysagainstteam(A, G) )
%   | | then return 0.0388566947158754;  // std dev = 0.486, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(H, A), athleteledsportsteam(E, I) )
%   | | | then return 0.19038492447696653;  // std dev = 0.082, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.26606124745786686;  // std dev = 0.319, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then if ( athleteplaysinleague(K, J), teamplaysagainstteam(L, A) )
%   | | | then return -0.08035830317211622;  // std dev = 0.087, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.19114170049959148;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06800466794372523;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then if ( teamalsoknownas(A, G), teamplaysinleague(A, H) )
%   | | then if ( teamplaysagainstteam(A, I) )
%   | | | then return 0.17351627631238678;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1262058081450203;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0.16599278378655935;  // std dev = 0.066, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2571936232186865;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysinleague(A, K), teamalsoknownas(A, L) )
%   | | then return -0.1904384009501766;  // std dev = 0.251, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysagainstteam(M, A) )
%   | | | then return -0.04256134907286253;  // std dev = 0.492, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.09355291946554142;  // std dev = 0.146, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysagainstteam(A, G) )
%   | | then return 0.02578671814218529;  // std dev = 0.431, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(H, A), athleteledsportsteam(E, I) )
%   | | | then return 0.14207248320938898;  // std dev = 0.063, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.19715661476501753;  // std dev = 0.291, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then if ( athleteplaysinleague(K, J), teamplaysagainstteam(L, A) )
%   | | | then return -0.07132052450543223;  // std dev = 0.081, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.14797162451683107;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.05845270778514818;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993417
   AUC PR    = 0.237736
   CLL	      = -0.119721
   Precision = 0.157509 at threshold = 0.5
   Recall    = 0.969925
   F1        = 0.271008


Total learning time: 610.898 seconds
Total inference time: 2361.64 seconds
AUC ROC: 0.993417


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121797
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 13.395 seconds
Refined model CLL: -0.121797


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.993417
   AUC PR    = 0.237736
   CLL	      = -0.119721
   Precision = 0.157509 at threshold = 0.5
   Recall    = 0.969925
   F1        = 0.271008


Total learning time: 627.875 seconds
Total inference time: 2361.64 seconds
AUC ROC: 0.993417
Total revision time: 627.875
Best scored revision CLL: -0.121797


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 05:45:54
{'AUC ROC': 0.993417, 'AUC PR': 0.237736, 'CLL': -0.119721, 'Precision': [0.157509, 0.5], 'Recall': 0.969925, 'F1': 0.271008, 'Learning time': 627.875, 'Inference time': 2361.64, 'parameter_25': {'AUC ROC': 0.49243, 'AUC PR': 0.002448, 'CLL': -0.619207, 'Precision': [0.002613, 0.5], 'Recall': 0.18797, 'F1': 0.005155, 'Learning time': 2.849, 'Inference time': 158.187}}


Starting fold 3

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos	 examples: 131
Target test neg examples: 53329

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteledsportsteam(H, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.3036451344777148;  // std dev = 0.466, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.08025096880247053;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.6543477962076796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(H, I) )
%   | | | then return 0.6543477962076796;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(E, D) )
%   | then return 0.19557763772178233;  // std dev = 1.347, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.4212132206844276;  // std dev = 0.409, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.25413802497249943;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteledsportsteam(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44726695765520863;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.33038959750374347;  // std dev = 0.408, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.20902689084553813;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.34096732572681543;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.5805569690976453;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteledsportsteam(C, F) )
%   | | | then return -0.17656028659600342;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, G) )
%   | then return 0.14577581408415335;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2689505075161661;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.193478237127236;  // std dev = 0.779, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F), teamplaysagainstteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(H, A) )
%   | | then return -0.1523369662438079;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2194448765136584;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.4430280508238603;  // std dev = 0.076, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.14490833065001751;  // std dev = 0.507, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(E, F) )
%   | then return -0.02773631805180275;  // std dev = 0.150, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.030477444828764307;  // std dev = 0.800, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.498934
   AUC PR    = 0.002539
   CLL	      = -0.87388
   Precision = 0.002411 at threshold = 0.5
   Recall    = 0.465649
   F1        = 0.004796


Total learning time: 1.032 seconds
Total inference time: 67.297 seconds
AUC ROC: 0.498934


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.270537
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.517 seconds
Parameter learned model CLL: -0.270537


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteledsportsteam(F, A)', 'false,false': 'teamalsoknownas(A, G)', 'false,false,false': 'athleteledsportsteam(H, I)'}, {'true,true': [1.195, 5, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [0.466, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'athleteledsportsteam(F, A)', 'false,false': 'teamalsoknownas(A, G)', 'false,false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.452, 5, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)', 'true': 'teamplaysagainstteam(E, D)'}, {'true,true': [1.347, 5, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'athleteledsportsteam(E, A)'}, {'true': [0.409, 1, 3], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, A)'}, {'true': [0.408, 1, 3], 'false,true': [0.0, 4, 0], 'false,false': [0.0, 0, 2]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'true': 'athleteledsportsteam(C, D)', 'true,true': 'teamalsoknownas(A, E)', 'true,true,false': 'athleteledsportsteam(C, F)', 'false': 'teamalsoknownas(A, G)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.725, 1, 2], 'false,false': [0.0, 0, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamalsoknownas(A, F), teamplaysagainstteam(G, F)', 'false,false': 'athleteledsportsteam(H, A)'}, {'true,true': [0.779, 1, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 4, 0], 'false,false,false': [0.0, 0, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamplaysagainstteam(D, C)', 'false': 'teamplaysagainstteam(E, F)'}, {'true,true': [0.076, 0, 2], 'true,false': [0.507, 1, 1], 'false,true': [0.15, 4, 2], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.8, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.20408163265306126, 1.4802973661668753e-16], 'true': [0.20408163265306126, nan], 'false': [nan, 1.4802973661668753e-16], 'false,false': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.21696278138396813, nan]}, {'': [0.20408163265306123, 0.0], 'true': [0.20408163265306123, nan], 'false': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.18152814564058875, nan], 'true': [0.18152814564058875, nan]}, {'': [0.1668929324033809, 0.1093264332566612], 'false': [0.0, 0.0], 'false,false': [nan, 0.0]}, {'': [0.16675693607365208, 0.06722080850289709], 'false': [0.0, 0.0]}, {'': [0.09171624621905312, 0.10874547851414589], 'false': [0.17517366214941502, 0.0], 'true': [0.09171624621905312, nan], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.1515728641961845, 0.030715941912030535], 'true': [0.1515728641961845, nan], 'false': [nan, 0.030715941912030535], 'false,false': [0.0, 0.0]}, {'': [0.15215568410016062, 0.02245206692036229], 'true': [0.002854075795597877, 0.12862269807442475], 'false': [0.02245206692036229, nan]}, {'': [0.06401819540126526, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
0;false;teamalsoknownas(A, G).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
2;false;teamalsoknownas(A, G).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;teamplaysagainstteam(D, A).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
5;false;teamplaysagainstteam(D, A).;true;true
6;;teamplayssport(A, B) :- athleteledsportsteam(C, A).;true;true
6;true;teamalsoknownas(A, E).;true;true
6;false;teamalsoknownas(A, G).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
7;false;athleteledsportsteam(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14402992290765404;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.35485910807562665;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11047670731638981;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.5492189521324828;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5492189521324828;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.46533531466012146;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.13135804674708823;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.23262051420557245;  // std dev = 0.546, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.08885341974538759;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3063925964287356;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.1819540769744934;  // std dev = 0.537, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.08191790995435186;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2453753449724806;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.3309436342225539;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.07596431000992641;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.08092275677801662;  // std dev = 0.489, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2028126996723778;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.11392941962427329;  // std dev = 0.520, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return -0.0708008959379839;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17198564657229554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(C, D), teamalsoknownas(E, C) )
%   | then return -0.1390835169257581;  // std dev = 0.252, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1545767191182101;  // std dev = 0.273, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.16378705903532376;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.18001549332001845;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1154511231843927;  // std dev = 0.236, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.767283
   AUC PR    = 0.065887
   CLL	      = -0.439093
   Precision = 0.004362 at threshold = 0.5
   Recall    = 0.526718
   F1        = 0.008652


Total learning time: 1.597 seconds
Total inference time: 6.775 seconds
AUC ROC: 0.767283


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.144174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.491 seconds
Refined model CLL: -0.144174


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.767283
   AUC PR    = 0.065887
   CLL	      = -0.439093
   Precision = 0.004362 at threshold = 0.5
   Recall    = 0.526718
   F1        = 0.008652


Total learning time: 3.637 seconds
Total inference time: 6.775 seconds
AUC ROC: 0.767283
Total revision time: 3.637
Best scored revision CLL: -0.144174


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 05:47:13
{'AUC ROC': 0.767283, 'AUC PR': 0.065887, 'CLL': -0.439093, 'Precision': [0.004362, 0.5], 'Recall': 0.526718, 'F1': 0.008652, 'Learning time': 3.637, 'Inference time': 6.775, 'parameter_5': {'AUC ROC': 0.498934, 'AUC PR': 0.002539, 'CLL': -0.87388, 'Precision': [0.002411, 0.5], 'Recall': 0.465649, 'F1': 0.004796, 'Learning time': 1.032, 'Inference time': 67.297}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(H, I) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.30574712269638515;  // std dev = 2.146, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.1621728158678808;  // std dev = 0.487, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.6538722212082949;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.11963423603485197;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.20030265103110562;  // std dev = 2.045, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.11847295477614149;  // std dev = 1.787, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, D) )
%   | | then return 0.4456972939075654;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0610034600203497;  // std dev = 0.471, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.09313854781756048;  // std dev = 1.786, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else return 0.19432093083311966;  // std dev = 0.364, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamplaysinleague(E, C) )
%   | | then return 0.14033253156855657;  // std dev = 1.761, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07851651596724218;  // std dev = 0.435, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.074840292907604;  // std dev = 0.444, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.05800940564056881;  // std dev = 1.988, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.044846344260600704;  // std dev = 1.989, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.503105
   AUC PR    = 0.002486
   CLL	      = -0.809934
   Precision = 0.002582 at threshold = 0.5
   Recall    = 0.389313
   F1        = 0.00513


Total learning time: 1.518 seconds
Total inference time: 165.341 seconds
AUC ROC: 0.503105


Results scoring model
   AUC ROC   = 0.735
   AUC PR    = 0.797226
   CLL	      = -0.585074
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 0.714 seconds
Parameter learned model CLL: -0.585074


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamplaysinleague(H, I)'}, {'true,true': [1.754, 8, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.816, 2, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.146, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.487, 8, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.816, 2, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamplaysagainstteam(C, E)'}, {'true,true': [2.045, 10, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, D)'}, {'true': [1.787, 8, 6], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false': [0.471, 2, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)'}, {'true': [1.786, 8, 6], 'false': [0.364, 2, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'teamplaysinleague(D, C)', 'true,true': 'teamplaysinleague(E, C)'}, {'true,true,true': [1.761, 7, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.435, 3, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.444, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [1.988, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [1.989, 10, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.2366863905325442, 0.20408163265306106], 'true': [0.2366863905325442, nan], 'false': [0.0, 0.22222222222222224], 'false,false': [0.22222222222222224, nan], 'false,true': [0.0, nan]}, {'': [0.23020815075016268, nan]}, {'': [0.23668639053254428, 0.16513447682230242], 'true': [0.23668639053254428, nan], 'false': [0.0, 0.22222222222222224], 'false,false': [0.22222222222222224, nan], 'false,true': [0.0, nan]}, {'': [0.20911450787167807, nan], 'true': [0.20911450787167807, nan]}, {'': [0.22801681732791199, 0.14810844756882227], 'false': [0.0, 0.22222222222222224], 'false,true': [0.0, nan]}, {'': [0.22783092561881693, 0.1323025250571561]}, {'': [0.19371126682335862, 0.18891059701205265], 'true': [0.19371126682335862, nan], 'true,true': [0.19371126682335862, nan]}, {'': [0.1975311019633032, nan]}, {'': [0.19766435094740462, nan]}, {'': [0.19782111255716325, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
0;false;teamplaysinleague(A, F).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
2;false;teamplaysinleague(A, F).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false;teamplaysinleague(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7308466201130137;  // std dev = 0.108, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.13371461257640344;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.5525562594230471;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11149448989330601;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, F) )
%   | then return 0.5525562594230471;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13609339043085814;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.41543257205390666;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4809096200403444;  // std dev = 0.227, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11415989066378918;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3193013462614797;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.09102196673067965;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, E) )
%   | then return 0.3052414155781209;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08704505649575989;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.2542095505265054;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.31926322316058847;  // std dev = 0.259, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09968998017327964;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.2090774513198672;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25876524137116275;  // std dev = 0.237, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0911828577235875;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.1765973951502413;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21535224096823485;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08397433476011397;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.15236513309839317;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18326473078509134;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07779367463913364;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.13371129579200558;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.15885102430150322;  // std dev = 0.174, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07243941172958115;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.98338
   AUC PR    = 0.121721
   CLL	      = -0.212573
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 4.531 seconds
Total inference time: 4.989 seconds
AUC ROC: 0.98338


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104259
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.525 seconds
Refined model CLL: -0.104259


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98338
   AUC PR    = 0.121721
   CLL	      = -0.212573
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 7.288 seconds
Total inference time: 4.989 seconds
AUC ROC: 0.98338
Total revision time: 7.288
Best scored revision CLL: -0.104259


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 05:50:11
{'AUC ROC': 0.98338, 'AUC PR': 0.121721, 'CLL': -0.212573, 'Precision': [0.119444, 0.5], 'Recall': 0.984733, 'F1': 0.213047, 'Learning time': 7.288, 'Inference time': 4.989, 'parameter_10': {'AUC ROC': 0.503105, 'AUC PR': 0.002486, 'CLL': -0.809934, 'Precision': [0.002582, 0.5], 'Recall': 0.389313, 'F1': 0.00513, 'Learning time': 1.518, 'Inference time': 165.341}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.21109011157010057;  // std dev = 0.478, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.3070373448554112;  // std dev = 2.680, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.5236243944417791;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.13570953264808866;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, I) )
%   | | then return 0.3147654913877414;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.20220091618330313;  // std dev = 2.613, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.3522380861355033;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamplaysagainstteam(D, E) )
%   | | then return 0.07284046336289925;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20473288455348948;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.26462502831100515;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return 0.0865351420524542;  // std dev = 0.485, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamplaysagainstteam(C, E) )
%   | | then return 0.05452278208023891;  // std dev = 2.157, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18665780257020584;  // std dev = 0.447, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.07214511976984195;  // std dev = 0.466, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.05563403001359355;  // std dev = 2.552, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.042810043627795974;  // std dev = 2.553, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.490169
   AUC PR    = 0.002407
   CLL	      = -0.70036
   Precision = 0.002356 at threshold = 0.5
   Recall    = 0.48855
   F1        = 0.004689


Total learning time: 2.159 seconds
Total inference time: 158.248 seconds
AUC ROC: 0.490169


Results scoring model
   AUC ROC   = 0.695556
   AUC PR    = 0.738901
   CLL	      = -0.627591
   Precision = 0.692308 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.642857


Total scoring time: 0.679 seconds
Parameter learned model CLL: -0.627591


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.913, 1, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [0.478, 11, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.309, 3, 4], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.68, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamalsoknownas(H, I)'}, {'true,true': [0.373, 1, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [1.97, 11, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.309, 3, 4], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamalsoknownas(D, E)'}, {'true,true': [2.613, 15, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamplaysagainstteam(D, E)'}, {'true': [0.913, 1, 5], 'false,true,true': [1.97, 11, 6], 'false,true,false': [0.0, 0, 0], 'false,false': [0.495, 3, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)'}, {'true': [0.913, 1, 5], 'false': [0.485, 14, 10]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'true,true': 'teamplaysagainstteam(C, E)'}, {'true,true,true': [2.157, 12, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.447, 3, 6]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [0.466, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [2.552, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.553, 15, 15], 'false': [0.0, 0, 0]}]]
[{'': [0.1388888888888887, 0.24305555555555558], 'false': [0.2283737024221454, 0.24489795918367332], 'false,false': [0.24489795918367332, nan], 'false,true': [0.2283737024221454, nan], 'true': [0.1388888888888887, nan]}, {'': [0.2393596700865577, nan]}, {'': [0.13888888888888895, 0.23981699836450213], 'false': [0.22837370242214522, 0.24489795918367335], 'false,false': [0.24489795918367335, nan], 'false,true': [0.22837370242214522, nan], 'true': [0.13888888888888895, nan]}, {'': [0.22752065667650065, nan], 'true': [0.22752065667650065, nan]}, {'': [0.13888888888888892, 0.23678716217435214], 'false': [0.22837370242214547, 0.24489795918367352], 'false,true': [0.22837370242214547, nan]}, {'': [0.13888888888888892, 0.23518182654995026]}, {'': [0.22153353157684927, 0.19986222731507264], 'true': [0.22153353157684927, nan], 'true,true': [0.22153353157684927, nan]}, {'': [0.2171652270213327, nan]}, {'': [0.2171608408284001, nan]}, {'': [0.21718312438572027, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
0;true;teamalsoknownas(E, C).;true;true
0;false;teamplaysagainstteam(F, A).;true;true
0;false,true;teamplaysagainstteam(F, G).;true;true
0;false,false;teamplaysagainstteam(H, I).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
2;true;teamalsoknownas(E, C).;true;true
2;false;teamplaysagainstteam(F, A).;true;true
2;false,true;teamplaysagainstteam(F, G).;true;true
2;false,false;teamalsoknownas(H, I).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
3;true;teamalsoknownas(D, E).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;teamplaysagainstteam(D, A).;true;true
4;false,true;teamplaysagainstteam(D, E).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
6;true;teamplaysagainstteam(C, D).;true;true
6;true,true;teamplaysagainstteam(C, E).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(C, D).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, D).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, J) )
%   | | then if ( athleteplayssport(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.7302664973147037;  // std dev = 0.059, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.13362481812501845;  // std dev = 0.119, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.457198833271879;  // std dev = 0.746, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.5526996833535146;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11150338555344753;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, J) )
%   | | then if ( athleteplayssport(K, B) )
%   | | | then return 0.5526996833535146;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11150338555344758;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.43711686673884226;  // std dev = 0.118, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return -0.10092586399445044;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.15400824332468313;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.26462544555488593;  // std dev = 0.598, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamplaysagainstteam(D, E) )
%   | | then if ( athleteplayssport(F, B) )
%   | | | then return 0.31470105934529147;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09212961866406567;  // std dev = 6.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.31470105934529147;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.08778480402976613;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.20555455454848692;  // std dev = 0.595, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2510663699563817;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08391435878590771;  // std dev = 0.006, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamplaysagainstteam(C, E) )
%   | | then if ( athleteplayssport(F, B) )
%   | | | then return 0.2284535853430527;  // std dev = 0.092, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.10396465190093152;  // std dev = 0.293, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplayssport(G, B) )
%   | then return 0.2284535853430527;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07497356888543881;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.22887084071597386;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1718669787177233;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return -0.07123220238785284;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.14260401714590487;  // std dev = 0.252, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.19099329351587901;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.14876504819895411;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return -0.0666611518306788;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.1280131897055338;  // std dev = 0.231, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.16320634567433667;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13089311695694206;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return -0.06263155981035332;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.11589848971924689;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983089
   AUC PR    = 0.122825
   CLL	      = -0.164588
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 129.851 seconds
Total inference time: 839.05 seconds
AUC ROC: 0.983089


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10503
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.243 seconds
Refined model CLL: -0.10503


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983089
   AUC PR    = 0.122825
   CLL	      = -0.164588
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 135.932 seconds
Total inference time: 839.05 seconds
AUC ROC: 0.983089
Total revision time: 135.932
Best scored revision CLL: -0.10503


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 06:09:05
{'AUC ROC': 0.983089, 'AUC PR': 0.122825, 'CLL': -0.164588, 'Precision': [0.119444, 0.5], 'Recall': 0.984733, 'F1': 0.213047, 'Learning time': 135.932, 'Inference time': 839.05, 'parameter_15': {'AUC ROC': 0.490169, 'AUC PR': 0.002407, 'CLL': -0.70036, 'Precision': [0.002356, 0.5], 'Recall': 0.48855, 'F1': 0.004689, 'Learning time': 2.159, 'Inference time': 158.248}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.14386322081379807;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.3058531243094748;  // std dev = 3.046, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.5674373388751142;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.07989028414522283;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, I) )
%   | | then return 0.3380770682081006;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.19943638506967087;  // std dev = 2.913, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.3839478816743653;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamplaysagainstteam(D, E) )
%   | | then return 0.030493151148934267;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22210311405288996;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.28930957551469666;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return 0.07110702679680006;  // std dev = 0.469, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamplaysagainstteam(C, E) )
%   | | then return 0.045369761590328614;  // std dev = 2.287, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19319036639737705;  // std dev = 0.436, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.07197377083742262;  // std dev = 0.442, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.05624238842996747;  // std dev = 2.796, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.04386380806140041;  // std dev = 2.796, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.490169
   AUC PR    = 0.002407
   CLL	      = -0.700884
   Precision = 0.002356 at threshold = 0.5
   Recall    = 0.48855
   F1        = 0.004689


Total learning time: 2.576 seconds
Total inference time: 158.94 seconds
AUC ROC: 0.490169


Results scoring model
   AUC ROC   = 0.76125
   AUC PR    = 0.797056
   CLL	      = -0.581485
   Precision = 0.736842 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.717949


Total scoring time: 0.727 seconds
Parameter learned model CLL: -0.581485


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [0.452, 15, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.549, 4, 6], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.046, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamalsoknownas(H, I)'}, {'true,true': [0.314, 1, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [2.07, 15, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.549, 4, 6], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamalsoknownas(D, E)'}, {'true,true': [2.913, 20, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamplaysagainstteam(D, E)'}, {'true': [0.943, 1, 8], 'false,true,true': [2.07, 15, 6], 'false,true,false': [0.0, 0, 0], 'false,false': [0.49, 4, 6]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)'}, {'true': [0.943, 1, 8], 'false': [0.469, 19, 12]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'true,true': 'teamplaysagainstteam(C, E)'}, {'true,true,true': [2.287, 16, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.436, 4, 9]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [0.442, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [2.796, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.796, 20, 20], 'false': [0.0, 0, 0]}]]
[{'': [0.09876543209876527, 0.23725286160249692], 'false': [0.20408163265306134, 0.23999999999999994], 'false,false': [0.23999999999999994, nan], 'false,true': [0.20408163265306134, nan], 'true': [0.09876543209876527, nan]}, {'': [0.23201916130962, nan]}, {'': [0.09876543209876533, 0.23023499490607335], 'false': [0.2040816326530613, 0.23999999999999994], 'false,false': [0.23999999999999994, nan], 'false,true': [0.2040816326530613, nan], 'true': [0.09876543209876533, nan]}, {'': [0.21215184927092837, nan], 'true': [0.21215184927092837, nan]}, {'': [0.09876543209876552, 0.2236911157261128], 'false': [0.20408163265306126, 0.24000000000000007], 'false,true': [0.20408163265306126, nan]}, {'': [0.09876543209876544, 0.2201998016371086]}, {'': [0.19379997956591524, 0.19050973692173112], 'true': [0.19379997956591524, nan], 'true,true': [0.19379997956591524, nan]}, {'': [0.19552338701412894, nan]}, {'': [0.1954664510193796, nan]}, {'': [0.19546501534731514, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
0;true;teamalsoknownas(E, C).;true;true
0;false;teamplaysagainstteam(F, A).;true;true
0;false,true;teamplaysagainstteam(F, G).;true;true
0;false,false;teamplaysagainstteam(H, I).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
2;true;teamalsoknownas(E, C).;true;true
2;false;teamplaysagainstteam(F, A).;true;true
2;false,true;teamplaysagainstteam(F, G).;true;true
2;false,false;teamalsoknownas(H, I).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
3;true;teamalsoknownas(D, E).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;teamplaysagainstteam(D, A).;true;true
4;false,true;teamplaysagainstteam(D, E).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
6;true;teamplaysagainstteam(C, D).;true;true
6;true,true;teamplaysagainstteam(C, E).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(C, D).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, D).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(G, A) )
%   | then if ( teamplaysagainstteam(G, H) )
%   | | then if ( athleteplayssport(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(J, K) )
%   | | then if ( athleteplayssport(L, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.7266131947148193;  // std dev = 0.076, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.13081880849013575;  // std dev = 0.105, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then return 0.36260840622130747;  // std dev = 0.662, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5899946791511003;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(H, A) )
%   | then if ( teamplaysagainstteam(H, I) )
%   | | then if ( athleteplayssport(J, B) )
%   | | | then return 0.5536026879867199;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1117816811903381;  // std dev = 1.29e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(K, L) )
%   | | then if ( athleteplayssport(M, B) )
%   | | | then return 0.5536026879867199;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11178168119033814;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.43027451657341087;  // std dev = 0.106, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.10994098124784972;  // std dev = 0.171, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then return 0.2057553305010395;  // std dev = 0.532, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.34239885545316373;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.31677351903533785;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09158843477091438;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.31677351903533785;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.09158843477091438;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.2845360068552362;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.14307097022972312;  // std dev = 0.508, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.25248305178051583;  // std dev = 2.58e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.08424798341120353;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamplaysagainstteam(C, E) )
%   | | then if ( athleteplayssport(F, B) )
%   | | | then return 0.21819181224029502;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.0935444151776828;  // std dev = 0.241, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplayssport(G, B) )
%   | then return 0.22558862876363917;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0779717735367707;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.18578098110254143;  // std dev = 0.096, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return -0.07157166279433515;  // std dev = 0.001, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.13113196274831024;  // std dev = 0.203, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.1593728701167286;  // std dev = 0.086, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return -0.06695919267007941;  // std dev = 0.000948, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.11808288769248707;  // std dev = 0.187, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.13921080274119946;  // std dev = 0.077, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return -0.06289523362125822;  // std dev = 0.000894, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.10723752247297115;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982768
   AUC PR    = 0.117374
   CLL	      = -0.171639
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 57.488 seconds
Total inference time: 627.731 seconds
AUC ROC: 0.982768


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.057 seconds
Refined model CLL: -0.101121


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982768
   AUC PR    = 0.117374
   CLL	      = -0.171639
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 61.848 seconds
Total inference time: 627.731 seconds
AUC ROC: 0.982768
Total revision time: 61.848
Best scored revision CLL: -0.101121


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 06:23:14
{'AUC ROC': 0.982768, 'AUC PR': 0.117374, 'CLL': -0.171639, 'Precision': [0.119444, 0.5], 'Recall': 0.984733, 'F1': 0.213047, 'Learning time': 61.848, 'Inference time': 627.731, 'parameter_20': {'AUC ROC': 0.490169, 'AUC PR': 0.002407, 'CLL': -0.700884, 'Precision': [0.002356, 0.5], 'Recall': 0.48855, 'F1': 0.004689, 'Learning time': 2.576, 'Inference time': 158.94}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(H, I) )
%   | | then return 0.4945125714631487;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.3068666390457226;  // std dev = 3.452, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.10834603537140958;  // std dev = 0.466, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then return 0.6536188049017921;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.3671509593488242;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.201814271163813;  // std dev = 3.357, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.06433267258560418;  // std dev = 2.608, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3280136383197982;  // std dev = 0.448, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.05091038034503591;  // std dev = 2.608, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   else return 0.2476108484886953;  // std dev = 0.448, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then return 0.12787183184293754;  // std dev = 1.876, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07433309782339635;  // std dev = 0.464, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.07159251516718927;  // std dev = 0.461, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.05502797825756581;  // std dev = 3.260, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.04221412438498693;  // std dev = 3.259, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.512024
   AUC PR    = 0.002568
   CLL	      = -0.699667
   Precision = 0.002621 at threshold = 0.5
   Recall    = 0.534351
   F1        = 0.005216


Total learning time: 1.982 seconds
Total inference time: 124.54 seconds
AUC ROC: 0.512024


Results scoring model
   AUC ROC   = 0.7368
   AUC PR    = 0.757988
   CLL	      = -0.61878
   Precision = 0.761905 at threshold = 0.5
   Recall    = 0.64
   F1        = 0.695652


Total scoring time: 0.71 seconds
Parameter learned model CLL: -0.61878


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'athleteledsportsteam(F, A)', 'false,true': 'athleteledsportsteam(F, G)', 'false,false': 'athleteledsportsteam(H, I)'}, {'true,true': [2.332, 17, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [1.83e-08, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.256, 8, 14], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [3.452, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'athleteledsportsteam(F, A)', 'false,true': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.466, 17, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.256, 8, 14], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)', 'true': 'teamplaysagainstteam(D, E)'}, {'true,true': [3.357, 25, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'athleteledsportsteam(D, A)'}, {'true': [2.608, 20, 12], 'false,true': [0.0, 0, 0], 'false,false': [0.448, 5, 13]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)'}, {'true': [2.608, 20, 12], 'false': [0.448, 5, 13]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'true': 'athleteledsportsteam(C, D)', 'true,true': 'athleteledsportsteam(C, E)'}, {'true,true,true': [1.876, 9, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.464, 16, 17]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.461, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.26, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [3.259, 25, 25], 'false': [0.0, 0, 0]}]]
[{'': [0.2176000000000001, 0.21759999999999965], 'true': [0.2176000000000001, nan], 'false': [1.4802973661668753e-16, 0.23140495867768554], 'false,false': [0.23140495867768554, nan], 'false,true': [1.4802973661668753e-16, nan]}, {'': [0.23830355237841347, nan]}, {'': [0.2176, 0.2123023037185397], 'true': [0.2176, nan], 'false': [0.0, 0.23140495867768573], 'false,false': [0.23140495867768573, nan], 'false,true': [0.0, nan]}, {'': [0.2254309810626164, nan], 'true': [0.2254309810626164, nan]}, {'': [0.21258532818878836, 0.20061728395061726], 'false': [nan, 0.20061728395061726]}, {'': [0.21250947824352673, 0.20061728395061731]}, {'': [0.20697107511073343, 0.21527530392622518], 'true': [0.20697107511073343, nan], 'true,true': [0.20697107511073343, nan]}, {'': [0.21262359634597014, nan]}, {'': [0.21252302065957232, nan]}, {'': [0.2124832825136879, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
0;false;athleteledsportsteam(F, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
2;false;athleteledsportsteam(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteledsportsteam(F, A) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 4.21e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteledsportsteam(F, A) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783633;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1.75e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367083;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.982934
   AUC PR    = 0.11777
   CLL	      = -0.114897
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 2.472 seconds
Total inference time: 3.883 seconds
AUC ROC: 0.982934


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.549 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982934
   AUC PR    = 0.11777
   CLL	      = -0.114897
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 5.713 seconds
Total inference time: 3.883 seconds
AUC ROC: 0.982934
Total revision time: 5.713
Best scored revision CLL: -0.094637


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 06:25:28
{'AUC ROC': 0.982934, 'AUC PR': 0.11777, 'CLL': -0.114897, 'Precision': [0.119444, 0.5], 'Recall': 0.984733, 'F1': 0.213047, 'Learning time': 5.713, 'Inference time': 3.883, 'parameter_25': {'AUC ROC': 0.512024, 'AUC PR': 0.002568, 'CLL': -0.699667, 'Precision': [0.002621, 0.5], 'Recall': 0.534351, 'F1': 0.005216, 'Learning time': 1.982, 'Inference time': 124.54}}


Starting fold 1

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.30486054504937365;  // std dev = 1.352, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.29701438684128156;  // std dev = 0.597, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return 0.39185071055929077;  // std dev = 0.471, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysinleague(G, H) )
%   | | then return -0.16251932240216474;  // std dev = 0.000871, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, I) )
%   | | then return 0.6558459784192016;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysinleague(D, E) )
%   | then if ( teamplaysinleague(F, G) )
%   | | then return 0.1916764243198294;  // std dev = 1.357, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14184987953174003;  // std dev = 0.435, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return 0.154911094816475;  // std dev = 1.269, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.11417346515122083;  // std dev = 0.301, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.120896716490656;  // std dev = 1.261, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return -0.20429617935985606;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(C, F) )
%   | | | then return 0.09358295763757951;  // std dev = 1.256, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.3872921131335755;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.06359606990474308;  // std dev = 0.335, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F), athleteplaysforteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.0720867377241654;  // std dev = 1.252, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, C) )
%   | then return -0.18237238283759974;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.28708225893315986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamplaysinleague(E, F) )
%   | then return 0.055371330539689484;  // std dev = 1.250, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.041504543670758745;  // std dev = 1.278, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.523991
   AUC PR    = 0.002593
   CLL	      = -0.503535
   Precision = 0.002713 at threshold = 0.5
   Recall    = 0.398496
   F1        = 0.00539


Total learning time: 1.518 seconds
Total inference time: 183.562 seconds
AUC ROC: 0.523991


Results scoring model
   AUC ROC   = 0.84
   AUC PR    = 0.826883
   CLL	      = -0.504629
   Precision = 0.714286 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.833333


Total scoring time: 0.615 seconds
Parameter learned model CLL: -0.504629


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteplaysforteam(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamalsoknownas(A, H)'}, {'true,true': [1.155, 2, 4], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamalsoknownas(C, E)', 'true,true': 'teamplaysinleague(A, F)'}, {'true,true,true': [1.352, 4, 4], 'true,true,false': [0.597, 1, 1], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'true': 'athleteplaysforteam(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysinleague(G, H)', 'false,false': 'teamalsoknownas(A, I)'}, {'true,true': [0.471, 2, 4], 'true,false': [0.0, 0, 0], 'false,true,true': [0.000871, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamplaysinleague(D, E)', 'true,true': 'teamplaysinleague(F, G)'}, {'true,true,true': [1.357, 5, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamplaysinleague(A, D)', 'false': 'athleteplaysforteam(E, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.435, 1, 1], 'false,true': [1.269, 4, 4], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'athleteplaysforteam(D, A)'}, {'true': [0.301, 1, 1], 'false,true': [1.261, 4, 4], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'true,true': 'teamalsoknownas(A, E)', 'true,true,false': 'teamplaysagainstteam(C, F)', 'false': 'teamplaysinleague(A, G)', 'false,false': 'teamalsoknownas(A, H)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false,true': [1.256, 4, 4], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamalsoknownas(A, F), athleteplaysforteam(G, F)', 'false,false': 'teamplaysagainstteam(H, A)'}, {'true,true': [0.335, 1, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.252, 4, 4], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'athleteplaysforteam(D, C)', 'false': 'teamplaysinleague(E, F)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 1], 'false,true': [1.25, 4, 4], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [1.278, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.22222222222222213, 0.1875], 'true': [0.22222222222222213, nan], 'false': [0.0, 0.0], 'false,true': [0.0, nan], 'false,false': [0.0, nan]}, {'': [0.21841418917874417, nan], 'true': [0.21841418917874417, nan], 'true,true': [0.2283875170046314, 0.178471628116294]}, {'': [0.2222222222222221, 0.12557302078539553], 'true': [0.2222222222222221, nan], 'false': [2.529834160630573e-07, 0.0], 'false,true': [2.529834160630573e-07, nan], 'false,false': [0.0, nan]}, {'': [0.18402411902191523, nan], 'true': [0.18402411902191523, nan], 'true,true': [0.18402411902191523, nan]}, {'': [0.09464941539302663, 0.2011852359965428], 'false': [0.2011852359965428, nan], 'true': [nan, 0.09464941539302663]}, {'': [0.09032109500049601, 0.19879284843147238], 'false': [0.19879284843147238, nan]}, {'': [0.18400817757485413, 0.0], 'true': [0.18400817757485413, nan], 'true,true': [0.0, 0.1971500908541179], 'true,true,false': [0.1971500908541179, nan], 'false': [nan, 0.0], 'false,false': [0.0, nan]}, {'': [0.056015672425495114, 0.19602887683827325], 'false': [nan, 0.19602887683827325], 'false,false': [0.19602887683827325, nan], 'true': [0.056015672425495114, nan]}, {'': [0.05509691517002806, 0.19526066457249805], 'false': [0.19526066457249805, nan], 'true': [0.0, 0.0]}, {'': [0.16334543912122662, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplaysinleague(C, D).;true;true
0;false;teamplaysagainstteam(F, A).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplaysinleague(C, D).;true;true
2;false;teamplaysagainstteam(F, A).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
6;true;teamalsoknownas(A, E).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
8;true;athleteplaysforteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7691978341024271;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1626152072869167;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then return 0.3519479995990034;  // std dev = 0.942, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return -0.10866348047004448;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5430564046070914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5124356611258705;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.16010666918155808;  // std dev = 0.169, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3875960807979161;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14050209758657106;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3011925569549943;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12492976782587462;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(A, D) )
%   | then return -0.06669087782841517;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.2597658831487246;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12371187180048537;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.17198450638766072;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20016886211336282;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1015411312471362;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, C) )
%   | then return -0.05695243389015331;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.12523307907124448;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.18136593005349844;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1018529864910876;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1472090332881305;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0852841299319639;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.987178
   AUC PR    = 0.122078
   CLL	      = -0.20443
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 1.538 seconds
Total inference time: 3.401 seconds
AUC ROC: 0.987178


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.488 seconds
Refined model CLL: -0.11116


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987178
   AUC PR    = 0.122078
   CLL	      = -0.20443
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 4.159000000000001 seconds
Total inference time: 3.401 seconds
AUC ROC: 0.987178
Total revision time: 4.159000000000001
Best scored revision CLL: -0.11116


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 06:28:40
{'AUC ROC': 0.987178, 'AUC PR': 0.122078, 'CLL': -0.20443, 'Precision': [0.129032, 0.5], 'Recall': 0.992481, 'F1': 0.228374, 'Learning time': 4.159000000000001, 'Inference time': 3.401, 'parameter_5': {'AUC ROC': 0.523991, 'AUC PR': 0.002593, 'CLL': -0.503535, 'Precision': [0.002713, 0.5], 'Recall': 0.398496, 'F1': 0.00539, 'Learning time': 1.518, 'Inference time': 183.562}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.6081489350995122;  // std dev = 0.433, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(H, I) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.30753034995310075;  // std dev = 2.202, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.1618642328919742;  // std dev = 0.487, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.45771677859968396;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.39131831965379277;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.2032297884854759;  // std dev = 2.164, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.14686723727829107;  // std dev = 1.989, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, D) )
%   | | then return 0.05561249224515555;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5922092693363117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.11443556905353468;  // std dev = 1.987, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else return 0.17637563478496707;  // std dev = 0.450, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamplaysinleague(E, C) )
%   | | then return 0.08466760698446742;  // std dev = 1.988, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15274748648610587;  // std dev = 0.445, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.07237143883292727;  // std dev = 0.477, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.055086979271684;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.041837306654952666;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.478479
   AUC PR    = 0.002335
   CLL	      = -0.747017
   Precision = 0.002301 at threshold = 0.5
   Recall    = 0.526316
   F1        = 0.004581


Total learning time: 1.544 seconds
Total inference time: 178.881 seconds
AUC ROC: 0.478479


Results scoring model
   AUC ROC   = 0.68
   AUC PR    = 0.752084
   CLL	      = -0.649558
   Precision = 0.714286 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.588235


Total scoring time: 0.652 seconds
Parameter learned model CLL: -0.649558


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(D, C)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamplaysinleague(H, I)'}, {'true,true': [1.754, 8, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [0.433, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.816, 1, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.202, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(D, C)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.487, 8, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [0.866, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.816, 1, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'teamplaysagainstteam(E, C)'}, {'true,true': [2.164, 10, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, D)'}, {'true': [1.989, 9, 8], 'false,true,true': [0.707, 1, 1], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)'}, {'true': [1.987, 9, 8], 'false': [0.45, 1, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'teamplaysinleague(D, C)', 'true,true': 'teamplaysinleague(E, C)'}, {'true,true,true': [1.988, 9, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.445, 1, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.477, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.133, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.133, 10, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.2366863905325442, 0.2040816326530613], 'true': [0.2366863905325442, nan], 'false': [0.18750000000000006, 0.22222222222222224], 'false,false': [0.22222222222222224, nan], 'false,true': [0.18750000000000006, nan]}, {'': [0.24254388786883582, nan]}, {'': [0.23668639053254442, 0.20346064756880275], 'true': [0.23668639053254442, nan], 'false': [0.18749999999999997, 0.22222222222222218], 'false,false': [0.22222222222222218, nan], 'false,true': [0.18749999999999997, nan]}, {'': [0.23414540285988403, nan], 'true': [0.23414540285988403, nan]}, {'': [0.232683601027986, 0.23065246692991467], 'false': [0.25, 0.0], 'false,true': [0.25, nan]}, {'': [0.23224523873579261, 0.20286508912105447]}, {'': [0.23251450360868414, 0.19782961834409948], 'true': [0.23251450360868414, nan], 'true,true': [0.23251450360868414, nan]}, {'': [0.22758257074960006, nan]}, {'': [0.22755276022945775, nan]}, {'': [0.22755572988232867, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
4;false;teamplaysinleague(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(A, E) )
%   | then return 0.11401028548544435;  // std dev = 0.292, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2592947569149455;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08693977868951862;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2126982420345806;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08028384981464967;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.1760695237786496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07302509696314564;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0.10728946889693679;  // std dev = 0.119, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15949474100672695;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07238362158072101;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13927292006996622;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06767686256341673;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.988454
   AUC PR    = 0.139099
   CLL	      = -0.111233
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 2.4 seconds
Total inference time: 3.552 seconds
AUC ROC: 0.988454


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098727
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.574 seconds
Refined model CLL: -0.098727


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988454
   AUC PR    = 0.139099
   CLL	      = -0.111233
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 5.17 seconds
Total inference time: 3.552 seconds
AUC ROC: 0.988454
Total revision time: 5.17
Best scored revision CLL: -0.098727


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 06:31:49
{'AUC ROC': 0.988454, 'AUC PR': 0.139099, 'CLL': -0.111233, 'Precision': [0.129032, 0.5], 'Recall': 0.992481, 'F1': 0.228374, 'Learning time': 5.17, 'Inference time': 3.552, 'parameter_10': {'AUC ROC': 0.478479, 'AUC PR': 0.002335, 'CLL': -0.747017, 'Precision': [0.002301, 0.5], 'Recall': 0.526316, 'F1': 0.004581, 'Learning time': 1.544, 'Inference time': 178.881}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, I) )
%   | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.30710139919734303;  // std dev = 2.688, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.3723187117962742;  // std dev = 0.479, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return -0.16318074310455394;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.2252634269499651;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.2014840855582179;  // std dev = 2.631, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.1513166534775686;  // std dev = 2.207, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17840766754481335;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.11721258462105717;  // std dev = 2.201, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return 0.13831449196578482;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteplaysforteam(C, E) )
%   | | then return 0.12128897575898842;  // std dev = 1.754, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06716245174764887;  // std dev = 0.498, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.07195905860804491;  // std dev = 0.476, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.05469900939615011;  // std dev = 2.605, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.04149516523896956;  // std dev = 2.604, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.535663
   AUC PR    = 0.002825
   CLL	      = -0.632414
   Precision = 0.002835 at threshold = 0.5
   Recall    = 0.473684
   F1        = 0.005636


Total learning time: 2.004 seconds
Total inference time: 179.899 seconds
AUC ROC: 0.535663


Results scoring model
   AUC ROC   = 0.691111
   AUC PR    = 0.63905
   CLL	      = -0.644289
   Precision = 0.642857 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.62069


Total scoring time: 0.74 seconds
Parameter learned model CLL: -0.644289


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'athleteplaysforteam(H, I)'}, {'true,true': [1.793, 5, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.797, 7, 6], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [2.688, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.479, 5, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.797, 7, 6], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)', 'true': 'teamplaysagainstteam(D, E)'}, {'true,true': [2.631, 15, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'athleteplaysforteam(D, A)'}, {'true': [2.207, 11, 11], 'false,true': [0.0, 0, 0], 'false,false': [0.5, 4, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)'}, {'true': [2.201, 11, 11], 'false': [0.5, 4, 4]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'athleteplaysforteam(C, D)', 'true,true': 'athleteplaysforteam(C, E)'}, {'true,true,true': [1.754, 7, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.498, 8, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.476, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.605, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [2.604, 15, 15], 'false': [0.0, 0, 0]}]]
[{'': [0.22959183673469377, 0.23437499999999994], 'false': [0.0, 0.24852071005917165], 'false,false': [0.24852071005917165, nan], 'true': [0.22959183673469377, nan], 'false,true': [0.0, nan]}, {'': [0.2408398142725017, nan]}, {'': [0.22959183673469394, 0.2249100537071568], 'true': [0.22959183673469394, nan], 'false': [-4.625929269271485e-18, 0.24852071005917178], 'false,false': [0.24852071005917178, nan], 'false,true': [-4.625929269271485e-18, nan]}, {'': [0.23070744684360786, nan], 'true': [0.23070744684360786, nan]}, {'': [0.22149415806058118, 0.25], 'false': [nan, 0.25]}, {'': [0.22016227380335532, 0.25000000000000006]}, {'': [0.2051337945833878, 0.248412174134962], 'true': [0.2051337945833878, nan], 'true,true': [0.2051337945833878, nan]}, {'': [0.2265937129458991, nan]}, {'': [0.22628427371394352, nan]}, {'': [0.22607477430135853, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
0;false;athleteplaysforteam(F, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
2;false;athleteplaysforteam(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(F, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(F, A) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783633;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109175;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.988029
   AUC PR    = 0.130599
   CLL	      = -0.094648
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 2.84 seconds
Total inference time: 3.836 seconds
AUC ROC: 0.988029


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.567 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988029
   AUC PR    = 0.130599
   CLL	      = -0.094648
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 6.151 seconds
Total inference time: 3.836 seconds
AUC ROC: 0.988029
Total revision time: 6.151
Best scored revision CLL: -0.094637


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 06:34:59
{'AUC ROC': 0.988029, 'AUC PR': 0.130599, 'CLL': -0.094648, 'Precision': [0.129032, 0.5], 'Recall': 0.992481, 'F1': 0.228374, 'Learning time': 6.151, 'Inference time': 3.836, 'parameter_15': {'AUC ROC': 0.535663, 'AUC PR': 0.002825, 'CLL': -0.632414, 'Precision': [0.002835, 0.5], 'Recall': 0.473684, 'F1': 0.005636, 'Learning time': 2.004, 'Inference time': 179.899}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return 0.3581489350995122;  // std dev = 0.500, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, I) )
%   | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then if ( athleteledsportsteam(E, A) )
%   | then return 0.28621340694265107;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( teamalsoknownas(F, D) )
%   | | then return 0.3210259145849647;  // std dev = 2.462, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then return 0.19901574739965883;  // std dev = 0.495, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.25414174128031175;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, J) )
%   | | then return 0.45491736560263296;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteledsportsteam(E, D) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then return 0.20426917280928708;  // std dev = 3.097, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then return 0.1617050837044845;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.10654581046494369;  // std dev = 1.814, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then if ( teamalsoknownas(E, F) )
%   | | | then return 0.15980250442819666;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2669987585856871;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.10544065467870603;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1723123712395023;  // std dev = 0.471, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then if ( teamalsoknownas(C, E) )
%   | | then return -0.007399484830484448;  // std dev = 1.077, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then return 0.1356737194723082;  // std dev = 0.500, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0.09181161881077923;  // std dev = 0.476, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.07232677848087013;  // std dev = 0.486, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.054932297375493;  // std dev = 3.076, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.04162637783140051;  // std dev = 3.076, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.474478
   AUC PR    = 0.00235
   CLL	      = -0.690808
   Precision = 0.002203 at threshold = 0.5
   Recall    = 0.293233
   F1        = 0.004372


Total learning time: 1.818 seconds
Total inference time: 127.111 seconds
AUC ROC: 0.474478


Results scoring model
   AUC ROC   = 0.64875
   AUC PR    = 0.634531
   CLL	      = -0.667809
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.3
   F1        = 0.428571


Total scoring time: 0.736 seconds
Parameter learned model CLL: -0.667809


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'teamalsoknownas(F, A)', 'false,true': 'teamalsoknownas(F, G)', 'false,false': 'teamalsoknownas(H, I)'}, {'true,true': [2.619, 16, 12], 'true,false': [0.0, 0, 0], 'false,true,true': [0.5, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.225, 2, 6], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)', 'true': 'athleteledsportsteam(E, A)', 'true,false': 'teamalsoknownas(F, D)'}, {'true,true': [1.932, 8, 7], 'true,false,true': [2.462, 12, 13], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'true': 'teamplaysagainstteam(C, E)', 'false': 'teamalsoknownas(F, A)', 'false,true': 'athleteledsportsteam(G, H)', 'false,false': 'teamplaysagainstteam(I, J)'}, {'true,true': [0.495, 16, 12], 'true,false': [0.0, 0, 0], 'false,true,true': [1.0, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.225, 2, 6], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)', 'true': 'athleteledsportsteam(E, D)', 'true,true': 'athleteledsportsteam(F, G)'}, {'true,true,true': [3.097, 20, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamalsoknownas(E, A)', 'false,false,true': 'teamalsoknownas(E, F)'}, {'true': [1.932, 8, 7], 'false,true': [1.814, 8, 6], 'false,false,true,true': [1.0, 2, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.452, 2, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'athleteledsportsteam(D, A)'}, {'true': [2.652, 16, 13], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 4, 7]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamalsoknownas(C, D)', 'true,true': 'teamalsoknownas(C, E)', 'false': 'athleteledsportsteam(F, A)'}, {'true,true,true': [1.077, 3, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.5, 7, 7], 'false,false': [0.476, 10, 11]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.486, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.076, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [3.076, 20, 20], 'false': [0.0, 0, 0]}]]
[{'': [0.24489795918367302, 0.2222222222222221], 'true': [0.24489795918367302, nan], 'false': [0.25, 0.1874999999999999], 'false,true': [0.25, nan], 'false,false': [0.1874999999999999, nan]}, {'': [0.24518092619898418, nan], 'true': [0.2488888888888887, 0.24250168207691203], 'true,false': [0.24250168207691203, nan]}, {'': [0.24515886020651442, 0.21729130029378182], 'true': [0.24515886020651442, nan], 'false': [0.25, 0.1875], 'false,true': [0.25, nan], 'false,false': [0.1875, nan]}, {'': [0.23977974772083455, nan], 'true': [0.23977974772083455, nan], 'true,true': [0.23977974772083455, nan]}, {'': [0.2488888888888888, 0.2336006645792383], 'false': [0.23509292751468128, 0.22343830369947798], 'false,false': [0.25, 0.2040816326530612], 'false,false,true': [0.25, nan]}, {'': [0.24260304009801104, 0.22216466386589648], 'false': [nan, 0.22216466386589648]}, {'': [0.23184918437166896, 0.23647313751614776], 'false': [0.2500000000000001, 0.22668567564380276], 'true': [0.23184918437166896, nan], 'true,true': [0.23184918437166896, nan]}, {'': [0.23654294615150592, nan]}, {'': [0.23650650680446028, nan]}, {'': [0.2364923062139778, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
0;true;teamplaysagainstteam(C, E).;true;true
0;false;teamalsoknownas(F, A).;true;true
0;false,true;teamalsoknownas(F, G).;true;true
0;false,false;teamalsoknownas(H, I).;true;true
1;;teamplayssport(A, B) :- athleteledsportsteam(C, D).;true;true
1;true;athleteledsportsteam(E, A).;true;true
1;true,false;teamalsoknownas(F, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
2;true;teamplaysagainstteam(C, E).;true;true
2;false;teamalsoknownas(F, A).;true;true
2;false,true;athleteledsportsteam(G, H).;true;true
2;false,false;teamplaysagainstteam(I, J).;true;true
3;;teamplayssport(A, B) :- teamalsoknownas(C, D).;true;true
3;true;athleteledsportsteam(E, D).;true;true
3;true,true;athleteledsportsteam(F, G).;true;true
4;;teamplayssport(A, B) :- athleteledsportsteam(C, A).;true;true
4;false;teamplaysagainstteam(D, A).;true;true
4;false,false;teamalsoknownas(E, A).;true;true
4;false,false,true;teamalsoknownas(E, F).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;false;athleteledsportsteam(D, A).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
6;true;teamalsoknownas(C, D).;true;true
6;true,true;teamalsoknownas(C, E).;true;true
6;false;athleteledsportsteam(F, A).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(G, A) )
%   | then if ( teamalsoknownas(G, H) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, J) )
%   | | then if ( athleteplayssport(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then if ( athleteledsportsteam(E, A) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamalsoknownas(G, D) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.7343513661400677;  // std dev = 0.115, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.06818910484317045;  // std dev = 0.943, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(C, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.5538344192843587;  // std dev = 0.006, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.11523458527211242;  // std dev = 0.012, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(G, A) )
%   | then if ( athleteledsportsteam(H, I) )
%   | | then return 0.24445780468142608;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(J, K) )
%   | | then if ( athleteplayssport(L, B) )
%   | | | then return 0.5516895948376626;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17580130272016511;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteledsportsteam(E, D) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.43673644757807467;  // std dev = 0.265, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.07861228006184252;  // std dev = 0.936, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3168700798549846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.09439265383548155;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.31373534267455666;  // std dev = 0.000422, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.09940197474258777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then if ( teamalsoknownas(G, H) )
%   | | | then return 0.14987744271631753;  // std dev = 0.713, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.3141202721437064;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16246955113946343;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.2515598747795241;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.0887388703247133;  // std dev = 0.008, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteledsportsteam(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.32349485711987347;  // std dev = 0.252, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.010069922749393162;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then if ( teamalsoknownas(C, E) )
%   | | then return 0.047773416515296666;  // std dev = 0.637, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then if ( athleteplayssport(G, B) )
%   | | then return 0.20806592570960958;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07985828330830745;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.20167380131896548;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return -0.08378263407644272;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.13978523183293176;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.17348136142600373;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.27444090609218974;  // std dev = 0.209, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then return -0.18733539987810374;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.07599046667649897;  // std dev = 0.007, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.11702875512852536;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.14999836721877238;  // std dev = 0.014, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.2257201942493774;  // std dev = 0.182, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then return -0.16130291141054462;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return -0.07082388663700427;  // std dev = 0.006, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.09653332994946913;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.1318617485685711;  // std dev = 0.013, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.19025369976052803;  // std dev = 0.159, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then return -0.14121626308625623;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return -0.08153666001950646;  // std dev = 0.181, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.03664016265954325;  // std dev = 0.794, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.984132
   AUC PR    = 0.120946
   CLL	      = -0.175237
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 160.268 seconds
Total inference time: 2038.473 seconds
AUC ROC: 0.984132


Results scoring model
   AUC ROC   = 0.99875
   AUC PR    = 0.99881
   CLL	      = -0.14777
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 3.065 seconds
Refined model CLL: -0.14777


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984132
   AUC PR    = 0.120946
   CLL	      = -0.175237
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 165.887 seconds
Total inference time: 2038.473 seconds
AUC ROC: 0.984132
Total revision time: 165.887
Best scored revision CLL: -0.14777


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 07:13:51
{'AUC ROC': 0.984132, 'AUC PR': 0.120946, 'CLL': -0.175237, 'Precision': [0.129032, 0.5], 'Recall': 0.992481, 'F1': 0.228374, 'Learning time': 165.887, 'Inference time': 2038.473, 'parameter_20': {'AUC ROC': 0.474478, 'AUC PR': 0.00235, 'CLL': -0.690808, 'Precision': [0.002203, 0.5], 'Recall': 0.293233, 'F1': 0.004372, 'Learning time': 1.818, 'Inference time': 127.111}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.2775037738091898;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, A) )
%   | | then return 0.4581489350995122;  // std dev = 0.490, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( teamplaysinleague(I, J) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then if ( teamalsoknownas(E, D) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then return 0.22152075465085427;  // std dev = 2.189, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.3644282836993966;  // std dev = 2.644, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.1956697004943467;  // std dev = 0.494, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.543724714892384;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A) )
%   | | then return 0.3265965405939256;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( teamplaysagainstteam(J, K) )
%   | | | then return 0.11358126548244814;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, C) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then return 0.2024146253939149;  // std dev = 3.384, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.28845672859970456;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.2567300291930959;  // std dev = 1.125, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.13390749943610156;  // std dev = 2.713, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( teamplaysinleague(G, F) )
%   | | | then return 0.34621545762974165;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11668834952436499;  // std dev = 0.490, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.08728543152737765;  // std dev = 0.438, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.10512731808043357;  // std dev = 2.713, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | else if ( athleteledsportsteam(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19068166566479952;  // std dev = 0.422, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamalsoknownas(E, A) )
%   | | then return -0.031231862825026418;  // std dev = 0.533, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(F, C) )
%   | | | then return 0.14852002294225003;  // std dev = 2.671, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, A) )
%   | then return -0.30322947362657227;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return 0.1260753609396196;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.026511794797105286;  // std dev = 1.420, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.04979229210149158;  // std dev = 1.230, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A), teamplaysagainstteam(F, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.11428193451333066;  // std dev = 2.671, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | else return -0.04270826946591737;  // std dev = 1.436, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return -0.007597573833684386;  // std dev = 0.600, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.06567207292001043;  // std dev = 1.067, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( athleteledsportsteam(E, F) )
%   | then return 0.0587883640040015;  // std dev = 3.051, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.04248342991571361;  // std dev = 3.289, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.49482
   AUC PR    = 0.00245
   CLL	      = -0.716281
   Precision = 0.002203 at threshold = 0.5
   Recall    = 0.270677
   F1        = 0.00437


Total learning time: 2.303 seconds
Total inference time: 105.626 seconds
AUC ROC: 0.49482


Results scoring model
   AUC ROC   = 0.7096
   AUC PR    = 0.711193
   CLL	      = -0.624322
   Precision = 0.769231 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.526316


Total scoring time: 0.749 seconds
Parameter learned model CLL: -0.624322


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamalsoknownas(H, A)', 'false,false,false': 'teamplaysinleague(I, J)'}, {'true,true': [2.747, 18, 13], 'true,false': [0.0, 0, 0], 'false,true,true': [0.331, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.49, 2, 3], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)', 'true': 'teamalsoknownas(E, D)', 'true,true': 'athleteledsportsteam(F, A)'}, {'true,true,true': [2.189, 12, 8], 'true,true,false': [2.644, 13, 17], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'athleteledsportsteam(G, H)', 'false,false': 'teamalsoknownas(I, A)', 'false,false,false': 'teamplaysagainstteam(J, K)'}, {'true,true': [0.494, 18, 13], 'true,false': [0.0, 0, 0], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.095, 2, 3], 'false,false,false,true': [1.148, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'athleteledsportsteam(E, C)', 'true,true': 'athleteledsportsteam(F, G)'}, {'true,true,true': [3.384, 25, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'athleteledsportsteam(D, A)', 'false': 'teamplaysagainstteam(A, E)', 'false,false': 'teamplaysinleague(A, F)', 'false,false,true': 'teamplaysinleague(G, F)'}, {'true,true': [0.0, 2, 0], 'true,false': [1.125, 2, 4], 'false,true': [2.713, 17, 13], 'false,false,true,true': [0.926, 1, 6], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.49, 3, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamplaysagainstteam(A, D)', 'false,false': 'athleteledsportsteam(E, A)'}, {'true': [0.438, 4, 4], 'false,true': [2.713, 17, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.422, 4, 8]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'teamplaysinleague(D, C)', 'true,true': 'teamalsoknownas(E, A)', 'true,true,false': 'teamplaysinleague(F, C)', 'false': 'athleteledsportsteam(G, A)', 'false,false': 'teamalsoknownas(H, A)'}, {'true,true,true': [0.533, 2, 1], 'true,true,false,true': [2.671, 14, 18], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true': [1.095, 2, 3], 'false,false,false': [1.42, 6, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamalsoknownas(F, A), teamplaysagainstteam(F, G)', 'false,false': 'teamplaysinleague(A, H)'}, {'true,true': [1.23, 4, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.671, 14, 18], 'false,false,false': [1.436, 7, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'false': 'athleteledsportsteam(E, F)'}, {'true,true': [0.6, 2, 1], 'true,false': [1.067, 2, 3], 'false,true': [3.051, 21, 21], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [3.289, 25, 25], 'false': [0.0, 0, 0]}]]
[{'': [0.24349635796045738, 0.2326869806094179], 'true': [0.24349635796045738, nan], 'false': [0.10937499999999978, 0.24793388429752045], 'false,false': [0.23999999999999994, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,true': [0.10937499999999978, nan]}, {'': [0.24057429611985948, nan], 'true': [0.24057429611985948, nan], 'true,true': [0.2395151970423372, 0.23311133742803758]}, {'': [0.24369691610593955, 0.2121705370488481], 'true': [0.24369691610593955, nan], 'false': [0.10937500000000006, 0.2401515148493372], 'false,false': [0.24000000000000005, 0.2196525465734128], 'false,false,false': [0.2196525465734128, nan], 'false,true': [0.10937500000000006, nan]}, {'': [0.22900182367140728, nan], 'true': [0.22900182367140728, nan], 'true,true': [0.22900182367140728, nan]}, {'': [0.2138278232289287, 0.23061535309723621], 'false': [0.24527891524916284, 0.18423339273018677], 'true': [0.0, 0.21079661408708186], 'false,false': [0.12244897959183679, 0.24], 'false,false,true': [0.12244897959183679, nan]}, {'': [0.1922296396865558, 0.22763855497695862], 'false': [0.24527195130679066, 0.17832681673053064], 'false,false': [nan, 0.17832681673053064]}, {'': [0.21446645922366567, 0.22624970657639815], 'false': [0.0, 0.2350969257671293], 'false,false': [0.24, 0.22405769560353395], 'true': [0.21446645922366567, nan], 'true,true': [0.09482805751942115, 0.2229130673459907], 'true,true,false': [0.2229130673459907, nan]}, {'': [0.18909454867044223, 0.22340745415281238], 'false': [nan, 0.22340745415281238], 'false,false': [0.22294634752301284, 0.20610514840021227], 'true': [0.18909454867044223, nan]}, {'': [0.18867285227931535, 0.2216595962572443], 'false': [0.2216595962572443, nan], 'true': [0.1199213121583113, 0.22791061092613862]}, {'': [0.2163510453524016, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;true;athleteledsportsteam(D, A).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
6;false;athleteledsportsteam(G, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 4.21e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.02176788419240575;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.01904987294481035;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.01663677639228948;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.16308663058625855;  // std dev = 0.546, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.09783619743847638;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.26035453195357156;  // std dev = 0.057, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.0016185743061446812;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.21033383219322688;  // std dev = 0.027, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.08416548375872805;  // std dev = 0.083, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteledsportsteam(E, A) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.2252457452051721;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return -0.10262849298433117;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05041005600100856;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17979272178394645;  // std dev = 0.041, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.07319547608947655;  // std dev = 0.010, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.0018947565431187696;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15479683247097584;  // std dev = 0.037, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamalsoknownas(D, A) )
%   | then return -0.11927615658828974;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(E, A) )
%   | | then return -0.06841569230456931;  // std dev = 0.009, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.0827881095466762;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1356150976161145;  // std dev = 0.033, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.06385377067821381;  // std dev = 0.010, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.0041252446419903594;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.984223
   AUC PR    = 0.12223
   CLL	      = -0.143422
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 3.163 seconds
Total inference time: 3.862 seconds
AUC ROC: 0.984223


Results scoring model
   AUC ROC   = 0.9984
   AUC PR    = 0.998519
   CLL	      = -0.138748
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.577 seconds
Refined model CLL: -0.138748


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984223
   AUC PR    = 0.12223
   CLL	      = -0.143422
   Precision = 0.129032 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.228374


Total learning time: 6.792 seconds
Total inference time: 3.862 seconds
AUC ROC: 0.984223
Total revision time: 6.792
Best scored revision CLL: -0.138748


Dataset: 10_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 07:15:48
{'AUC ROC': 0.984223, 'AUC PR': 0.12223, 'CLL': -0.143422, 'Precision': [0.129032, 0.5], 'Recall': 0.992481, 'F1': 0.228374, 'Learning time': 6.792, 'Inference time': 3.862, 'parameter_25': {'AUC ROC': 0.49482, 'AUC PR': 0.00245, 'CLL': -0.716281, 'Precision': [0.002203, 0.5], 'Recall': 0.270677, 'F1': 0.00437, 'Learning time': 2.303, 'Inference time': 105.626}}


Starting fold 2

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.16136676814146947;  // std dev = 0.436, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.508243899526118;  // std dev = 0.366, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return -0.1442433435536909;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1925372682092009;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, A) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.14289291052292638;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | | then return 0.6857844815907104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6067346964522805;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.10477314652112064;  // std dev = 0.398, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3015296215145948;  // std dev = 0.269, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.08731707286467454;  // std dev = 0.969, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23512303062692444;  // std dev = 0.514, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.07212827988062602;  // std dev = 0.964, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamplaysagainstteam(D, A), teamplaysagainstteam(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.25171399134116723;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32964741348339277;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(C, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07219097124629444;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0.0461114000399033;  // std dev = 0.504, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1441173810633854;  // std dev = 0.203, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.048068984748779325;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(E, F) )
%   | | then if ( teamplaysagainstteam(A, G), teamplaysagainstteam(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1178131538419224;  // std dev = 0.404, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.03899423761497919;  // std dev = 0.955, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09704160185655596;  // std dev = 0.405, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.031514335240034046;  // std dev = 0.954, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, H), teamplaysinleague(H, I) )
%   | | | then return -0.27244880634567653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.19807017237577884;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.509692
   AUC PR    = 0.002597
   CLL	      = -0.854705
   Precision = 0.002562 at threshold = 0.5
   Recall    = 0.56391
   F1        = 0.005101


Total learning time: 1.027 seconds
Total inference time: 37.934 seconds
AUC ROC: 0.509692


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.971429
   CLL	      = -0.366619
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.51 seconds
Parameter learned model CLL: -0.366619


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'athleteledsportsteam(F, A)', 'false,true': 'athleteledsportsteam(F, G)', 'false,true,true': 'teamplaysagainstteam(G, H)', 'false,false': 'teamplaysagainstteam(I, A), athleteledsportsteam(J, I)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.816, 2, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [2.11e-08, 0, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(D, E)', 'false': 'teamplaysagainstteam(A, F)'}, {'true,true': [0.436, 4, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.366, 1, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'true,true': 'teamplaysagainstteam(A, F)', 'false': 'athleteledsportsteam(G, A)', 'false,true': 'athleteledsportsteam(G, H)', 'false,false': 'teamplaysagainstteam(I, A), teamalsoknownas(I, J)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.816, 2, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [1.49e-08, 0, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteledsportsteam(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysagainstteam(A, F)', 'false,false': 'teamplaysagainstteam(G, A)'}, {'true,true': [0.398, 4, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.269, 1, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(A, D)', 'false,false': 'athleteledsportsteam(E, A)', 'false,false,false': 'teamplaysagainstteam(F, A)'}, {'true': [0.969, 4, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.514, 1, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(D, A), teamplaysagainstteam(E, D)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'teamplaysagainstteam(A, G)'}, {'true': [0.964, 4, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 3]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'true': 'athleteledsportsteam(C, D)', 'true,true': 'teamplaysagainstteam(A, E), athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamplaysagainstteam(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.816, 2, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.504, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.203, 1, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamalsoknownas(E, F)', 'false,false,true': 'teamplaysagainstteam(A, G), teamplaysagainstteam(E, H)'}, {'true': [0.958, 4, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.404, 1, 3], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(A, E), teamalsoknownas(E, F)', 'false,false,false': 'athleteledsportsteam(G, A)'}, {'true': [0.955, 4, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.405, 1, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, A)', 'false': 'athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(F, A), athleteledsportsteam(G, F)', 'false,false,false': 'teamalsoknownas(A, H), teamplaysinleague(H, I)'}, {'true,true': [0.954, 4, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 3]}]]
[{'': [0.0, 0.20408163265306106], 'false': [0.22222222222222224, 0.0], 'false,true': [0.22222222222222224, nan], 'false,true,true': [0.22222222222222224, nan], 'true': [0.0, nan], 'false,false': [0.0, 1.4802973661668753e-16]}, {'': [0.19045858488599984, 0.13385372108722043], 'true': [0.19045858488599984, nan], 'false': [nan, 0.13385372108722043]}, {'': [0.0005182895908071259, 0.15318265035580608], 'false': [0.22222222222222224, 0.0011716628494560788], 'false,true': [0.22222222222222224, nan], 'false,false': [0.0, 7.401486830834377e-17], 'true': [0.0005182895908071259, nan], 'true,true': [0.0, 0.0]}, {'': [0.15842737709411775, 0.07235080420908664], 'true': [0.15842737709411775, nan], 'false': [nan, 0.07235080420908664], 'false,false': [nan, 0.07235080420908664]}, {'': [0.15639416159018596, 0.06606013088568524], 'false': [nan, 0.06606013088568524], 'false,false': [nan, 0.06606013088568524], 'false,false,false': [nan, 0.06606013088568524]}, {'': [0.15483079651371628, 0.06337145306617237], 'false': [nan, 0.06337145306617237], 'false,false': [0.0, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.22222222222222224, 0.06218147840719641], 'true': [0.22222222222222224, nan], 'true,true': [nan, 0.22222222222222224], 'false': [0.0847114476619525, 0.04116749904482572], 'false,false': [nan, 0.04116749904482572]}, {'': [0.15286420667255976, 0.04078825042592556], 'false': [nan, 0.04078825042592556], 'false,false': [0.04078825042592556, nan], 'false,false,true': [nan, 0.04078825042592556]}, {'': [0.15216336278031223, 0.04099327573789079], 'false': [nan, 0.04099327573789079], 'false,false': [nan, 0.04099327573789079], 'false,false,false': [nan, 0.04099327573789079]}, {'': [0.1516275817390269, 0.04151027050070275], 'true': [0.1516275817390269, nan], 'false': [nan, 0.04151027050070275], 'false,false': [nan, 0.04151027050070275], 'false,false,false': [0.0, -4.625929269271485e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
0;false;athleteledsportsteam(F, A).;true;true
0;false,false;teamplaysagainstteam(I, A), athleteledsportsteam(J, I).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, F).;true;true
2;false;athleteledsportsteam(G, A).;true;true
2;false,false;teamplaysagainstteam(I, A), teamalsoknownas(I, J).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
5;false;teamalsoknownas(A, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
9;false;teamalsoknownas(A, H), teamplaysinleague(H, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(E, A) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7422198280150732;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14198458662441546;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return -0.11067786598881653;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11067786598881653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteledsportsteam(F, A) )
%   | then return 0.1360023602720401;  // std dev = 0.696, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(G, A), teamalsoknownas(G, H) )
%   | | then return 0.5497427206538619;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5497427206538619;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.46565833429023984;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12653247231034742;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3584850531161564;  // std dev = 0.232, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11330966302917747;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.04678898873946771;  // std dev = 0.565, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamalsoknownas(A, D) )
%   | then return -0.08059014335827623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.23608675760997588;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2562383929829249;  // std dev = 0.235, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10498734575758432;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.21290873040617328;  // std dev = 0.213, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0956043196391202;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.18104040605575503;  // std dev = 0.192, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08771448618959381;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.016261139632675142;  // std dev = 0.382, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then return -0.05714869953375235;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.11299278410704827;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.991376
   AUC PR    = 0.127527
   CLL	      = -0.264892
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 1.085 seconds
Total inference time: 3.306 seconds
AUC ROC: 0.991376


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125967
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.485 seconds
Refined model CLL: -0.125967


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991376
   AUC PR    = 0.127527
   CLL	      = -0.264892
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 3.1069999999999998 seconds
Total inference time: 3.306 seconds
AUC ROC: 0.991376
Total revision time: 3.1069999999999998
Best scored revision CLL: -0.125967


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 07:16:33
{'AUC ROC': 0.991376, 'AUC PR': 0.127527, 'CLL': -0.264892, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 3.1069999999999998, 'Inference time': 3.306, 'parameter_5': {'AUC ROC': 0.509692, 'AUC PR': 0.002597, 'CLL': -0.854705, 'Precision': [0.002562, 0.5], 'Recall': 0.56391, 'F1': 0.005101, 'Learning time': 1.027, 'Inference time': 37.934}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.2666414825056333;  // std dev = 0.470, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3771130926486493;  // std dev = 0.486, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.018845166638374145;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.1981223445008744;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, A) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.2640853809828042;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | | then return 0.662668688584727;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.38386131453951644;  // std dev = 1.375, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.25134906954023867;  // std dev = 0.443, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return -0.2556888822661295;  // std dev = 0.101, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.24548215423599565;  // std dev = 0.468, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.13662525096402314;  // std dev = 1.556, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1906066757177926;  // std dev = 1.232, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.10802394693948252;  // std dev = 1.550, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( teamplaysagainstteam(D, A), teamplaysagainstteam(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.23864823931445855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20989826345556187;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(C, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10231634241274025;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0.07682655223419338;  // std dev = 1.177, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10674050425147098;  // std dev = 0.454, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.06580454141283998;  // std dev = 1.543, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(E, F) )
%   | | then if ( teamplaysagainstteam(A, G), teamplaysagainstteam(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0814193276264737;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.051064362725047316;  // std dev = 1.541, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06210951904146099;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.03951753313541738;  // std dev = 1.540, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, H), teamplaysinleague(H, I) )
%   | | | then return -0.24076614885158457;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09545207945397506;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.477099
   AUC PR    = 0.002289
   CLL	      = -0.700426
   Precision = 0.002377 at threshold = 0.5
   Recall    = 0.458647
   F1        = 0.00473


Total learning time: 1.202 seconds
Total inference time: 37.729 seconds
AUC ROC: 0.477099


Results scoring model
   AUC ROC   = 0.835
   AUC PR    = 0.847263
   CLL	      = -0.565206
   Precision = 0.777778 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.736842


Total scoring time: 0.523 seconds
Parameter learned model CLL: -0.565206


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'athleteledsportsteam(F, A)', 'false,true': 'athleteledsportsteam(F, G)', 'false,true,true': 'teamplaysagainstteam(G, H)', 'false,false': 'teamplaysagainstteam(I, A), athleteledsportsteam(J, I)'}, {'true,true': [0.913, 5, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.0, 2, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false': [1.309, 3, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(D, E)', 'false': 'teamplaysagainstteam(A, F)'}, {'true,true': [0.47, 7, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.486, 3, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'true,true': 'teamplaysagainstteam(A, F)', 'false': 'athleteledsportsteam(G, A)', 'false,true': 'athleteledsportsteam(G, H)', 'false,false': 'teamplaysagainstteam(I, A), teamalsoknownas(I, J)'}, {'true,true,true': [0.894, 4, 1], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.0, 2, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [1.375, 3, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteledsportsteam(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysagainstteam(A, F)', 'false,false': 'teamplaysagainstteam(G, A)'}, {'true,true': [0.443, 5, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.101, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 3, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(A, D)', 'false,false': 'athleteledsportsteam(E, A)', 'false,false,false': 'teamplaysagainstteam(F, A)'}, {'true': [1.556, 7, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.232, 3, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(D, A), teamplaysagainstteam(E, D)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'teamplaysagainstteam(A, G)'}, {'true': [1.55, 7, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'true': 'athleteledsportsteam(C, D)', 'true,true': 'teamplaysagainstteam(A, E), athleteledsportsteam(C, E)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamplaysagainstteam(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.0, 2, 2], 'true,false': [0.0, 0, 0], 'false,true': [1.177, 5, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.454, 3, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamalsoknownas(E, F)', 'false,false,true': 'teamplaysagainstteam(A, G), teamplaysagainstteam(E, H)'}, {'true': [1.543, 7, 6], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.198, 3, 4], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(A, E), teamalsoknownas(E, F)', 'false,false,false': 'athleteledsportsteam(G, A)'}, {'true': [1.541, 7, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.197, 3, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, A)', 'false': 'athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(F, A), athleteledsportsteam(G, F)', 'false,false,false': 'teamalsoknownas(A, H), teamplaysinleague(H, I)'}, {'true,true': [1.54, 7, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.155, 2, 4]}]]
[{'': [0.13888888888888892, 0.22959183673469377], 'false': [0.25, 0.20999999999999988], 'false,true': [0.25, nan], 'false,true,true': [0.25, nan], 'false,false': [1.4802973661668753e-16, 0.24489795918367332], 'true': [0.13888888888888892, nan]}, {'': [0.2204729504051103, 0.23589225677107997], 'false': [nan, 0.23589225677107997], 'true': [0.2204729504051103, nan]}, {'': [0.13987151401249442, 0.2158965746791975], 'false': [0.25, 0.19602592098534694], 'false,true': [0.25, nan], 'false,false': [0.0, 0.21003322369040905], 'true': [0.13987151401249442, nan], 'true,true': [0.15999999999999998, 0.0]}, {'': [0.19660267190972647, 0.2149213943653199], 'false': [0.00514401434396769, 0.21904169802855383], 'false,false': [nan, 0.21904169802855383], 'true': [0.19660267190972647, nan]}, {'': [0.18635600401919653, 0.21665983129803282], 'false': [nan, 0.21665983129803282], 'false,false': [nan, 0.21665983129803282], 'false,false,false': [nan, 0.21665983129803282]}, {'': [0.1847158461870274, 0.21511218620850261], 'false': [nan, 0.21511218620850261], 'false,false': [0.0, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}, {'': [0.24999999999999997, 0.176956026121882], 'true': [0.24999999999999997, nan], 'true,true': [nan, 0.24999999999999997], 'false': [0.1540094520206794, 0.20595541420652294], 'false,false': [nan, 0.20595541420652294]}, {'': [0.18304463951261407, 0.205170928307357], 'false': [nan, 0.205170928307357], 'false,false': [0.205170928307357, nan], 'false,false,true': [nan, 0.205170928307357]}, {'': [0.1826485758548266, 0.20465821879810628], 'false': [nan, 0.20465821879810628], 'false,false': [nan, 0.20465821879810628], 'false,false,false': [nan, 0.20465821879810628]}, {'': [0.18240629510715786, 0.2043181533796512], 'false': [nan, 0.2043181533796512], 'false,false': [nan, 0.2043181533796512], 'false,false,false': [0.0, 0.2222222222222222], 'true': [0.18240629510715786, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
0;false;athleteledsportsteam(F, A).;true;true
0;false,false;teamplaysagainstteam(I, A), athleteledsportsteam(J, I).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
2;true;teamplaysagainstteam(A, F).;true;true
2;false;athleteledsportsteam(G, A).;true;true
2;false,false;teamplaysagainstteam(I, A), teamalsoknownas(I, J).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
5;false;teamalsoknownas(A, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
9;false;teamalsoknownas(A, H), teamplaysinleague(H, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( athleteledsportsteam(E, A) )
%   | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7508897374573691;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14833455563852088;  // std dev = 0.073, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return 0.0451859238448626;  // std dev = 0.772, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.1274696708709345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteledsportsteam(F, A) )
%   | then return 0.2484114808348981;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(G, A), teamalsoknownas(G, H) )
%   | | then return 0.5475957831314342;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.5475957831314342;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11005439292110213;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A) )
%   | then return 0.6482214049253968;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4117745127600481;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.13578980947564;  // std dev = 0.121, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A) )
%   | then return 0.493166819854472;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.316823378789364;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12079955399089941;  // std dev = 0.110, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.31353498996732204;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.11976512509988484;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamalsoknownas(A, E) )
%   | then return -0.09049729690534927;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.14203122670114568;  // std dev = 0.383, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then return 0.2785710054992985;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21711107850653455;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1017797484427724;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A) )
%   | then return 0.2504174983802811;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1789245244914628;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09290665128648082;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, A) )
%   | then return 0.20689097274143084;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15415864272397345;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.09915657866179113;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07167558736556964;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.14889719864202297;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return -0.09570607775524151;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06669902972911106;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, G), teamplaysinleague(G, H) )
%   | then return -0.06510473219633328;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.07295794776769363;  // std dev = 0.248, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.992252
   AUC PR    = 0.165875
   CLL	      = -0.139952
   Precision = 0.123679 at threshold = 0.5
   Recall    = 0.879699
   F1        = 0.216867


Total learning time: 4.273 seconds
Total inference time: 6.066 seconds
AUC ROC: 0.992252


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110751
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.544 seconds
Refined model CLL: -0.110751


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.992252
   AUC PR    = 0.165875
   CLL	      = -0.139952
   Precision = 0.123679 at threshold = 0.5
   Recall    = 0.879699
   F1        = 0.216867


Total learning time: 6.542 seconds
Total inference time: 6.066 seconds
AUC ROC: 0.992252
Total revision time: 6.542
Best scored revision CLL: -0.110751


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 07:17:24
{'AUC ROC': 0.992252, 'AUC PR': 0.165875, 'CLL': -0.139952, 'Precision': [0.123679, 0.5], 'Recall': 0.879699, 'F1': 0.216867, 'Learning time': 6.542, 'Inference time': 6.066, 'parameter_10': {'AUC ROC': 0.477099, 'AUC PR': 0.002289, 'CLL': -0.700426, 'Precision': [0.002377, 0.5], 'Recall': 0.458647, 'F1': 0.00473, 'Learning time': 1.202, 'Inference time': 37.729}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(D, C) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then return 0.10814893509951219;  // std dev = 0.433, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(H, I) )
%   | | then return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.3071385645988162;  // std dev = 2.681, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(D, C) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.6535572380417438;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then return 0.04974678215527073;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, I) )
%   | | then return 0.23894822945457553;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then if ( teamalsoknownas(E, D) )
%   | then return 0.20289240939829625;  // std dev = 2.618, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.058105475280037476;  // std dev = 0.947, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( athleteledsportsteam(D, E) )
%   | | then return 0.006221317895447526;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22141921874774279;  // std dev = 0.497, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.044483662304317405;  // std dev = 0.946, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0.14322713422656394;  // std dev = 0.491, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( athleteledsportsteam(C, E) )
%   | | then return 0.0660273402334915;  // std dev = 0.952, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10066516928893866;  // std dev = 0.481, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.07223753753782687;  // std dev = 0.472, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.05491458415609201;  // std dev = 2.587, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.04165526469300867;  // std dev = 2.587, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.504928
   AUC PR    = 0.002595
   CLL	      = -0.6096
   Precision = 0.002693 at threshold = 0.5
   Recall    = 0.082707
   F1        = 0.005216


Total learning time: 1.077 seconds
Total inference time: 31.679 seconds
AUC ROC: 0.504928


Results scoring model
   AUC ROC   = 0.72
   AUC PR    = 0.740215
   CLL	      = -0.639956
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.2
   F1        = 0.333333


Total scoring time: 0.566 seconds
Parameter learned model CLL: -0.639956


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysagainstteam(D, C)', 'true': 'teamalsoknownas(C, E)', 'false': 'athleteledsportsteam(F, A)', 'false,true': 'athleteledsportsteam(F, G)', 'false,false': 'athleteledsportsteam(H, I)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [0.433, 3, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.396, 12, 11], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [2.681, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysagainstteam(D, C)', 'true': 'teamalsoknownas(C, E)', 'false': 'athleteledsportsteam(F, A)', 'false,true': 'athleteledsportsteam(F, G)', 'false,false': 'teamalsoknownas(H, I)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [0.866, 3, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.396, 12, 11], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)', 'true': 'teamalsoknownas(E, D)'}, {'true,true': [2.618, 15, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'athleteledsportsteam(D, E)'}, {'true': [0.947, 3, 3], 'false,true,true': [0.866, 3, 1], 'false,true,false': [0.0, 0, 0], 'false,false': [0.497, 9, 11]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)'}, {'true': [0.946, 3, 3], 'false': [0.491, 12, 12]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'true': 'athleteledsportsteam(C, D)', 'true,true': 'athleteledsportsteam(C, E)'}, {'true,true,true': [0.952, 3, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.481, 12, 13]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [0.472, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [2.587, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [2.587, 15, 15], 'false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24691358024691315], 'false': [0.18750000000000003, 0.24952741020793906], 'false,false': [0.24952741020793906, nan], 'false,true': [0.18750000000000003, nan], 'true': [1.4802973661668753e-16, nan]}, {'': [0.23955317935212045, nan]}, {'': [0.0, 0.24485577915482074], 'false': [0.18750000000000003, 0.24952741020793942], 'false,false': [0.24952741020793942, nan], 'false,true': [0.18750000000000003, nan], 'true': [0.0, nan]}, {'': [0.22839818747876228, nan], 'true': [0.22839818747876228, nan]}, {'': [0.1495262609909596, 0.24393196340711568], 'false': [0.18750000000000006, 0.2474999999999999], 'false,true': [0.18750000000000006, nan]}, {'': [0.14900271446033875, 0.24131733580757786]}, {'': [0.18125725385774477, 0.23171728240586253], 'true': [0.18125725385774477, nan], 'true,true': [0.18125725385774477, nan]}, {'': [0.22321696575710534, nan]}, {'': [0.2231094356408808, nan]}, {'': [0.22306188402103386, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysagainstteam(D, C).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysagainstteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(D, C) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.96e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(D, C) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367083;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.991124
   AUC PR    = 0.123144
   CLL	      = -0.116103
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 2.021 seconds
Total inference time: 3.094 seconds
AUC ROC: 0.991124


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.514 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991124
   AUC PR    = 0.123144
   CLL	      = -0.116103
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 4.178 seconds
Total inference time: 3.094 seconds
AUC ROC: 0.991124
Total revision time: 4.178
Best scored revision CLL: -0.094637


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 07:18:04
{'AUC ROC': 0.991124, 'AUC PR': 0.123144, 'CLL': -0.116103, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 4.178, 'Inference time': 3.094, 'parameter_15': {'AUC ROC': 0.504928, 'AUC PR': 0.002595, 'CLL': -0.6096, 'Precision': [0.002693, 0.5], 'Recall': 0.082707, 'F1': 0.005216, 'Learning time': 1.077, 'Inference time': 31.679}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.23314893509951237;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(G, F) )
%   | | then return 0.6359267128772901;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.3581489350995122;  // std dev = 0.500, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysinleague(I, J) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then return 0.16066757255144135;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.35000372117405293;  // std dev = 2.724, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.1583788962539523;  // std dev = 0.483, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.47075380327081295;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, I) )
%   | | then return 0.24872942883302074;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysagainstteam(J, K) )
%   | | | then return 0.32945265286544545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, C) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then return 0.20226094604599548;  // std dev = 3.039, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.011519678901240515;  // std dev = 1.507, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.16533740649444406;  // std dev = 2.092, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( teamplaysinleague(G, F) )
%   | | | then return 0.36853868501225523;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21304590364741127;  // std dev = 0.490, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.008945793793257632;  // std dev = 0.454, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.1309571513168641;  // std dev = 2.091, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( athleteledsportsteam(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22432146160967828;  // std dev = 0.434, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return -0.02491792737864778;  // std dev = 1.312, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( teamplaysinleague(F, C) )
%   | | | then return 0.13219236691716793;  // std dev = 2.295, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.15030758302438765;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.10569134906893543;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.00513969699572564;  // std dev = 1.501, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F), teamplaysagainstteam(F, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.10174925867613764;  // std dev = 2.294, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else return 0.07928062941165952;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.31282736902977243;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11183286716905716;  // std dev = 1.133, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( athleteledsportsteam(E, F) )
%   | then return 0.0747939106247487;  // std dev = 2.542, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.042006349663834944;  // std dev = 2.930, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.506263
   AUC PR    = 0.002554
   CLL	      = -0.684655
   Precision = 0.002701 at threshold = 0.5
   Recall    = 0.345865
   F1        = 0.00536


Total learning time: 2.106 seconds
Total inference time: 104.90299999999999 seconds
AUC ROC: 0.506263


Results scoring model
   AUC ROC   = 0.7325
   AUC PR    = 0.715463
   CLL	      = -0.620977
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.45
   F1        = 0.5625


Total scoring time: 0.707 seconds
Parameter learned model CLL: -0.620977


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'teamplaysinleague(G, F)', 'false,false': 'teamalsoknownas(A, H)', 'false,false,false': 'teamplaysinleague(I, J)'}, {'true,true': [2.372, 15, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [0.416, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.5, 1, 1], 'false,false,false,true': [1.095, 2, 3], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)', 'true': 'teamalsoknownas(D, E)', 'true,true': 'athleteledsportsteam(F, A)'}, {'true,true,true': [1.414, 6, 3], 'true,true,false': [2.724, 14, 17], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysinleague(A, F)', 'false,true': 'athleteledsportsteam(G, H)', 'false,false': 'teamalsoknownas(A, I)', 'false,false,false': 'teamplaysagainstteam(J, K)'}, {'true,true': [0.483, 15, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [1.247, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.707, 1, 1], 'false,false,false,true': [1.095, 2, 3], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true': 'athleteledsportsteam(E, C)', 'true,true': 'athleteledsportsteam(F, G)'}, {'true,true,true': [3.039, 20, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'athleteledsportsteam(D, A)', 'false': 'teamplaysagainstteam(A, E)', 'false,false': 'teamplaysinleague(A, F)', 'false,false,true': 'teamplaysinleague(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.507, 7, 4], 'false,true': [2.092, 10, 8], 'false,false,true,true': [0.913, 1, 5], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.49, 2, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(A, D)', 'false,false': 'athleteledsportsteam(E, A)'}, {'true': [0.454, 7, 4], 'false,true': [2.091, 10, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.434, 3, 8]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'teamplaysinleague(D, C)', 'true,true': 'teamalsoknownas(A, E)', 'true,true,false': 'teamplaysinleague(F, C)', 'false': 'athleteledsportsteam(G, A)', 'false,false': 'teamalsoknownas(A, H)'}, {'true,true,true': [1.312, 6, 3], 'true,true,false,true': [2.295, 11, 13], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.707, 1, 1], 'false,false,false': [1.095, 2, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamalsoknownas(A, F), teamplaysagainstteam(F, G)', 'false,false': 'teamplaysinleague(A, H)'}, {'true,true': [1.501, 7, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.294, 11, 13], 'false,false,false': [1.095, 2, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamplaysagainstteam(C, D)', 'false': 'athleteledsportsteam(E, F)'}, {'true,true': [0.758, 1, 2], 'true,false': [1.133, 6, 2], 'false,true': [2.542, 13, 16], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.93, 20, 20], 'false': [0.0, 0, 0]}]]
[{'': [0.23437500000000003, 0.21484374999999967], 'true': [0.23437500000000003, nan], 'false': [0.17283950617283939, 0.24489795918367332], 'false,false': [0.25, 0.23999999999999994], 'false,false,false': [0.23999999999999994, nan], 'false,true': [0.17283950617283939, nan]}, {'': [0.24170619713148883, nan], 'true': [0.24170619713148883, nan], 'true,true': [0.22222222222222232, 0.2392969951439428]}, {'': [0.2336206338580119, 0.21070245612826677], 'true': [0.2336206338580119, nan], 'false': [0.1728395061728396, 0.24418698753024268], 'false,false': [0.24999999999999994, 0.23999999999999994], 'false,false,false': [0.23999999999999994, nan], 'false,true': [0.1728395061728396, nan]}, {'': [0.23084874401066938, nan], 'true': [0.23084874401066938, nan], 'true,true': [0.23084874401066938, nan]}, {'': [0.20659215861663396, 0.2273806876563778], 'false': [0.24304770191903996, 0.19084303155672663], 'true': [nan, 0.20659215861663396], 'false,false': [0.13888888888888892, 0.24], 'false,false,true': [0.13888888888888892, nan]}, {'': [0.20653539237543886, 0.22412286594162673], 'false': [0.24280507189969047, 0.18814149726285914], 'false,false': [nan, 0.18814149726285914]}, {'': [0.21661855738055483, 0.2432633894555852], 'false': [nan, 0.2432633894555852], 'false,false': [0.24999999999999997, 0.24], 'true': [0.21661855738055483, nan], 'true,true': [0.19124110295496188, 0.21940319972459268], 'true,true,false': [0.21940319972459268, nan]}, {'': [0.2047439446257492, 0.22291200521496554], 'false': [nan, 0.22291200521496554], 'false,false': [0.2192649650426193, 0.24], 'true': [0.2047439446257492, nan]}, {'': [0.2047162538215281, 0.22286745865880578], 'false': [0.22286745865880578, nan], 'true': [0.19135464647336908, 0.16054422488387524]}, {'': [0.21455673841118444, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), athleteplaysforteam(D, C).;true;true
0;true;teamplaysagainstteam(E, C).;true;true
0;false;teamplaysinleague(A, F).;true;true
0;false,true;teamplaysinleague(G, F).;true;true
0;false,false;teamalsoknownas(A, H).;true;true
0;false,false,false;teamplaysinleague(I, J).;true;true
1;;teamplayssport(A, B) :- athleteledsportsteam(C, D).;true;true
1;true;teamalsoknownas(D, E).;true;true
1;true,true;athleteledsportsteam(F, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), athleteplaysforteam(D, C).;true;true
2;true;teamplaysagainstteam(E, C).;true;true
2;false;teamplaysinleague(A, F).;true;true
2;false,true;athleteledsportsteam(G, H).;true;true
2;false,false;teamalsoknownas(A, I).;true;true
2;false,false,false;teamplaysagainstteam(J, K).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(E, C).;true;true
3;true,true;athleteledsportsteam(F, G).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;true;athleteledsportsteam(D, A).;true;true
4;false;teamplaysagainstteam(A, E).;true;true
4;false,false;teamplaysinleague(A, F).;true;true
4;false,false,true;teamplaysinleague(G, F).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
5;false;teamplaysagainstteam(A, D).;true;true
5;false,false;athleteledsportsteam(E, A).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
6;true;teamplaysinleague(D, C).;true;true
6;true,true;teamalsoknownas(A, E).;true;true
6;true,true,false;teamplaysinleague(F, C).;true;true
6;false;athleteledsportsteam(G, A).;true;true
6;false,false;teamalsoknownas(A, H).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
7;true;teamalsoknownas(D, E).;true;true
7;false;teamalsoknownas(A, F), teamplaysagainstteam(F, G).;true;true
7;false,false;teamplaysinleague(A, H).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
8;true;teamplaysagainstteam(C, D).;true;true
8;false;athleteledsportsteam(E, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then if ( teamplaysinleague(H, G) )
%   | | then if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, K) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysinleague(L, M) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then if ( athleteplayssport(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.7443535367223401;  // std dev = 0.163, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.14773294723947808;  // std dev = 0.119, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.5512651570040065;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.11099454911555716;  // std dev = 0.004, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G) )
%   | then if ( athleteledsportsteam(H, I) )
%   | | then if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | | then return 0.5492145171328673;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13633628775864645;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, L) )
%   | | then return 0.24909513853073145;  // std dev = 0.592, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysagainstteam(M, N) )
%   | | | then return 0.31345647373655944;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, C) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.4602171470684048;  // std dev = 0.370, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.12584752886742406;  // std dev = 0.209, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.4195182780697923;  // std dev = 0.230, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.11155315141599585;  // std dev = 0.098, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( athleteplayssport(G, B) )
%   | | then return 0.3090366156414237;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.09005166397242884;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then if ( teamplaysinleague(I, H) )
%   | | | then return 0.23146832328954448;  // std dev = 0.416, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18810860496258966;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.32685006486165563;  // std dev = 0.208, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10110302703798939;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.24719017049662048;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.08294002679330052;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteledsportsteam(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.3165297974966447;  // std dev = 0.205, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2248682935325902;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then if ( athleteplayssport(F, B) )
%   | | | then return 0.24334396487423107;  // std dev = 0.170, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08157587533115042;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamplaysinleague(G, C) )
%   | | | then return 0.07234211406443865;  // std dev = 0.705, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, I) )
%   | | then return 0.08090597541965427;  // std dev = 0.337, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.11856044218937951;  // std dev = 0.596, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.22792735627785984;  // std dev = 0.174, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.0889171313939652;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, G), teamplaysagainstteam(G, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, I) )
%   | | then if ( athleteplayssport(J, B) )
%   | | | then return 0.19265796182277947;  // std dev = 0.005, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.08911124149261015;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.09493323460959253;  // std dev = 0.589, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.11079688262884213;  // std dev = 0.241, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return -0.0624106997837984;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.0274037149871798;  // std dev = 0.334, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( athleteledsportsteam(F, G) )
%   | then if ( athleteplayssport(H, B) )
%   | | then return 0.1880318538850264;  // std dev = 0.196, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return -0.07566468345328631;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.21246050250791382;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), athleteledsportsteam(E, G) )
%   | | then return 0.13607793175167865;  // std dev = 0.041, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.25342577188646354;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return -0.07303261786494562;  // std dev = 0.068, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.19186409000683957;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990964
   AUC PR    = 0.115085
   CLL	      = -0.134982
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 146.269 seconds
Total inference time: 4170.441 seconds
AUC ROC: 0.990964


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.774 seconds
Refined model CLL: -0.121121


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990964
   AUC PR    = 0.115085
   CLL	      = -0.134982
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 151.856 seconds
Total inference time: 4170.441 seconds
AUC ROC: 0.990964
Total revision time: 151.856
Best scored revision CLL: -0.121121


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 08:31:52
{'AUC ROC': 0.990964, 'AUC PR': 0.115085, 'CLL': -0.134982, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 151.856, 'Inference time': 4170.441, 'parameter_20': {'AUC ROC': 0.506263, 'AUC PR': 0.002554, 'CLL': -0.684655, 'Precision': [0.002701, 0.5], 'Recall': 0.345865, 'F1': 0.00536, 'Learning time': 2.106, 'Inference time': 104.90299999999999}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.2059750220560341;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, I) )
%   | | then return 0.40360348055405776;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.30699993082199883;  // std dev = 3.455, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.13146930885041244;  // std dev = 0.476, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteplaysforteam(F, G) )
%   | | then return 0.6535886268574402;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.29372262373603275;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.20255399280161313;  // std dev = 3.366, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.08368508488067887;  // std dev = 2.551, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   else if ( athleteplaysforteam(D, A) )
%   | then if ( athleteplaysforteam(D, E) )
%   | | then return 0.4449017915524668;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25519180263731955;  // std dev = 0.487, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.06592001102000286;  // std dev = 2.550, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   else return 0.2092534219204532;  // std dev = 0.465, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteplaysforteam(C, E) )
%   | | then return 0.10508917557290536;  // std dev = 2.232, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0834690183261665;  // std dev = 0.489, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.07257582212444008;  // std dev = 0.468, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.05555719583500853;  // std dev = 3.309, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.042435259963748806;  // std dev = 3.309, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.503784
   AUC PR    = 0.002536
   CLL	      = -0.666381
   Precision = 0.002494 at threshold = 0.5
   Recall    = 0.518797
   F1        = 0.004963


Total learning time: 2.714 seconds
Total inference time: 183.537 seconds
AUC ROC: 0.503784


Results scoring model
   AUC ROC   = 0.7016
   AUC PR    = 0.745199
   CLL	      = -0.631205
   Precision = 0.695652 at threshold = 0.5
   Recall    = 0.64
   F1        = 0.666667


Total scoring time: 0.794 seconds
Parameter learned model CLL: -0.631205


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'athleteplaysforteam(H, I)'}, {'true,true': [2.284, 15, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.335, 10, 12], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [3.455, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(D, C)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'athleteplaysforteam(F, A)', 'false,true': 'athleteplaysforteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.476, 15, 8], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.335, 10, 12], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)', 'true': 'teamplaysagainstteam(D, E)'}, {'true,true': [3.366, 25, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'athleteplaysforteam(D, A)', 'false,true': 'athleteplaysforteam(D, E)'}, {'true': [2.551, 18, 12], 'false,true,true': [0.0, 0, 2], 'false,true,false': [0.0, 0, 0], 'false,false': [0.487, 7, 11]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)'}, {'true': [2.55, 18, 12], 'false': [0.465, 7, 13]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'athleteplaysforteam(C, D)', 'true,true': 'athleteplaysforteam(C, E)'}, {'true,true,true': [2.232, 13, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.489, 12, 13]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.468, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [3.309, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [3.309, 25, 25], 'false': [0.0, 0, 0]}]]
[{'': [0.226843100189036, 0.2331961591220847], 'false': [0.0, 0.24793388429752028], 'false,false': [0.24793388429752028, nan], 'true': [0.226843100189036, nan], 'false,true': [0.0, nan]}, {'': [0.2386942222189286, nan]}, {'': [0.2268431001890361, 0.2215612025994658], 'true': [0.2268431001890361, nan], 'false': [0.0, 0.24793388429752036], 'false,false': [0.24793388429752036, nan], 'false,true': [0.0, nan]}, {'': [0.22654099544564998, nan], 'true': [0.22654099544564998, nan]}, {'': [0.21690740338087183, 0.21712797807936543], 'false': [0.0, 0.23765432098765416], 'false,true': [0.0, nan]}, {'': [0.2167758298621009, 0.21576945059763003]}, {'': [0.19920958327488278, 0.23882844682417972], 'true': [0.19920958327488278, nan], 'true,true': [0.19920958327488278, nan]}, {'': [0.21900441259810788, nan]}, {'': [0.21899755940964463, nan]}, {'': [0.21902495813703665, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
0;false;athleteplaysforteam(F, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
2;false;athleteplaysforteam(F, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false;athleteplaysforteam(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplaysforteam(F, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 4.21e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplaysforteam(F, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783633;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1.75e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109177;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367083;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.991187
   AUC PR    = 0.123952
   CLL	      = -0.126869
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 2.739 seconds
Total inference time: 4.301 seconds
AUC ROC: 0.991187


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.585 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991187
   AUC PR    = 0.123952
   CLL	      = -0.126869
   Precision = 0.123952 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.220564


Total learning time: 6.832 seconds
Total inference time: 4.301 seconds
AUC ROC: 0.991187
Total revision time: 6.832
Best scored revision CLL: -0.094637


Dataset: 10_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 08:35:07
{'AUC ROC': 0.991187, 'AUC PR': 0.123952, 'CLL': -0.126869, 'Precision': [0.123952, 0.5], 'Recall': 1.0, 'F1': 0.220564, 'Learning time': 6.832, 'Inference time': 4.301, 'parameter_25': {'AUC ROC': 0.503784, 'AUC PR': 0.002536, 'CLL': -0.666381, 'Precision': [0.002494, 0.5], 'Recall': 0.518797, 'F1': 0.004963, 'Learning time': 2.714, 'Inference time': 183.537}}


Starting fold 3

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos	 examples: 131
Target test neg examples: 53329

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.35814893509951223;  // std dev = 0.500, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.30715367006194094;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.11939779618457079;  // std dev = 0.471, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.25670474452806374;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, I) )
%   | | then return 0.6535538178522118;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.20296259695793162;  // std dev = 1.512, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.06024381097275059;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamplaysagainstteam(D, E) )
%   | | then return 0.16262855568857226;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.444771513239963;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.04812268405647154;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.15592519044069;  // std dev = 0.469, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamplaysagainstteam(C, E) )
%   | | then return 0.08818718057528807;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10496617308368429;  // std dev = 0.424, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.07312240049877909;  // std dev = 0.471, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.05602479085278859;  // std dev = 1.491, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.042823271106500575;  // std dev = 1.491, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.504708
   AUC PR    = 0.002448
   CLL	      = -0.816424
   Precision = 0.002417 at threshold = 0.5
   Recall    = 0.290076
   F1        = 0.004794


Total learning time: 1.234 seconds
Total inference time: 157.833 seconds
AUC ROC: 0.504708


Results scoring model
   AUC ROC   = 0.66
   AUC PR    = 0.717619
   CLL	      = -0.636619
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.2
   F1        = 0.333333


Total scoring time: 0.589 seconds
Parameter learned model CLL: -0.636619


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'true,true': [0.816, 2, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.5, 3, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [1.548, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'true': 'teamalsoknownas(E, C)', 'false': 'teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false,false': 'teamalsoknownas(H, I)'}, {'true,true': [0.471, 2, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [1.225, 3, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamalsoknownas(D, E)'}, {'true,true': [1.512, 5, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamplaysagainstteam(D, E)'}, {'true': [0.816, 2, 1], 'false,true,true': [1.225, 3, 3], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)'}, {'true': [0.816, 2, 1], 'false': [0.469, 3, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'true,true': 'teamplaysagainstteam(C, E)'}, {'true,true,true': [1.225, 3, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.424, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [0.471, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [1.491, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [1.491, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.22222222222222224, 0.24489795918367332], 'false': [0.24999999999999992, 0.0], 'false,true': [0.24999999999999992, nan], 'true': [0.22222222222222224, nan], 'false,false': [0.0, nan]}, {'': [0.23960069610395252, nan]}, {'': [0.2222222222222222, 0.2335701045303961], 'false': [0.24999999999999997, 0.0], 'false,true': [0.24999999999999997, nan], 'true': [0.2222222222222222, nan], 'false,false': [0.0, nan]}, {'': [0.2284843863818232, nan], 'true': [0.2284843863818232, nan]}, {'': [0.2222222222222222, 0.2240332222647974], 'false': [0.24999999999999997, 0.0], 'false,true': [0.24999999999999997, nan]}, {'': [0.2222222222222222, 0.2198876989661404]}, {'': [0.25000000000000006, 0.18003518713138827], 'true': [0.25000000000000006, nan], 'true,true': [0.25000000000000006, nan]}, {'': [0.2220965361563077, nan]}, {'': [0.22217381298266864, nan]}, {'': [0.22225893364451338, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
0;false;teamplaysagainstteam(F, A).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
2;false;teamplaysagainstteam(F, A).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;teamplaysagainstteam(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7957804621598815;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.18147312203599963;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then return 0.13551493439032977;  // std dev = 0.682, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.24568875111312194;  // std dev = 1.005, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.5364528586532826;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5726163910533535;  // std dev = 0.197, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.18503538997737112;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.08396982217506595;  // std dev = 0.542, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.14189187951099444;  // std dev = 0.772, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.2762782176677606;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.39920885468613604;  // std dev = 0.208, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.17566354580866358;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3111458513486367;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.15173455234819216;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2502311139132716;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.13327280214422615;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2072056618755179;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11865506961608671;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17581161128318273;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1068255952115073;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983413
   AUC PR    = 0.121198
   CLL	      = -0.185729
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 1.092 seconds
Total inference time: 3.102 seconds
AUC ROC: 0.983413


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.134344
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.462 seconds
Refined model CLL: -0.134344


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983413
   AUC PR    = 0.121198
   CLL	      = -0.185729
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 3.3770000000000002 seconds
Total inference time: 3.102 seconds
AUC ROC: 0.983413
Total revision time: 3.3770000000000002
Best scored revision CLL: -0.134344


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 08:37:52
{'AUC ROC': 0.983413, 'AUC PR': 0.121198, 'CLL': -0.185729, 'Precision': [0.119444, 0.5], 'Recall': 0.984733, 'F1': 0.213047, 'Learning time': 3.3770000000000002, 'Inference time': 3.102, 'parameter_5': {'AUC ROC': 0.504708, 'AUC PR': 0.002448, 'CLL': -0.816424, 'Precision': [0.002417, 0.5], 'Recall': 0.290076, 'F1': 0.004794, 'Learning time': 1.234, 'Inference time': 157.833}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return 0.10814893509951219;  // std dev = 0.433, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.4295775065280837;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( teamalsoknownas(I, J) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.3047395338537502;  // std dev = 0.476, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return -0.16285848032342481;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return 0.05013071513607814;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.3152036390051584;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( athleteplaysforteam(I, J) )
%   | | | then return 0.5241154269536349;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplaysforteam(E, C) )
%   | then return 0.19570855238254017;  // std dev = 2.003, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.06385861117901571;  // std dev = 0.438, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E) )
%   | | then if ( teamalsoknownas(F, E) )
%   | | | then return 0.0912464848667452;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3543095687891733;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.050802099662032994;  // std dev = 0.437, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20213985585881447;  // std dev = 0.418, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return -0.2637415525108311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamalsoknownas(F, C) )
%   | | | then return 0.03345681191437718;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(G, A) )
%   | then return 0.07060518028493648;  // std dev = 1.411, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return 0.2173591653711926;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.030829545592651164;  // std dev = 1.432, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A), athleteplaysforteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.026385850390796623;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.16739880311782795;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, C) )
%   | then return 0.04666236405519082;  // std dev = 1.411, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return -0.19970070235864784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplaysforteam(E, F) )
%   | then return 0.09441271241224732;  // std dev = 0.412, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.0432819310068356;  // std dev = 1.888, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.507288
   AUC PR    = 0.002457
   CLL	      = -0.654712
   Precision = 0.002375 at threshold = 0.5
   Recall    = 0.282443
   F1        = 0.00471


Total learning time: 1.464 seconds
Total inference time: 95.553 seconds
AUC ROC: 0.507288


Results scoring model
   AUC ROC   = 0.825
   AUC PR    = 0.781029
   CLL	      = -0.538492
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.625


Total scoring time: 0.611 seconds
Parameter learned model CLL: -0.538492


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, D)', 'true': 'athleteplaysforteam(C, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamalsoknownas(G, F)', 'false,false': 'teamplaysagainstteam(H, A)', 'false,false,false': 'teamalsoknownas(I, J)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.433, 3, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.495, 3, 4], 'false,false,false,true': [0.913, 1, 5], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.476, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, D)', 'true': 'athleteplaysforteam(C, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamalsoknownas(G, F)', 'false,false': 'teamplaysagainstteam(H, A)', 'false,false,false': 'athleteplaysforteam(I, J)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.866, 3, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.309, 3, 4], 'false,false,false,true': [0.913, 1, 5], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)', 'true': 'athleteplaysforteam(E, C)'}, {'true,true': [2.003, 10, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,true': 'teamalsoknownas(F, E)'}, {'true': [0.438, 7, 4], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.816, 2, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.373, 1, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'athleteplaysforteam(D, A)'}, {'true': [0.437, 7, 4], 'false,true': [0.0, 0, 0], 'false,false': [0.418, 3, 6]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, C)', 'true,true': 'teamplaysagainstteam(E, A)', 'true,true,false': 'teamalsoknownas(F, C)', 'false': 'teamplaysagainstteam(G, A)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false,true': [0.816, 2, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.411, 6, 4], 'false,false': [0.913, 1, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(D, E)', 'false': 'teamplaysagainstteam(F, A), athleteplaysforteam(G, F)', 'false,false': 'teamalsoknownas(A, H)'}, {'true,true': [1.432, 7, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.816, 2, 1], 'false,false,false': [0.913, 1, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(D, C)', 'false': 'athleteplaysforteam(E, F)'}, {'true,true': [1.411, 6, 4], 'true,false': [0.0, 1, 0], 'false,true': [0.412, 3, 6], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [1.888, 10, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24221453287197228], 'false': [0.18750000000000003, 0.2130177514792898], 'false,false': [0.24489795918367332, 0.1388888888888887], 'false,true': [0.18750000000000003, nan], 'false,false,false': [0.1388888888888887, nan], 'true': [0.0, nan]}, {'': [0.22651741688167082, nan]}, {'': [0.0, 0.2257848996317137], 'false': [0.1875, 0.20681716742655873], 'false,false': [0.24489795918367344, 0.1388888888888888], 'false,true': [0.1875, nan], 'false,false,false': [0.1388888888888888, nan], 'true': [0.0, nan]}, {'': [0.2006235344301155, nan], 'true': [0.2006235344301155, nan]}, {'': [0.19191618231311278, 0.18204493024950633], 'false': [nan, 0.18204493024950633], 'false,false': [0.22222222222222224, 0.13888888888888898], 'false,false,true': [0.22222222222222224, nan]}, {'': [0.191019849295232, 0.17486208118732327], 'false': [nan, 0.17486208118732327]}, {'': [0.1832279543823577, 0.18163487800885686], 'true': [0.1832279543823577, nan], 'true,true': [0.0, 0.2222222222222222], 'true,true,false': [0.2222222222222222, nan], 'false': [0.19920619692882627, 0.13888888888888887]}, {'': [0.1863376783219901, 0.17108547840817684], 'true': [0.1863376783219901, nan], 'false': [nan, 0.17108547840817684], 'false,false': [0.2222222222222222, 0.13888888888888887]}, {'': [0.18592147141142593, 0.16938017976542277], 'true': [0.1989959130532204, 0.0], 'false': [0.16938017976542277, nan]}, {'': [0.17820755059089616, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteledsportsteam(C, D).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteledsportsteam(C, D).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;teamplaysagainstteam(E, A).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;athleteplaysforteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.01740140205678402;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.18007563161862736;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07460675739827927;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, C) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.15235871765089937;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06834030203387159;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06834030203387159;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.15678114887782216;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07259614454414733;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1357809610883927;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06523822601129511;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.981789
   AUC PR    = 0.120948
   CLL	      = -0.093177
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 1.32 seconds
Total inference time: 5.432 seconds
AUC ROC: 0.981789


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.494 seconds
Refined model CLL: -0.095955


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981789
   AUC PR    = 0.120948
   CLL	      = -0.093177
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 3.8890000000000002 seconds
Total inference time: 5.432 seconds
AUC ROC: 0.981789
Total revision time: 3.8890000000000002
Best scored revision CLL: -0.095955


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 08:39:38
{'AUC ROC': 0.981789, 'AUC PR': 0.120948, 'CLL': -0.093177, 'Precision': [0.119444, 0.5], 'Recall': 0.984733, 'F1': 0.213047, 'Learning time': 3.8890000000000002, 'Inference time': 5.432, 'parameter_10': {'AUC ROC': 0.507288, 'AUC PR': 0.002457, 'CLL': -0.654712, 'Precision': [0.002375, 0.5], 'Recall': 0.282443, 'F1': 0.00471, 'Learning time': 1.464, 'Inference time': 95.553}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4295775065280837;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.24033498988939056;  // std dev = 0.457, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37955048875805336;  // std dev = 0.491, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return -0.15426736068568067;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, G) )
%   | then if ( teamalsoknownas(H, G) )
%   | | then return 0.1502601175720758;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), athleteplaysforteam(J, I) )
%   | | then return 0.3837078350112402;  // std dev = 1.336, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.3959267918630899;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(C, D) )
%   then if ( teamplaysagainstteam(E, C) )
%   | then return 0.24407323619426322;  // std dev = 0.388, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.0439959272402473;  // std dev = 1.081, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.221331641589762;  // std dev = 0.768, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.24942027099495181;  // std dev = 0.485, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.14449736832601542;  // std dev = 1.444, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E) )
%   | | then if ( teamalsoknownas(F, E) )
%   | | | then return 0.12517469616753257;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return -0.37167259579474715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.25219863665084674;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.11513312361589459;  // std dev = 1.429, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( teamplaysagainstteam(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.03268289189241678;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1434913935343854;  // std dev = 1.804, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, C) )
%   | | then return -0.3379255897342795;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.07261689632901598;  // std dev = 1.320, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0.09414966680515757;  // std dev = 1.406, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1541280239696028;  // std dev = 0.471, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.06487512847176448;  // std dev = 1.611, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, F) )
%   | | then if ( teamplaysagainstteam(A, G), teamplaysagainstteam(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07791233071910043;  // std dev = 1.799, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.05084950831359307;  // std dev = 1.606, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return -0.008921683066685504;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09657983212711925;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.0528998672520027;  // std dev = 1.377, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.036608262699421704;  // std dev = 1.318, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A), athleteledsportsteam(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0315727232988231;  // std dev = 1.468, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */


Results
   AUC ROC   = 0.504661
   AUC PR    = 0.002454
   CLL	      = -0.631429
   Precision = 0.00243 at threshold = 0.5
   Recall    = 0.435115
   F1        = 0.004834


Total learning time: 1.414 seconds
Total inference time: 58.614 seconds
AUC ROC: 0.504661


Results scoring model
   AUC ROC   = 0.826667
   AUC PR    = 0.832168
   CLL	      = -0.574179
   Precision = 0.769231 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.714286


Total scoring time: 0.636 seconds
Parameter learned model CLL: -0.574179


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, D)', 'true': 'athleteplaysforteam(C, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamalsoknownas(G, F)', 'false,true,true': 'teamplaysagainstteam(G, H)', 'false,false': 'teamplaysagainstteam(I, A), teamalsoknownas(I, J)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true,true,true': [1.369, 5, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 4], 'false,false,false': [1.852, 6, 8]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(D, E)', 'false': 'teamplaysagainstteam(A, F)'}, {'true,true': [0.457, 9, 7], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.491, 6, 8]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, D)', 'true': 'athleteplaysforteam(C, E)', 'true,true': 'teamplaysagainstteam(A, F)', 'false': 'teamalsoknownas(A, G)', 'false,true': 'teamalsoknownas(H, G)', 'false,false': 'teamplaysagainstteam(I, A), athleteplaysforteam(J, I)'}, {'true,true,true': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.368, 5, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.336, 3, 6], 'false,false,false': [1.414, 3, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(C, D)', 'true': 'teamplaysagainstteam(E, C)', 'false': 'teamplaysagainstteam(A, F)', 'false,false': 'teamplaysagainstteam(G, A)'}, {'true,true': [0.388, 3, 4], 'true,false': [0.0, 0, 0], 'false,true': [1.081, 5, 2], 'false,false,true': [0.768, 1, 1], 'false,false,false': [0.485, 6, 8]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(A, D)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,true': 'teamalsoknownas(F, E)', 'false,false,false': 'teamplaysagainstteam(G, A)'}, {'true': [1.444, 7, 6], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.315, 4, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.414, 3, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(D, A), teamplaysagainstteam(E, D)', 'false,false': 'athleteplaysforteam(F, A)', 'false,false,false': 'teamplaysagainstteam(A, G)'}, {'true': [1.429, 7, 6], 'false,true': [0.813, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.804, 6, 8]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, C)', 'true,true': 'teamplaysagainstteam(A, E), teamalsoknownas(E, C)', 'false': 'teamplaysagainstteam(F, A)', 'false,false': 'teamplaysagainstteam(A, G)'}, {'true,true,true': [0.0, 1, 0], 'true,true,false': [1.32, 4, 3], 'true,false': [0.0, 0, 0], 'false,true': [1.406, 7, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.471, 3, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'athleteplaysforteam(E, F)', 'false,false,true': 'teamplaysagainstteam(A, G), teamplaysagainstteam(F, H)'}, {'true': [1.611, 9, 7], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.799, 6, 8], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(A, E), athleteplaysforteam(F, E)', 'false,false,false': 'teamalsoknownas(A, G)'}, {'true': [1.606, 9, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.414, 3, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, A)', 'false': 'teamalsoknownas(A, E)', 'false,false': 'teamplaysagainstteam(F, A), teamalsoknownas(F, G)', 'false,false,false': 'athleteplaysforteam(H, A), athleteledsportsteam(H, I)'}, {'true,true': [1.377, 7, 6], 'true,false': [0.0, 0, 0], 'false,true': [1.318, 4, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.468, 4, 6]}]]
[{'': [0.0, 0.24408284023668608], 'false': [0.2343749999999999, 0.22222222222222188], 'false,true': [0.2343749999999999, nan], 'false,true,true': [0.2343749999999999, nan], 'false,false': [0.0, 0.24489795918367346], 'true': [0.0, nan]}, {'': [0.20927356948802467, 0.2414435322514325], 'false': [nan, 0.2414435322514325], 'true': [0.20927356948802467, nan]}, {'': [0.0, 0.2297175102486109], 'false': [0.23375988316843468, 0.21026316157256264], 'false,true': [0.23375988316843468, nan], 'false,false': [0.19822944946962925, 0.22222222222222215], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.15034294323530314, 0.22844044386252338], 'false': [0.16693926057670436, 0.2429392651890173], 'false,false': [0.2947863473138404, 0.23543391778345257], 'true': [0.15034294323530314, nan]}, {'': [0.16031621369910992, 0.24101005758061486], 'false': [nan, 0.24101005758061486], 'false,false': [0.24709628618743756, 0.23502937832058657], 'false,false,true': [0.24709628618743756, nan], 'false,false,false': [0.0, 0.2222222222222222]}, {'': [0.15697259948062525, 0.23209191283005534], 'false': [0.2202540797407644, 0.23246179298987063], 'false,false': [nan, 0.23246179298987063], 'false,false,false': [nan, 0.23246179298987063]}, {'': [0.23611880040683503, 0.1816530428311551], 'true': [0.23611880040683503, nan], 'true,true': [0.0, 0.24878191599993257], 'false': [0.15209502287023077, 0.22222222222222215], 'false,false': [nan, 0.22222222222222215]}, {'': [0.16215129165114034, 0.23115123260410145], 'false': [nan, 0.23115123260410145], 'false,false': [0.23115123260410145, nan], 'false,false,true': [nan, 0.23115123260410145]}, {'': [0.16129884738164887, 0.23112691651463516], 'false': [nan, 0.23112691651463516], 'false,false': [nan, 0.23112691651463516], 'false,false,false': [0.24, 0.2222222222222222]}, {'': [0.14584195709713066, 0.22902091852690046], 'false': [0.24830646048442123, 0.21551059818020152], 'false,false': [nan, 0.21551059818020155], 'false,false,false': [nan, 0.21551059818020152], 'true': [0.14584195709713066, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteledsportsteam(C, D).;true;true
0;false;teamalsoknownas(A, F).;true;true
0;false,false;teamplaysagainstteam(I, A), teamalsoknownas(I, J).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteledsportsteam(C, D).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false;teamalsoknownas(A, E).;true;true
4;false,false;teamplaysagainstteam(G, A).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;teamplaysagainstteam(A, E), teamalsoknownas(E, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysagainstteam(G, A), teamalsoknownas(G, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 2.98e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783633;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, C) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.982389
   AUC PR    = 0.118504
   CLL	      = -0.108688
   Precision = 0.119666 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2134


Total learning time: 1.465 seconds
Total inference time: 4.077 seconds
AUC ROC: 0.982389


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.544 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982389
   AUC PR    = 0.118504
   CLL	      = -0.108688
   Precision = 0.119666 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2134


Total learning time: 4.058999999999999 seconds
Total inference time: 4.077 seconds
AUC ROC: 0.982389
Total revision time: 4.058999999999999
Best scored revision CLL: -0.094637


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 08:40:45
{'AUC ROC': 0.982389, 'AUC PR': 0.118504, 'CLL': -0.108688, 'Precision': [0.119666, 0.5], 'Recall': 0.984733, 'F1': 0.2134, 'Learning time': 4.058999999999999, 'Inference time': 4.077, 'parameter_15': {'AUC ROC': 0.504661, 'AUC PR': 0.002454, 'CLL': -0.631429, 'Precision': [0.00243, 0.5], 'Recall': 0.435115, 'F1': 0.004834, 'Learning time': 1.414, 'Inference time': 58.614}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return 0.15814893509951225;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.5581489350995124;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( teamalsoknownas(I, J) )
%   | | | then return 0.524815601766179;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.3068003467722139;  // std dev = 0.488, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return 0.04980094288019965;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return 0.09167485558039142;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.4180988423144525;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( athleteplaysforteam(I, J) )
%   | | | then return 0.39146395449183186;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplaysforteam(E, C) )
%   | then return 0.2010955162425992;  // std dev = 3.003, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.1157279135223809;  // std dev = 0.461, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.5928656491588891;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then if ( teamalsoknownas(F, E) )
%   | | | then return 0.11428976073451239;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22922928552252542;  // std dev = 0.481, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.09043681031593938;  // std dev = 0.460, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.4459517366761949;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13872400954958872;  // std dev = 0.484, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return -0.3023535089386388;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( teamalsoknownas(F, C) )
%   | | | then return 0.0626738285421582;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.11151623756191237;  // std dev = 1.975, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.1551427969978108;  // std dev = 1.607, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.05290665339139078;  // std dev = 2.021, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F), athleteplaysforteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.049057129595360814;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.11682444308393451;  // std dev = 1.608, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplaysforteam(D, C) )
%   | then return 0.05964155300985754;  // std dev = 1.986, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return -0.31787241051847054;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplaysforteam(E, F) )
%   | then return 0.06826776097811779;  // std dev = 0.473, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.04154038282917272;  // std dev = 2.915, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.50961
   AUC PR    = 0.002548
   CLL	      = -0.653107
   Precision = 0.002452 at threshold = 0.5
   Recall    = 0.557252
   F1        = 0.004883


Total learning time: 1.946 seconds
Total inference time: 95.408 seconds
AUC ROC: 0.50961


Results scoring model
   AUC ROC   = 0.725
   AUC PR    = 0.692458
   CLL	      = -0.616876
   Precision = 0.681818 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.714286


Total scoring time: 0.702 seconds
Parameter learned model CLL: -0.616876


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, D)', 'true': 'athleteplaysforteam(C, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamalsoknownas(G, F)', 'false,false': 'teamplaysagainstteam(A, H)', 'false,false,false': 'teamalsoknownas(I, J)'}, {'true,true': [1.225, 6, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.458, 7, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.458, 3, 7], 'false,false,false,true': [1.633, 4, 8], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.488, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, D)', 'true': 'athleteplaysforteam(C, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamalsoknownas(G, F)', 'false,false': 'teamplaysagainstteam(A, H)', 'false,false,false': 'athleteplaysforteam(I, J)'}, {'true,true': [0.433, 6, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [1.449, 7, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.449, 3, 7], 'false,false,false,true': [1.633, 4, 8], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)', 'true': 'athleteplaysforteam(E, C)'}, {'true,true': [3.003, 20, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,true': 'teamalsoknownas(F, E)'}, {'true': [0.461, 11, 9], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.369, 5, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.481, 4, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'athleteplaysforteam(D, A)'}, {'true': [0.46, 11, 9], 'false,true': [0.0, 0, 1], 'false,false': [0.484, 9, 10]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, C)', 'true,true': 'teamplaysagainstteam(A, E)', 'true,true,false': 'teamalsoknownas(F, C)', 'false': 'teamplaysagainstteam(A, G)'}, {'true,true,true': [0.0, 2, 0], 'true,true,false,true': [1.369, 5, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.975, 9, 9], 'false,false': [1.607, 4, 8]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, E)', 'false': 'teamplaysagainstteam(A, F), athleteplaysforteam(G, F)', 'false,false': 'teamalsoknownas(A, H)'}, {'true,true': [2.021, 11, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.369, 5, 3], 'false,false,false': [1.608, 4, 8]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'athleteplaysforteam(D, C)', 'false': 'athleteplaysforteam(E, F)'}, {'true,true': [1.986, 10, 9], 'true,false': [0.0, 1, 0], 'false,true': [0.473, 9, 11], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [2.915, 20, 20], 'false': [0.0, 0, 0]}]]
[{'': [0.18750000000000003, 0.2460937499999997], 'false': [0.20999999999999988, 0.21694214876033016], 'false,false': [0.20999999999999988, 0.2222222222222221], 'false,false,false': [0.2222222222222221, nan], 'false,true': [0.20999999999999988, nan], 'true': [0.18750000000000003, nan]}, {'': [0.2384788932092498, nan]}, {'': [0.18749999999999997, 0.2356040486073478], 'false': [0.21000000000000005, 0.21684255524087923], 'false,false': [0.21000000000000005, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,true': [0.21000000000000005, nan], 'true': [0.18749999999999997, nan]}, {'': [0.22544414243723035, nan], 'true': [0.22544414243723035, nan]}, {'': [0.2121508467955458, 0.2321462292875832], 'false': [0.0, 0.23587593536616017], 'false,false': [0.23437500000000003, 0.23140495867768596], 'false,false,true': [0.23437500000000003, nan]}, {'': [0.21117598848775315, 0.22703609315368353], 'false': [0.0, 0.23426591739863467]}, {'': [0.2088191931373312, 0.21661979881245189], 'false': [0.2167849884994019, 0.21523004826909878], 'true': [0.2088191931373312, nan], 'true,true': [0.0, 0.23437500000000003], 'true,true,false': [0.23437500000000003, nan]}, {'': [0.20427278909871283, 0.2240802392517358], 'false': [nan, 0.2240802392517358], 'false,false': [0.23437499999999997, 0.21538010190857615], 'true': [0.20427278909871283, nan]}, {'': [0.20391183713611713, 0.22367029618596862], 'false': [0.22367029618596862, nan], 'true': [0.20751819945770622, 0.0]}, {'': [0.21249668602358057, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false;athleteplaysforteam(D, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
5;false;athleteplaysforteam(D, A).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;teamplaysagainstteam(A, E).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
8;true;athleteplaysforteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplaysforteam(D, C) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.983365
   AUC PR    = 0.119157
   CLL	      = -0.100411
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 2.274 seconds
Total inference time: 5.851 seconds
AUC ROC: 0.983365


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.577 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983365
   AUC PR    = 0.119157
   CLL	      = -0.100411
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 5.499 seconds
Total inference time: 5.851 seconds
AUC ROC: 0.983365
Total revision time: 5.499
Best scored revision CLL: -0.094637


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 08:42:32
{'AUC ROC': 0.983365, 'AUC PR': 0.119157, 'CLL': -0.100411, 'Precision': [0.119444, 0.5], 'Recall': 0.984733, 'F1': 0.213047, 'Learning time': 5.499, 'Inference time': 5.851, 'parameter_20': {'AUC ROC': 0.50961, 'AUC PR': 0.002548, 'CLL': -0.653107, 'Precision': [0.002452, 0.5], 'Recall': 0.557252, 'F1': 0.004883, 'Learning time': 1.946, 'Inference time': 95.408}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
0;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
0;false;cityhascompanyoffice(F, A).;true;true
0;false,true;cityhascompanyoffice(F, G), economicsectorcompany(B, G).;true;false
0;false,true,true;acquired(G, H).;false;false
0;false,false;companyalsoknownas(A, I).;true;true
0;false,false,true;economicsectorcompany(B, I).;false;false
0;false,false,false;acquired(J, A), cityhascompanyoffice(K, J).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
1;true;economicsectorcompany(B, C).;false;true
1;true,false;companyalsoknownas(C, E), acquired(F, E).;true;true
1;true,false,true;companyceo(A, G).;false;false
1;true,false,false;acquired(H, C), cityhascompanyoffice(I, C).;false;false
1;false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;true
1;false,false;acquired(A, K), economicsectorcompany(B, K).;false;true
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
2;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;true;false
2;true,true;acquired(A, F), bankboughtbank(A, F).;false;false
2;false;bankchiefexecutiveceo(A, G), cityhascompanyoffice(H, A).;true;true
2;false,true;companyceo(I, G), economicsectorcompany(B, I).;false;true
2;false,true,false;cityhascompanyoffice(H, J), economicsectorcompany(B, J).;false;false
2;false,false;companyalsoknownas(A, K), economicsectorcompany(B, K).;false;true
2;false,false,false;acquired(L, A), countryhascompanyoffice(M, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
3;true;companyceo(C, E), acquired(F, C).;true;true
3;true,true;companyceo(F, G).;false;true
3;true,true,false;economicsectorcompany(B, F).;false;false
3;true,false;countryhascompanyoffice(H, C).;false;false
3;false;acquired(A, I), companyceo(I, J).;false;true
3;false,false;acquired(K, A), economicsectorcompany(B, K).;false;true
3;false,false,false;companyalsoknownas(A, L), economicsectorcompany(B, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;companyceo(A, D), acquired(A, E).;false;false
4;false;acquired(A, F), economicsectorcompany(B, F).;true;true
4;false,true;acquired(G, A), economicsectorcompany(B, G).;false;true
4;false,true,false;countryhascompanyoffice(H, A).;false;false
4;false,false;cityhascompanyoffice(I, A).;true;true
4;false,false,true;cityhascompanyoffice(I, J), economicsectorcompany(B, J).;false;false
4;false,false,false;acquired(K, A), bankboughtbank(K, L).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;true
5;true,false;acquired(E, A), acquired(F, E).;false;true
5;true,false,false;economicsectorcompany(B, C).;false;false
5;false;countryhascompanyoffice(G, A).;false;true
5;false,false;acquired(A, H), companyceo(A, I).;true;true
5;false,false,true;acquired(H, J), acquired(K, A).;false;false
5;false,false,false;acquired(L, A), economicsectorcompany(B, L).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
6;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;true;false
6;true,true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,true,false;acquired(A, F), cityhascompanyoffice(C, F).;false;false
6;false;acquired(G, A), economicsectorcompany(B, G).;false;true
6;false,false;companyceo(A, H), acquired(A, I).;true;true
6;false,false,true;economicsectorcompany(B, I).;false;false
6;false,false,false;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
7;true;acquired(D, A), companyalsoknownas(D, E).;false;false
7;false;acquired(F, A), bankboughtbank(G, F).;true;true
7;false,true;acquired(H, F), economicsectorcompany(B, H).;false;true
7;false,true,false;acquired(I, F).;false;false
7;false,false;companyalsoknownas(A, J), countryhascompanyoffice(K, J).;true;true
7;false,false,true;acquired(A, L), acquired(J, M).;false;false
7;false,false,false;cityhascompanyoffice(N, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false;acquired(D, A).;true;true
8;false,true;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(G, E).;false;false
8;false,true,false;companyceo(D, H).;false;false
8;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
8;false,false,true;economicsectorcompany(B, I).;false;false
8;false,false,false;cityhascompanyoffice(K, A).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;acquired(D, A), economicsectorcompany(B, D).;false;true
9;true,false;economicsectorcompany(B, C).;false;true
9;true,false,false;cityhascompanyoffice(E, C), acquired(F, A).;false;false
9;false;cityhascompanyoffice(G, A).;false;true
9;false,false;companyceo(A, H).;true;true
9;false,false,true;acquired(I, A), cityhascompanyoffice(J, I).;false;false
9;false,false,false;countryhascompanyoffice(K, A), bankbankincountry(L, K).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return 0.19148226843284566;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.5581489350995124;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( teamalsoknownas(I, J) )
%   | | | then return 0.48972788246793336;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.3070734141230515;  // std dev = 0.490, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return 0.02639091117231075;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then if ( teamalsoknownas(G, F) )
%   | | then return 0.11941129228506926;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.41804356120813757;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( athleteplaysforteam(I, J) )
%   | | | then return 0.36326596425261914;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( athleteplaysforteam(E, C) )
%   | then return 0.2017487078243515;  // std dev = 3.384, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.1297353726342019;  // std dev = 0.464, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.6078262367983331;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then if ( teamalsoknownas(F, E) )
%   | | | then return 0.06049796080540015;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21893734790944425;  // std dev = 0.487, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.10176844921372256;  // std dev = 0.463, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.45769086603908316;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12658014852146948;  // std dev = 0.485, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return -0.0603902058394645;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamalsoknownas(F, C) )
%   | | | then return 0.02185268401463685;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.11012145425720904;  // std dev = 1.969, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.14551667177091313;  // std dev = 2.079, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.06069496559400076;  // std dev = 2.157, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F), athleteplaysforteam(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.017146948733517915;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.10937329986674613;  // std dev = 2.079, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplaysforteam(D, C) )
%   | then return 0.0639476779263718;  // std dev = 2.124, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else return -0.3138684190428271;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplaysforteam(E, F) )
%   | then return 0.0601842848563562;  // std dev = 0.476, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.04131407316124738;  // std dev = 3.308, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.509799
   AUC PR    = 0.002548
   CLL	      = -0.642745
   Precision = 0.002452 at threshold = 0.5
   Recall    = 0.557252
   F1        = 0.004883


Total learning time: 2.169 seconds
Total inference time: 95.062 seconds
AUC ROC: 0.509799


Results scoring model
   AUC ROC   = 0.688
   AUC PR    = 0.658969
   CLL	      = -0.630837
   Precision = 0.655172 at threshold = 0.5
   Recall    = 0.76
   F1        = 0.703704


Total scoring time: 0.689 seconds
Parameter learned model CLL: -0.630837


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, D)', 'true': 'athleteplaysforteam(C, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamalsoknownas(G, F)', 'false,false': 'teamplaysagainstteam(A, H)', 'false,false,false': 'teamalsoknownas(I, J)'}, {'true,true': [1.247, 7, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.471, 8, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.458, 3, 7], 'false,false,false,true': [2.103, 7, 12], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.49, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, D)', 'true': 'athleteplaysforteam(C, E)', 'false': 'teamalsoknownas(A, F)', 'false,true': 'teamalsoknownas(G, F)', 'false,false': 'teamplaysagainstteam(A, H)', 'false,false,false': 'athleteplaysforteam(I, J)'}, {'true,true': [0.416, 7, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [1.633, 8, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.449, 3, 7], 'false,false,false,true': [2.103, 7, 12], 'false,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)', 'true': 'athleteplaysforteam(E, C)'}, {'true,true': [3.384, 25, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,true': 'teamalsoknownas(F, E)'}, {'true': [0.464, 12, 10], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.414, 6, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.487, 7, 11]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'athleteplaysforteam(D, A)'}, {'true': [0.463, 12, 10], 'false,true': [0.0, 0, 1], 'false,false': [0.485, 13, 14]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'teamalsoknownas(D, C)', 'true,true': 'teamplaysagainstteam(A, E)', 'true,true,false': 'teamalsoknownas(F, C)', 'false': 'teamplaysagainstteam(A, G)'}, {'true,true,true': [0.854, 3, 1], 'true,true,false,true': [1.414, 6, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.969, 9, 9], 'false,false': [2.079, 7, 12]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, E)', 'false': 'teamplaysagainstteam(A, F), athleteplaysforteam(G, F)', 'false,false': 'teamalsoknownas(A, H)'}, {'true,true': [2.157, 12, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.414, 6, 3], 'false,false,false': [2.079, 7, 12]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'athleteplaysforteam(D, C)', 'false': 'athleteplaysforteam(E, F)'}, {'true,true': [2.124, 11, 10], 'true,false': [0.0, 1, 0], 'false,true': [0.476, 13, 15], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'true': [3.308, 25, 25], 'false': [0.0, 0, 0]}]]
[{'': [0.17283950617283952, 0.2462819750148717], 'false': [0.22222222222222207, 0.22592152199762158], 'false,false': [0.20999999999999988, 0.2326869806094179], 'false,false,false': [0.2326869806094179, nan], 'false,true': [0.22222222222222207, nan], 'true': [0.17283950617283952, nan]}, {'': [0.24016803996614072, nan]}, {'': [0.17283950617283947, 0.2388616259873293], 'false': [0.22222222222222235, 0.22554178060660102], 'false,false': [0.2100000000000001, 0.2326869806094184], 'false,false,false': [0.2326869806094184, nan], 'false,true': [0.22222222222222235, nan], 'true': [0.17283950617283947, nan]}, {'': [0.22904388833484582, nan], 'true': [0.22904388833484582, nan]}, {'': [0.21534653288456848, 0.2363046001987615], 'false': [0.0, 0.23808874126271123], 'false,false': [0.2222222222222222, 0.2376543209876542], 'false,false,true': [0.2222222222222222, nan]}, {'': [0.21434654933541172, 0.23093407876293592], 'false': [0.0, 0.23557168181779892]}, {'': [0.2114392388178938, 0.22185389289456697], 'false': [0.21532830506596523, 0.22742654803999582], 'true': [0.2114392388178938, nan], 'true,true': [0.18249483105169445, 0.22222222222222218], 'true,true,false': [0.22222222222222218, nan]}, {'': [0.21150184486991952, 0.22766893084068984], 'false': [nan, 0.22766893084068984], 'false,false': [0.2222222222222222, 0.22751497576294763], 'true': [0.21150184486991952, nan]}, {'': [0.2112081499694409, 0.2269105030511798], 'false': [0.2269105030511798, nan], 'true': [0.21477727168722846, 0.0]}, {'': [0.21891090231629465, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false;athleteplaysforteam(D, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
5;false;athleteplaysforteam(D, A).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
8;true;athleteplaysforteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.2551722425694894;  // std dev = 2.11e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplaysforteam(D, C) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.983143
   AUC PR    = 0.11646
   CLL	      = -0.100868
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 3.26 seconds
Total inference time: 5.777 seconds
AUC ROC: 0.983143


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.543 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983143
   AUC PR    = 0.11646
   CLL	      = -0.100868
   Precision = 0.119444 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.213047


Total learning time: 6.6610000000000005 seconds
Total inference time: 5.777 seconds
AUC ROC: 0.983143
Total revision time: 6.6610000000000005
Best scored revision CLL: -0.094637


Dataset: 10_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 08:44:20
{'AUC ROC': 0.983143, 'AUC PR': 0.11646, 'CLL': -0.100868, 'Precision': [0.119444, 0.5], 'Recall': 0.984733, 'F1': 0.213047, 'Learning time': 6.6610000000000005, 'Inference time': 5.777, 'parameter_25': {'AUC ROC': 0.509799, 'AUC PR': 0.002548, 'CLL': -0.642745, 'Precision': [0.002452, 0.5], 'Recall': 0.557252, 'F1': 0.004883, 'Learning time': 2.169, 'Inference time': 95.062}}


