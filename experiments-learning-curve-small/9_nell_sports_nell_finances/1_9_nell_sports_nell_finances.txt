Starting experiment #1 for 9_nell_sports_nell_finances

Start learning from source dataset

Source train facts examples: 9691
Source train pos examples: 397
Source train neg examples: 159991

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), athleteledsportsteam(C, E) )
%   | then return 0.8581489350995095;  // std dev = 1.08e-06, 177.000 (wgt'ed) examples reached here.  /* #pos=177 */
%   | else if ( teamplaysinleague(A, F), teamplaysagainstteam(A, G) )
%   | | then if ( athleteplaysinleague(H, F), athleteplayssport(H, B) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8359267128772896;  // std dev = 0.989, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else if ( athleteledsportsteam(C, I), teamplaysinleague(A, J) )
%   | | | then return 0.83283247940331;  // std dev = 1.396, 79.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=77 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   else if ( teamalsoknownas(K, A), teamalsoknownas(L, K) )
%   | then if ( teamplaysagainstteam(A, M), athleteledsportsteam(N, L) )
%   | | then if ( teamplaysinleague(A, P) )
%   | | | then return -0.1073683062797981;  // std dev = 0.983, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1288640519134747;  // std dev = 0.113, 77.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=1 */
%   | else return -0.13727789416878136;  // std dev = 0.067, 656.000 (wgt'ed) examples reached here.  /* #neg=653 #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E), athleteledsportsteam(F, E) )
%   | then if ( athleteplaysinleague(F, D), athleteledsportsteam(C, G) )
%   | | then return 0.7198167346116857;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.24066035431913693;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( athleteledsportsteam(H, A), athleteplayssport(H, I) )
%   | | then if ( athleteledsportsteam(C, A), teamplaysinleague(A, D) )
%   | | | then return 0.7194734122109547;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | | else return 0.5222914488329002;  // std dev = 1.905, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | else if ( teamplaysinleague(A, D), athleteledsportsteam(C, J) )
%   | | | then return 0.7194734122109543;  // std dev = 2.06e-07, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | | else return 0.6897856093547587;  // std dev = 2.563, 209.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=202 */
%   else if ( teamplaysinleague(A, K) )
%   | then return -0.12254567706592416;  // std dev = 0.060, 550.000 (wgt'ed) examples reached here.  /* #neg=548 #pos=2 */
%   | else if ( teamplaysagainstteam(L, A), teamalsoknownas(M, L) )
%   | | then return -0.12594721321607463;  // std dev = 7.45e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.10155923759225893;  // std dev = 0.156, 158.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.5609847527877955;  // std dev = 0.061, 295.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=294 */
%   | | else if ( athleteplaysforteam(C, F), teamalsoknownas(D, F) )
%   | | | then return 0.39601814776555644;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5494295097287787;  // std dev = 0.993, 76.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=75 */
%   | else if ( athleteplaysforteam(G, A), teamplaysinleague(A, H) )
%   | | then if ( athleteledsportsteam(G, A), athleteplaysinleague(C, I) )
%   | | | then return 0.29465362624278124;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.21599557264354557;  // std dev = 0.259, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(A, J), teamalsoknownas(J, A) )
%   | | | then return 0.4469677646244811;  // std dev = 0.976, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.6126633055500333;  // std dev = 0.418, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( teamplaysagainstteam(A, K), teamalsoknownas(L, A) )
%   | then return -0.0843868412463996;  // std dev = 0.177, 60.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=2 */
%   | else return -0.11224732324671716;  // std dev = 0.998, 722.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(C, E) )
%   | then if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, A) )
%   | | then return 0.42719286885234536;  // std dev = 0.227, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | else if ( teamplaysinleague(A, H), teamplaysagainstteam(A, I) )
%   | | | then return 0.40122131562862073;  // std dev = 1.401, 97.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=95 */
%   | | | else return 0.4221134912901403;  // std dev = 0.966, 179.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=178 */
%   | else if ( teamalsoknownas(J, A) )
%   | | then return 0.49099644783330104;  // std dev = 0.143, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamplaysagainstteam(K, A), athleteledsportsteam(L, K) )
%   | | | then return 0.43318562532016347;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21185466275625686;  // std dev = 1.126, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( teamalsoknownas(M, A), athleteplaysforteam(N, M) )
%   | then if ( teamplaysagainstteam(P, A), teamplaysagainstteam(P, M) )
%   | | then return -0.10571528878100572;  // std dev = 0.007, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.07164192366566832;  // std dev = 0.373, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else return -0.09873752464017227;  // std dev = 0.068, 776.000 (wgt'ed) examples reached here.  /* #neg=772 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D) )
%   | then if ( athleteledsportsteam(C, D), teamplaysinleague(A, E) )
%   | | then return 0.3246012770585927;  // std dev = 0.058, 295.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=294 */
%   | | else if ( athleteledsportsteam(F, D) )
%   | | | then return 0.3173534653551208;  // std dev = 1.222, 83.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=81 */
%   | | | else return 0.05964431239776782;  // std dev = 0.858, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.35416824008243947;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.5324294073683274;  // std dev = 0.362, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamalsoknownas(H, A), teamplaysagainstteam(A, I) )
%   | then if ( teamplaysinleague(A, J) )
%   | | then if ( teamalsoknownas(K, I) )
%   | | | then return -0.09682172528429608;  // std dev = 0.010, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.018497568818531724;  // std dev = 0.944, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return 0.20245344735787804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09269349609051258;  // std dev = 0.037, 726.000 (wgt'ed) examples reached here.  /* #neg=725 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamalsoknownas(A, F), teamalsoknownas(F, G) )
%   | | then if ( teamplaysagainstteam(G, A), athleteledsportsteam(H, G) )
%   | | | then return 0.10556020296764833;  // std dev = 1.275, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.24868911214910117;  // std dev = 1.006, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | | else if ( athleteledsportsteam(I, A), athleteplaysinleague(I, J) )
%   | | | then return 0.2381854690371873;  // std dev = 1.364, 87.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=85 */
%   | | | else return 0.2564542529268348;  // std dev = 1.227, 222.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=220 */
%   | else if ( teamalsoknownas(K, A), athleteplaysforteam(L, K) )
%   | | then return 0.49724015568920704;  // std dev = 0.389, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(M, A), athleteplaysinleague(C, N) )
%   | | | then return 0.2723152342790612;  // std dev = 0.085, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.07914287229495245;  // std dev = 1.135, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( teamplaysagainstteam(A, P), teamalsoknownas(Q, A) )
%   | then return -0.06829442885436221;  // std dev = 0.156, 74.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=2 */
%   | else return -0.08515300163835293;  // std dev = 0.037, 735.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), teamplaysinleague(A, F) )
%   | then if ( teamplaysinleague(E, D) )
%   | | then if ( teamalsoknownas(E, G), athleteplaysforteam(C, G) )
%   | | | then return 0.2156369383726371;  // std dev = 0.143, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | | else return 0.18477328160223733;  // std dev = 1.378, 63.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=61 */
%   | | else if ( athleteplaysinleague(H, F), athleteplaysforteam(H, E) )
%   | | | then return -0.4734783299464969;  // std dev = 1.159, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.22784863404561437;  // std dev = 0.140, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.2113014430342016;  // std dev = 0.073, 191.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=190 */
%   else if ( teamplaysinleague(A, I) )
%   | then return -0.07787085690774936;  // std dev = 0.051, 626.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=2 */
%   | else if ( teamalsoknownas(J, A), teamalsoknownas(A, J) )
%   | | then return -0.01538712652726561;  // std dev = 0.251, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return -0.09039711002002808;  // std dev = 0.241, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.06013881103258081;  // std dev = 1.514, 116.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), athleteplaysforteam(C, D) )
%   | then if ( athleteledsportsteam(C, E), teamalsoknownas(F, E) )
%   | | then return 0.1835327669010581;  // std dev = 0.157, 152.000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | | else if ( athleteplaysforteam(G, A), athleteplaysinleague(G, H) )
%   | | | then return 0.07349680534895116;  // std dev = 0.915, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.19375032499075492;  // std dev = 0.114, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( teamplaysagainstteam(A, I), athleteledsportsteam(J, I) )
%   | | then if ( athleteplayssport(J, K) )
%   | | | then return -0.07858558606119784;  // std dev = 1.668, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.1622813797095382;  // std dev = 0.314, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( athleteplaysforteam(C, L), athleteledsportsteam(M, L) )
%   | | | then return 0.16756076687099972;  // std dev = 1.875, 191.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=187 */
%   | | | else return 0.2675492652720794;  // std dev = 0.737, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( teamalsoknownas(N, A), teamplaysagainstteam(A, P) )
%   | then return -0.050584702833408275;  // std dev = 0.175, 59.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=2 */
%   | else return -0.07338055361052825;  // std dev = 0.037, 722.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteplaysforteam(C, D), athleteledsportsteam(E, D) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then if ( teamplaysinleague(D, F) )
%   | | | then return 0.1502598413011889;  // std dev = 1.275, 237.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=235 */
%   | | | else return 0.08880751201763123;  // std dev = 2.111, 66.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   | | else if ( athleteledsportsteam(C, D), teamalsoknownas(D, G) )
%   | | | then return 0.16184649097954398;  // std dev = 0.053, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0.17138680269293213;  // std dev = 0.535, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | then if ( teamplaysagainstteam(A, J) )
%   | | | then return -0.2243354405158374;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1483286364676036;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplaysforteam(C, K) )
%   | | | then return -0.007242169349756372;  // std dev = 0.779, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.168844654292378;  // std dev = 0.716, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.06697004208325173;  // std dev = 0.059, 805.000 (wgt'ed) examples reached here.  /* #neg=802 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B), athleteplaysforteam(E, D) )
%   | then return 0.12593708922651056;  // std dev = 0.116, 139.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=137 */
%   | else if ( teamplaysagainstteam(C, D), athleteledsportsteam(F, C) )
%   | | then if ( athleteplayssport(G, B), athleteplayssport(F, H) )
%   | | | then return -0.25286002914696787;  // std dev = 1.804, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.06494269610536349;  // std dev = 0.959, 293.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=5 */
%   | | else return -0.00487275684339109;  // std dev = 0.096, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   else if ( athleteplayssport(I, B) )
%   | then if ( teamplaysagainstteam(A, J), athleteledsportsteam(K, J) )
%   | | then if ( teamalsoknownas(L, A) )
%   | | | then return -0.16743901311767406;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14115289878329126;  // std dev = 0.054, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( teamalsoknownas(A, M), teamplaysinleague(A, N) )
%   | | | then return 0.16077867409915583;  // std dev = 0.546, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.13059151576422637;  // std dev = 1.636, 164.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=161 */
%   | else return -0.059557026747162435;  // std dev = 0.081, 430.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=3 */


Starting fold 1

Target train facts examples: 5307
Target train pos examples: 518
Target train neg examples: 366436

Target test facts examples: 5307
Target test pos	 examples: 260
Target test neg examples: 183219

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(J, K) )
%   | then return 0.02176788419240575;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(F, A), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3523832062781437;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankboughtbank(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1476167937218563;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( acquired(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014121556555333028;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(E, D) )
%   | | then return 0.3000987641181543;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.13159699075945508;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A), companyalsoknownas(H, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2522157900870589;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11727327820250283;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.21012557589939612;  // std dev = 0.000425, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.00466952080888076;  // std dev = 0.322, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), bankboughtbank(E, D) )
%   | then return 0.1774740572824457;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.1857225041659986;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1052268674756015;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(C, E), bankboughtbank(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15402658733234334;  // std dev = 0.707, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09572288894082016;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.1296575431026229;  // std dev = 0.707, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( acquired(F, D) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08775167430493871;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.966838
   AUC PR    = 0.022626
   CLL	      = -0.203776
   Precision = 0.026411 at threshold = 0.5
   Recall    = 0.846154
   F1        = 0.051222


Total learning time: 3.049 seconds
Total inference time: 186.456 seconds
AUC ROC: 0.966838


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.983333
   CLL	      = -0.226501
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 1.043 seconds
Parameter learned model CLL: -0.226501


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(C, E)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [2.11e-08, 0, 3], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.913, 5, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,false': 'acquired(C, I)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 3], 'true,false,false,false': [0.0, 0, 1], 'false,true': [0.913, 5, 1], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(F, A), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.707, 1, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(C, E)', 'true,true': 'acquired(F, A)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.866, 5, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,false': 'acquired(E, D)', 'false': 'bankboughtbank(F, A)'}, {'true,true': [0.0, 0, 4], 'true,false,true': [0.707, 1, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(H, A), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.707, 1, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [0.000425, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.322, 5, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.707, 1, 4], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(C, E), bankboughtbank(E, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.707, 1, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(F, D)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [0.707, 1, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.0, 0.1388888888888889], 'false': [nan, 0.13888888888888892], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0, 0.1388888888888889], 'false': [0.13888888888888887, nan], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [0.09248937596695168, 0.0], 'true': [0.0, 0.25], 'true,false': [nan, 0.25], 'true,false,false': [nan, 0.25], 'false': [nan, 0.0], 'true,true': [nan, 0.0]}, {'': [0.0, 0.12487051925689785], 'false': [nan, 0.12487051925689789], 'true': [-3.700743415417188e-17, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan], 'true,true': [0.0, 0.0]}, {'': [0.08342775537611023, 0.0], 'true': [0.0, 0.24999999999999997], 'true,false': [0.24999999999999997, nan], 'false': [nan, 0.0]}, {'': [0.08334547307122346, 0.0], 'true': [0.08334547307122346, nan], 'true,true': [nan, 0.08334547307122346], 'true,true,false': [0.0, 0.10001311091692133], 'false': [nan, 0.0]}, {'': [4.5107058650739607e-08, 0.10373444967209768], 'false': [nan, 0.1037344496720977], 'true': [4.5107058650739607e-08, nan]}, {'': [0.08343083915506468, 0.0], 'true': [0.0, 0.10010566750674581], 'true,false': [0.10010566750674585, nan], 'false': [nan, 0.0]}, {'': [0.08334067948946738, 0.0], 'true': [0.08334067948946738, nan], 'true,true': [nan, 0.08334067948946738]}, {'': [0.06136015542080821, nan], 'true': [0.08336021857583965, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(C, E).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(C, E).;true;true
3;true,true;acquired(F, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(C, D).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;acquired(H, A), companyalsoknownas(H, I).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(C, D), bankboughtbank(E, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.02481560176617888;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(C, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.021767884192405735;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3523832062781437;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else return -0.1476167937218563;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( acquired(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return 0.014121556555333037;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3000987641181543;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else return -0.13159699075945508;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A), companyalsoknownas(D, E) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2522157900870589;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.11727327820250283;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then return 0.21012557589939612;  // std dev = 0.000425, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.00466952080888076;  // std dev = 0.789, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), bankboughtbank(E, D) )
%   | then return 0.1774740572824457;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1857225041659986;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.1052268674756015;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.1540265873323433;  // std dev = 0.707, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09572288894082016;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.1296575431026229;  // std dev = 0.707, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08775167430493871;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.968507
   AUC PR    = 0.023429
   CLL	      = -0.206382
   Precision = 0.026411 at threshold = 0.5
   Recall    = 0.846154
   F1        = 0.051222


Total learning time: 0.712 seconds
Total inference time: 7.9 seconds
AUC ROC: 0.968507


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.983333
   CLL	      = -0.226501
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.478 seconds
Refined model CLL: -0.226501


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.966838
   AUC PR    = 0.022626
   CLL	      = -0.203776
   Precision = 0.026411 at threshold = 0.5
   Recall    = 0.846154
   F1        = 0.051222


Total learning time: 5.281999999999999 seconds
Total inference time: 186.456 seconds
AUC ROC: 0.966838
Total revision time: 5.281999999999999
Best scored revision CLL: -0.226501


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:21
{'AUC ROC': 0.966838, 'AUC PR': 0.022626, 'CLL': -0.203776, 'Precision': [0.026411, 0.5], 'Recall': 0.846154, 'F1': 0.051222, 'Learning time': 5.281999999999999, 'Inference time': 186.456, 'parameter_5': {'AUC ROC': 0.966838, 'AUC PR': 0.022626, 'CLL': -0.203776, 'Precision': [0.026411, 0.5], 'Recall': 0.846154, 'F1': 0.051222, 'Learning time': 3.049, 'Inference time': 186.456}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A), companyalsoknownas(G, F) )
%   | then if ( bankboughtbank(A, H), acquired(I, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, I) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A), companyalsoknownas(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12482690126584266;  // std dev = 1.677, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.31512941168482844;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( acquired(F, A), countryhascompanyoffice(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5651294116848284;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( bankboughtbank(A, I), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.17360077448813171;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A) )
%   | then if ( bankboughtbank(J, A), bankboughtbank(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12019076273429834;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.11866749493768329;  // std dev = 1.496, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.30072251764427865;  // std dev = 0.714, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( acquired(E, D) )
%   | | then return 0.43995178991668915;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.15956404037455163;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A), countryhascompanyoffice(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27233680896244405;  // std dev = 1.134, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, J), companyalsoknownas(K, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.13942803557394187;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21022633060890525;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(A, F) )
%   | then return -0.0824278554747654;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.041462400700616964;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, E), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(G, H) )
%   | | | then return 0.1937572535581966;  // std dev = 1.134, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A), bankboughtbank(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12584100220940986;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(C, E), companyalsoknownas(E, F) )
%   | | then return 0.15090183485026143;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.16214605113525682;  // std dev = 1.132, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11272548030337362;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1273175433009391;  // std dev = 1.132, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return -0.10199910012098368;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.969491
   AUC PR    = 0.047521
   CLL	      = -0.200478
   Precision = 0.013662 at threshold = 0.5
   Recall    = 0.934615
   F1        = 0.026931


Total learning time: 5.519 seconds
Total inference time: 136.78300000000002 seconds
AUC ROC: 0.969491


Results scoring model
   AUC ROC   = 0.97
   AUC PR    = 0.969429
   CLL	      = -0.267922
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 1.273 seconds
Parameter learned model CLL: -0.267922


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'false': 'companyalsoknownas(F, A), companyalsoknownas(G, F)', 'false,true': 'bankboughtbank(A, H), acquired(I, G)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [1.633, 8, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,false': 'acquired(C, I)', 'false': 'bankboughtbank(J, A), companyalsoknownas(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.11e-08, 0, 6], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.677, 10, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'acquired(F, A), countryhascompanyoffice(G, C)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'bankboughtbank(A, I), companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [0.707, 1, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.866, 1, 3], 'false,true': [0.0, 0, 0], 'false,false': [0.055, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'true,true': 'bankboughtbank(A, F), acquired(G, A)', 'true,true,false': 'bankboughtbank(A, H)', 'false': 'companyalsoknownas(I, A)', 'false,true': 'bankboughtbank(J, A), bankboughtbank(J, I)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [1.496, 8, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,false': 'acquired(E, D)', 'false': 'companyalsoknownas(F, A), bankboughtbank(A, G)'}, {'true,true': [0.714, 1, 7], 'true,false,true': [0.866, 1, 3], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.084, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,false': 'acquired(H, A), countryhascompanyoffice(I, H)', 'false': 'bankboughtbank(A, J), companyalsoknownas(K, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.134, 2, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.075, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E)', 'false': 'companyalsoknownas(F, A), companyalsoknownas(A, F)', 'false,false': 'bankboughtbank(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 6], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.291, 8, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,false': 'bankboughtbank(A, E), acquired(F, E)', 'true,false,false': 'acquired(G, H)', 'false': 'companyalsoknownas(I, A), bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.134, 2, 10], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.081, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [1.132, 2, 4], 'true,false': [0.0, 0, 0], 'false': [0.073, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(G, F)', 'false,true,false': 'companyalsoknownas(A, H)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.132, 2, 10], 'false,false': [0.067, 8, 0]}]]
[{'': [-1.4802973661668753e-16, 0.2040816326530612], 'false': [0.0, 0.22222222222222207], 'false,true': [nan, 0.0], 'true': [-1.4802973661668753e-16, nan]}, {'': [7.401486830834377e-17, 0.20091549774802003], 'false': [nan, 0.20091549774802012], 'true': [nan, 7.401486830834377e-17], 'true,false': [nan, 7.401486830834377e-17], 'true,false,false': [7.401486830834377e-17, nan]}, {'': [0.11246426051969549, 0.00038102611108842624], 'true': [0.07332134278944605, 0.18749999999999994], 'true,false': [nan, 0.18749999999999994], 'true,false,false': [nan, 0.18749999999999994], 'true,true': [-7.401486830834377e-17, 0.24999999999999997], 'false': [nan, 0.00038102611108842624]}, {'': [7.401486830834377e-17, 0.1667747715431773], 'false': [0.0, 0.18642010004921705], 'true': [7.401486830834377e-17, nan], 'true,true': [nan, 7.401486830834377e-17], 'true,true,false': [nan, 7.401486830834377e-17], 'false,true': [nan, 0.0]}, {'': [0.10927354442398927, 0.0008845644808552176], 'true': [0.06369871988348222, 0.1875], 'true,false': [0.1875, nan], 'false': [nan, 0.0008845644808552176]}, {'': [0.10719025585059956, 0.0006998866649370293], 'true': [0.10719025585059956, nan], 'true,true': [nan, 0.10719025585059956], 'true,true,false': [nan, 0.10719025585059953], 'false': [nan, 0.0006998866649370293]}, {'': [1.850371707708594e-17, 0.12085103512805499], 'false': [0.0, 0.13880018923389245], 'false,false': [nan, 0.13880018923389245], 'true': [nan, 1.850371707708594e-17]}, {'': [0.10708097540437707, 0.0008146629452578449], 'true': [nan, 0.10708097540437707], 'true,false': [nan, 0.10708097540437707], 'true,false,false': [0.10708097540437707, nan], 'false': [nan, 0.0008146629452578449]}, {'': [0.10680103267961098, 0.0006672648645628994], 'true': [0.10680103267961098, nan], 'true,true': [0.0, 0.21353884915929008]}, {'': [nan, 0.0769264271299141], 'false': [0.1068059976423714, 0.0005553975910498558], 'false,true': [nan, 0.1068059976423714], 'false,true,false': [nan, 0.1068059976423714]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
0;false;companyalsoknownas(F, A), companyalsoknownas(G, F).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
2;true,true;companyalsoknownas(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
3;false;companyalsoknownas(I, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
6;false;companyalsoknownas(F, A), companyalsoknownas(A, F).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(C, E), companyalsoknownas(E, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.19148226843284566;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(A, E) )
%   | then return -0.1530112186884315;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20060093398064474;  // std dev = 0.478, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3284191035064098;  // std dev = 0.672, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.5534371599891071;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.17352056889213968;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.11111069339893617;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.11505462869783041;  // std dev = 0.424, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.14342721927886476;  // std dev = 0.434, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.41270425798907256;  // std dev = 0.313, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.159770218976017;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.11485988619620445;  // std dev = 0.430, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3234138279735059;  // std dev = 0.312, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.1396664500058468;  // std dev = 0.096, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then return 0.21202528696679054;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | then return -0.07663793366918278;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.03877085324802419;  // std dev = 0.351, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.06358433573374563;  // std dev = 0.402, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.23670620231680065;  // std dev = 0.312, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.12607685369010202;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyalsoknownas(D, E) )
%   | then return 0.15637369907216833;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.15671922143320724;  // std dev = 1.025, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11295793297107229;  // std dev = 0.089, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.2590809950971558;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08468001708005128;  // std dev = 0.327, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.10222157655206192;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.967272
   AUC PR    = 0.035001
   CLL	      = -0.241204
   Precision = 0.013294 at threshold = 0.5
   Recall    = 0.930769
   F1        = 0.026213


Total learning time: 0.964 seconds
Total inference time: 8.351 seconds
AUC ROC: 0.967272


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.979572
   CLL	      = -0.241852
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.458 seconds
Refined model CLL: -0.241852


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.967272
   AUC PR    = 0.035001
   CLL	      = -0.241204
   Precision = 0.013294 at threshold = 0.5
   Recall    = 0.930769
   F1        = 0.026213


Total learning time: 8.214 seconds
Total inference time: 8.351 seconds
AUC ROC: 0.967272
Total revision time: 8.214
Best scored revision CLL: -0.241852


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:55
{'AUC ROC': 0.967272, 'AUC PR': 0.035001, 'CLL': -0.241204, 'Precision': [0.013294, 0.5], 'Recall': 0.930769, 'F1': 0.026213, 'Learning time': 8.214, 'Inference time': 8.351, 'parameter_10': {'AUC ROC': 0.969491, 'AUC PR': 0.047521, 'CLL': -0.200478, 'Precision': [0.013662, 0.5], 'Recall': 0.934615, 'F1': 0.026931, 'Learning time': 5.519, 'Inference time': 136.78300000000002}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(F, G), economicsectorcompany(B, F) )
%   | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then if ( bankboughtbank(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, E), bankboughtbank(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(C, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6189976143448207;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( companyalsoknownas(J, K) )
%   | then return 0.03017301239097241;  // std dev = 1.567, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(F, A), acquired(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47048454275862617;  // std dev = 1.442, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.1287924490282474;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.15294619130143564;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, I) )
%   | | | then return 0.36934246841363366;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return -0.11501883125381829;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.035813918798149436;  // std dev = 1.438, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankboughtbank(E, D) )
%   | | then return 0.3133338748469657;  // std dev = 1.449, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A) )
%   | then if ( companyalsoknownas(G, H) )
%   | | then return -0.10381937871440107;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.13838005831790418;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, A), acquired(H, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24778483394030607;  // std dev = 1.452, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return -0.09454953351710318;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1226909876330545;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, F) )
%   | then return 0.17536954977467845;  // std dev = 0.941, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.08675958678091462;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.011849203967968066;  // std dev = 0.331, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D), companyalsoknownas(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, G) )
%   | | then return 0.17422070123287828;  // std dev = 1.460, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.08012736184917993;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11125038492232078;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( bankboughtbank(C, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1424841248967826;  // std dev = 1.457, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09633364720277914;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.11772293695508873;  // std dev = 1.455, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( bankboughtbank(F, D) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08827559170158618;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973658
   AUC PR    = 0.069881
   CLL	      = -0.2037
   Precision = 0.02199 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.042932


Total learning time: 3.11 seconds
Total inference time: 181.679 seconds
AUC ROC: 0.973658


Results scoring model
   AUC ROC   = 0.957778
   AUC PR    = 0.951418
   CLL	      = -0.279039
   Precision = 0.923077 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.857143


Total scoring time: 0.94 seconds
Parameter learned model CLL: -0.279039


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,false': 'acquired(F, G), economicsectorcompany(B, F)', 'false': 'companyalsoknownas(H, A), companyalsoknownas(I, H)', 'false,true': 'bankboughtbank(J, I)'}, {'true,true': [0.0, 0, 5], 'true,false,true': [0.935, 1, 7], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [1.549, 12, 3]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(A, E), bankboughtbank(F, E)', 'true,false': 'bankboughtbank(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(C, I)', 'false': 'companyalsoknownas(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [0.935, 1, 7], 'false,true': [1.567, 14, 3], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'bankboughtbank(F, A), acquired(C, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'companyalsoknownas(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.442, 3, 10], 'false,true': [0.0, 2, 0], 'false,false': [1.05e-08, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'companyalsoknownas(G, A)', 'true,false,false': 'bankboughtbank(H, I)', 'false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.935, 1, 7], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [1.438, 12, 3]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,false': 'bankboughtbank(E, D)', 'false': 'companyalsoknownas(F, A)', 'false,true': 'companyalsoknownas(G, H)'}, {'true,true': [0.0, 0, 5], 'true,false,true': [1.449, 3, 10], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,false': 'bankboughtbank(H, A), acquired(H, I)', 'false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.452, 3, 14], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(E, F)', 'false': 'companyalsoknownas(G, A), companyalsoknownas(A, G)'}, {'true,true': [0.941, 1, 12], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.331, 12, 3]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D), companyalsoknownas(E, D)', 'true,false': 'acquired(F, G)', 'false': 'companyalsoknownas(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.46, 3, 15], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [7.45e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'bankboughtbank(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.457, 3, 15], 'true,false': [0.0, 0, 0], 'false': [0.034, 12, 0]}], ['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, D)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [1.455, 3, 15], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.031, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.07100591715976314, 0.14532871972318337], 'false': [0.0, 0.15999999999999986], 'true': [0.0, 0.10937499999999978], 'true,false': [0.10937499999999978, nan], 'false,true': [nan, 0.0]}, {'': [0.0696971327708489, 0.1444053843585901], 'false': [0.14440538435859013, nan], 'true': [nan, 0.0696971327708489], 'true,false': [nan, 0.0696971327708489], 'true,false,false': [0.0, 0.10937500000000017]}, {'': [0.11697102463786965, 8.102823136106607e-05], 'true': [-4.4408920985006264e-17, 0.1599585091770055], 'true,false': [nan, 0.1599585091770055], 'true,false,false': [nan, 0.1599585091770055], 'false': [0.0, 1.1102230246251566e-17], 'true,true': [nan, -4.4408920985006264e-17]}, {'': [0.06785691275552361, 0.12393721403553623], 'false': [0.0, 0.13778564432008936], 'true': [4.4408920985006264e-17, 0.10937499999999997], 'true,false': [nan, 0.10937499999999997], 'true,false,false': [0.10937499999999997, nan], 'true,true': [0.0, 0.0]}, {'': [0.11671167118559718, 0.0001658945242577689], 'true': [-2.2204460492503132e-17, 0.16158565480012382], 'true,false': [0.16158565480012382, nan], 'false': [0.0, -5.551115123125783e-18], 'false,true': [0.0, nan]}, {'': [0.11713387302781902, 0.0001099918666333637], 'true': [0.11713387302781902, nan], 'true,true': [nan, 0.11713387302781902], 'true,true,false': [0.0, 0.12402106897485962], 'false': [0.0, 0.0]}, {'': [0.06808967828409179, 0.09783482798476065], 'false': [0.0, 0.10973550776159653], 'true': [0.06808967828409179, nan]}, {'': [0.1183584842678849, 0.00013453368961267864], 'true': [nan, 0.1183584842678849], 'true,false': [0.1183584842678849, nan], 'false': [0.0, 5.551115123125783e-18]}, {'': [0.1179983534418872, 9.607138405690399e-05], 'true': [0.1179983534418872, nan], 'true,true': [nan, 0.1179983534418872]}, {'': [0.08080065779668492, nan], 'true': [0.11763904769107564, 8.183666986986624e-05], 'true,false': [8.183666986986624e-05, nan], 'true,false,true': [nan, 8.183666986986624e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
0;true;bankboughtbank(C, E).;true;true
0;false;companyalsoknownas(H, A), companyalsoknownas(I, H).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
1;true;bankboughtbank(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;bankboughtbank(C, D).;true;true
2;false;companyalsoknownas(I, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
3;true;bankboughtbank(C, E).;true;true
3;true,true;bankboughtbank(F, A).;true;true
3;false;companyalsoknownas(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;bankboughtbank(C, D).;true;true
4;false;companyalsoknownas(F, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;bankboughtbank(H, A), acquired(H, I).;true;true
5;false;companyalsoknownas(J, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
6;false;companyalsoknownas(G, A), companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;false;companyalsoknownas(H, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(H, G) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.058148935099512224;  // std dev = 0.400, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(A, F) )
%   | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return 0.11273869699258142;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.0047681863597080825;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.6957019504627422;  // std dev = 0.198, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3687141174770521;  // std dev = 0.421, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( companyalsoknownas(F, A) )
%   | then return -0.13834404936944983;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.15111065752393885;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, G) )
%   | | then return 0.2260268598416748;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4475507696684695;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.12266235516947424;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.03859345112207177;  // std dev = 0.367, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.48681958842310913;  // std dev = 0.301, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.23821836980846417;  // std dev = 0.412, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( companyalsoknownas(F, A) )
%   | then return -0.11006094035592807;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.13723847926713836;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, A), acquired(D, E) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F) )
%   | | then return 0.07186132705699155;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.28752812767683494;  // std dev = 0.283, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.09973435201164971;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12178445043630046;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.0549733227949503;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.21669439805013363;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(A, F) )
%   | then return -0.09113007837979405;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.01332901516994535;  // std dev = 0.321, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.2982952441251407;  // std dev = 0.313, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1336136824181854;  // std dev = 0.338, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.083858179704542;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11065358671991857;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return -0.010340285711488742;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.22936067057616752;  // std dev = 0.274, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1662813000854971;  // std dev = 0.289, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.08818883597867067;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09921766389324485;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.22557035130823833;  // std dev = 0.259, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.08470076324108648;  // std dev = 0.335, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.08136784227058605;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09069607974098258;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.970642
   AUC PR    = 0.028642
   CLL	      = -0.21708
   Precision = 0.019153 at threshold = 0.5
   Recall    = 0.915385
   F1        = 0.037522


Total learning time: 1.414 seconds
Total inference time: 11.508 seconds
AUC ROC: 0.970642


Results scoring model
   AUC ROC   = 0.982222
   AUC PR    = 0.98373
   CLL	      = -0.234648
   Precision = 0.928571 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.896552


Total scoring time: 0.558 seconds
Refined model CLL: -0.234648


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.970642
   AUC PR    = 0.028642
   CLL	      = -0.21708
   Precision = 0.019153 at threshold = 0.5
   Recall    = 0.915385
   F1        = 0.037522


Total learning time: 6.021999999999999 seconds
Total inference time: 11.508 seconds
AUC ROC: 0.970642
Total revision time: 6.021999999999999
Best scored revision CLL: -0.234648


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:09:15
{'AUC ROC': 0.970642, 'AUC PR': 0.028642, 'CLL': -0.21708, 'Precision': [0.019153, 0.5], 'Recall': 0.915385, 'F1': 0.037522, 'Learning time': 6.021999999999999, 'Inference time': 11.508, 'parameter_15': {'AUC ROC': 0.973658, 'AUC PR': 0.069881, 'CLL': -0.2037, 'Precision': [0.02199, 0.5], 'Recall': 0.9, 'F1': 0.042932, 'Learning time': 3.11, 'Inference time': 181.679}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(F, G), economicsectorcompany(B, F) )
%   | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then if ( bankboughtbank(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, E), bankboughtbank(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(C, I) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6392070123615109;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( companyalsoknownas(J, K) )
%   | then return 0.058023022172046024;  // std dev = 1.984, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( bankboughtbank(F, A), acquired(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.521861937159376;  // std dev = 1.530, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.13194979509067692;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.16022494698188844;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, I) )
%   | | | then return 0.3702307794184208;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return -0.11755627771257192;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.054528093908860216;  // std dev = 1.791, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( bankboughtbank(E, D) )
%   | | then return 0.35446537608069706;  // std dev = 1.569, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A) )
%   | then if ( companyalsoknownas(G, H) )
%   | | then return -0.10589888817398044;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14650849592506932;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, A), acquired(H, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27272720962398056;  // std dev = 1.573, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return -0.09628225891890646;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1291201490735947;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, F) )
%   | then return 0.16940120004981335;  // std dev = 0.956, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.08822400389374088;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.02500818405490571;  // std dev = 0.327, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D), companyalsoknownas(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, G) )
%   | | then return 0.1951400482126729;  // std dev = 1.581, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.08138027920584982;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.117857989741297;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( bankboughtbank(C, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16002425949773913;  // std dev = 1.573, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10254028769327383;  // std dev = 0.041, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.1328124971079901;  // std dev = 1.565, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else if ( bankboughtbank(F, D) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0934899050238656;  // std dev = 0.037, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.972671
   AUC PR    = 0.064264
   CLL	      = -0.222158
   Precision = 0.012976 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.02562


Total learning time: 3.357 seconds
Total inference time: 181.978 seconds
AUC ROC: 0.972671


Results scoring model
   AUC ROC   = 0.96375
   AUC PR    = 0.956451
   CLL	      = -0.259899
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 1.109 seconds
Parameter learned model CLL: -0.259899


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,false': 'acquired(F, G), economicsectorcompany(B, F)', 'false': 'companyalsoknownas(H, A), companyalsoknownas(I, H)', 'false,true': 'bankboughtbank(J, I)'}, {'true,true': [0.0, 0, 6], 'true,false,true': [0.949, 1, 9], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [1.966, 17, 5]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(A, E), bankboughtbank(F, E)', 'true,false': 'bankboughtbank(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(C, I)', 'false': 'companyalsoknownas(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.11e-08, 0, 6], 'true,false,false,false': [0.949, 1, 9], 'false,true': [1.984, 19, 5], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'bankboughtbank(F, A), acquired(C, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'companyalsoknownas(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.53, 3, 14], 'false,true': [0.0, 2, 0], 'false,false': [1.49e-08, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'companyalsoknownas(G, A)', 'true,false,false': 'bankboughtbank(H, I)', 'false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [5.27e-09, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.949, 1, 9], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [1.791, 17, 5]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,false': 'bankboughtbank(E, D)', 'false': 'companyalsoknownas(F, A)', 'false,true': 'companyalsoknownas(G, H)'}, {'true,true': [0.0, 0, 6], 'true,false,true': [1.569, 3, 14], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,false': 'bankboughtbank(H, A), acquired(H, I)', 'false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.573, 3, 19], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.0, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(E, F)', 'false': 'companyalsoknownas(G, A), companyalsoknownas(A, G)'}, {'true,true': [0.956, 1, 15], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.327, 17, 5]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D), companyalsoknownas(E, D)', 'true,false': 'acquired(F, G)', 'false': 'companyalsoknownas(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.581, 3, 20], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.0, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'bankboughtbank(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.573, 3, 20], 'true,false': [0.0, 0, 0], 'false': [0.041, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, D)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [1.565, 3, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.037, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, 0.16493055555555552], 'false': [0.0, 0.17561983471074363], 'true': [-1.4802973661668753e-16, 0.08999999999999977], 'true,false': [0.08999999999999977, nan], 'false,true': [nan, 0.0]}, {'': [0.05776000662768527, 0.16404488325965677], 'false': [0.16404488325965683, nan], 'true': [nan, 0.05776000662768527], 'true,false': [nan, 0.05776000662768527], 'true,false,false': [7.401486830834377e-17, 0.09000000000000012]}, {'': [0.10199509564755763, 8.299144094857462e-05], 'true': [-7.401486830834377e-17, 0.13770052517983622], 'true,false': [nan, 0.13770052517983622], 'true,false,false': [nan, 0.13770052517983622], 'false': [0.0, 1.4802973661668754e-17], 'true,true': [nan, -7.401486830834377e-17]}, {'': [0.05677398366189165, 0.1359798159510328], 'false': [0.0, 0.14587386482143144], 'true': [7.401486830834377e-17, 0.08999999999999997], 'true,false': [nan, 0.08999999999999997], 'true,false,false': [0.08999999999999997, nan], 'true,true': [0.0, 4.4408920985006264e-17]}, {'': [0.1073132903281873, 0.0001711910285498964], 'true': [-3.700743415417188e-17, 0.14489136038548037], 'true,false': [0.14489136038548037, nan], 'false': [0.0, 0.0], 'false,true': [0.0, nan]}, {'': [0.10763138483923307, 0.00011193706191813714], 'true': [0.10763138483923307, nan], 'true,true': [nan, 0.10763138483923307], 'true,true,false': [0.0, 0.11251032151947045], 'false': [0.0, 0.0]}, {'': [0.057114282650599674, 0.09916338273587394], 'false': [0.0, 0.10710977501289251], 'true': [0.057114282650599674, nan]}, {'': [0.10870272549377091, 0.00013812699300080398], 'true': [nan, 0.10870272549377087], 'true,false': [0.10870272549377091, nan], 'false': [0.0, -1.295260195396016e-17]}, {'': [0.10751554441521308, 9.748986057289688e-05], 'true': [0.10751554441521308, nan], 'true,true': [nan, 0.10751554441521312]}, {'': [0.0737459732542435, nan], 'true': [0.10642761401602494, 8.228885688700315e-05], 'true,false': [8.228885688700315e-05, nan], 'true,false,true': [nan, 8.228885688700315e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
0;true;bankboughtbank(C, E).;true;true
0;false;companyalsoknownas(H, A), companyalsoknownas(I, H).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
1;true;bankboughtbank(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;bankboughtbank(C, D).;true;true
2;false;companyalsoknownas(I, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
3;true;bankboughtbank(C, E).;true;true
3;true,true;bankboughtbank(F, A).;true;true
3;false;companyalsoknownas(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;bankboughtbank(C, D).;true;true
4;false;companyalsoknownas(F, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;bankboughtbank(H, A), acquired(H, I).;true;true
5;false;companyalsoknownas(J, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
6;false;companyalsoknownas(G, A), companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;false;companyalsoknownas(H, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, F) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(H, G) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(A, I) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.15226658215833588;  // std dev = 0.456, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(A, F) )
%   | | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(A, G) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return 0.18390810716955172;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.10525114668518984;  // std dev = 0.442, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.6710401688713373;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.448529695405908;  // std dev = 0.410, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( companyalsoknownas(F, A) )
%   | then return -0.12968226761938295;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.15566915197469258;  // std dev = 0.119, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(G, A), acquired(A, H) )
%   | | then return 0.5009347323591733;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30921568160924656;  // std dev = 0.308, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.11576883683669131;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(A, J) )
%   | | then return -0.09770710942740436;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.09562026302701133;  // std dev = 0.415, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3430146181659766;  // std dev = 0.361, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.1044598956029015;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14231144641356283;  // std dev = 0.037, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, A), acquired(D, E) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F) )
%   | | then return 0.0748894683854964;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.30721498838314654;  // std dev = 0.282, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.09510288666541261;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(A, H) )
%   | | then return -0.07849426677937736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1497223291875521;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.0588020713927416;  // std dev = 0.787, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(F, A) )
%   | | then return 0.21502212826712996;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.21530748372478425;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.08724250121310025;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(A, H) )
%   | | then return -0.07300111295171355;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.04189569752732905;  // std dev = 0.353, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.04648339629048906;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.2807749635753196;  // std dev = 0.270, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20553107892396422;  // std dev = 0.290, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( companyalsoknownas(F, A) )
%   | then return -0.0805525793418396;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.113742947281367;  // std dev = 0.032, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.2491939454108297;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.12053051865583224;  // std dev = 0.340, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.08560426127510593;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, F) )
%   | | then return -0.061328452679653714;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12277477582261473;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.12765755816263819;  // std dev = 0.300, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else if ( acquired(A, D) )
%   | then return -0.05789218487251065;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10839760508278089;  // std dev = 0.010, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.971621
   AUC PR    = 0.03099
   CLL	      = -0.23856
   Precision = 0.013641 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.026915


Total learning time: 1.689 seconds
Total inference time: 12.052 seconds
AUC ROC: 0.971621


Results scoring model
   AUC ROC   = 0.9775
   AUC PR    = 0.977367
   CLL	      = -0.233325
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.54 seconds
Refined model CLL: -0.233325


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.971621
   AUC PR    = 0.03099
   CLL	      = -0.23856
   Precision = 0.013641 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.026915


Total learning time: 6.695 seconds
Total inference time: 12.052 seconds
AUC ROC: 0.971621
Total revision time: 6.695
Best scored revision CLL: -0.233325


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:12:36
{'AUC ROC': 0.971621, 'AUC PR': 0.03099, 'CLL': -0.23856, 'Precision': [0.013641, 0.5], 'Recall': 1.0, 'F1': 0.026915, 'Learning time': 6.695, 'Inference time': 12.052, 'parameter_20': {'AUC ROC': 0.972671, 'AUC PR': 0.064264, 'CLL': -0.222158, 'Precision': [0.012976, 0.5], 'Recall': 1.0, 'F1': 0.02562, 'Learning time': 3.357, 'Inference time': 181.978}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then if ( bankboughtbank(A, J), acquired(I, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.018148935099512268;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | then if ( cityhascompanyoffice(D, F), acquired(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7473839334745775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, H), economicsectorcompany(I, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(J, C) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5935377796284238;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( bankboughtbank(K, A), companyalsoknownas(L, K) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.005453438313859017;  // std dev = 1.843, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5271385213428095;  // std dev = 0.944, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.6203821165138999;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, F), cityhascompanyoffice(G, C) )
%   | | then return 0.5835404111048867;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5171754659164269;  // std dev = 1.312, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( bankboughtbank(A, I), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14304812667053682;  // std dev = 0.025, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( bankboughtbank(A, F), acquired(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H) )
%   | | | then return 0.42439406380135214;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42439406380135214;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyalsoknownas(I, A) )
%   | | then return 0.43875505485996535;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(J, A), acquired(J, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.334157906235536;  // std dev = 1.295, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( companyalsoknownas(L, A) )
%   | then if ( bankboughtbank(M, A), bankboughtbank(M, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1111106951535376;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.013439727780096939;  // std dev = 1.673, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.31415157549600903;  // std dev = 0.946, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( acquired(D, E) )
%   | | then return 0.3834175208472772;  // std dev = 1.391, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12680944828356108;  // std dev = 0.039, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(G, A), acquired(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2557096272425998;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(A, I), cityhascompanyoffice(J, I) )
%   | | | then return 0.2605125050198078;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26456555917408564;  // std dev = 1.698, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), companyalsoknownas(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1134271109843409;  // std dev = 0.035, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then if ( companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(G, H) )
%   | | | then return 0.21284314214402622;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15772846069663912;  // std dev = 1.319, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( companyalsoknownas(I, A), companyalsoknownas(A, I) )
%   | then return -0.08085451362300779;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( bankboughtbank(J, A) )
%   | | then return -0.10468286173237223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.009866207714478518;  // std dev = 1.413, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then if ( acquired(E, C), companyalsoknownas(F, E) )
%   | | then return 0.1793562253508525;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G), acquired(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, J) )
%   | | | then return 0.18759360765444488;  // std dev = 1.716, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A), bankboughtbank(A, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10236242746221863;  // std dev = 0.042, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), companyalsoknownas(D, F) )
%   | | then return 0.12715377516201595;  // std dev = 0.946, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.19708209284870806;  // std dev = 1.410, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09333951239092399;  // std dev = 0.038, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(F, G) )
%   | | then if ( companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13856916157636068;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.1339469312459146;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12802936895850675;  // std dev = 1.694, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | else return -0.08574018698217864;  // std dev = 0.035, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.966
   AUC PR    = 0.022641
   CLL	      = -0.215456
   Precision = 0.021455 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.041894


Total learning time: 15.302 seconds
Total inference time: 239.564 seconds
AUC ROC: 0.966


Results scoring model
   AUC ROC   = 0.9656
   AUC PR    = 0.959657
   CLL	      = -0.247561
   Precision = 0.913043 at threshold = 0.5
   Recall    = 0.84
   F1        = 0.875


Total scoring time: 2.592 seconds
Parameter learned model CLL: -0.247561


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'bankboughtbank(A, F)', 'true,false,false': 'acquired(G, C)', 'false': 'companyalsoknownas(H, A), companyalsoknownas(I, H)', 'false,true': 'bankboughtbank(A, J), acquired(I, K)'}, {'true,true': [0.0, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.309, 2, 12], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [1.833, 21, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(A, E), acquired(E, F)', 'true,true': 'cityhascompanyoffice(D, F), acquired(G, C)', 'true,false': 'acquired(A, H), economicsectorcompany(I, H)', 'true,false,false': 'acquired(J, C)', 'false': 'bankboughtbank(K, A), companyalsoknownas(L, K)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.98e-08, 0, 9], 'true,false,false,false': [1.301, 2, 11], 'false,true': [0.0, 0, 0], 'false,false': [1.843, 23, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'acquired(A, F), cityhascompanyoffice(G, C)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'bankboughtbank(A, I), companyalsoknownas(J, A)'}, {'true,true,true': [0.944, 1, 16], 'true,true,false': [0.0, 0, 2], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.312, 2, 6], 'false,true': [0.0, 0, 0], 'false,false': [0.025, 22, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,true': 'bankboughtbank(A, F), acquired(A, G)', 'true,true,false': 'bankboughtbank(A, H)', 'true,false': 'companyalsoknownas(I, A)', 'true,false,false': 'bankboughtbank(J, A), acquired(J, K)', 'false': 'companyalsoknownas(L, A)', 'false,true': 'bankboughtbank(M, A), bankboughtbank(M, L)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 8], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.295, 2, 11], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [1.673, 21, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'companyalsoknownas(F, A), bankboughtbank(A, G)'}, {'true,true': [0.946, 1, 18], 'true,false,true': [1.391, 2, 7], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.039, 22, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(G, A), acquired(G, H)', 'true,true,false': 'acquired(A, I), cityhascompanyoffice(J, I)', 'false': 'bankboughtbank(A, K), companyalsoknownas(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.698, 3, 23], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.035, 22, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E)', 'true,true': 'companyalsoknownas(E, F)', 'true,true,false': 'cityhascompanyoffice(G, H)', 'false': 'companyalsoknownas(I, A), companyalsoknownas(A, I)', 'false,false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [1.319, 2, 20], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false': [1.413, 20, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,true': 'acquired(E, C), companyalsoknownas(F, E)', 'true,false': 'bankboughtbank(A, G), acquired(G, H)', 'true,false,false': 'acquired(I, J)', 'false': 'companyalsoknownas(K, A), bankboughtbank(A, L)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.716, 3, 24], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.042, 22, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), companyalsoknownas(D, F)'}, {'true,true,true': [0.946, 1, 16], 'true,true,false': [1.41, 2, 9], 'true,false': [0.0, 0, 0], 'false': [0.038, 22, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(F, G)', 'false,true,true': 'companyalsoknownas(H, A)', 'false,true,false': 'companyalsoknownas(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.694, 3, 23], 'false,false': [0.035, 22, 0]}]]
[{'': [0.07939508506616269, 0.1262002743484225], 'false': [0.0, 0.13439999999999985], 'true': [-2.9605947323337506e-16, 0.1224489795918365], 'true,false': [nan, 0.1224489795918365], 'true,false,false': [nan, 0.1224489795918365], 'false,true': [nan, 0.0]}, {'': [0.07768123796097888, 0.12581518896612442], 'false': [nan, 0.12581518896612434], 'true': [0.0, 0.0807569502202127], 'true,false': [nan, 0.0807569502202127], 'true,false,false': [9.868649107779169e-17, 0.1301775147928992], 'true,true': [nan, 0.0]}, {'': [0.09398280411776905, 2.8913525813934422e-05], 'true': [0.04767354914014104, 0.19164237753360266], 'true,false': [0.0, 0.2151083073975401], 'true,false,false': [nan, 0.2151083073975401], 'true,true': [0.052367005344322905, 0.0], 'false': [nan, 2.8913525813934422e-05]}, {'': [0.07495552708778923, 0.1047066807830486], 'false': [0.0, 0.11193411836769637], 'true': [-2.4671622769447922e-17, 0.12046077495497094], 'true,false': [0.0, 0.12894551959159123], 'true,false,false': [nan, 0.12894551959159123], 'false,true': [nan, 0.0], 'true,true': [nan, -2.4671622769447922e-17], 'true,true,false': [0.0, -2.7755575615628914e-17]}, {'': [0.10212340406963247, 6.868442695938015e-05], 'true': [0.04705388644351322, 0.2151256441664223], 'true,false': [0.2151256441664223, nan], 'false': [nan, 6.868442695937509e-05]}, {'': [0.10296835101718739, 5.632177991063919e-05], 'true': [0.10296835101718739, nan], 'true,true': [0.0, 0.10677928681598095], 'true,true,false': [0.0, 0.11088557404615774], 'false': [nan, 5.632177991063919e-05], 'true,true,true': [nan, 0.0]}, {'': [0.07579026215282862, 0.07492655496434025], 'true': [0.0, 0.07910320328142946], 'false': [0.0, 0.08037105819658441], 'false,false': [0.0, 0.08319499271566318], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.1051839862991875, 7.923869085577831e-05], 'true': [0.0, 0.10907726612162459], 'true,false': [nan, 0.10907726612162459], 'true,false,false': [0.10907726612162459, nan], 'false': [nan, 7.923869085577831e-05], 'true,true': [0.0, nan]}, {'': [0.10417990543875667, 6.690154634428221e-05], 'true': [0.10417990543875667, nan], 'true,true': [0.052689899092388276, 0.18078645966915127]}, {'': [nan, 0.0687210412015154], 'false': [0.10245363492978746, 5.71755589699728e-05], 'false,true': [0.0, 0.1062444098843894], 'false,true,false': [0.0, 0.11032943639542853], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
0;true;acquired(E, C).;true;true
0;false;companyalsoknownas(H, A), companyalsoknownas(I, H).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
1;true;companyalsoknownas(A, E), acquired(E, F).;true;true
1;true,false;acquired(J, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;companyalsoknownas(D, E).;true;true
2;true,false;acquired(A, F), cityhascompanyoffice(G, C).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;acquired(E, C).;true;true
3;true,true;bankboughtbank(A, H).;true;true
3;true,false;companyalsoknownas(I, A).;true;true
3;false;companyalsoknownas(L, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
5;true,false;acquired(A, I), cityhascompanyoffice(J, I).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
6;true;bankboughtbank(A, E).;true;true
6;false;companyalsoknownas(I, A), companyalsoknownas(A, I).;true;true
6;false,false;bankboughtbank(J, A).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;bankboughtbank(A, F), acquired(F, G).;true;true
9;true,false;companyalsoknownas(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6763307532813305;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(H, G) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(A, I) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.058148935099512286;  // std dev = 0.400, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E), acquired(E, F) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, C) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5954078776746492;  // std dev = 0.359, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( acquired(A, H) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.14120019116709437;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.07314425473577645;  // std dev = 0.416, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then if ( acquired(A, F) )
%   | | | then return 0.32379420573276796;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5950570161017873;  // std dev = 0.132, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.6290775126922183;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, G), cityhascompanyoffice(H, C) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5009504688901993;  // std dev = 0.457, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.14138580325201214;  // std dev = 0.100, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( bankboughtbank(A, F) )
%   | | then return 0.40789375190700483;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.43293393395089574;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3318040050834401;  // std dev = 0.343, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.09827549376327324;  // std dev = 0.000987, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(A, I) )
%   | | then return -0.0989735913826628;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.0376112028689678;  // std dev = 0.363, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A), companyceo(D, E) )
%   | then return 0.3909334829282805;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, F) )
%   | | then return 0.1319815349835261;  // std dev = 0.767, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.3461370697272884;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3667257641368206;  // std dev = 1.374, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( acquired(A, H) )
%   | then return -0.09050052896599425;  // std dev = 5.25e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.13865547636546546;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.29266331769381426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F), cityhascompanyoffice(G, F) )
%   | | then return 0.33931864834915626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(A, H) )
%   | | | then return 0.01957746516552694;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2877369649590995;  // std dev = 1.383, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then return -0.09171617458595434;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( acquired(A, J) )
%   | | then return -0.08331344732026165;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12885318268812515;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0.19553357149995332;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then if ( acquired(A, G) )
%   | | | then return 0.27965519785112036;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22785952352552385;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1178135919263082;  // std dev = 0.302, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( companyalsoknownas(H, A), companyalsoknownas(A, H) )
%   | then return -0.07442009805506374;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( bankboughtbank(I, A) )
%   | | then return -0.0771675203876708;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( acquired(A, J) )
%   | | | then return -0.07701845567185343;  // std dev = 0.000516, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.019566248071228972;  // std dev = 1.361, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.16659129015804897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, E) )
%   | | then return 0.06218463615515531;  // std dev = 0.741, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.19038621053630245;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21622916746355478;  // std dev = 1.389, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( acquired(A, G) )
%   | then return -0.07170699000656007;  // std dev = 0.000538, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.08910531323490685;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11707517393658924;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.050673427255744176;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.15830534394063325;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17707498372244126;  // std dev = 0.316, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( acquired(A, F) )
%   | then return -0.06707795877233298;  // std dev = 0.000506, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.08215171909439038;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10550518616108216;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D), acquired(D, E) )
%   | then return 0.1262117127086838;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.17255016430247483;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(A, G) )
%   | | | then return 0.00878732059722162;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14648650733288793;  // std dev = 1.368, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( acquired(A, H) )
%   | then return -0.0630002661137826;  // std dev = 0.000477, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.076181111710921;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09595462045514604;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.97137
   AUC PR    = 0.029548
   CLL	      = -0.21935
   Precision = 0.014726 at threshold = 0.5
   Recall    = 0.988462
   F1        = 0.02902


Total learning time: 3.133 seconds
Total inference time: 14.546 seconds
AUC ROC: 0.97137


Results scoring model
   AUC ROC   = 0.9792
   AUC PR    = 0.978506
   CLL	      = -0.225409
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 0.702 seconds
Refined model CLL: -0.225409


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97137
   AUC PR    = 0.029548
   CLL	      = -0.21935
   Precision = 0.014726 at threshold = 0.5
   Recall    = 0.988462
   F1        = 0.02902


Total learning time: 21.729 seconds
Total inference time: 14.546 seconds
AUC ROC: 0.97137
Total revision time: 21.729
Best scored revision CLL: -0.225409


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:17:13
{'AUC ROC': 0.97137, 'AUC PR': 0.029548, 'CLL': -0.21935, 'Precision': [0.014726, 0.5], 'Recall': 0.988462, 'F1': 0.02902, 'Learning time': 21.729, 'Inference time': 14.546, 'parameter_25': {'AUC ROC': 0.966, 'AUC PR': 0.022641, 'CLL': -0.215456, 'Precision': [0.021455, 0.5], 'Recall': 0.884615, 'F1': 0.041894, 'Learning time': 15.302, 'Inference time': 239.564}}


Starting fold 2

Target train facts examples: 5307
Target train pos examples: 518
Target train neg examples: 366436

Target test facts examples: 5307
Target test pos	 examples: 260
Target test neg examples: 183219

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( acquired(H, A), acquired(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(A, E), companyalsoknownas(F, E) )
%   | then if ( cityhascompanyoffice(D, F), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(H, A), economicsectorcompany(I, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, J) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( bankboughtbank(K, A), acquired(L, K) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, A), cityhascompanyoffice(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), acquired(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(A, I), acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(J, A), companyalsoknownas(K, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( acquired(L, A) )
%   | then if ( bankboughtbank(M, A), bankboughtbank(M, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyalsoknownas(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(F, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( acquired(A, F), acquired(F, G) )
%   | | then if ( bankboughtbank(G, A), companyalsoknownas(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(I, A), cityhascompanyoffice(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), acquired(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(F, A), acquired(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, E), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(G, H) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(I, A), bankboughtbank(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( companyalsoknownas(C, E), acquired(E, F) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), acquired(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.965084
   AUC PR    = 0.022011
   CLL	      = -0.188641
   Precision = 0.021258 at threshold = 0.5
   Recall    = 0.861538
   F1        = 0.041493


Total learning time: 5.632 seconds
Total inference time: 205.694 seconds
AUC ROC: 0.965084


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.257 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,false': 'bankboughtbank(A, F)', 'true,false,false': 'companyalsoknownas(C, G)', 'false': 'acquired(H, A), acquired(I, H)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.11e-08, 0, 3], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(A, E), companyalsoknownas(F, E)', 'true,true': 'cityhascompanyoffice(D, F), companyalsoknownas(C, G)', 'true,false': 'companyalsoknownas(H, A), economicsectorcompany(I, H)', 'true,false,false': 'companyalsoknownas(C, J)', 'false': 'bankboughtbank(K, A), acquired(L, K)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'acquired(D, E)', 'true,false': 'companyalsoknownas(F, A), cityhascompanyoffice(G, C)', 'true,false,false': 'acquired(A, H), acquired(H, A)', 'false': 'bankboughtbank(A, I), acquired(J, A)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'bankboughtbank(A, F), companyalsoknownas(G, A)', 'true,true,false': 'bankboughtbank(A, H)', 'true,false': 'acquired(I, A)', 'true,false,false': 'bankboughtbank(J, A), companyalsoknownas(K, J)', 'false': 'acquired(L, A)', 'false,true': 'bankboughtbank(M, A), bankboughtbank(M, L)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,false': 'companyalsoknownas(E, D)', 'false': 'acquired(F, A), bankboughtbank(A, G)'}, {'true,true': [0.0, 0, 4], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'acquired(A, F), acquired(F, G)', 'true,true,true': 'bankboughtbank(G, A), companyalsoknownas(H, G)', 'true,true,false': 'companyalsoknownas(I, A), cityhascompanyoffice(J, I)', 'false': 'bankboughtbank(A, K), acquired(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E)', 'false': 'acquired(F, A), acquired(A, F)', 'false,false': 'bankboughtbank(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,false': 'bankboughtbank(A, E), companyalsoknownas(F, E)', 'true,false,false': 'companyalsoknownas(G, H)', 'false': 'acquired(I, A), bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'companyalsoknownas(C, E), acquired(E, F)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), acquired(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false,true,false': 'acquired(A, H)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 4], 'false,false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, 1.4802973661668753e-16], 'true,false': [nan, 1.4802973661668753e-16], 'true,false,false': [nan, 1.4802973661668753e-16], 'false': [nan, -2.7755575615628915e-18]}, {'': [0.0, 0.0], 'true': [0.0, 0.0], 'false': [nan, 0.0], 'true,true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [4.4408920985006264e-17, 0.0], 'true': [0.0, -3.700743415417188e-17], 'false': [0.0, 0.0], 'true,true': [nan, 0.0], 'false,true': [nan, 0.0], 'true,true,false': [nan, 0.0], 'true,false': [nan, -3.700743415417188e-17], 'true,false,false': [nan, -3.700743415417188e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'false': [nan, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'true,true': [0.0, 0.0], 'true,true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'false': [nan, -1.3877787807814458e-18], 'false,false': [nan, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, -6.938893903907229e-19], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan], 'false': [nan, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [0.0, 0.0]}, {'': [nan, 0.009820698026241881], 'false': [0.0, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
0;true;companyalsoknownas(C, E).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
1;true;acquired(A, E), companyalsoknownas(F, E).;true;true
1;true,false;companyalsoknownas(C, J).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;companyalsoknownas(C, D).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;false;acquired(L, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;companyalsoknownas(C, D).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;acquired(A, F), acquired(F, G).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;companyalsoknownas(C, E), acquired(E, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;acquired(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(A, E), companyalsoknownas(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(C, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( acquired(F, A) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), acquired(D, E) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), acquired(D, E) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.963938
   AUC PR    = 0.020487
   CLL	      = -0.199344
   Precision = 0.02125 at threshold = 0.5
   Recall    = 0.861538
   F1        = 0.041478


Total learning time: 0.724 seconds
Total inference time: 8.223 seconds
AUC ROC: 0.963938


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.481 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.965084
   AUC PR    = 0.022011
   CLL	      = -0.188641
   Precision = 0.021258 at threshold = 0.5
   Recall    = 0.861538
   F1        = 0.041493


Total learning time: 8.094 seconds
Total inference time: 205.694 seconds
AUC ROC: 0.965084
Total revision time: 8.094
Best scored revision CLL: -0.094637


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:20:57
{'AUC ROC': 0.965084, 'AUC PR': 0.022011, 'CLL': -0.188641, 'Precision': [0.021258, 0.5], 'Recall': 0.861538, 'F1': 0.041493, 'Learning time': 8.094, 'Inference time': 205.694, 'parameter_5': {'AUC ROC': 0.965084, 'AUC PR': 0.022011, 'CLL': -0.188641, 'Precision': [0.021258, 0.5], 'Recall': 0.861538, 'F1': 0.041493, 'Learning time': 5.632, 'Inference time': 205.694}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then if ( bankboughtbank(A, J), acquired(K, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, I) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( bankboughtbank(J, A), companyalsoknownas(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(F, A), cityhascompanyoffice(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(A, I), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( companyalsoknownas(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(J, A), acquired(K, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(L, A) )
%   | then if ( bankboughtbank(M, A), bankboughtbank(M, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(G, A), acquired(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), companyalsoknownas(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(A, F) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, E), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(G, H) )
%   | | | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A), bankboughtbank(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(C, E), companyalsoknownas(E, F) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.964441
   AUC PR    = 0.020904
   CLL	      = -0.191515
   Precision = 0.021283 at threshold = 0.5
   Recall    = 0.861538
   F1        = 0.041539


Total learning time: 10.566 seconds
Total inference time: 252.183 seconds
AUC ROC: 0.964441


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.891 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'true,false': 'bankboughtbank(A, F)', 'true,false,false': 'acquired(C, G)', 'false': 'companyalsoknownas(H, A), companyalsoknownas(I, H)', 'false,true': 'bankboughtbank(A, J), acquired(K, I)'}, {'true,true': [0.0, 0, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [0.0, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,false': 'acquired(C, I)', 'false': 'bankboughtbank(J, A), companyalsoknownas(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.11e-08, 0, 7], 'true,false,false,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false': [5.27e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'acquired(F, A), cityhascompanyoffice(G, C)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'bankboughtbank(A, I), companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [1.05e-08, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'true,true': 'bankboughtbank(A, F), acquired(G, A)', 'true,true,false': 'bankboughtbank(A, H)', 'true,false': 'companyalsoknownas(I, A)', 'true,false,false': 'bankboughtbank(J, A), acquired(K, J)', 'false': 'companyalsoknownas(L, A)', 'false,true': 'bankboughtbank(M, A), bankboughtbank(M, L)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.58e-08, 0, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [3.73e-09, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,false': 'acquired(E, D)', 'false': 'companyalsoknownas(F, A), bankboughtbank(A, G)'}, {'true,true': [0.0, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(G, A), acquired(H, G)', 'true,true,false': 'acquired(I, A), cityhascompanyoffice(J, I)', 'false': 'bankboughtbank(A, K), companyalsoknownas(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.49e-08, 0, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.73e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E)', 'false': 'companyalsoknownas(F, A), companyalsoknownas(A, F)', 'false,false': 'bankboughtbank(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 10], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,false': 'bankboughtbank(A, E), acquired(F, E)', 'true,false,false': 'acquired(G, H)', 'false': 'companyalsoknownas(I, A), bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [7.45e-09, 0, 10], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(G, F)', 'false,true,false': 'companyalsoknownas(A, H)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 8], 'false,false': [3.73e-09, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'false': [0.0, -6.938893903907228e-18], 'false,true': [nan, 0.0], 'true': [-2.5376526277146434e-16, 1.4802973661668753e-16], 'true,false': [nan, 1.4802973661668753e-16], 'true,false,false': [nan, 1.4802973661668753e-16]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [nan, 0.0], 'false': [nan, 2.7755575615628915e-18], 'true,false': [nan, 8.881784197001253e-17], 'true,false,false': [6.344131569286608e-17, 0.0]}, {'': [-1.7763568394002506e-16, 0.0], 'false': [nan, 0.0], 'true': [-1.4802973661668753e-16, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0], 'true,true': [-7.401486830834377e-17, 3.700743415417188e-17]}, {'': [1.3322676295501878e-16, -1.3877787807814458e-18], 'true': [9.516197353929913e-17, -3.700743415417188e-17], 'true,true': [nan, 9.516197353929913e-17], 'true,true,false': [nan, 9.516197353929913e-17], 'false': [0.0, 1.734723475976807e-18], 'false,true': [nan, 0.0], 'true,false': [nan, -3.700743415417188e-17], 'true,false,false': [nan, -3.700743415417188e-17]}, {'': [-4.4408920985006264e-17, 0.0], 'false': [nan, 0.0], 'true': [-3.700743415417188e-17, 0.0], 'true,false': [0.0, nan]}, {'': [3.3306690738754695e-17, 1.3877787807814458e-18], 'true': [3.3306690738754695e-17, nan], 'true,true': [0.0, 2.7755575615628914e-17], 'true,true,false': [nan, 2.7755575615628914e-17], 'false': [nan, 1.3877787807814458e-18], 'true,true,true': [nan, 0.0]}, {'': [-2.7755575615628914e-17, 0.0], 'false': [0.0, 0.0], 'false,false': [nan, 0.0], 'true': [nan, -2.7755575615628914e-17]}, {'': [5.551115123125783e-18, 6.938893903907229e-19], 'true': [nan, 5.551115123125783e-18], 'true,false': [nan, 5.551115123125783e-18], 'true,false,false': [5.551115123125783e-18, nan], 'false': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [-4.625929269271485e-18, 0.0]}, {'': [nan, 0.009820698026241881], 'false': [0.0, 1.3877787807814458e-18], 'false,true': [nan, 0.0], 'false,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
0;true;acquired(C, E).;true;true
0;false;companyalsoknownas(H, A), companyalsoknownas(I, H).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
1;true;acquired(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
2;true,true;companyalsoknownas(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;acquired(C, E).;true;true
3;false;companyalsoknownas(L, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(C, D).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
6;false;companyalsoknownas(F, A), companyalsoknownas(A, F).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(C, E), companyalsoknownas(E, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;companyalsoknownas(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(G, F) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyceo(A, F) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyceo(A, F) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(F, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783627;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyceo(A, E) )
%   | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2551722425694894;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( companyceo(A, F) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(E, A), companyalsoknownas(A, E) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( acquired(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyalsoknownas(D, E) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(A, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( acquired(A, E) )
%   | then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.96383
   AUC PR    = 0.020462
   CLL	      = -0.199344
   Precision = 0.02125 at threshold = 0.5
   Recall    = 0.861538
   F1        = 0.041478


Total learning time: 0.956 seconds
Total inference time: 9.589 seconds
AUC ROC: 0.96383


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.443 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.964441
   AUC PR    = 0.020904
   CLL	      = -0.191515
   Precision = 0.021283 at threshold = 0.5
   Recall    = 0.861538
   F1        = 0.041539


Total learning time: 13.856 seconds
Total inference time: 252.183 seconds
AUC ROC: 0.964441
Total revision time: 13.856
Best scored revision CLL: -0.094637


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:25:33
{'AUC ROC': 0.964441, 'AUC PR': 0.020904, 'CLL': -0.191515, 'Precision': [0.021283, 0.5], 'Recall': 0.861538, 'F1': 0.041539, 'Learning time': 13.856, 'Inference time': 252.183, 'parameter_10': {'AUC ROC': 0.964441, 'AUC PR': 0.020904, 'CLL': -0.191515, 'Precision': [0.021283, 0.5], 'Recall': 0.861538, 'F1': 0.041539, 'Learning time': 10.566, 'Inference time': 252.183}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( bankboughtbank(A, F) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(J, A), companyalsoknownas(K, J) )
%   | then if ( bankboughtbank(A, L), acquired(M, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06492798797741087;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, I) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( bankboughtbank(J, A), companyalsoknownas(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07000124135283528;  // std dev = 0.967, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(F, A), cityhascompanyoffice(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7145802223406654;  // std dev = 0.225, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( bankboughtbank(A, I), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.124557615961529;  // std dev = 0.013, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( companyalsoknownas(I, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(J, A), acquired(K, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4048006680956746;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(L, A) )
%   | then if ( bankboughtbank(M, A), bankboughtbank(M, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10560801035450094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.04500327289772586;  // std dev = 0.850, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.3211389043228977;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( acquired(E, D) )
%   | | then return 0.534806409429371;  // std dev = 0.347, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10613697850138051;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(G, A), acquired(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25509108484124476;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2852916004227198;  // std dev = 0.411, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), companyalsoknownas(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0964826869265947;  // std dev = 0.018, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then if ( companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(G, H) )
%   | | | then return 0.20970038530038115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20178411709749297;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( companyalsoknownas(I, A), companyalsoknownas(A, I) )
%   | then return -0.07983157669354386;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( bankboughtbank(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.03668613763439359;  // std dev = 0.673, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then if ( acquired(C, E), companyalsoknownas(F, E) )
%   | | then return 0.17705444752809707;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G), acquired(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, J) )
%   | | | then return 0.2031848932629136;  // std dev = 0.433, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A), bankboughtbank(A, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08488023727992493;  // std dev = 0.021, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(C, E), companyalsoknownas(E, F) )
%   | | then return 0.14844004252190507;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.21040340792195497;  // std dev = 0.395, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07851740234170963;  // std dev = 0.019, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( companyalsoknownas(H, A) )
%   | | | then return 0.13447857539393115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.13237263171250657;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15588668433943462;  // std dev = 0.379, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.07302295970066139;  // std dev = 0.018, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.953776
   AUC PR    = 0.01401
   CLL	      = -0.224471
   Precision = 0.014347 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.028255


Total learning time: 14.426 seconds
Total inference time: 255.382 seconds
AUC ROC: 0.953776


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111232
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.106 seconds
Parameter learned model CLL: -0.111232


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'true,false': 'bankboughtbank(A, F)', 'true,false,true': 'cityhascompanyoffice(G, H), economicsectorcompany(B, H)', 'true,false,false': 'acquired(C, I)', 'false': 'companyalsoknownas(J, A), companyalsoknownas(K, J)', 'false,true': 'bankboughtbank(A, L), acquired(M, K)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'false,false': [0.961, 12, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,false': 'acquired(C, I)', 'false': 'bankboughtbank(J, A), companyalsoknownas(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.98e-08, 0, 10], 'true,false,false,false': [0.0, 0, 4], 'false,true': [0.0, 0, 0], 'false,false': [0.967, 15, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'acquired(F, A), cityhascompanyoffice(G, C)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'bankboughtbank(A, I), companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.225, 0, 2], 'false,true': [0.0, 0, 0], 'false,false': [0.013, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'true,true': 'bankboughtbank(A, F), acquired(G, A)', 'true,true,false': 'bankboughtbank(A, H)', 'true,false': 'companyalsoknownas(I, A)', 'true,false,false': 'bankboughtbank(J, A), acquired(K, J)', 'false': 'companyalsoknownas(L, A)', 'false,true': 'bankboughtbank(M, A), bankboughtbank(M, L)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.65e-08, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.031, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 3, 0], 'false,false': [0.85, 12, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,false': 'acquired(E, D)', 'false': 'companyalsoknownas(F, A), bankboughtbank(A, G)'}, {'true,true': [0.004, 0, 13], 'true,false,true': [0.347, 0, 2], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.02, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(G, A), acquired(H, G)', 'true,true,false': 'acquired(I, A), cityhascompanyoffice(J, I)', 'false': 'bankboughtbank(A, K), companyalsoknownas(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.411, 0, 12], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.018, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E)', 'true,true': 'companyalsoknownas(E, F)', 'true,true,false': 'cityhascompanyoffice(G, H)', 'false': 'companyalsoknownas(I, A), companyalsoknownas(A, I)', 'false,false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.052, 0, 13], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.673, 12, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,true': 'acquired(C, E), companyalsoknownas(F, E)', 'true,false': 'bankboughtbank(A, G), acquired(H, G)', 'true,false,false': 'acquired(I, J)', 'false': 'companyalsoknownas(K, A), bankboughtbank(A, L)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.433, 0, 14], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.021, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.006, 0, 9], 'true,true,false': [0.395, 0, 6], 'true,false': [0.0, 0, 0], 'false': [0.019, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(G, F)', 'false,true,true': 'companyalsoknownas(H, A)', 'false,true,false': 'companyalsoknownas(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.379, 0, 12], 'false,false': [0.018, 15, 0]}]]
[{'': [-2.5376526277146434e-16, 0.058593749999999986], 'false': [0.0, 0.07100591715976336], 'false,true': [nan, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, 1.4802973661668753e-16], 'true,false,false': [nan, 1.4802973661668753e-16], 'true,false,true': [0.0, nan]}, {'': [1.2688263138573217e-16, 0.05840168545162304], 'false': [nan, 0.058401685451623025], 'true': [nan, 6.344131569286608e-17], 'true,false': [nan, 1.2688263138573217e-16], 'true,false,false': [8.881784197001253e-17, 0.0]}, {'': [0.0063090917924639575, 1.0868575113359701e-05], 'true': [-2.7328566760003855e-16, 0.025349029523293543], 'true,false': [nan, 0.025349029523293543], 'true,false,false': [nan, 0.025349029523293543], 'false': [nan, 1.0868575113359701e-05], 'true,true': [-1.4802973661668753e-16, 0.0]}, {'': [9.64761911910829e-05, 0.04576830475082257], 'false': [2.3129646346357427e-18, 0.05564154606886825], 'true': [1.3322676295501878e-16, 0.0002727307712513394], 'true,false': [0.0, 0.0003232364696312273], 'true,false,false': [nan, 0.0003232364696312273], 'true,true': [nan, 1.3322676295501878e-16], 'true,true,false': [nan, 1.3322676295501878e-16], 'false,true': [nan, 2.3129646346357427e-18]}, {'': [0.013288882051121383, 2.5486188448980985e-05], 'true': [1.003078011353208e-06, 0.06009346633636814], 'true,false': [0.06009346633636814, nan], 'false': [nan, 2.5486188448979135e-05]}, {'': [0.01142629967688431, 2.148389807021626e-05], 'true': [0.01142629967688431, nan], 'true,true': [0.0, 0.014100460367828], 'true,true,false': [nan, 0.01410046036782798], 'false': [nan, 2.148389807021626e-05], 'true,true,true': [nan, 0.0]}, {'': [0.00019701276869094858, 0.028556550246857312], 'false': [0.0, 0.03479748670982118], 'false,false': [nan, 0.03479748670982118], 'true': [0.0, 0.0002076913611760519], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.012546009163539576, 2.872817145537776e-05], 'true': [0.0, 0.013396632662267649], 'true,false': [nan, 0.013396632662267649], 'true,false,false': [0.013396632662267649, nan], 'false': [nan, 2.8728171455378686e-05], 'true,true': [0.0, nan]}, {'': [0.011308863638238768, 2.4891496731824225e-05], 'true': [0.011308863638238768, nan], 'true,true': [4.458050039682668e-06, 0.025961796829517336]}, {'': [nan, 0.017427768948227205], 'false': [0.009667936646801423, 2.176149912873996e-05], 'false,true': [0.0, 0.010336785889779734], 'false,true,false': [0.0, 0.011980596299370363], 'false,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
0;true;acquired(C, E).;true;true
0;true,false;bankboughtbank(A, F).;true;true
0;false;companyalsoknownas(J, A), companyalsoknownas(K, J).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
1;true;acquired(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
2;true,true;companyalsoknownas(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;acquired(C, E).;true;true
3;true,false;companyalsoknownas(I, A).;true;true
3;false;companyalsoknownas(L, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(C, D).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
6;true;bankboughtbank(A, E).;true;true
6;false;companyalsoknownas(I, A), companyalsoknownas(A, I).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(C, E), companyalsoknownas(E, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;bankboughtbank(A, F), acquired(G, F).;true;true
9;true,false;companyalsoknownas(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(H, G) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06492798797741087;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(A, F) )
%   | then return -0.12891865838042532;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.043220597249385276;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.713088722439357;  // std dev = 0.223, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( acquired(A, F) )
%   | then return -0.11512248784999621;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12918899186757074;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4049177468079263;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.10102454620705897;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.04632250728909467;  // std dev = 0.235, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.32113496257279844;  // std dev = 0.000992, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5328770743378467;  // std dev = 0.344, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( companyceo(A, E) )
%   | then return -0.09511868445869155;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11007175026771415;  // std dev = 0.002, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.25509183385183665;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.28492686669467693;  // std dev = 0.117, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.09641020326285173;  // std dev = 0.006, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0.20970091442124605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.18907306445346753;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20570122994551232;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.07738310236977927;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.03758007661814147;  // std dev = 0.185, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.17705483563410207;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.16187429951682486;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2140407291170943;  // std dev = 0.126, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08481524409440608;  // std dev = 0.007, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyalsoknownas(D, E) )
%   | then if ( companyalsoknownas(A, F) )
%   | | then return 0.1528694926459608;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14673646937266024;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20885229153856252;  // std dev = 0.387, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07846270469503695;  // std dev = 0.006, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D), acquired(E, D) )
%   | then return 0.13396411180118606;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.13417818056608616;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.15515114322032966;  // std dev = 0.107, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( companyalsoknownas(A, G) )
%   | then return -0.06185528368953777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07575668937479695;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.951118
   AUC PR    = 0.013185
   CLL	      = -0.233221
   Precision = 0.014206 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.027982


Total learning time: 1.12 seconds
Total inference time: 11.015 seconds
AUC ROC: 0.951118


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11081
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.529 seconds
Refined model CLL: -0.11081


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.951118
   AUC PR    = 0.013185
   CLL	      = -0.233221
   Precision = 0.014206 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.027982


Total learning time: 18.181 seconds
Total inference time: 11.015 seconds
AUC ROC: 0.951118
Total revision time: 18.181
Best scored revision CLL: -0.11081


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:30:18
{'AUC ROC': 0.951118, 'AUC PR': 0.013185, 'CLL': -0.233221, 'Precision': [0.014206, 0.5], 'Recall': 0.923077, 'F1': 0.027982, 'Learning time': 18.181, 'Inference time': 11.015, 'parameter_15': {'AUC ROC': 0.953776, 'AUC PR': 0.01401, 'CLL': -0.224471, 'Precision': [0.014347, 0.5], 'Recall': 0.923077, 'F1': 0.028255, 'Learning time': 14.426, 'Inference time': 255.382}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( bankboughtbank(A, F) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(J, A), companyalsoknownas(K, J) )
%   | then if ( bankboughtbank(A, L), acquired(M, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08302753548872309;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, I) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( bankboughtbank(J, A), companyalsoknownas(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08316591660290462;  // std dev = 0.975, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(F, A), cityhascompanyoffice(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7162840505744421;  // std dev = 0.228, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( bankboughtbank(A, I), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12155891247064377;  // std dev = 0.011, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4175135841583098;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( companyalsoknownas(I, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(J, A), acquired(K, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4098056179016879;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(L, A) )
%   | then if ( bankboughtbank(M, A), bankboughtbank(M, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10465162665404414;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.05808251955020795;  // std dev = 0.861, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.3210855227840713;  // std dev = 0.003, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( acquired(E, D) )
%   | | then return 0.537732606164508;  // std dev = 0.353, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10282559031272327;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(G, A), acquired(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2551012285137545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27689923634861724;  // std dev = 0.424, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), companyalsoknownas(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09372088748206739;  // std dev = 0.016, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then if ( companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(G, H) )
%   | | | then return 0.20970755103473815;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20379575158623217;  // std dev = 0.053, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( companyalsoknownas(I, A), companyalsoknownas(A, I) )
%   | then return -0.079601484842691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( bankboughtbank(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.045992608689943204;  // std dev = 0.687, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then if ( acquired(C, E), companyalsoknownas(F, E) )
%   | | then return 0.177059703521522;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G), acquired(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, J) )
%   | | | then return 0.19689158067031504;  // std dev = 0.449, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A), bankboughtbank(A, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08204307740763814;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(C, E), companyalsoknownas(E, F) )
%   | | then return 0.149152099036561;  // std dev = 0.005, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.214109074612016;  // std dev = 0.408, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07607354413216046;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( companyalsoknownas(H, A) )
%   | | | then return 0.13439930278411494;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.1327881204419813;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1499817387198257;  // std dev = 0.396, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.07089705985472369;  // std dev = 0.016, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.953775
   AUC PR    = 0.014009
   CLL	      = -0.220358
   Precision = 0.014347 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.028255


Total learning time: 16.604 seconds
Total inference time: 253.878 seconds
AUC ROC: 0.953775


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107728
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.553 seconds
Parameter learned model CLL: -0.107728


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'true,false': 'bankboughtbank(A, F)', 'true,false,true': 'cityhascompanyoffice(G, H), economicsectorcompany(B, H)', 'true,false,false': 'acquired(C, I)', 'false': 'companyalsoknownas(J, A), companyalsoknownas(K, J)', 'false,true': 'bankboughtbank(A, L), acquired(M, K)'}, {'true,true': [0.0, 0, 13], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'false,false': [0.97, 16, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,false': 'acquired(C, I)', 'false': 'bankboughtbank(J, A), companyalsoknownas(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.21e-08, 0, 13], 'true,false,false,false': [2.11e-08, 0, 6], 'false,true': [0.0, 0, 0], 'false,false': [0.975, 20, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'acquired(F, A), cityhascompanyoffice(G, C)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'bankboughtbank(A, I), companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 14], 'true,true,false': [0.0, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.228, 0, 2], 'false,true': [0.0, 0, 0], 'false,false': [0.011, 20, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'true,true': 'bankboughtbank(A, F), acquired(G, A)', 'true,true,false': 'bankboughtbank(A, H)', 'true,false': 'companyalsoknownas(I, A)', 'true,false,false': 'bankboughtbank(J, A), acquired(K, J)', 'false': 'companyalsoknownas(L, A)', 'false,true': 'bankboughtbank(M, A), bankboughtbank(M, L)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.21e-08, 0, 13], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.034, 0, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'false,false': [0.861, 16, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,false': 'acquired(E, D)', 'false': 'companyalsoknownas(F, A), bankboughtbank(A, G)'}, {'true,true': [0.003, 0, 18], 'true,false,true': [0.353, 0, 2], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.017, 20, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(G, A), acquired(H, G)', 'true,true,false': 'acquired(I, A), cityhascompanyoffice(J, I)', 'false': 'bankboughtbank(A, K), companyalsoknownas(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.424, 0, 17], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.016, 20, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E)', 'true,true': 'companyalsoknownas(E, F)', 'true,true,false': 'cityhascompanyoffice(G, H)', 'false': 'companyalsoknownas(I, A), companyalsoknownas(A, I)', 'false,false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.053, 0, 18], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.687, 16, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,true': 'acquired(C, E), companyalsoknownas(F, E)', 'true,false': 'bankboughtbank(A, G), acquired(H, G)', 'true,false,false': 'acquired(I, J)', 'false': 'companyalsoknownas(K, A), bankboughtbank(A, L)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.449, 0, 19], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.018, 20, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.005, 0, 14], 'true,true,false': [0.408, 0, 6], 'true,false': [0.0, 0, 0], 'false': [0.017, 20, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(G, F)', 'false,true,true': 'companyalsoknownas(H, A)', 'false,true,false': 'companyalsoknownas(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.396, 0, 17], 'false,false': [0.016, 20, 0]}]]
[{'': [-2.8047739569477637e-16, 0.045351473922902494], 'false': [0.0, 0.055363321799308], 'false,true': [nan, 0.0], 'true': [-2.7328566760003855e-16, -1.4802973661668753e-16], 'true,false': [0.0, 0.0], 'true,false,true': [0.0, nan], 'true,false,false': [nan, 0.0]}, {'': [9.349246523159212e-17, 0.04523851313031603], 'false': [nan, 0.04523851313031598], 'true': [nan, 9.349246523159212e-17], 'true,false': [nan, 9.349246523159212e-17], 'true,false,false': [1.3664283380001927e-16, 7.401486830834377e-17]}, {'': [0.004919950903627912, 6.144678748551402e-06], 'true': [-2.4671622769447924e-16, 0.02589447844014825], 'true,false': [nan, 0.02589447844014825], 'true,false,false': [nan, 0.02589447844014825], 'false': [nan, 6.144678748551402e-06], 'true,true': [-2.5376526277146434e-16, 0.0]}, {'': [7.40602069695512e-05, 0.035641655328390934], 'false': [0.0, 0.043614844934851286], 'true': [1.3664283380001927e-16, 0.00020629424935151666], 'true,false': [0.0, 0.0002376509752528788], 'true,false,false': [nan, 0.0002376509752528788], 'true,true': [nan, 1.3664283380001927e-16], 'true,true,false': [nan, 1.3664283380001927e-16], 'false,true': [nan, 0.0]}, {'': [0.010446923580666368, 1.4371515100651543e-05], 'true': [4.887171516982431e-07, 0.062222474488773605], 'true,false': [0.062222474488773605, nan], 'false': [nan, 1.437151510065432e-05]}, {'': [0.00904009744114027, 1.2168722273012134e-05], 'true': [0.00904009744114027, nan], 'true,true': [0.0, 0.010564135782447382], 'true,true,false': [nan, 0.010564135782447382], 'false': [nan, 1.2168722273010746e-05], 'true,true,true': [nan, 0.0]}, {'': [0.00015198980885038584, 0.02267603132833173], 'false': [0.0, 0.027796414481706572], 'false,false': [nan, 0.027796414481706572], 'true': [0.0, 0.00015859424645039668], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01010367053865711, 1.6329180134398712e-05], 'true': [0.0, 0.0106157775047084], 'true,false': [nan, 0.0106157775047084], 'true,false,false': [0.0106157775047084, nan], 'false': [nan, 1.6329180134397327e-05], 'true,true': [0.0, nan]}, {'': [0.009198438995050805, 1.4208496852363695e-05], 'true': [0.009198438995050805, nan], 'true,true': [1.8563938144755543e-06, 0.027703545658131618]}, {'': [nan, 0.015865880167054713], 'false': [0.007874310762784095, 1.2468592499181169e-05], 'false,true': [0.0, 0.008279263971458041], 'false,true,false': [0.0, 0.009222177078556933], 'false,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
0;true;acquired(C, E).;true;true
0;true,false;bankboughtbank(A, F).;true;true
0;false;companyalsoknownas(J, A), companyalsoknownas(K, J).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
1;true;acquired(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
2;true,true;companyalsoknownas(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;acquired(C, E).;true;true
3;true,false;companyalsoknownas(I, A).;true;true
3;false;companyalsoknownas(L, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(C, D).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
6;true;bankboughtbank(A, E).;true;true
6;false;companyalsoknownas(I, A), companyalsoknownas(A, I).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(C, E), companyalsoknownas(E, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;bankboughtbank(A, F), acquired(G, F).;true;true
9;true,false;companyalsoknownas(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(H, G) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, I) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.05851773156715445;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109543;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(A, G) )
%   | then if ( acquired(G, H) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.057227356168529364;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7135148203425498;  // std dev = 0.224, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( acquired(A, F) )
%   | then if ( acquired(F, G) )
%   | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12758370604440009;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41751358415830986;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4099360106527573;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.10283031810172204;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, I) )
%   | | then return -0.1015963294878363;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.04109074835103805;  // std dev = 0.244, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( acquired(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32118414884663776;  // std dev = 0.000747, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.5324857824491869;  // std dev = 0.345, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( bankchiefexecutiveceo(A, F) )
%   | then return -0.0986676533615838;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(A, G) )
%   | | then return -0.09263941328629978;  // std dev = 0.000127, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10939429278525804;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.25514232424271105;  // std dev = 7.33e-05, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2761951399949607;  // std dev = 0.100, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( acquired(A, F) )
%   | then if ( acquired(F, G) )
%   | | then return -0.08500054802759077;  // std dev = 0.000350, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08505662252759702;  // std dev = 0.000388, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09935888456180948;  // std dev = 0.003, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0.2097626749199849;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.19633726847391095;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20687209465631376;  // std dev = 0.000986, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.07910183690248423;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, H) )
%   | | then return -0.07861686896218296;  // std dev = 0.000477, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.03354215399335428;  // std dev = 0.193, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.177100135138463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.16726453643358902;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20640415387986435;  // std dev = 0.113, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(A, F) )
%   | then if ( acquired(F, G) )
%   | | then return -0.07309813142378542;  // std dev = 0.000297, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07314099285787704;  // std dev = 0.000334, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08781693669965583;  // std dev = 0.004, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyalsoknownas(D, E) )
%   | then if ( companyalsoknownas(A, F) )
%   | | then return 0.15260917412620176;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.1529918051550635;  // std dev = 5.00e-05, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14712817021130503;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2105614066994388;  // std dev = 0.390, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( acquired(A, H) )
%   | then if ( acquired(H, I) )
%   | | then return -0.0682973344357996;  // std dev = 0.000279, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06833485912905762;  // std dev = 0.000314, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0810335353267335;  // std dev = 0.004, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D), acquired(E, D) )
%   | then return 0.13402513535995275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.1338416099930687;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.12376635407148096;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15680609086883907;  // std dev = 0.371, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( acquired(A, H) )
%   | then if ( acquired(H, I) )
%   | | then return -0.06407744491046827;  // std dev = 0.000263, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06411055868013651;  // std dev = 0.000296, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07520142721067434;  // std dev = 0.003, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.951575
   AUC PR    = 0.013335
   CLL	      = -0.230968
   Precision = 0.014637 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.028817


Total learning time: 1.837 seconds
Total inference time: 13.965 seconds
AUC ROC: 0.951575


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106816
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.541 seconds
Refined model CLL: -0.106816


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.951575
   AUC PR    = 0.013335
   CLL	      = -0.230968
   Precision = 0.014637 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.028817


Total learning time: 21.535 seconds
Total inference time: 13.965 seconds
AUC ROC: 0.951575
Total revision time: 21.535
Best scored revision CLL: -0.106816


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:35:08
{'AUC ROC': 0.951575, 'AUC PR': 0.013335, 'CLL': -0.230968, 'Precision': [0.014637, 0.5], 'Recall': 0.923077, 'F1': 0.028817, 'Learning time': 21.535, 'Inference time': 13.965, 'parameter_20': {'AUC ROC': 0.953775, 'AUC PR': 0.014009, 'CLL': -0.220358, 'Precision': [0.014347, 0.5], 'Recall': 0.923077, 'F1': 0.028255, 'Learning time': 16.604, 'Inference time': 253.878}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then if ( cityhascompanyoffice(G, H), economicsectorcompany(B, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( bankboughtbank(J, A), bankboughtbank(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10185106490048777;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then if ( acquired(A, C) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7194734122109544;  // std dev = 2.58e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6464578760543233;  // std dev = 0.950, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( companyalsoknownas(J, A), bankboughtbank(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08989911376521198;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5192597505457378;  // std dev = 0.949, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( acquired(A, F), cityhascompanyoffice(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6934756450437646;  // std dev = 0.228, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(A, I), bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12007182508063968;  // std dev = 2.24e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( companyalsoknownas(A, F), acquired(A, G) )
%   | | then return 0.4219167203867122;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4231175757217309;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( bankboughtbank(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(J, A), acquired(J, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3729357882625391;  // std dev = 0.943, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( bankboughtbank(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07221318263770166;  // std dev = 0.875, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.3013992980117683;  // std dev = 0.948, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( acquired(D, E) )
%   | | then return 0.4929932953878719;  // std dev = 0.373, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A), companyalsoknownas(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10119332357097283;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then if ( companyalsoknownas(G, A), acquired(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2580162447866948;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(A, I), cityhascompanyoffice(J, I) )
%   | | | then return 0.264988811685243;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25473696578356625;  // std dev = 1.056, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, K), bankboughtbank(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09235374061289452;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( cityhascompanyoffice(G, H) )
%   | | | then return 0.22704581519424014;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17973523680040104;  // std dev = 0.948, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( bankboughtbank(I, A), bankboughtbank(A, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(J, A) )
%   | | then return -0.08489821349254904;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.04986280196341355;  // std dev = 0.718, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then if ( acquired(E, C), bankboughtbank(F, E) )
%   | | then return 0.17633666104992252;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( cityhascompanyoffice(G, H) )
%   | | | then return 0.19304285882572736;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, I), acquired(I, J) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(K, L) )
%   | | | then return 0.17397265976321452;  // std dev = 1.074, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(M, A), companyalsoknownas(A, N) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08067483670387368;  // std dev = 0.005, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0.157605301547638;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.148143754041376;  // std dev = 1.070, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07489036305708405;  // std dev = 0.004, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), bankboughtbank(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( companyalsoknownas(A, F), acquired(F, G) )
%   | | then if ( bankboughtbank(H, A) )
%   | | | then return 0.13292864141610417;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13547192508599426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12877993270507787;  // std dev = 1.065, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return -0.06986424400629802;  // std dev = 0.004, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.957245
   AUC PR    = 0.015364
   CLL	      = -0.205532
   Precision = 0.02125 at threshold = 0.5
   Recall    = 0.861538
   F1        = 0.041478


Total learning time: 15.956 seconds
Total inference time: 211.541 seconds
AUC ROC: 0.957245


Results scoring model
   AUC ROC   = 0.9936
   AUC PR    = 0.993122
   CLL	      = -0.154802
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 2.752 seconds
Parameter learned model CLL: -0.154802


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(A, F)', 'true,false,true': 'cityhascompanyoffice(G, H), economicsectorcompany(B, H)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, A), bankboughtbank(K, J)'}, {'true,true': [0.0, 0, 13], 'true,false,true,true': [2.11e-08, 0, 3], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.943, 1, 8], 'false,true': [0.0, 0, 0], 'false,false': [0.98, 24, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,true': 'acquired(A, C)', 'true,false,false': 'acquired(I, C)', 'false': 'companyalsoknownas(J, A), bankboughtbank(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [2.58e-08, 0, 3], 'true,false,false,true': [4.21e-08, 0, 10], 'true,false,false,false': [0.95, 1, 10], 'false,true': [0.0, 0, 0], 'false,false': [0.98, 24, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(A, F), cityhascompanyoffice(G, C)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'companyalsoknownas(A, I), bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.949, 1, 17], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.228, 0, 3], 'false,true': [0.0, 0, 0], 'false,false': [2.24e-08, 24, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'acquired(E, C)', 'true,true': 'companyalsoknownas(A, F), acquired(A, G)', 'true,true,false': 'companyalsoknownas(A, H)', 'true,false': 'bankboughtbank(I, A)', 'true,false,false': 'companyalsoknownas(J, A), acquired(J, K)', 'false': 'bankboughtbank(L, A)'}, {'true,true,true': [0.006, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.943, 1, 11], 'false,true': [0.0, 0, 0], 'false,false': [0.875, 24, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'bankboughtbank(F, A), companyalsoknownas(A, G)'}, {'true,true': [0.948, 1, 22], 'true,false,true': [0.373, 0, 3], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 24, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,true': 'companyalsoknownas(G, A), acquired(G, H)', 'true,true,false': 'acquired(A, I), cityhascompanyoffice(J, I)', 'false': 'companyalsoknownas(A, K), bankboughtbank(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.056, 1, 23], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.45e-09, 24, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), cityhascompanyoffice(D, C)', 'true': 'companyalsoknownas(A, E)', 'true,true': 'bankboughtbank(E, F)', 'true,true,false': 'cityhascompanyoffice(G, H)', 'false': 'bankboughtbank(I, A), bankboughtbank(A, I)', 'false,false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.026, 0, 5], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.948, 1, 19], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 4, 0], 'false,false,false': [0.718, 20, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(A, D)', 'true,true': 'acquired(E, C), bankboughtbank(F, E)', 'true,true,false': 'cityhascompanyoffice(G, H)', 'true,false': 'companyalsoknownas(A, I), acquired(I, J)', 'true,false,false': 'acquired(K, L)', 'false': 'bankboughtbank(M, A), companyalsoknownas(A, N)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.017, 0, 4], 'true,true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.074, 1, 20], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.005, 24, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.006, 0, 5], 'true,true,false': [1.07, 1, 20], 'true,false': [0.0, 0, 0], 'false': [0.004, 24, 0]}], ['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C), bankboughtbank(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'companyalsoknownas(A, F), acquired(F, G)', 'false,true,true': 'bankboughtbank(H, A)', 'false,true,false': 'bankboughtbank(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.065, 1, 23], 'false,false': [0.004, 24, 0]}]]
[{'': [0.0384000000000006, 0.038400000000000004], 'true': [-2.7328566760003855e-16, 0.07638888888888877], 'true,false': [1.4802973661668753e-16, 0.09876543209876527], 'true,false,false': [nan, 0.09876543209876527], 'false': [nan, 0.03840000000000005], 'true,false,true': [1.4802973661668753e-16, nan]}, {'': [0.03739045970758838, 0.03840000000000001], 'false': [nan, 0.0384], 'true': [nan, 0.03739045970758838], 'true,false': [0.0, 0.04427840813590053], 'true,false,false': [1.7763568394002506e-16, 0.08199280714591183], 'true,false,true': [0.0, 2.220446049250313e-16]}, {'': [0.03970055179501083, 2.544261098099317e-17], 'true': [0.039418033504205564, 0.017382272948504918], 'true,true': [-4.4408920985006264e-17, 0.05008407577963799], 'true,false': [nan, 0.017382272948504918], 'true,false,false': [nan, 0.017382272948504918], 'false': [nan, 2.0816681711721685e-17]}, {'': [0.03623029351556315, 0.030656172942188257], 'true': [1.8355132445866055e-05, 0.0741600473208545], 'true,false': [nan, 0.0741600473208545], 'true,false,false': [nan, 0.07416004732085456], 'false': [nan, 0.030656172942188274], 'true,true': [1.9387608645893284e-05, 1.7945555110305218e-05], 'true,true,false': [nan, 1.7945555110305218e-05]}, {'': [0.04368873681449421, -2.3129646346357427e-18], 'true': [0.039106090863109656, 0.04634966438654139], 'true,false': [0.04634966438654139, nan], 'false': [nan, -2.3129646346357427e-18]}, {'': [0.042903053974190475, 2.3129646346357427e-18], 'true': [0.042903053974190475, nan], 'true,true': [0.0, 0.04461885950476229], 'true,true,false': [0.0, 0.04647377463701838], 'false': [nan, 2.3129646346357427e-18], 'true,true,true': [nan, 0.0]}, {'': [0.03634497497964768, 0.020786638345267318], 'true': [0.00013488036735636032, 0.044949840467128584], 'false': [nan, 0.020786638345267314], 'false,false': [0.0, 0.0245496012203176], 'true,true': [nan, 0.00013488036735636032], 'true,true,false': [0.00013488036735636032, nan]}, {'': [0.044407084584309815, 9.195037825304268e-07], 'true': [0.00010343327834181903, 0.054907996035265014], 'true,false': [nan, 0.054907996035265014], 'true,false,false': [0.054907996035265014, nan], 'true,true': [0.0, 7.347218910241232e-05], 'true,true,false': [7.347218910241232e-05, nan], 'false': [nan, 9.195037825304268e-07]}, {'': [0.04404387296682661, 8.021589065476212e-07], 'true': [0.04404387296682661, nan], 'true,true': [7.393234737718135e-06, 0.05451153353943497]}, {'': [nan, 0.03257789162848145], 'false': [0.043628980874788365, 7.055424678317999e-07], 'false,true': [1.6170729563828867e-06, 0.04726233450955326], 'false,true,false': [nan, 0.04726233450955325], 'false,true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
0;true;acquired(E, C).;true;true
0;true,false;companyalsoknownas(A, F).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
1;true;acquired(A, G), economicsectorcompany(H, G).;true;true
1;true,true;acquired(A, C).;true;true
1;true,false;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;bankboughtbank(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
3;true;acquired(E, C).;true;true
3;true,true;companyalsoknownas(A, F), acquired(A, G).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;bankboughtbank(A, F), bankboughtbank(F, G).;true;true
5;true,false;acquired(A, I), cityhascompanyoffice(J, I).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), cityhascompanyoffice(D, C).;true;true
6;true;companyalsoknownas(A, E).;true;true
6;false;companyalsoknownas(J, A).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;companyalsoknownas(A, D).;true;true
7;true,true;acquired(E, C), bankboughtbank(F, E).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(D, C), bankboughtbank(D, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;companyalsoknownas(A, F), acquired(F, G).;true;true
9;true,true;bankboughtbank(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7470378239884012;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( acquired(A, H) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07042249347191636;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(A, E), economicsectorcompany(F, E) )
%   | then if ( acquired(A, C) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109544;  // std dev = 2.58e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(G, C) )
%   | | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.6464578760543233;  // std dev = 0.286, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( acquired(A, H) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.062064272658592136;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.5643411979643802;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5063793369975543;  // std dev = 0.944, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.6913410573640565;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( acquired(A, G) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12382073625860951;  // std dev = 0.006, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( acquired(E, C) )
%   | then if ( companyalsoknownas(A, F), acquired(A, G) )
%   | | then return 0.41642308579427395;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.425124111396792;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return 0.43988431480402523;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3495456649833449;  // std dev = 0.310, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( acquired(A, I) )
%   | then if ( acquired(I, J) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.05884150371856554;  // std dev = 0.209, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.3231855386981298;  // std dev = 0.207, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( acquired(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10533060982792675;  // std dev = 0.005, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D), bankboughtbank(D, E) )
%   | then return 0.25490944278487115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F), cityhascompanyoffice(G, F) )
%   | | then return 0.2532086134436723;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.26608444132366593;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2519303897022052;  // std dev = 1.060, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( acquired(A, I) )
%   | then if ( acquired(I, J) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09581140937114482;  // std dev = 0.004, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E) )
%   | then return 0.21712179916641006;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.22125757497985896;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17083163695044723;  // std dev = 0.235, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.07892210311022552;  // std dev = 0.000504, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(A, H) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.040763289072028044;  // std dev = 0.185, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then if ( acquired(E, C), bankboughtbank(F, E) )
%   | | then return 0.17586341232587377;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18417019975784496;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17584768931134565;  // std dev = 0.236, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( acquired(A, G) )
%   | then if ( acquired(G, H) )
%   | | then return -0.07324293715908008;  // std dev = 8.06e-06, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324227943822867;  // std dev = 1.08e-05, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08445176445966314;  // std dev = 0.004, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(D, E) )
%   | then return 0.15604766410864412;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(A, F) )
%   | | then return 0.1534533359823953;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14769975284353004;  // std dev = 0.261, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( acquired(A, G) )
%   | then if ( countryhascompanyoffice(H, G) )
%   | | then return -0.06842258659891984;  // std dev = 9.24e-06, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842489227941034;  // std dev = 8.05e-06, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07814839923356212;  // std dev = 0.004, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), acquired(D, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.13278683345526554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.13129851058934194;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then return 0.14172493419493207;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.14135649087779759;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12424837085465491;  // std dev = 1.071, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( acquired(A, I) )
%   | then if ( acquired(I, J) )
%   | | then return -0.0641892988356745;  // std dev = 7.19e-06, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06418879322215898;  // std dev = 9.46e-06, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07270199428288283;  // std dev = 0.004, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.962676
   AUC PR    = 0.020382
   CLL	      = -0.204395
   Precision = 0.02125 at threshold = 0.5
   Recall    = 0.861538
   F1        = 0.041478


Total learning time: 1.795 seconds
Total inference time: 14.379 seconds
AUC ROC: 0.962676


Results scoring model
   AUC ROC   = 0.9944
   AUC PR    = 0.994081
   CLL	      = -0.155011
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 0.581 seconds
Refined model CLL: -0.155011


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.957245
   AUC PR    = 0.015364
   CLL	      = -0.205532
   Precision = 0.02125 at threshold = 0.5
   Recall    = 0.861538
   F1        = 0.041478


Total learning time: 21.084 seconds
Total inference time: 211.541 seconds
AUC ROC: 0.957245
Total revision time: 21.084
Best scored revision CLL: -0.154802


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 00:39:16
{'AUC ROC': 0.957245, 'AUC PR': 0.015364, 'CLL': -0.205532, 'Precision': [0.02125, 0.5], 'Recall': 0.861538, 'F1': 0.041478, 'Learning time': 21.084, 'Inference time': 211.541, 'parameter_25': {'AUC ROC': 0.957245, 'AUC PR': 0.015364, 'CLL': -0.205532, 'Precision': [0.02125, 0.5], 'Recall': 0.861538, 'F1': 0.041478, 'Learning time': 15.956, 'Inference time': 211.541}}


Starting fold 3

Target train facts examples: 5307
Target train pos examples: 520
Target train neg examples: 366438

Target test facts examples: 5307
Target test pos	 examples: 258
Target test neg examples: 183217

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, D), bankboughtbank(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then if ( companyalsoknownas(G, F), economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(C, H), acquired(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( bankboughtbank(J, K) )
%   | then if ( acquired(A, L) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then if ( companyalsoknownas(E, D), bankboughtbank(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, H) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( acquired(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F) )
%   | | then if ( bankboughtbank(G, A), companyalsoknownas(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360638;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, G) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D), acquired(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, G) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( bankboughtbank(F, G) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E) )
%   | then if ( acquired(F, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(A, H) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(E, F) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( acquired(A, F) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(C, E) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, F), economicsectorcompany(G, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.96822
   AUC PR    = 0.023096
   CLL	      = -0.173825
   Precision = 0.027307 at threshold = 0.5
   Recall    = 0.848837
   F1        = 0.052911


Total learning time: 1.23 seconds
Total inference time: 71.882 seconds
AUC ROC: 0.96822


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.706 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(A, D), bankboughtbank(C, E)', 'true,false': 'acquired(A, F)', 'true,false,true': 'companyalsoknownas(G, F), economicsectorcompany(B, G)', 'true,false,false': 'bankboughtbank(C, H), acquired(A, I)', 'false': 'bankboughtbank(J, K)', 'false,true': 'acquired(A, L)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 4], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'true,true': 'companyalsoknownas(E, D), bankboughtbank(C, G)', 'false': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.0, 3, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'acquired(A, E)', 'true,false': 'acquired(A, F)', 'true,false,true': 'bankboughtbank(G, A), companyalsoknownas(C, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 3], 'false': [1.86e-09, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(C, E)', 'true,false': 'bankboughtbank(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.49e-08, 0, 5], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D), acquired(A, E)', 'true,false': 'bankboughtbank(F, D)', 'false': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 5], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [1.86e-09, 3, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'bankboughtbank(F, G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(A, E)', 'true,true': 'acquired(F, D)', 'true,true,false': 'companyalsoknownas(G, E)', 'false': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 4], 'false,true': [0.0, 2, 0], 'false,false': [0.0, 3, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,false': 'companyalsoknownas(E, F)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 4], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'acquired(A, F)', 'true,true,true': 'acquired(E, F)', 'true,true,false': 'bankboughtbank(C, E)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'false': 'bankboughtbank(D, E)', 'false,true': 'economicsectorcompany(B, F), economicsectorcompany(G, D)'}, {'true': [0.0, 0, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0], 'true,false,false': [nan, 0.0], 'false': [-2.7755575615628915e-18, nan], 'false,true': [0.0, 0.0]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [0.0, 0.0], 'true,true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,false': [0.0, 3.700743415417188e-17], 'true,false,true': [nan, 0.0]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17], 'true,false': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'false': [0.0, 1.1564823173178713e-18], 'true': [nan, -2.2204460492503132e-17], 'true,false': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'false': [0.0, 0.0], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,true': [nan, 0.0], 'true,true,false': [0.0, -4.625929269271485e-18]}, {'': [0.0, 0.0], 'false': [0.0, nan], 'false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(A, F).;true;true
0;false;acquired(A, L).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;false;acquired(A, H).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;bankboughtbank(C, D).;true;true
2;true,false;acquired(A, F).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;false;acquired(A, G).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
6;true;acquired(A, E).;true;true
6;false;acquired(A, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(C, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(A, F).;true;true
8;true,false;bankboughtbank(C, E).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(A, F) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(A, F) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(C, E) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.970725
   AUC PR    = 0.026134
   CLL	      = -0.175814
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 0.712 seconds
Total inference time: 8.168 seconds
AUC ROC: 0.970725


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.468 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.96822
   AUC PR    = 0.023096
   CLL	      = -0.173825
   Precision = 0.027307 at threshold = 0.5
   Recall    = 0.848837
   F1        = 0.052911


Total learning time: 3.1159999999999997 seconds
Total inference time: 71.882 seconds
AUC ROC: 0.96822
Total revision time: 3.1159999999999997
Best scored revision CLL: -0.094637


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:40:41
{'AUC ROC': 0.96822, 'AUC PR': 0.023096, 'CLL': -0.173825, 'Precision': [0.027307, 0.5], 'Recall': 0.848837, 'F1': 0.052911, 'Learning time': 3.1159999999999997, 'Inference time': 71.882, 'parameter_5': {'AUC ROC': 0.96822, 'AUC PR': 0.023096, 'CLL': -0.173825, 'Precision': [0.027307, 0.5], 'Recall': 0.848837, 'F1': 0.052911, 'Learning time': 1.23, 'Inference time': 71.882}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( bankboughtbank(J, K) )
%   | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( acquired(A, F), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(I, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(D, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then if ( bankboughtbank(G, H) )
%   | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109172;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(D, F) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.970938
   AUC PR    = 0.026114
   CLL	      = -0.172238
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 4.881 seconds
Total inference time: 191.196 seconds
AUC ROC: 0.970938


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.34 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [0.0, 0, 5], 'true,false,true': [0.0, 0, 5], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 5], 'false,true': [5.27e-09, 10, 0], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(A, F), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 1, 0], 'false,false': [0.0, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.49e-08, 0, 5], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [5.27e-09, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'bankboughtbank(F, A)', 'false,true': 'bankboughtbank(G, H)'}, {'true,true': [0.0, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(A, H), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.83e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [3.73e-09, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.31e-10, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [7.45e-09, 0, 9], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [2.63e-09, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 8], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(D, F)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [3.73e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'false': [nan, -1.1102230246251566e-17], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [nan, 8.881784197001253e-17], 'true,false': [nan, 8.881784197001253e-17], 'true,false,false': [0.0, 0.0], 'false': [2.7755575615628915e-18, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'false': [0.0, -1.5419764230904951e-18], 'true': [-1.4802973661668753e-16, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0], 'true,true': [0.0, -6.344131569286608e-17]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [4.4408920985006264e-17, 4.4408920985006264e-17], 'true,true': [0.0, 0.0], 'true,false': [nan, 4.4408920985006264e-17], 'true,false,false': [4.4408920985006264e-17, nan], 'false': [0.0, 3.0839528461809902e-18]}, {'': [-4.4408920985006264e-17, 0.0], 'false': [0.0, 0.0], 'false,true': [0.0, nan], 'true': [-3.700743415417188e-17, 0.0], 'true,false': [0.0, nan]}, {'': [3.3306690738754695e-17, 1.3877787807814458e-18], 'true': [3.3306690738754695e-17, nan], 'true,true': [nan, 3.3306690738754695e-17], 'true,true,false': [nan, 3.3306690738754695e-17], 'false': [0.0, 1.5419764230904951e-18]}, {'': [-2.7755575615628914e-17, 0.0], 'false': [nan, 0.0], 'true': [-2.7755575615628914e-17, nan]}, {'': [5.551115123125783e-18, 6.938893903907229e-19], 'true': [0.0, 6.1679056923619804e-18], 'true,false': [6.1679056923619804e-18, nan], 'false': [0.0, 7.709882115452476e-19]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [0.0, -3.469446951953614e-18]}, {'': [0.009820698026241881, nan], 'true': [0.0, 1.3877787807814458e-18], 'true,false': [1.3877787807814458e-18, nan], 'true,false,true': [nan, 1.3877787807814458e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(E, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;bankboughtbank(D, E).;true;true
2;false;bankboughtbank(I, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(E, C).;true;true
3;true,true;acquired(A, F).;true;true
3;false;bankboughtbank(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(D, C).;true;true
4;false;bankboughtbank(F, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;false;bankboughtbank(J, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(D, C), bankboughtbank(E, D).;true;true
7;false;bankboughtbank(H, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(D, C), bankboughtbank(D, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(F, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(F, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( bankboughtbank(G, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(E, A) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( bankboughtbank(E, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( countryhascompanyoffice(F, A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( countryhascompanyoffice(E, A) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( bankboughtbank(G, A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(D, E) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( countryhascompanyoffice(G, A) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( countryhascompanyoffice(E, A) )
%   | then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.971176
   AUC PR    = 0.026264
   CLL	      = -0.175814
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 1.069 seconds
Total inference time: 10.664 seconds
AUC ROC: 0.971176


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.484 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.970938
   AUC PR    = 0.026114
   CLL	      = -0.172238
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 7.774 seconds
Total inference time: 191.196 seconds
AUC ROC: 0.970938
Total revision time: 7.774
Best scored revision CLL: -0.094637


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:44:12
{'AUC ROC': 0.970938, 'AUC PR': 0.026114, 'CLL': -0.172238, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 7.774, 'Inference time': 191.196, 'parameter_10': {'AUC ROC': 0.970938, 'AUC PR': 0.026114, 'CLL': -0.172238, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 4.881, 'Inference time': 191.196}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.024204006076958388;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then if ( acquired(A, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( bankboughtbank(J, K) )
%   | then return -0.021283130990843033;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(A, F), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5403043966793832;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( bankboughtbank(I, A) )
%   | then return -0.1364036300318842;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.13640363003188422;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.41856144558654323;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return -0.12111742529805457;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.013400544759538242;  // std dev = 1.213, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.3206081018211037;  // std dev = 0.000377, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(D, E) )
%   | | then return 0.40287656605344474;  // std dev = 0.829, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then if ( bankboughtbank(G, H) )
%   | | then return -0.1088047844532577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11969819120220689;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2770930973422532;  // std dev = 0.841, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return -0.09869468418098051;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10764843472955897;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.20441416904549775;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.023382564538163942;  // std dev = 0.254, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.17455747234510743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.20371841348912056;  // std dev = 0.850, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return -0.08835481023453527;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09569328138407726;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0.1489666432082869;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1743170148338069;  // std dev = 0.842, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08728133340793427;  // std dev = 0.006, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.14700292490553554;  // std dev = 0.835, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( acquired(D, F) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08057428617941796;  // std dev = 0.006, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965218
   AUC PR    = 0.019072
   CLL	      = -0.205415
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 6.28 seconds
Total inference time: 189.625 seconds
AUC ROC: 0.965218


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995618
   CLL	      = -0.159032
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 1.506 seconds
Parameter learned model CLL: -0.159032


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [0.0, 0, 6], 'true,false,true': [0.0, 0, 7], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.328, 15, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,true': 'acquired(A, C)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [2.11e-08, 0, 7], 'false,true': [1.328, 15, 2], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(A, F), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.817, 1, 4], 'false,true': [0.0, 1, 0], 'false,false': [0.0, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.004, 0, 7], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [1.213, 14, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'bankboughtbank(F, A)', 'false,true': 'bankboughtbank(G, H)'}, {'true,true': [0.000377, 0, 11], 'true,false,true': [0.829, 1, 4], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(A, H), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.841, 1, 15], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [0.0, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [0.014, 0, 13], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.254, 15, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.85, 1, 14], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [3.73e-09, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.003, 0, 2], 'true,true,false': [0.842, 1, 13], 'true,false': [0.0, 0, 0], 'false': [0.006, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(D, F)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [0.835, 1, 15], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.006, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [-2.7328566760003855e-16, 0.10380622837370242], 'false': [nan, 0.10380622837370246], 'true': [-1.4802973661668753e-16, -2.5376526277146434e-16], 'true,false': [-2.5376526277146434e-16, nan]}, {'': [1.3664283380001927e-16, 0.10380622837370243], 'false': [0.10380622837370243, nan], 'true': [nan, 1.3664283380001927e-16], 'true,false': [0.0, 1.4802973661668753e-16], 'true,false,false': [0.0, 6.344131569286608e-17], 'true,false,true': [nan, 0.0]}, {'': [0.041762670757249154, -7.93016446160826e-18], 'true': [-2.0185873175002846e-16, 0.13348457670065134], 'true,false': [nan, 0.13348457670065134], 'true,false,false': [nan, 0.13348457670065134], 'false': [0.0, -6.4051328343759035e-18], 'true,true': [0.0, -1.4802973661668753e-16]}, {'': [1.7509743069483036e-06, 0.08717980167124473], 'false': [0.0, 0.09194601419611238], 'true': [7.401486830834377e-17, 2.7450339319390338e-06], 'true,false': [nan, 2.7450339319390338e-06], 'true,false,false': [2.7450339319390338e-06, nan], 'true,true': [0.0, 0.0]}, {'': [0.044424393798533385, 7.87072468252738e-06], 'true': [1.2915714437349896e-08, 0.13750496284832087], 'true,false': [0.13750496284832087, nan], 'false': [0.0, 0.0], 'false,true': [0.0, nan]}, {'': [0.04416717709661121, 5.3173746710131835e-06], 'true': [0.04416717709661121, nan], 'true,true': [nan, 0.04416717709661121], 'true,true,false': [nan, 0.04416717709661122], 'false': [0.0, -8.540177112501205e-18]}, {'': [1.538417855613432e-05, 0.06464863430243672], 'false': [nan, 0.06464863430243672], 'true': [1.538417855613432e-05, nan]}, {'': [0.04525212887935325, 3.571893186556295e-06], 'true': [0.0, 0.04821578994078486], 'true,false': [0.04821578994078486, nan], 'false': [0.0, 1.0675221390626506e-18]}, {'': [0.04437318845569576, 2.578134994218289e-06], 'true': [0.04437318845569576, nan], 'true,true': [3.4164586542283215e-06, 0.05063139714472198]}, {'': [0.03611946310795797, nan], 'true': [0.04355273030731376, 2.227524965595283e-06], 'true,false': [2.227524965595283e-06, nan], 'true,false,true': [nan, 2.227524965595283e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(E, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(A, G), economicsectorcompany(H, G).;true;true
1;true,false;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;bankboughtbank(D, E).;true;true
2;false;bankboughtbank(I, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(E, C).;true;true
3;true,true;acquired(A, F).;true;true
3;false;bankboughtbank(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(D, C).;true;true
4;false;bankboughtbank(F, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;false;bankboughtbank(J, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(D, C), bankboughtbank(E, D).;true;true
7;false;bankboughtbank(H, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(D, C), bankboughtbank(D, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( countryhascompanyoffice(F, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0803711573217344;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(F, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, C) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( countryhascompanyoffice(H, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.07030324498182235;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5352032519370288;  // std dev = 0.777, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( bankboughtbank(F, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.15033706455950857;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4189169007999699;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( bankboughtbank(G, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.11681461187309224;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.028744759810666588;  // std dev = 0.342, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.32055902532938557;  // std dev = 0.000306, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32058085701949474;  // std dev = 0.000151, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3966777589415351;  // std dev = 0.754, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( bankboughtbank(F, A) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.09141933340973248;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.13550034510466094;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.15959147955946218;  // std dev = 0.427, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.3278037123236342;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( bankboughtbank(E, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return -0.08410420535831449;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1204369762823356;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then return 0.22594446258193068;  // std dev = 0.000245, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19593027051999018;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( countryhascompanyoffice(F, A) )
%   | then return -0.11347646611652551;  // std dev = 0.154, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.07784811695570008;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.04040340554990354;  // std dev = 0.293, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.16851051172217746;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.10502678564680683;  // std dev = 0.375, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.24923746067096125;  // std dev = 0.165, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( bankboughtbank(G, A) )
%   | then return -0.07092536782647464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.07185058592584366;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10979674679482025;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(D, E) )
%   | then return 0.1597057295004511;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.06762597844105922;  // std dev = 0.366, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2114618607525433;  // std dev = 0.153, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( countryhascompanyoffice(G, A) )
%   | then return -0.06542449684417179;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.06775806117827535;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10946197585753427;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.0761425970021983;  // std dev = 0.379, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.17761647129052227;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( countryhascompanyoffice(E, A) )
%   | then return -0.06153613678491068;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return -0.06360132624093193;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09923885147522359;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.96511
   AUC PR    = 0.019159
   CLL	      = -0.222927
   Precision = 0.014207 at threshold = 0.5
   Recall    = 0.949612
   F1        = 0.027995


Total learning time: 1.241 seconds
Total inference time: 12.09 seconds
AUC ROC: 0.96511


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.13605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.58 seconds
Refined model CLL: -0.13605


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.96511
   AUC PR    = 0.019159
   CLL	      = -0.222927
   Precision = 0.014207 at threshold = 0.5
   Recall    = 0.949612
   F1        = 0.027995


Total learning time: 9.607000000000001 seconds
Total inference time: 12.09 seconds
AUC ROC: 0.96511
Total revision time: 9.607000000000001
Best scored revision CLL: -0.13605


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:47:44
{'AUC ROC': 0.96511, 'AUC PR': 0.019159, 'CLL': -0.222927, 'Precision': [0.014207, 0.5], 'Recall': 0.949612, 'F1': 0.027995, 'Learning time': 9.607000000000001, 'Inference time': 12.09, 'parameter_15': {'AUC ROC': 0.965218, 'AUC PR': 0.019072, 'CLL': -0.205415, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 6.28, 'Inference time': 189.625}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.04661296966239256;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then if ( acquired(A, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6392070123615109;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( bankboughtbank(J, K) )
%   | then return -0.041032968606155205;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5993227560582612;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4996365507862763;  // std dev = 0.937, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( acquired(A, F), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5608212357488755;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( bankboughtbank(I, A) )
%   | then return -0.1315131111240484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1315131111240484;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.43112592142375594;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.43112592142375583;  // std dev = 9.13e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.36528948744402534;  // std dev = 0.938, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return -0.11720597496456936;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.031077840976016523;  // std dev = 1.228, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.2935942421328188;  // std dev = 0.940, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( acquired(D, E) )
%   | | then return 0.42606794400256387;  // std dev = 0.822, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then if ( bankboughtbank(G, H) )
%   | | then return -0.10561225125488002;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11402844701455091;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25544474933193734;  // std dev = 1.272, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return -0.096043738780319;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10300568555267818;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.18582089221159231;  // std dev = 0.948, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.033096026136846785;  // std dev = 0.232, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.2146993307876336;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.17517164054494724;  // std dev = 1.286, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return -0.08540184879925242;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09109256673144434;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0.18268798049377924;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14405743333392165;  // std dev = 1.282, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0835560924825683;  // std dev = 0.005, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.12657200515599368;  // std dev = 1.280, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else if ( acquired(D, F) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07737654642433575;  // std dev = 0.004, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.96935
   AUC PR    = 0.027879
   CLL	      = -0.186533
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 7.699 seconds
Total inference time: 188.451 seconds
AUC ROC: 0.96935


Results scoring model
   AUC ROC   = 0.9875
   AUC PR    = 0.98699
   CLL	      = -0.20322
   Precision = 0.947368 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.923077


Total scoring time: 1.724 seconds
Parameter learned model CLL: -0.20322


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [0.0, 0, 9], 'true,false,true': [0.949, 1, 9], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.345, 19, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,true': 'acquired(A, C)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [2.98e-08, 0, 8], 'true,false,false,false': [0.949, 1, 9], 'false,true': [1.345, 19, 2], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(A, F), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.937, 1, 13], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.82, 1, 4], 'false,true': [0.0, 1, 0], 'false,false': [7.45e-09, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [9.13e-09, 0, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.938, 1, 9], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [1.228, 18, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'bankboughtbank(F, A)', 'false,true': 'bankboughtbank(G, H)'}, {'true,true': [0.94, 1, 16], 'true,false,true': [0.822, 1, 4], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(A, H), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.272, 2, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [7.45e-09, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [0.948, 1, 18], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.232, 19, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [1.286, 2, 18], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [0.0, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.005, 0, 3], 'true,true,false': [1.282, 2, 17], 'true,false': [0.0, 0, 0], 'false': [0.005, 18, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(D, F)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [1.28, 2, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.004, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.04986149584487499, 0.08616780045351473], 'false': [nan, 0.08616780045351478], 'true': [-2.9605947323337506e-16, 0.08999999999999977], 'true,false': [0.08999999999999977, nan]}, {'': [0.048974633088729014, 0.08616780045351473], 'false': [0.08616780045351471, nan], 'true': [nan, 0.048974633088729014], 'true,false': [0.0, 0.05159078887525689], 'true,false,false': [1.1102230246251565e-16, 0.09000000000000012], 'true,false,true': [nan, 0.0]}, {'': [0.0718985406214251, 0.0], 'true': [0.05310692605163069, 0.13432157804408934], 'true,false': [nan, 0.13432157804408934], 'true,false,false': [nan, 0.13432157804408934], 'true,true': [0.0, 0.062733333483265], 'false': [0.0, 3.2653618371328133e-18]}, {'': [0.047409305778045585, 0.07211640162004593], 'false': [0.0, 0.07536898096465057], 'true': [9.868649107779169e-17, 0.08802452706499657], 'true,false': [nan, 0.08802452706499657], 'true,false,false': [0.08802452706499657, nan], 'true,true': [0.0, 6.344131569286608e-17]}, {'': [0.07399975712715996, 3.7165122472331157e-06], 'true': [0.051987917275061184, 0.13527920404792057], 'true,false': [0.13527920404792057, nan], 'false': [0.0, -9.79608551139844e-18], 'false,true': [0.0, nan]}, {'': [0.07349257927779408, 2.5431109525957888e-06], 'true': [0.07349257927779408, nan], 'true,true': [nan, 0.07349257927779408], 'true,true,false': [nan, 0.07349257927779411], 'false': [0.0, 3.2653618371328133e-18]}, {'': [0.047253531191960525, 0.05367220013108692], 'false': [nan, 0.053672200131086915], 'true': [0.047253531191960525, nan]}, {'': [0.07525153515162826, 1.6991746911181204e-06], 'true': [0.0, 0.08263464882170725], 'true,false': [0.08263464882170728, nan], 'false': [0.0, -8.163404592832034e-18]}, {'': [0.07487206002562626, 1.2408945964967642e-06], 'true': [0.07487206002562626, nan], 'true,true': [7.804714057822274e-06, 0.08648923384776248]}, {'': [0.05123794308440223, nan], 'true': [0.07444125943479324, 1.0777812591906194e-06], 'true,false': [1.0777812591906194e-06, nan], 'true,false,true': [nan, 1.0777812591906194e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(E, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(A, G), economicsectorcompany(H, G).;true;true
1;true,false;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;bankboughtbank(D, E).;true;true
2;false;bankboughtbank(I, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(E, C).;true;true
3;true,true;acquired(A, F).;true;true
3;false;bankboughtbank(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;false;bankboughtbank(F, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;false;bankboughtbank(J, A).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(D, C), bankboughtbank(E, D).;true;true
7;false;bankboughtbank(H, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(D, C), bankboughtbank(D, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.058148935099512175;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(F, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, C) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6045267906174348;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( countryhascompanyoffice(J, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.05092203251355425;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.596982620828698;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, F) )
%   | | | then return 0.24284119545415792;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5667163051323973;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.562391528551108;  // std dev = 0.788, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( bankboughtbank(G, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.13271041311206525;  // std dev = 0.089, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.49488429282726903;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41475595299091106;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return 0.4123135584350788;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.34520020029517295;  // std dev = 0.321, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( bankboughtbank(H, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.1099931001704239;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.016637999183291972;  // std dev = 0.331, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.05327750946809099;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.23822765065438814;  // std dev = 0.443, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.423401120398056;  // std dev = 0.144, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( bankboughtbank(F, A) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.09029820904570716;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1330515373401332;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.03416992173213462;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.20689319239462864;  // std dev = 0.167, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.337419834538175;  // std dev = 0.149, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( bankboughtbank(F, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.08315001910469909;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11846806690209347;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then return -0.05439336880673797;  // std dev = 0.339, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( acquired(A, D), companyceo(A, E) )
%   | then return -0.09066484851571864;  // std dev = 0.638, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( acquired(F, A) )
%   | | then return 0.037305066829026665;  // std dev = 0.354, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.13146695151640922;  // std dev = 0.443, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.1223538722593287;  // std dev = 0.943, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.2218995935090935;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, F) )
%   | | then return 0.03849782357722379;  // std dev = 0.696, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.1500027488862241;  // std dev = 0.408, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2622492369338774;  // std dev = 0.471, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( bankboughtbank(H, A) )
%   | then return -0.07491872026947677;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.08060549637428831;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11527061506575095;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(D, E) )
%   | then return 0.19379559880171662;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, F) )
%   | | then return 0.029821725248685576;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.11149592416993825;  // std dev = 0.401, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2197552292545221;  // std dev = 0.434, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.07483313679711989;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( countryhascompanyoffice(I, A) )
%   | | then return -0.06919368409904836;  // std dev = 0.000852, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11286887926324957;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return -0.0017296410352137064;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.0943701129597647;  // std dev = 0.406, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.18846910023270852;  // std dev = 0.112, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.06981652290251614;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then return -0.06486789076599199;  // std dev = 0.000802, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1020522674384578;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.969936
   AUC PR    = 0.026782
   CLL	      = -0.212182
   Precision = 0.015012 at threshold = 0.5
   Recall    = 0.930233
   F1        = 0.029548


Total learning time: 1.982 seconds
Total inference time: 13.408 seconds
AUC ROC: 0.969936


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.162462
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.543 seconds
Refined model CLL: -0.162462


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969936
   AUC PR    = 0.026782
   CLL	      = -0.212182
   Precision = 0.015012 at threshold = 0.5
   Recall    = 0.930233
   F1        = 0.029548


Total learning time: 11.947999999999999 seconds
Total inference time: 13.408 seconds
AUC ROC: 0.969936
Total revision time: 11.947999999999999
Best scored revision CLL: -0.162462


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:51:18
{'AUC ROC': 0.969936, 'AUC PR': 0.026782, 'CLL': -0.212182, 'Precision': [0.015012, 0.5], 'Recall': 0.930233, 'F1': 0.029548, 'Learning time': 11.947999999999999, 'Inference time': 13.408, 'parameter_20': {'AUC ROC': 0.96935, 'AUC PR': 0.027879, 'CLL': -0.186533, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 7.699, 'Inference time': 188.451}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006297083247660414;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then if ( acquired(A, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5956068723141557;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( bankboughtbank(J, K) )
%   | then return 0.005528813322597916;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.622480562713958;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.47408382606525074;  // std dev = 1.284, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else if ( acquired(A, F), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6469253538788212;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( bankboughtbank(I, A) )
%   | then return -0.14329672965523355;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1432967296552335;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.4374035963421604;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.43740359634216036;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.33746507547994625;  // std dev = 1.279, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return -0.12658787050740702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.005046111733200568;  // std dev = 1.641, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.2802591401446072;  // std dev = 1.287, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( acquired(D, E) )
%   | | then return 0.5067690372657864;  // std dev = 0.919, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then if ( bankboughtbank(G, H) )
%   | | then return -0.11324062327688914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12714683774862265;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26329050517188995;  // std dev = 1.640, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return -0.10235758892861027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11369199226209686;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.16925825805279612;  // std dev = 1.298, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.011037175646584093;  // std dev = 0.257, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.23637393664003548;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.17997021036329988;  // std dev = 1.659, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return -0.09239854775220724;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10171608529366953;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0.1994040388199522;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1452696045163574;  // std dev = 1.653, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09243447971528375;  // std dev = 0.008, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.12595786586320057;  // std dev = 1.649, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | else if ( acquired(D, F) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08496698816163005;  // std dev = 0.007, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.965589
   AUC PR    = 0.019402
   CLL	      = -0.200587
   Precision = 0.013676 at threshold = 0.5
   Recall    = 0.957364
   F1        = 0.026967


Total learning time: 10.714 seconds
Total inference time: 191.53 seconds
AUC ROC: 0.965589


Results scoring model
   AUC ROC   = 0.9744
   AUC PR    = 0.972503
   CLL	      = -0.239902
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 2.02 seconds
Parameter learned model CLL: -0.239902


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [0.0, 0, 10], 'true,false,true': [1.301, 2, 11], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.846, 23, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,true': 'acquired(A, C)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 9], 'true,false,false,false': [1.301, 2, 11], 'false,true': [1.846, 23, 4], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(A, F), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [1.284, 2, 16], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.895, 1, 6], 'false,true': [0.0, 1, 0], 'false,false': [1.49e-08, 21, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [5.27e-09, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.279, 2, 11], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [1.641, 22, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'bankboughtbank(F, A)', 'false,true': 'bankboughtbank(G, H)'}, {'true,true': [1.287, 2, 19], 'true,false,true': [0.919, 1, 6], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 21, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(A, H), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.64, 3, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [1.49e-08, 21, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [1.298, 2, 21], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.257, 23, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [1.659, 3, 23], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [0.0, 21, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.007, 0, 3], 'true,true,false': [1.653, 3, 22], 'true,false': [0.0, 0, 0], 'false': [0.008, 22, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(D, F)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [1.649, 3, 25], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.007, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.07939508506616269, 0.1262002743484225], 'false': [nan, 0.12620027434842235], 'true': [-8.881784197001253e-17, 0.13017751479289916], 'true,false': [0.13017751479289916, nan]}, {'': [0.0773490670791256, 0.12620027434842251], 'false': [0.12620027434842246, nan], 'true': [nan, 0.0773490670791256], 'true,false': [0.0, 0.08063200586027226], 'true,false,false': [0.0, 0.13017751479289963], 'true,false,true': [nan, 0.0]}, {'': [0.0938457068435113, 1.0092936587501423e-17], 'true': [0.08120387440085579, 0.11452473341175169], 'true,false': [nan, 0.11452473341175169], 'true,false,false': [nan, 0.11452473341175169], 'true,true': [0.0, 0.0915919118322387], 'false': [0.0, 1.057355261547768e-17]}, {'': [0.07360189395322143, 0.10032775268364942], 'false': [0.0, 0.10354475294741732], 'true': [-2.2204460492503132e-17, 0.12587625373738323], 'true,false': [nan, 0.12587625373738323], 'true,false,false': [0.12587625373738323, nan], 'true,true': [0.0, 2.7755575615628914e-17]}, {'': [0.09890205571240655, 8.390576073572218e-06], 'true': [0.07884638848743496, 0.12058900726693571], 'true,false': [0.12058900726693571, nan], 'false': [0.0, -2.64338815386942e-18], 'false,true': [0.0, nan]}, {'': [0.0960080615003359, 5.5740551187031455e-06], 'true': [0.0960080615003359, nan], 'true,true': [nan, 0.0960080615003359], 'true,true,false': [nan, 0.09600806150033588], 'false': [0.0, 1.057355261547768e-17]}, {'': [0.07320541877784811, 0.06628128470752175], 'true': [0.07320541877784811, nan], 'false': [nan, 0.0662812847075217]}, {'': [0.09856181591437517, 3.766831864799011e-06], 'true': [0.0, 0.10591625260892755], 'true,false': [0.10591625260892758, nan], 'false': [0.0, -1.057355261547768e-17]}, {'': [0.09784642018988854, 2.6773003904740307e-06], 'true': [0.09784642018988854, nan], 'true,true': [1.8217474176268622e-05, 0.1092718184110558]}, {'': [0.06534449611542387, nan], 'true': [0.09710950632259192, 2.296640879162986e-06], 'true,false': [2.296640879162986e-06, nan], 'true,false,true': [nan, 2.296640879162986e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(E, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(A, G), economicsectorcompany(H, G).;true;true
1;true,false;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;bankboughtbank(D, E).;true;true
2;false;bankboughtbank(I, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(E, C).;true;true
3;true,true;acquired(A, F).;true;true
3;false;bankboughtbank(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;false;bankboughtbank(F, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;false;bankboughtbank(J, A).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(D, C), bankboughtbank(E, D).;true;true
7;false;bankboughtbank(H, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(D, C), bankboughtbank(D, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6581489350995123;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( countryhascompanyoffice(H, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.124815601766179;  // std dev = 0.442, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, C) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5580193346218546;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( countryhascompanyoffice(J, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.10893247925776749;  // std dev = 0.442, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.6130878855983887;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, F) )
%   | | | then return 0.25089382783900327;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.51756049450567;  // std dev = 0.918, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.6400821962997022;  // std dev = 0.318, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( bankboughtbank(G, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1439728008699431;  // std dev = 0.138, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.49287143926839694;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.4267354977047598;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return 0.41900577789903687;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3122537927596567;  // std dev = 0.382, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( bankboughtbank(H, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then if ( acquired(A, J) )
%   | | | then return -0.09874312779978967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11454147707049873;  // std dev = 0.087, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.057836688436344805;  // std dev = 0.366, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A), economicsectorcompany(B, D) )
%   | then return 0.39462273837580547;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.25284724754840526;  // std dev = 0.175, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.35341999674773306;  // std dev = 0.341, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( bankboughtbank(F, A) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.08949133855881453;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.15205177016107108;  // std dev = 0.020, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return -0.013277828052924656;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.1927834324435699;  // std dev = 0.448, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( acquired(F, A) )
%   | | | then return 0.29509014674568285;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3286951077307346;  // std dev = 1.152, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( bankboughtbank(G, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.08246229670975207;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1335204481810684;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(A, D) )
%   then return -0.11124181746865258;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then if ( acquired(G, F) )
%   | | | then return 0.24281430751651956;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0756444848666465;  // std dev = 0.399, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.07620128842130378;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.09831676733391347;  // std dev = 0.271, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.24565127357006156;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, F) )
%   | | then return -0.009144587125979134;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.14136386785085978;  // std dev = 0.440, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.23762951794892295;  // std dev = 1.135, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( bankboughtbank(H, A) )
%   | then return -0.08621369744491804;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.07064975760154857;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12951121465719975;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(D, E) )
%   | then return 0.19952586047792695;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, F) )
%   | | then return -0.007223537646519322;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.10569796426283475;  // std dev = 0.438, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.19384068604698437;  // std dev = 1.118, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.06614942535233537;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.11306316508554325;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.21210587958435853;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.09972819499985472;  // std dev = 0.170, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.12112730073186449;  // std dev = 0.315, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.06217856689195657;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then return -0.07073384017350097;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11083720252879069;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.969071
   AUC PR    = 0.028415
   CLL	      = -0.211096
   Precision = 0.014336 at threshold = 0.5
   Recall    = 0.937984
   F1        = 0.028241


Total learning time: 2.896 seconds
Total inference time: 18.265 seconds
AUC ROC: 0.969071


Results scoring model
   AUC ROC   = 0.988
   AUC PR    = 0.986304
   CLL	      = -0.207575
   Precision = 0.925926 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961538


Total scoring time: 0.61 seconds
Refined model CLL: -0.207575


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969071
   AUC PR    = 0.028415
   CLL	      = -0.211096
   Precision = 0.014336 at threshold = 0.5
   Recall    = 0.937984
   F1        = 0.028241


Total learning time: 16.24 seconds
Total inference time: 18.265 seconds
AUC ROC: 0.969071
Total revision time: 16.24
Best scored revision CLL: -0.207575


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 00:55:05
{'AUC ROC': 0.969071, 'AUC PR': 0.028415, 'CLL': -0.211096, 'Precision': [0.014336, 0.5], 'Recall': 0.937984, 'F1': 0.028241, 'Learning time': 16.24, 'Inference time': 18.265, 'parameter_25': {'AUC ROC': 0.965589, 'AUC PR': 0.019402, 'CLL': -0.200587, 'Precision': [0.013676, 0.5], 'Recall': 0.957364, 'F1': 0.026967, 'Learning time': 10.714, 'Inference time': 191.53}}


Starting fold 1

Target train facts examples: 5307
Target train pos examples: 518
Target train neg examples: 366436

Target test facts examples: 5307
Target test pos	 examples: 260
Target test neg examples: 183219

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( acquired(H, A), acquired(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(A, E), bankboughtbank(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(C, I) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(J, A), acquired(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( acquired(D, E) )
%   | | then return 0.1956966796559563;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.6956966796559563;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( bankboughtbank(F, A), countryhascompanyoffice(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), acquired(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(A, I), acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( companyalsoknownas(A, F), bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27942350303121205;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(I, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(J, A), bankboughtbank(K, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( acquired(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.2123675502306611;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( bankboughtbank(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(F, A), companyalsoknownas(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( acquired(A, F), acquired(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, A), countryhascompanyoffice(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20765319848791086;  // std dev = 0.780, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(A, J), acquired(K, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16345943890607362;  // std dev = 0.783, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( acquired(F, A), acquired(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(A, E), bankboughtbank(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(G, H) )
%   | | | then return 0.13050581519340973;  // std dev = 0.787, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(I, A), companyalsoknownas(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( bankboughtbank(C, E), acquired(E, F) )
%   | | then return -0.08957709632295574;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.20307877976287864;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), acquired(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( companyalsoknownas(A, F), bankboughtbank(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H) )
%   | | | then return -0.5677409788967414;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.22459676757269093;  // std dev = 0.251, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.959933
   AUC PR    = 0.017594
   CLL	      = -0.154933
   Precision = 0.025754 at threshold = 0.5
   Recall    = 0.676923
   F1        = 0.049619


Total learning time: 1.995 seconds
Total inference time: 48.763 seconds
AUC ROC: 0.959933


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.190473
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.807 seconds
Parameter learned model CLL: -0.190473


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'bankboughtbank(C, E)', 'true,false': 'companyalsoknownas(A, F)', 'true,false,false': 'bankboughtbank(C, G)', 'false': 'acquired(H, A), acquired(I, H)'}, {'true,true': [0.816, 1, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.11e-08, 0, 3], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(A, E), bankboughtbank(F, E)', 'true,false': 'bankboughtbank(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(C, I)', 'false': 'companyalsoknownas(J, A), acquired(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.816, 1, 2], 'true,false,false,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'acquired(D, E)', 'true,false': 'bankboughtbank(F, A), countryhascompanyoffice(G, C)', 'true,false,false': 'acquired(A, H), acquired(H, A)', 'false': 'companyalsoknownas(A, I), acquired(J, A)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.05e-08, 0, 3], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'bankboughtbank(C, E)', 'true,true': 'companyalsoknownas(A, F), bankboughtbank(G, A)', 'true,true,false': 'companyalsoknownas(A, H)', 'true,false': 'acquired(I, A)', 'true,false,false': 'companyalsoknownas(J, A), bankboughtbank(K, J)', 'false': 'acquired(L, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.772, 1, 2], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,false': 'bankboughtbank(E, D)', 'false': 'acquired(F, A), companyalsoknownas(A, G)'}, {'true,true': [0.771, 1, 2], 'true,false,true': [0.0, 0, 3], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'acquired(A, F), acquired(F, G)', 'true,true,false': 'bankboughtbank(H, A), countryhascompanyoffice(I, H)', 'false': 'companyalsoknownas(A, J), acquired(K, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.78, 1, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(A, E)', 'false': 'acquired(F, A), acquired(A, F)', 'false,false': 'companyalsoknownas(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.783, 1, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false': [0.0, 3, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(A, D)', 'true,false': 'companyalsoknownas(A, E), bankboughtbank(F, E)', 'true,false,false': 'bankboughtbank(G, H)', 'false': 'acquired(I, A), companyalsoknownas(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.787, 1, 5], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'bankboughtbank(C, E), acquired(E, F)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false': [0.108, 0, 4], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'companyalsoknownas(A, C), acquired(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'companyalsoknownas(A, F), bankboughtbank(G, F)', 'false,true,false': 'acquired(A, H)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.251, 0, 5], 'false,false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.22222222222222224, 1.4802973661668753e-16], 'true,false': [nan, 1.4802973661668753e-16], 'true,false,false': [nan, 1.4802973661668753e-16], 'false': [nan, 0.0]}, {'': [0.12949546172365034, 0.0], 'true': [nan, 0.12949546172365034], 'true,false': [nan, 0.12949546172365034], 'true,false,false': [0.2222222222222222, 0.0], 'false': [nan, 0.0]}, {'': [0.12042365933938219, 0.0], 'true': [0.22222222222222224, 3.700743415417188e-17], 'true,true': [0.25, 0.0], 'true,false': [nan, 3.700743415417188e-17], 'true,false,false': [nan, 3.700743415417188e-17], 'false': [nan, 0.0]}, {'': [0.10414426466741543, 0.0], 'true': [0.19875409408198672, -3.700743415417188e-17], 'true,true': [nan, 0.19875409408198672], 'true,true,false': [nan, 0.19875409408198672], 'false': [nan, 0.0], 'true,false': [0.0, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.10197334663438469, 0.0], 'true': [0.19807744993019685, 0.0], 'false': [nan, 0.0], 'true,false': [0.0, nan]}, {'': [0.10130156270117281, 0.0], 'true': [0.10130156270117281, nan], 'true,true': [nan, 0.10130156270117281], 'true,true,false': [nan, 0.10130156270117281], 'false': [nan, 0.0]}, {'': [0.10221461886444483, 0.0], 'true': [nan, 0.10221461886444483], 'false': [nan, 0.0], 'false,false': [0.0, 0.0]}, {'': [0.10327067512457595, 0.0], 'true': [nan, 0.10327067512457595], 'true,false': [nan, 0.10327067512457595], 'true,false,false': [0.10327067512457595, nan], 'false': [nan, 0.0]}, {'': [0.10432120717196593, 0.0], 'true': [0.10432120717196593, nan], 'true,true': [0.25, 0.002932656822093163]}, {'': [nan, 0.06453489837138018], 'false': [0.09773215632852851, 0.0], 'false,true': [nan, 0.09773215632852851], 'false,true,false': [0.0, 0.012645403514191167]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
0;true;bankboughtbank(C, E).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
1;true;bankboughtbank(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;bankboughtbank(C, D).;true;true
2;true,true;acquired(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
3;true;bankboughtbank(C, E).;true;true
3;true,false;acquired(I, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;bankboughtbank(C, D).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
6;false;companyalsoknownas(G, A).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;acquired(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( acquired(D, E) )
%   | | then return 0.1956966796559563;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.6956966796559563;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.27942350303121205;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.2123675502306611;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.20765319848791086;  // std dev = 0.780, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then return 0.16345943890607362;  // std dev = 0.783, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.13050581519340973;  // std dev = 0.787, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.10552682106760049;  // std dev = 0.791, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return -0.6148497034580085;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2264838236569867;  // std dev = 0.205, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.95966
   AUC PR    = 0.017369
   CLL	      = -0.15232
   Precision = 0.026421 at threshold = 0.5
   Recall    = 0.711538
   F1        = 0.05095


Total learning time: 0.756 seconds
Total inference time: 8.092 seconds
AUC ROC: 0.95966


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.195768
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.433 seconds
Refined model CLL: -0.195768


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.959933
   AUC PR    = 0.017594
   CLL	      = -0.154933
   Precision = 0.025754 at threshold = 0.5
   Recall    = 0.676923
   F1        = 0.049619


Total learning time: 3.9909999999999997 seconds
Total inference time: 48.763 seconds
AUC ROC: 0.959933
Total revision time: 3.9909999999999997
Best scored revision CLL: -0.190473


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:56:08
{'AUC ROC': 0.959933, 'AUC PR': 0.017594, 'CLL': -0.154933, 'Precision': [0.025754, 0.5], 'Recall': 0.676923, 'F1': 0.049619, 'Learning time': 3.9909999999999997, 'Inference time': 48.763, 'parameter_5': {'AUC ROC': 0.959933, 'AUC PR': 0.017594, 'CLL': -0.154933, 'Precision': [0.025754, 0.5], 'Recall': 0.676923, 'F1': 0.049619, 'Learning time': 1.995, 'Inference time': 48.763}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then if ( bankboughtbank(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, E), bankboughtbank(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(C, I) )
%   | | | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(J, K) )
%   | then return -0.03693864720852352;  // std dev = 0.946, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41257245288266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( bankboughtbank(F, A), acquired(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5995385807682413;  // std dev = 0.286, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.1214479144215391;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.13542855510001864;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3151786576185065;  // std dev = 0.433, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, I) )
%   | | | then return 0.40681182877449823;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return -0.1090737273004;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.00804278114216814;  // std dev = 0.840, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.23676009386434207;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( bankboughtbank(E, D) )
%   | | then return 0.3800295041216926;  // std dev = 0.431, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A) )
%   | then if ( companyalsoknownas(G, H) )
%   | | then return -0.09891743717273127;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1194907944425618;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, A), acquired(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2588376313677163;  // std dev = 0.990, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return -0.09044374520457442;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10747926095577755;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, F) )
%   | then return 0.16300858063536364;  // std dev = 0.874, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.08327397827078238;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.004021402401220273;  // std dev = 0.248, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D), companyalsoknownas(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, G) )
%   | | then return 0.1807930995654959;  // std dev = 1.007, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.07713352745280046;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09724193845103103;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( bankboughtbank(C, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14982630062379548;  // std dev = 1.005, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08520795613338591;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.12600977653130127;  // std dev = 1.002, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( bankboughtbank(F, D) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07880059996466907;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.958395
   AUC PR    = 0.015879
   CLL	      = -0.213799
   Precision = 0.02199 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.042932


Total learning time: 2.253 seconds
Total inference time: 178.692 seconds
AUC ROC: 0.958395


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.973217
   CLL	      = -0.222506
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.9


Total scoring time: 0.966 seconds
Parameter learned model CLL: -0.222506


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,false': 'acquired(F, G), economicsectorcompany(B, F)', 'false': 'companyalsoknownas(H, A), companyalsoknownas(I, H)', 'false,true': 'bankboughtbank(J, I)'}, {'true,true': [0.866, 1, 3], 'true,false,true': [0.0, 0, 6], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [0.935, 7, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(A, E), bankboughtbank(F, E)', 'true,false': 'bankboughtbank(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(C, I)', 'false': 'companyalsoknownas(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.866, 1, 3], 'true,false,false,false': [2.11e-08, 0, 6], 'false,true': [0.946, 9, 1], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'bankboughtbank(F, A), acquired(C, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'companyalsoknownas(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.866, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.286, 0, 7], 'false,true': [0.0, 2, 0], 'false,false': [7.45e-09, 7, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'companyalsoknownas(G, A)', 'true,false,false': 'bankboughtbank(H, I)', 'false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.433, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.05e-08, 0, 6], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.84, 7, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,false': 'bankboughtbank(E, D)', 'false': 'companyalsoknownas(F, A)', 'false,true': 'companyalsoknownas(G, H)'}, {'true,true': [0.866, 1, 3], 'true,false,true': [0.431, 0, 7], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 7, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,false': 'bankboughtbank(H, A), acquired(H, I)', 'false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.99, 1, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.0, 7, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(E, F)', 'false': 'companyalsoknownas(G, A), companyalsoknownas(A, G)'}, {'true,true': [0.874, 1, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.248, 7, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D), companyalsoknownas(E, D)', 'true,false': 'acquired(F, G)', 'false': 'companyalsoknownas(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.007, 1, 10], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [3.73e-09, 7, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'bankboughtbank(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.005, 1, 10], 'true,false': [0.0, 0, 0], 'false': [0.021, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, D)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [1.002, 1, 10], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.02, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.08999999999999977, 0.09], 'false': [0.0, 0.10937500000000004], 'true': [0.18750000000000006, -1.4802973661668753e-16], 'false,true': [nan, 0.0], 'true,false': [-1.4802973661668753e-16, nan]}, {'': [0.08483192326840135, 0.08945832762487813], 'false': [0.0894583276248781, nan], 'true': [nan, 0.08483192326840135], 'true,false': [nan, 0.08483192326840135], 'true,false,false': [0.18750000000000006, 7.401486830834377e-17]}, {'': [0.08372084050748856, 3.37829184312361e-05], 'true': [0.18750000000000003, 0.011707069844978792], 'true,true': [nan, 0.18750000000000003], 'true,false': [nan, 0.011707069844978792], 'true,false,false': [nan, 0.011707069844978792], 'false': [0.0, 7.93016446160826e-18]}, {'': [0.07701519313346483, 0.0722523714028023], 'true': [0.18750000000000003, 1.850371707708594e-17], 'true,true': [nan, 0.18750000000000003], 'false': [0.0, 0.08827401383717734], 'true,false': [nan, 1.850371707708594e-17], 'true,false,false': [1.850371707708594e-17, nan]}, {'': [0.0898497485388582, 7.31565729744304e-05], 'true': [0.1875, 0.026585559786599315], 'true,false': [0.026585559786599315, nan], 'false': [0.0, -5.9476233462061954e-18], 'false,true': [0.0, nan]}, {'': [0.08907497242317228, 5.015954514484771e-05], 'true': [0.08907497242317228, nan], 'true,true': [nan, 0.08907497242317228], 'true,true,false': [nan, 0.08907497242317228], 'false': [0.0, 0.0]}, {'': [0.07646092607098426, 0.05003921595615862], 'true': [0.07646092607098426, nan], 'false': [0.0, 0.061292825788806155]}, {'': [0.09217259694174756, 6.988734197818338e-05], 'true': [nan, 0.09217259694174756], 'true,false': [0.09217259694174756, nan], 'false': [0.0, 1.982541115402065e-18]}, {'': [0.09176446297672082, 5.121952609343166e-05], 'true': [0.09176446297672082, nan], 'true,true': [nan, 0.09176446297672083]}, {'': [0.0605813408530013, nan], 'true': [0.09123532703771221, 4.4348062122997714e-05], 'true,false': [4.4348062122997714e-05, nan], 'true,false,true': [nan, 4.4348062122997714e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
0;true;bankboughtbank(C, E).;true;true
0;false;companyalsoknownas(H, A), companyalsoknownas(I, H).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
1;true;bankboughtbank(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;false;companyalsoknownas(I, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
3;true;bankboughtbank(C, E).;true;true
3;false;companyalsoknownas(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;false;companyalsoknownas(F, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;false;companyalsoknownas(J, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
6;false;companyalsoknownas(G, A), companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;false;companyalsoknownas(H, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(G, F) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.016851064900487787;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.13502297909516817;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.005097495028609892;  // std dev = 0.349, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.33216794078037837;  // std dev = 0.773, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.6447700492007945;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.11868494447858978;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.13583284791686162;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.27683244170737686;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.434262189144565;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(F, A) )
%   | then return -0.10682700247822878;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.010259915898839778;  // std dev = 0.292, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.15454372130709157;  // std dev = 0.737, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.42491209954312925;  // std dev = 0.153, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.09705807685770536;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11958439304147009;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.11854848386995492;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.33512321141868995;  // std dev = 0.151, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.08888167919489202;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10756002393134596;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.091866690745174;  // std dev = 0.743, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2166284690728003;  // std dev = 0.125, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(A, F) )
%   | then return -0.0819445921858517;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.01010578072176387;  // std dev = 0.232, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.07184111466924906;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.24296177818255457;  // std dev = 0.154, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.07598938797910204;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09677920482256097;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.05661556436168111;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2060968589301182;  // std dev = 0.143, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.07591673139751855;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0890698589736385;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.12965505297860538;  // std dev = 0.258, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then return -0.07076267029032497;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08210563023148025;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.959018
   AUC PR    = 0.015995
   CLL	      = -0.237968
   Precision = 0.013717 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.027062


Total learning time: 1.013 seconds
Total inference time: 9.687 seconds
AUC ROC: 0.959018


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990455
   CLL	      = -0.191991
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.516 seconds
Refined model CLL: -0.191991


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.959018
   AUC PR    = 0.015995
   CLL	      = -0.237968
   Precision = 0.013717 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.027062


Total learning time: 4.748 seconds
Total inference time: 9.687 seconds
AUC ROC: 0.959018
Total revision time: 4.748
Best scored revision CLL: -0.191991


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 00:59:21
{'AUC ROC': 0.959018, 'AUC PR': 0.015995, 'CLL': -0.237968, 'Precision': [0.013717, 0.5], 'Recall': 1.0, 'F1': 0.027062, 'Learning time': 4.748, 'Inference time': 9.687, 'parameter_10': {'AUC ROC': 0.958395, 'AUC PR': 0.015879, 'CLL': -0.213799, 'Precision': [0.02199, 0.5], 'Recall': 0.9, 'F1': 0.042932, 'Learning time': 2.253, 'Inference time': 178.692}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( acquired(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then if ( bankboughtbank(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, E), bankboughtbank(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(C, I) )
%   | | | then return 0.6189976143448207;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(J, K) )
%   | then return -0.06632299381651097;  // std dev = 0.964, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4851287515461648;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( bankboughtbank(F, A), acquired(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5950302903665938;  // std dev = 0.297, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.11834736610648351;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12732273429124155;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.36568225360444984;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(H, I) )
%   | | | then return 0.40790020662728876;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return -0.10654567717290221;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.03844702193507201;  // std dev = 0.866, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.27560196347331406;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( bankboughtbank(E, D) )
%   | | then return 0.37456296343199247;  // std dev = 0.452, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A) )
%   | then if ( companyalsoknownas(G, H) )
%   | | then return -0.09682010341290319;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11001278789159576;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3365828790301978;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(I, A), acquired(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25085256633024966;  // std dev = 1.054, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A) )
%   | then return -0.0886777782172584;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09969453327410514;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, F) )
%   | then return 0.1750251877801968;  // std dev = 0.937, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.0817679346298525;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.027037174249993873;  // std dev = 0.212, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D), companyalsoknownas(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, G) )
%   | | then return 0.178354578824721;  // std dev = 1.073, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.07583484450946038;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08888263105491213;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( bankboughtbank(C, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14963782024284605;  // std dev = 1.070, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07953110858659664;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.127571726334851;  // std dev = 1.065, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( bankboughtbank(F, D) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07390176056230048;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.958654
   AUC PR    = 0.015973
   CLL	      = -0.209205
   Precision = 0.02199 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.042932


Total learning time: 3.991 seconds
Total inference time: 218.05700000000002 seconds
AUC ROC: 0.958654


Results scoring model
   AUC ROC   = 0.982222
   AUC PR    = 0.979686
   CLL	      = -0.193123
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.933333


Total scoring time: 1.317 seconds
Parameter learned model CLL: -0.193123


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,false': 'acquired(F, G), economicsectorcompany(B, F)', 'false': 'companyalsoknownas(H, A), companyalsoknownas(I, H)', 'false,true': 'bankboughtbank(J, I)'}, {'true,true': [0.935, 1, 7], 'true,false,true': [0.0, 0, 7], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'false,false': [0.957, 11, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(A, E), bankboughtbank(F, E)', 'true,false': 'bankboughtbank(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(C, I)', 'false': 'companyalsoknownas(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.935, 1, 7], 'true,false,false,false': [2.11e-08, 0, 7], 'false,true': [0.964, 14, 1], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'bankboughtbank(F, A), acquired(C, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'companyalsoknownas(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.935, 1, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.297, 0, 8], 'false,true': [0.0, 3, 0], 'false,false': [7.45e-09, 11, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'companyalsoknownas(G, A)', 'true,false,false': 'bankboughtbank(H, I)', 'false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.331, 1, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 7], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [0.866, 11, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,false': 'bankboughtbank(E, D)', 'false': 'companyalsoknownas(F, A)', 'false,true': 'companyalsoknownas(G, H)'}, {'true,true': [0.935, 1, 7], 'true,false,true': [0.452, 0, 8], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.86e-09, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [7.45e-09, 11, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(H, G)', 'true,true,false': 'bankboughtbank(I, A), acquired(I, J)', 'false': 'companyalsoknownas(K, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.054, 1, 14], 'true,false': [0.0, 0, 0], 'false,true': [2.63e-09, 3, 0], 'false,false': [0.0, 11, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(E, F)', 'false': 'companyalsoknownas(G, A), companyalsoknownas(A, G)'}, {'true,true': [0.937, 1, 14], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [0.212, 11, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D), companyalsoknownas(E, D)', 'true,false': 'acquired(F, G)', 'false': 'companyalsoknownas(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.073, 1, 15], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [5.27e-09, 11, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'bankboughtbank(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.07, 1, 15], 'true,false': [0.0, 0, 0], 'false': [0.017, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, D)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [1.065, 1, 15], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.016, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.06222222222222188, 0.06222222222222222], 'false': [0.0, 0.07638888888888894], 'true': [0.10937499999999978, -2.5376526277146434e-16], 'false,true': [nan, 0.0], 'true,false': [-2.5376526277146434e-16, nan]}, {'': [0.06084596272703487, 0.06198495332947056], 'false': [0.06198495332947053, nan], 'true': [nan, 0.06084596272703487], 'true,false': [nan, 0.06084596272703487], 'true,false,false': [0.10937500000000017, 6.344131569286608e-17]}, {'': [0.06321336155282103, 1.3563207774060029e-05], 'true': [0.10937500000000008, 0.011012548988093063], 'true,true': [nan, 0.10937500000000008], 'true,false': [nan, 0.011012548988093063], 'true,false,false': [nan, 0.011012548988093063], 'false': [0.0, 5.046468293750712e-18]}, {'': [0.05877694182762913, 0.05075406167492244], 'true': [0.10937499999999994, 0.0], 'true,true': [nan, 0.10937499999999994], 'false': [-2.3129646346357427e-18, 0.06251509172461284], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan]}, {'': [0.06988840969091537, 2.9303818795379084e-05], 'true': [0.10937500000000004, 0.02550517962542001], 'true,false': [0.02550517962542001, nan], 'false': [1.1564823173178713e-18, 5.046468293750712e-18], 'false,true': [1.1564823173178713e-18, nan]}, {'': [0.06982361107211833, 2.04345583440037e-05], 'true': [0.06982361107211833, nan], 'true,true': [0.0, 0.0740191630696993], 'true,true,false': [nan, 0.0740191630696993], 'false': [2.3129646346357427e-18, -3.784851220313033e-18], 'true,true,true': [nan, 0.0]}, {'': [0.05848341491274411, 0.036591090995167504], 'true': [0.05848341491274411, nan], 'false': [-1.1564823173178713e-18, 0.04513977251760789]}, {'': [0.07202056348606005, 2.8663654149372768e-05], 'true': [nan, 0.07202056348606004], 'true,false': [0.07202056348606005, nan], 'false': [0.0, 2.523234146875356e-18]}, {'': [0.07149736300465831, 2.1327131005680067e-05], 'true': [0.07149736300465831, nan], 'true,true': [nan, 0.07149736300465831]}, {'': [0.047899569868290914, nan], 'true': [0.07085266880976578, 1.8621633654713437e-05], 'true,false': [1.8621633654713437e-05, nan], 'true,false,true': [nan, 1.8621633654713437e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
0;true;bankboughtbank(C, E).;true;true
0;false;companyalsoknownas(H, A), companyalsoknownas(I, H).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
1;true;bankboughtbank(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;false;companyalsoknownas(I, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
3;true;bankboughtbank(C, E).;true;true
3;false;companyalsoknownas(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;false;companyalsoknownas(F, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
5;false;companyalsoknownas(K, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
6;false;companyalsoknownas(G, A), companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;false;companyalsoknownas(H, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(G, F) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.016851064900487787;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.6189976143448207;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.03693864720852352;  // std dev = 0.299, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.3772713626662367;  // std dev = 0.859, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.6133463364692826;  // std dev = 0.083, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.11840406901222818;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12702412713405054;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.3484502608152893;  // std dev = 0.315, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( acquired(A, F) )
%   | | then return 0.46135380844365304;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4034841315692126;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.106593921623442;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.10026173113062808;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.009122947681985853;  // std dev = 0.297, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.18277182474321346;  // std dev = 0.843, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.3879723574569765;  // std dev = 0.127, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.0968616476794799;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return -0.09157270903429665;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12026355026500213;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.28865701979071223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F) )
%   | | then return 0.14087480181372708;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3084744366547831;  // std dev = 0.134, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.08871393186060857;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.08423461422442038;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1081093483894978;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.11015191839649677;  // std dev = 0.848, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2116463826812512;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(A, F) )
%   | then return -0.08179969004281218;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.07796027652939602;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.006496115126426578;  // std dev = 0.242, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.08722201773795571;  // std dev = 0.850, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2201884311726852;  // std dev = 0.133, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( companyalsoknownas(E, A) )
%   | then return -0.07586296599074412;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return -0.07253746847449266;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09754493105255833;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.06979869028163124;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.18817865113985255;  // std dev = 0.126, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.06762225566230691;  // std dev = 0.000823, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08558601483302548;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.05634327594102073;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.1637655666314845;  // std dev = 0.119, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.06348136644626422;  // std dev = 0.000776, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07912489099137293;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.958698
   AUC PR    = 0.015821
   CLL	      = -0.227189
   Precision = 0.014506 at threshold = 0.5
   Recall    = 0.984615
   F1        = 0.028591


Total learning time: 1.391 seconds
Total inference time: 10.907 seconds
AUC ROC: 0.958698


Results scoring model
   AUC ROC   = 0.993333
   AUC PR    = 0.993472
   CLL	      = -0.172752
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.522 seconds
Refined model CLL: -0.172752


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.958698
   AUC PR    = 0.015821
   CLL	      = -0.227189
   Precision = 0.014506 at threshold = 0.5
   Recall    = 0.984615
   F1        = 0.028591


Total learning time: 7.221 seconds
Total inference time: 10.907 seconds
AUC ROC: 0.958698
Total revision time: 7.221
Best scored revision CLL: -0.172752


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 01:03:18
{'AUC ROC': 0.958698, 'AUC PR': 0.015821, 'CLL': -0.227189, 'Precision': [0.014506, 0.5], 'Recall': 0.984615, 'F1': 0.028591, 'Learning time': 7.221, 'Inference time': 10.907, 'parameter_15': {'AUC ROC': 0.958654, 'AUC PR': 0.015973, 'CLL': -0.209205, 'Precision': [0.02199, 0.5], 'Recall': 0.9, 'F1': 0.042932, 'Learning time': 3.991, 'Inference time': 218.05700000000002}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( acquired(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then if ( bankboughtbank(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08302753548872309;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, E), bankboughtbank(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(C, I) )
%   | | | then return 0.6392070123615109;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(J, K) )
%   | then return -0.08105198050663029;  // std dev = 0.974, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.49932275605826126;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( bankboughtbank(F, A), acquired(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5875271702606845;  // std dev = 0.305, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.11681914328638193;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12302622810971763;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3758491322444214;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(H, I) )
%   | | | then return 0.40971358700181465;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return -0.1052955588126192;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.05689798672128717;  // std dev = 0.882, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.28401811356076057;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( bankboughtbank(E, D) )
%   | | then return 0.3606366116597843;  // std dev = 0.469, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A) )
%   | then if ( companyalsoknownas(G, H) )
%   | | then return -0.09578009104007949;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10489288267630498;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.283527627890526;  // std dev = 0.051, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( bankboughtbank(I, A), acquired(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2530541922330545;  // std dev = 1.072, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A) )
%   | then return -0.08779999400039784;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09544468325429152;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, F) )
%   | then return 0.1830035529033967;  // std dev = 0.951, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.08101780276414702;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.041534143795782165;  // std dev = 0.184, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D), companyalsoknownas(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, G) )
%   | | then return 0.1783116455575265;  // std dev = 1.094, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.07518683144514982;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0842561254390591;  // std dev = 8.33e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( bankboughtbank(C, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15067216344155326;  // std dev = 1.089, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07673837949724482;  // std dev = 0.012, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.12941159927074278;  // std dev = 1.084, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( bankboughtbank(F, D) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07147560500806793;  // std dev = 0.012, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.959638
   AUC PR    = 0.018442
   CLL	      = -0.210303
   Precision = 0.02199 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.042932


Total learning time: 5.167 seconds
Total inference time: 219.043 seconds
AUC ROC: 0.959638


Results scoring model
   AUC ROC   = 0.9875
   AUC PR    = 0.985623
   CLL	      = -0.171614
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total scoring time: 1.276 seconds
Parameter learned model CLL: -0.171614


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,false': 'acquired(F, G), economicsectorcompany(B, F)', 'false': 'companyalsoknownas(H, A), companyalsoknownas(I, H)', 'false,true': 'bankboughtbank(J, I)'}, {'true,true': [0.949, 1, 9], 'true,false,true': [0.0, 0, 10], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'false,false': [0.97, 16, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(A, E), bankboughtbank(F, E)', 'true,false': 'bankboughtbank(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(C, I)', 'false': 'companyalsoknownas(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.949, 1, 9], 'true,false,false,false': [2.98e-08, 0, 10], 'false,true': [0.974, 19, 1], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'bankboughtbank(F, A), acquired(C, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'companyalsoknownas(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.949, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.305, 0, 10], 'false,true': [2.63e-09, 3, 0], 'false,false': [0.0, 16, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'companyalsoknownas(G, A)', 'true,false,false': 'bankboughtbank(H, I)', 'false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.3, 1, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 9], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [0.882, 16, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,false': 'bankboughtbank(E, D)', 'false': 'companyalsoknownas(F, A)', 'false,true': 'companyalsoknownas(G, H)'}, {'true,true': [0.949, 1, 9], 'true,false,true': [0.469, 0, 11], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [9.13e-09, 16, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(H, G)', 'true,true,false': 'bankboughtbank(I, A), acquired(I, J)', 'false': 'companyalsoknownas(K, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.051, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.072, 1, 18], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [7.45e-09, 16, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(E, F)', 'false': 'companyalsoknownas(G, A), companyalsoknownas(A, G)'}, {'true,true': [0.951, 1, 19], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [0.184, 16, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D), companyalsoknownas(E, D)', 'true,false': 'acquired(F, G)', 'false': 'companyalsoknownas(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.094, 1, 20], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [8.33e-09, 16, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'bankboughtbank(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.089, 1, 20], 'true,false': [0.0, 0, 0], 'false': [0.012, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, D)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [1.084, 1, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.012, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.047499999999999785, 0.0475], 'false': [0.0, 0.055363321799308], 'true': [0.08999999999999977, -8.881784197001253e-17], 'false,true': [nan, 0.0], 'true,false': [-8.881784197001253e-17, nan]}, {'': [0.04661067373619767, 0.04740659554463006], 'false': [0.04740659554463002, nan], 'true': [nan, 0.04661067373619776], 'true,false': [nan, 0.04661067373619767], 'true,false,false': [0.09000000000000012, 8.881784197001253e-17]}, {'': [0.04914876438158698, 5.122823535164718e-06], 'true': [0.09, 0.008548039505654565], 'true,true': [nan, 0.09], 'true,false': [nan, 0.008548039505654565], 'true,false,false': [0.0, 0.009308815021657858], 'false': [2.3129646346357427e-18, -8.673617379884035e-18]}, {'': [0.04530279735443756, 0.039164761621694154], 'true': [0.08999999999999997, 5.475596007697981e-06], 'true,true': [nan, 0.08999999999999997], 'false': [-2.3129646346357427e-18, 0.045724841395519224], 'true,false': [0.0, -2.4671622769447922e-17], 'true,false,false': [-2.4671622769447922e-17, nan]}, {'': [0.054779513419993625, 1.1041724729794828e-05], 'true': [0.08999999999999996, 0.019965463422565444], 'true,false': [0.019965463422565444, nan], 'false': [-1.1564823173178713e-18, 5.204170427930421e-18], 'false,true': [-1.1564823173178713e-18, nan]}, {'': [0.054962096046911636, 7.770584880483736e-06], 'true': [0.054962096046911636, nan], 'true,true': [0.0012865865529003567, 0.060523708698739236], 'true,true,false': [nan, 0.060523708698739236], 'true,true,true': [nan, 0.0012865865529003567], 'false': [0.0, 3.469446951953614e-18]}, {'': [0.04521589259261498, 0.028954431399453907], 'true': [0.04521589259261498, nan], 'false': [0.0, 0.03383019304170447]}, {'': [0.05694266625441354, 1.0936566455136584e-05], 'true': [nan, 0.05694266625441355], 'true,false': [0.05694266625441354, nan], 'false': [0.0, 4.336808689942018e-18]}, {'': [0.056511625653194966, 8.205768806043845e-06], 'true': [0.056511625653194966, nan], 'true,true': [nan, 0.056511625653194966]}, {'': [0.039451502199045425, nan], 'true': [0.055970266568813425, 7.1943846443140475e-06], 'true,false': [7.1943846443140475e-06, nan], 'true,false,true': [nan, 7.1943846443140475e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
0;true;bankboughtbank(C, E).;true;true
0;false;companyalsoknownas(H, A), companyalsoknownas(I, H).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
1;true;bankboughtbank(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;bankboughtbank(C, D).;true;true
2;true,false;companyalsoknownas(A, H), companyalsoknownas(H, A).;true;true
2;false;companyalsoknownas(I, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
3;true;bankboughtbank(C, E).;true;true
3;true,false;companyalsoknownas(G, A).;true;true
3;false;companyalsoknownas(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;false;companyalsoknownas(F, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
5;false;companyalsoknownas(K, A).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
6;false;companyalsoknownas(G, A), companyalsoknownas(A, G).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;false;companyalsoknownas(H, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.7581489350995123;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(G, F) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06492798797741087;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.6392070123615109;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06630501487446487;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.49932275605826126;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(A, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6083696692623124;  // std dev = 0.290, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.11633828744116809;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12303972066656318;  // std dev = 0.025, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.3758491322444214;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(A, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4046825123005986;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.10490246930221053;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.10062173462272546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.04413835362838546;  // std dev = 0.241, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then if ( companyceo(A, E) )
%   | | then return 0.008480602627019959;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.33653841376030236;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3877971053052126;  // std dev = 0.118, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( companyalsoknownas(F, A) )
%   | then return -0.09545329471660542;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.09187465942916545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10925135203218626;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.30806928779395437;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, F) )
%   | | then return 0.12758307202402494;  // std dev = 0.820, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.30649893404701295;  // std dev = 0.125, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.08752437031883252;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.08449125965627999;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09906450763978945;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( acquired(E, A) )
%   | then return -0.06899251818716279;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(A, F) )
%   | | then return 0.25200969043297905;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2198219645014204;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.0807824319863021;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(H, A) )
%   | | then return -0.08643855939897116;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return -0.07818093966686257;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.02214226896488374;  // std dev = 0.718, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return -0.05570106159385927;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.19462572026506644;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, F) )
%   | | | then return 0.20280284404756202;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22732205641061606;  // std dev = 0.464, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.07498364997459832;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.07259037836639573;  // std dev = 0.000481, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08791595918294032;  // std dev = 0.007, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.2162158250478959;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.025623683443421252;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18977200223468402;  // std dev = 0.120, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.0677627216536237;  // std dev = 0.000604, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07970295113403074;  // std dev = 0.004, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then if ( companyceo(A, E) )
%   | | then return -0.06616928365325973;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16496652823012134;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16472646141059513;  // std dev = 0.114, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.0636054472753934;  // std dev = 0.000570, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07405015343007347;  // std dev = 0.004, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.958835
   AUC PR    = 0.01554
   CLL	      = -0.218831
   Precision = 0.02199 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.042932


Total learning time: 1.795 seconds
Total inference time: 12.946 seconds
AUC ROC: 0.958835


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.99756
   CLL	      = -0.142198
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total scoring time: 0.538 seconds
Refined model CLL: -0.142198


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.958835
   AUC PR    = 0.01554
   CLL	      = -0.218831
   Precision = 0.02199 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.042932


Total learning time: 8.776 seconds
Total inference time: 12.946 seconds
AUC ROC: 0.958835
Total revision time: 8.776
Best scored revision CLL: -0.142198


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 01:07:20
{'AUC ROC': 0.958835, 'AUC PR': 0.01554, 'CLL': -0.218831, 'Precision': [0.02199, 0.5], 'Recall': 0.9, 'F1': 0.042932, 'Learning time': 8.776, 'Inference time': 12.946, 'parameter_20': {'AUC ROC': 0.959638, 'AUC PR': 0.018442, 'CLL': -0.210303, 'Precision': [0.02199, 0.5], 'Recall': 0.9, 'F1': 0.042932, 'Learning time': 5.167, 'Inference time': 219.043}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(A, D), companyalsoknownas(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, G), bankboughtbank(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8181489350995121;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( companyalsoknownas(I, J) )
%   | then if ( bankboughtbank(A, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10185106490048777;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, F) )
%   | then if ( acquired(E, D), companyalsoknownas(C, G) )
%   | | then return 0.6798563060126168;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.7274753536316645;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08989911376521198;  // std dev = 0.196, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankboughtbank(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5007266550110799;  // std dev = 0.243, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.642421957161407;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12007182508063967;  // std dev = 5.10e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( companyalsoknownas(F, A) )
%   | | then return 0.45047989920747544;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankboughtbank(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3949243436519197;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( companyalsoknownas(H, I) )
%   | | then return 0.41282125144257703;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07490677206499029;  // std dev = 0.178, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), bankboughtbank(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, D) )
%   | | then return 0.30879578223900456;  // std dev = 1.196, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10094859593887984;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( companyalsoknownas(F, G) )
%   | | then return 0.24357171782014025;  // std dev = 1.195, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09214867074815826;  // std dev = 2.95e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19523711593007198;  // std dev = 0.975, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( bankboughtbank(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06039209205414271;  // std dev = 0.160, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.14210898992840795;  // std dev = 1.056, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( acquired(E, F) )
%   | | then return 0.3108636593900367;  // std dev = 0.470, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08015682726614927;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( bankboughtbank(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, E) )
%   | | | then return 0.11962229802240411;  // std dev = 1.059, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.26371935977122146;  // std dev = 0.447, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07444210599437094;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.12060491491230502;  // std dev = 1.164, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else if ( companyalsoknownas(D, E) )
%   | then if ( economicsectorcompany(B, F), economicsectorcompany(G, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06947273085287554;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.957296
   AUC PR    = 0.015065
   CLL	      = -0.208607
   Precision = 0.021669 at threshold = 0.5
   Recall    = 0.880769
   F1        = 0.042298


Total learning time: 4.178 seconds
Total inference time: 191.606 seconds
AUC ROC: 0.957296


Results scoring model
   AUC ROC   = 0.9848
   AUC PR    = 0.97938
   CLL	      = -0.167538
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 1.468 seconds
Parameter learned model CLL: -0.167538


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(A, D), companyalsoknownas(C, E)', 'true,false': 'bankboughtbank(A, F)', 'true,false,false': 'companyalsoknownas(C, G), bankboughtbank(A, H)', 'false': 'companyalsoknownas(I, J)', 'false,true': 'bankboughtbank(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.98, 1, 24], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.98, 24, 1], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(E, F)', 'true,true': 'acquired(E, D), companyalsoknownas(C, G)', 'false': 'bankboughtbank(A, H)'}, {'true,true,true': [0.976, 1, 20], 'true,true,false': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.196, 24, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'bankboughtbank(A, E)', 'true,false': 'bankboughtbank(A, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.243, 2, 21], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.137, 0, 4], 'false': [5.1e-09, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'companyalsoknownas(F, A)', 'true,true,false': 'bankboughtbank(A, G)', 'true,false': 'companyalsoknownas(H, I)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.972, 1, 17], 'true,false,true': [0.03, 0, 4], 'true,false,false': [0.0, 0, 0], 'false': [0.178, 24, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D), bankboughtbank(A, E)', 'true,false': 'companyalsoknownas(F, D)', 'false': 'bankboughtbank(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.196, 2, 25], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'companyalsoknownas(F, G)'}, {'true,true,true': [1.195, 2, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.95e-09, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(A, E)', 'false': 'bankboughtbank(A, F)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.975, 1, 24], 'false,true': [0.0, 0, 0], 'false,false': [0.16, 24, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,false': 'acquired(E, F)'}, {'true,true': [1.056, 2, 21], 'true,false,true': [0.47, 0, 4], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'bankboughtbank(A, F)', 'true,true,false': 'companyalsoknownas(C, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [1.059, 2, 21], 'true,true,false,false': [0.447, 0, 4], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'false': 'companyalsoknownas(D, E)', 'false,true': 'economicsectorcompany(B, F), economicsectorcompany(G, D)'}, {'true': [1.164, 2, 25], 'false,true,true': [0.0, 0, 0], 'false,true,false': [7.45e-09, 23, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0384000000000006, 0.038400000000000004], 'true': [nan, 0.0384000000000006], 'true,false': [nan, 0.0384000000000006], 'true,false,false': [nan, 0.03839999999999989], 'false': [0.03840000000000005, nan], 'false,true': [nan, 0.03840000000000005]}, {'': [0.03840000000000018, 0.03840000000000001], 'true': [0.03840000000000018, nan], 'true,true': [0.045351473922902584, 0.0], 'false': [nan, 0.038400000000000004]}, {'': [0.05556101040086078, 2.6548811458427657e-17], 'true': [0.05897924293275242, 0.018803067824562703], 'true,true': [nan, 0.05897924293275242], 'true,false': [nan, 0.018803067824562703]}, {'': [0.03814435007279776, 0.03168006006670531], 'true': [0.045351473922902584, 0.0002236138249338271], 'true,true': [0.0, 0.05246913580246932], 'true,true,false': [nan, 0.05246913580246932], 'true,false': [0.0002236138249338271, nan]}, {'': [0.052943963579765226, -1.206764157201257e-18], 'true': [nan, 0.05294396357976519], 'true,false': [0.052943963579765226, nan], 'false': [nan, -1.206764157201257e-18]}, {'': [0.05284643211851315, 6.033820786006285e-18], 'true': [0.05284643211851315, nan], 'true,true': [0.05284643211851315, nan]}, {'': [0.038057976064139125, 0.025681542757279418], 'true': [nan, 0.038057976064139125], 'false': [nan, 0.02568154275727939]}, {'': [0.05309421712134668, -1.206764157201257e-18], 'true': [0.04852174420548932, 0.05512678139873449], 'true,false': [0.05512678139873449, nan]}, {'': [0.05151904447854462, -1.206764157201257e-18], 'true': [0.05151904447854462, nan], 'true,true': [nan, 0.05151904447854462], 'true,true,false': [0.04872870169204492, 0.04987569499325954]}, {'': [0.05016811250298808, 2.413528314402514e-18], 'false': [2.413528314402514e-18, nan], 'false,true': [nan, 2.413528314402514e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
1;true;acquired(E, D), companyalsoknownas(C, G).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;true,true;companyalsoknownas(F, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A) )
%   then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( acquired(A, D) )
%   | then if ( companyceo(A, E) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(F, A), companyceo(F, G) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.34201990284144784;  // std dev = 0.500, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( acquired(E, D), companyalsoknownas(C, F) )
%   | then if ( companyceo(A, G), acquired(H, A) )
%   | | then return 0.4800871641817535;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8018818542484334;  // std dev = 0.133, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7653484768512329;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(I, A) )
%   | then return -0.1948636092175713;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then return -0.17572430750482926;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return -0.1490779674864458;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11734788707991714;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), companyceo(A, E) )
%   | then return 0.38768136427083605;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(A, F) )
%   | | then return 0.5753973810991145;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.6582979126219443;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6176370510781808;  // std dev = 0.792, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.1635947305420522;  // std dev = 0.070, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( companyalsoknownas(F, A) )
%   | | then return 0.5216205663017702;  // std dev = 0.191, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(G, A), companyalsoknownas(G, H) )
%   | | | then return 0.2011070965553743;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5151064546413254;  // std dev = 0.165, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.4576195643191868;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( acquired(I, A) )
%   | then return -0.14469623999114256;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then return -0.13188883742459043;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( countryhascompanyoffice(K, A) )
%   | | | then return -0.14862879844792118;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08715631612719751;  // std dev = 0.840, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A), companyceo(A, E) )
%   | then return 0.19228132101512663;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( acquired(A, F) )
%   | | then return 0.3457008828524093;  // std dev = 0.201, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.4124524166420742;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3697276378806106;  // std dev = 0.677, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.12969741181544536;  // std dev = 0.066, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A), companyceo(A, E) )
%   | then return 0.41406887021087896;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(F, A), companyalsoknownas(F, G) )
%   | | then return 0.07309246836326617;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( acquired(A, H) )
%   | | | then return 0.2538180740231808;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.289221940106583;  // std dev = 0.665, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.11576846433040675;  // std dev = 0.060, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), cityhascompanyoffice(D, A) )
%   then return 0.1543406270525009;  // std dev = 0.460, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( countryhascompanyoffice(E, A) )
%   | then return -0.04701771255221824;  // std dev = 0.460, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( acquired(F, A) )
%   | | then if ( acquired(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.28767153263064943;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19187432488188225;  // std dev = 0.296, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( acquired(A, H) )
%   | | | then return 0.18184194511933516;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07288934898079782;  // std dev = 1.077, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A), companyalsoknownas(D, E) )
%   | then return 0.11331585855197426;  // std dev = 0.600, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(A, F) )
%   | | then return 0.20176603320566036;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.22691621662139075;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21751983262058375;  // std dev = 0.639, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.10782305660220846;  // std dev = 0.076, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A), companyceo(D, E) )
%   | then return 0.25054376732053396;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, F) )
%   | | then return 0.08615068721757838;  // std dev = 0.218, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.17883308791220506;  // std dev = 0.160, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.09790490949657193;  // std dev = 0.070, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyceo(A, D), acquired(E, A) )
%   | then return -1.9427680026860386E-4;  // std dev = 0.556, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1561362584768521;  // std dev = 0.135, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else return -0.08961042921423908;  // std dev = 0.065, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.971703
   AUC PR    = 0.066216
   CLL	      = -0.229029
   Precision = 0.013828 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.027279


Total learning time: 2.001 seconds
Total inference time: 12.912 seconds
AUC ROC: 0.971703


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.154788
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.592 seconds
Refined model CLL: -0.154788


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.971703
   AUC PR    = 0.066216
   CLL	      = -0.229029
   Precision = 0.013828 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.027279


Total learning time: 8.239 seconds
Total inference time: 12.912 seconds
AUC ROC: 0.971703
Total revision time: 8.239
Best scored revision CLL: -0.154788


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 01:10:53
{'AUC ROC': 0.971703, 'AUC PR': 0.066216, 'CLL': -0.229029, 'Precision': [0.013828, 0.5], 'Recall': 1.0, 'F1': 0.027279, 'Learning time': 8.239, 'Inference time': 12.912, 'parameter_25': {'AUC ROC': 0.957296, 'AUC PR': 0.015065, 'CLL': -0.208607, 'Precision': [0.021669, 0.5], 'Recall': 0.880769, 'F1': 0.042298, 'Learning time': 4.178, 'Inference time': 191.606}}


Starting fold 2

Target train facts examples: 5307
Target train pos examples: 518
Target train neg examples: 366436

Target test facts examples: 5307
Target test pos	 examples: 260
Target test neg examples: 183219

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, F), bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(J, A), acquired(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(A, E), companyalsoknownas(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(K, A), acquired(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(D, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), acquired(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(A, I), acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(K, A), companyalsoknownas(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(M, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(G, A), bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( acquired(A, F), acquired(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), companyceo(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, J), acquired(K, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankboughtbank(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(H, A), acquired(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, E), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(G, H) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(I, A), bankboughtbank(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, E), acquired(E, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), acquired(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.964215
   AUC PR    = 0.021158
   CLL	      = -0.19102
   Precision = 0.021295 at threshold = 0.5
   Recall    = 0.830769
   F1        = 0.041526


Total learning time: 2.715 seconds
Total inference time: 172.652 seconds
AUC ROC: 0.964215


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.987 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), bankboughtbank(A, G)', 'true,false,false': 'companyalsoknownas(C, H), bankchiefexecutiveceo(A, I)', 'false': 'acquired(J, A), acquired(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 5], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'acquired(A, E), companyalsoknownas(F, E)', 'true,false': 'companyalsoknownas(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(K, A), acquired(L, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'bankchiefexecutiveceo(A, E)', 'true,true,false': 'acquired(D, F)', 'true,false': 'bankchiefexecutiveceo(A, G)', 'true,false,false': 'acquired(A, H), acquired(H, A)', 'false': 'bankboughtbank(A, I), acquired(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'bankboughtbank(A, F), companyalsoknownas(G, A)', 'true,true,false': 'bankchiefexecutiveceo(A, H), bankboughtbank(A, I)', 'true,false': 'acquired(J, A)', 'true,false,false': 'bankboughtbank(K, A), companyalsoknownas(L, K)', 'false': 'acquired(M, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D), bankchiefexecutiveceo(A, E)', 'true,false': 'companyalsoknownas(F, D)', 'false': 'acquired(G, A), bankboughtbank(A, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 5], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'acquired(A, F), acquired(F, G)', 'true,true,false': 'companyalsoknownas(H, A), companyceo(H, I)', 'false': 'bankboughtbank(A, J), acquired(K, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankboughtbank(A, E), bankchiefexecutiveceo(A, F)', 'false': 'bankchiefexecutiveceo(A, G)', 'false,false': 'acquired(H, A), acquired(A, H)', 'false,false,false': 'bankboughtbank(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,false': 'bankboughtbank(A, E), companyalsoknownas(F, E)', 'true,false,false': 'companyalsoknownas(G, H)', 'false': 'acquired(I, A), bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'bankchiefexecutiveceo(A, F)', 'true,true,false': 'companyalsoknownas(C, E), acquired(E, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), acquired(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false,true,false': 'acquired(A, H), bankchiefexecutiveceo(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 5], 'false,false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0], 'false': [nan, -2.7755575615628915e-18]}, {'': [0.0, 0.0], 'true': [nan, 0.0], 'false': [nan, 0.0], 'true,false': [nan, 0.0], 'false,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,true,false': [0.0, 0.0], 'true,false,false': [nan, 0.0]}, {'': [4.4408920985006264e-17, 0.0], 'true': [0.0, 0.0], 'false': [nan, 0.0], 'true,true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [-2.2204460492503132e-17, 0.0], 'false': [nan, 0.0], 'true': [nan, -2.2204460492503132e-17], 'true,false': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'false': [nan, -1.3877787807814458e-18], 'false,false': [nan, -1.3877787807814458e-18], 'false,false,false': [nan, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, -6.938893903907229e-19], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan], 'false': [nan, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [nan, 0.0], 'true,true,false': [0.0, -4.625929269271485e-18]}, {'': [nan, 0.009820698026241881], 'false': [0.0, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;companyalsoknownas(C, D).;true;true
2;true,true;acquired(D, F).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;companyalsoknownas(C, E).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;companyalsoknownas(C, E), acquired(E, G).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), acquired(D, E) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.963542
   AUC PR    = 0.020425
   CLL	      = -0.196977
   Precision = 0.021306 at threshold = 0.5
   Recall    = 0.842308
   F1        = 0.04156


Total learning time: 0.693 seconds
Total inference time: 6.768 seconds
AUC ROC: 0.963542


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.422 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.964215
   AUC PR    = 0.021158
   CLL	      = -0.19102
   Precision = 0.021295 at threshold = 0.5
   Recall    = 0.830769
   F1        = 0.041526


Total learning time: 4.816999999999999 seconds
Total inference time: 172.652 seconds
AUC ROC: 0.964215
Total revision time: 4.816999999999999
Best scored revision CLL: -0.094637


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 01:13:59
{'AUC ROC': 0.964215, 'AUC PR': 0.021158, 'CLL': -0.19102, 'Precision': [0.021295, 0.5], 'Recall': 0.830769, 'F1': 0.041526, 'Learning time': 4.816999999999999, 'Inference time': 172.652, 'parameter_5': {'AUC ROC': 0.964215, 'AUC PR': 0.021158, 'CLL': -0.19102, 'Precision': [0.021295, 0.5], 'Recall': 0.830769, 'F1': 0.041526, 'Learning time': 2.715, 'Inference time': 172.652}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), acquired(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, F), bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(J, A), companyalsoknownas(K, J) )
%   | then if ( bankboughtbank(A, L), acquired(M, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, D), acquired(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(K, A), companyalsoknownas(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(D, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22152502927633905;  // std dev = 0.472, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankboughtbank(A, I), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(K, A), acquired(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5002131558403855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(M, A) )
%   | then if ( bankboughtbank(N, A), bankboughtbank(N, M) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10546009659633868;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, D) )
%   | | then return 0.2854253059170212;  // std dev = 0.433, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09240289369384207;  // std dev = 0.000306, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(G, A), acquired(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2619365158824679;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(I, A), companyceo(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22497972522796986;  // std dev = 0.408, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), companyalsoknownas(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08493995025042193;  // std dev = 0.000283, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankboughtbank(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22480922467590042;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(A, H) )
%   | | then return -0.07881545707984965;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0910778477319371;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then if ( acquired(C, E), companyalsoknownas(F, E) )
%   | | then return 0.18456550932328009;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G), acquired(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, J) )
%   | | | then return 0.15186931430512854;  // std dev = 0.350, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A), bankboughtbank(A, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07231302779647628;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, E), companyalsoknownas(E, G) )
%   | | | then return 0.16205927118385205;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09647592514054112;  // std dev = 0.334, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06760951571275797;  // std dev = 0.000964, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13795958145913778;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(A, I), bankchiefexecutiveceo(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11230661575670049;  // std dev = 0.349, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.06347010881487544;  // std dev = 0.000909, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.973194
   AUC PR    = 0.038105
   CLL	      = -0.17342
   Precision = 0.021197 at threshold = 0.5
   Recall    = 0.830769
   F1        = 0.04134


Total learning time: 8.522 seconds
Total inference time: 289.237 seconds
AUC ROC: 0.973194


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113201
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.834 seconds
Parameter learned model CLL: -0.113201


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), acquired(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), bankboughtbank(A, G)', 'true,false,false': 'acquired(C, H), bankchiefexecutiveceo(A, I)', 'false': 'companyalsoknownas(J, A), companyalsoknownas(K, J)', 'false,true': 'bankboughtbank(A, L), acquired(M, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 10], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false': [0.0, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'companyalsoknownas(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankchiefexecutiveceo(A, D), acquired(C, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(K, A), companyalsoknownas(L, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.98e-08, 0, 10], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.27e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'bankchiefexecutiveceo(A, E)', 'true,true,false': 'companyalsoknownas(D, F)', 'true,false': 'bankchiefexecutiveceo(A, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'bankboughtbank(A, I), companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 6], 'true,true,false,false': [1.05e-08, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.472, 1, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'acquired(C, E)', 'true,true': 'bankboughtbank(A, F), acquired(G, A)', 'true,true,false': 'bankchiefexecutiveceo(A, H), bankboughtbank(A, I)', 'true,false': 'companyalsoknownas(J, A)', 'true,false,false': 'bankboughtbank(K, A), acquired(L, K)', 'false': 'companyalsoknownas(M, A)', 'false,true': 'bankboughtbank(N, A), bankboughtbank(N, M)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.33e-08, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false': [0.033, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D), bankchiefexecutiveceo(A, E)', 'true,false': 'acquired(F, D)', 'false': 'companyalsoknownas(G, A), bankboughtbank(A, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.433, 1, 10], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000306, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(G, A), acquired(H, G)', 'true,true,false': 'acquired(I, A), companyceo(I, J)', 'false': 'bankboughtbank(A, K), companyalsoknownas(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.408, 1, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000283, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankboughtbank(A, E), bankchiefexecutiveceo(A, F)', 'false': 'bankchiefexecutiveceo(A, G)', 'false,false': 'companyalsoknownas(H, A), companyalsoknownas(A, H)', 'false,false,false': 'bankboughtbank(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.045, 0, 10], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.106, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,true': 'acquired(C, E), companyalsoknownas(F, E)', 'true,false': 'bankboughtbank(A, G), acquired(H, G)', 'true,false,false': 'acquired(I, J)', 'false': 'companyalsoknownas(K, A), bankboughtbank(A, L)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.35, 1, 9], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.001, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankchiefexecutiveceo(A, F)', 'true,true,false': 'acquired(C, E), companyalsoknownas(E, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.004, 0, 6], 'true,true,false,false': [0.334, 1, 4], 'true,false': [0.0, 0, 0], 'false': [0.000964, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(G, F)', 'false,true,true': 'companyalsoknownas(H, A)', 'false,true,false': 'companyalsoknownas(A, I), bankchiefexecutiveceo(A, J)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.349, 1, 9], 'false,false': [0.000909, 9, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'false': [0.0, -9.25185853854297e-18], 'false,true': [nan, 0.0], 'true': [nan, -8.881784197001253e-17], 'true,false': [nan, -8.881784197001253e-17], 'true,false,false': [nan, -8.881784197001253e-17]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [nan, 8.881784197001253e-17], 'true,false': [nan, 8.881784197001253e-17], 'true,false,false': [nan, 8.881784197001253e-17], 'false': [nan, 2.7755575615628915e-18], 'false,false': [nan, 2.7755575615628915e-18]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.4802973661668753e-16, 0.11145008534151415], 'true,false': [nan, 0.11145008534151415], 'true,false,false': [nan, 0.11145008534151415], 'false': [nan, -1.5419764230904951e-18], 'true,true': [nan, -1.4802973661668753e-16], 'true,true,false': [-7.401486830834377e-17, 3.700743415417188e-17]}, {'': [0.0006155297240759916, 0.00010883019579915331], 'true': [1.2335811384723962e-16, 0.0], 'false': [0.0, 0.00011942957014996234], 'true,true': [nan, 1.2335811384723962e-16], 'true,true,false': [nan, 1.2335811384723962e-16], 'true,false': [nan, 0.0], 'false,true': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.017062885778218573, 1.0395557956122126e-08], 'true': [nan, 0.017062885778218573], 'true,false': [0.017062885778218573, nan], 'false': [nan, 1.0395557956122126e-08]}, {'': [0.015217725123888616, 8.929623463500075e-09], 'true': [0.015217725123888616, nan], 'true,true': [0.0, 0.01661533360214289], 'true,true,false': [nan, 0.01661533360214289], 'false': [nan, 8.929623463500075e-09], 'true,true,true': [nan, 0.0]}, {'': [0.00020154615862209014, 0.001146188354454851], 'false': [nan, 0.001146188354454851], 'false,false': [0.0, 0.001258505993610505], 'false,false,false': [nan, 0.001258505993610505], 'true': [nan, 0.00020154615862209014]}, {'': [0.011202276521116267, 1.168307809091952e-07], 'true': [0.0, 0.01222531861244017], 'true,false': [nan, 0.01222531861244017], 'true,false,false': [0.01222531861244017, nan], 'false': [nan, 1.168307809091952e-07], 'true,true': [0.0, nan]}, {'': [0.011228372483988338, 1.0317726573656607e-07], 'true': [0.011228372483988338, nan], 'true,true': [nan, 0.011228372483988338], 'true,true,false': [2.6977515432448826e-06, 0.02235308655661154]}, {'': [nan, 0.013982055443853312], 'false': [0.01114660685317405, 9.174866058327587e-08], 'false,true': [0.0, 0.012201442570370504], 'false,true,false': [nan, 0.012201442570370502], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
0;false;companyalsoknownas(J, A), companyalsoknownas(K, J).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
2;true,true;companyalsoknownas(D, F).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;acquired(C, E).;true;true
3;false;companyalsoknownas(M, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
6;false;companyalsoknownas(H, A), companyalsoknownas(A, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(C, E), companyalsoknownas(E, G).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;bankboughtbank(A, F), acquired(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyceo(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462843;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22152502927633905;  // std dev = 0.472, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5002131558403854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10546009659633868;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.33970488404523813;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.26507046411893986;  // std dev = 0.147, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.09247498931769678;  // std dev = 0.000265, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0923668458819147;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.25157925345001275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2258264033321053;  // std dev = 0.128, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.08500116202413589;  // std dev = 0.000245, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0849093414909562;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.21429596367114304;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2287901237859303;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(A, F) )
%   | then return -0.07880577902884635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09074544779236636;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.18912661639868789;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.18912840847437196;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13522179611738566;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.0725608131189288;  // std dev = 0.000870, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07221891497263945;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyalsoknownas(D, E) )
%   | then return 0.16632391193653742;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.0915022876642912;  // std dev = 0.322, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.06782670353788266;  // std dev = 0.000818, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0675269968780078;  // std dev = 3.23e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D), acquired(E, D) )
%   | then return 0.14049971118840787;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, F) )
%   | | then return 0.14985501575581076;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0959153798968897;  // std dev = 0.125, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.06366196720803036;  // std dev = 0.000771, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0633971919612187;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.974709
   AUC PR    = 0.034993
   CLL	      = -0.178591
   Precision = 0.021306 at threshold = 0.5
   Recall    = 0.842308
   F1        = 0.04156


Total learning time: 1.041 seconds
Total inference time: 10.53 seconds
AUC ROC: 0.974709


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112063
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.515 seconds
Refined model CLL: -0.112063


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.974709
   AUC PR    = 0.034993
   CLL	      = -0.178591
   Precision = 0.021306 at threshold = 0.5
   Recall    = 0.842308
   F1        = 0.04156


Total learning time: 11.912 seconds
Total inference time: 10.53 seconds
AUC ROC: 0.974709
Total revision time: 11.912
Best scored revision CLL: -0.112063


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 01:19:12
{'AUC ROC': 0.974709, 'AUC PR': 0.034993, 'CLL': -0.178591, 'Precision': [0.021306, 0.5], 'Recall': 0.842308, 'F1': 0.04156, 'Learning time': 11.912, 'Inference time': 10.53, 'parameter_10': {'AUC ROC': 0.973194, 'AUC PR': 0.038105, 'CLL': -0.17342, 'Precision': [0.021197, 0.5], 'Recall': 0.830769, 'F1': 0.04134, 'Learning time': 8.522, 'Inference time': 289.237}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), acquired(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, F), bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( companyalsoknownas(J, A), companyalsoknownas(K, J) )
%   | then if ( bankboughtbank(A, L), acquired(M, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then if ( acquired(C, A), bankchiefexecutiveceo(A, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, D), acquired(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(K, A), companyalsoknownas(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(D, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22152502927633905;  // std dev = 0.472, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankboughtbank(A, I), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(K, A), acquired(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5002131558403855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(M, A) )
%   | then if ( bankboughtbank(N, A), bankboughtbank(N, M) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10427124517833795;  // std dev = 0.033, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, D) )
%   | | then return 0.29644425191715085;  // std dev = 0.438, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09249866385928748;  // std dev = 0.000294, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(G, A), acquired(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25981186448081106;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( acquired(I, A), companyceo(I, J) )
%   | | | then return 0.25981186448081106;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2290349140227789;  // std dev = 0.410, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), companyalsoknownas(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08502125930393774;  // std dev = 0.000273, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankboughtbank(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21990367770787503;  // std dev = 0.047, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(A, H) )
%   | | then return -0.07880260145331203;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08748084396147857;  // std dev = 0.111, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then if ( acquired(C, E), companyalsoknownas(F, E) )
%   | | then return 0.18304003200060648;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G), acquired(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, J) )
%   | | | then return 0.16028439169030995;  // std dev = 0.355, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A), bankboughtbank(A, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07261108277641799;  // std dev = 0.001, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, E), companyalsoknownas(E, G) )
%   | | | then return 0.15888266039893464;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.09363362113140408;  // std dev = 0.336, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0678707411865729;  // std dev = 0.000944, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13731075419952432;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(A, I), bankchiefexecutiveceo(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11939962958036159;  // std dev = 0.355, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return -0.06370084913352347;  // std dev = 0.000890, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.975969
   AUC PR    = 0.04544
   CLL	      = -0.178385
   Precision = 0.02117 at threshold = 0.5
   Recall    = 0.830769
   F1        = 0.041288


Total learning time: 10.924 seconds
Total inference time: 290.935 seconds
AUC ROC: 0.975969


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107315
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.221 seconds
Parameter learned model CLL: -0.107315


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), acquired(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), bankboughtbank(A, G)', 'true,false,false': 'acquired(C, H), bankchiefexecutiveceo(A, I)', 'false': 'companyalsoknownas(J, A), companyalsoknownas(K, J)', 'false,true': 'bankboughtbank(A, L), acquired(M, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 15], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [0.0, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'companyalsoknownas(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,true': 'acquired(C, A), bankchiefexecutiveceo(A, D)', 'true,false,false': 'bankchiefexecutiveceo(A, D), acquired(C, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(K, A), companyalsoknownas(L, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.16e-08, 0, 14], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.45e-09, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'bankchiefexecutiveceo(A, E)', 'true,true,false': 'companyalsoknownas(D, F)', 'true,false': 'bankchiefexecutiveceo(A, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'bankboughtbank(A, I), companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 11], 'true,true,false,false': [1.05e-08, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.472, 1, 1], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'acquired(C, E)', 'true,true': 'bankboughtbank(A, F), acquired(G, A)', 'true,true,false': 'bankchiefexecutiveceo(A, H), bankboughtbank(A, I)', 'true,false': 'companyalsoknownas(J, A)', 'true,false,false': 'bankboughtbank(K, A), acquired(L, K)', 'false': 'companyalsoknownas(M, A)', 'false,true': 'bankboughtbank(N, A), bankboughtbank(N, M)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.21e-08, 0, 14], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [0.033, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D), bankchiefexecutiveceo(A, E)', 'true,false': 'acquired(F, D)', 'false': 'companyalsoknownas(G, A), bankboughtbank(A, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.438, 1, 15], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000294, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(G, A), acquired(H, G)', 'true,true,false': 'acquired(I, A), companyceo(I, J)', 'false': 'bankboughtbank(A, K), companyalsoknownas(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.41, 1, 11], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000273, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankboughtbank(A, E), bankchiefexecutiveceo(A, F)', 'false': 'bankchiefexecutiveceo(A, G)', 'false,false': 'companyalsoknownas(H, A), companyalsoknownas(A, H)', 'false,false,false': 'bankboughtbank(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.047, 0, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.111, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,true': 'acquired(C, E), companyalsoknownas(F, E)', 'true,false': 'bankboughtbank(A, G), acquired(H, G)', 'true,false,false': 'acquired(I, J)', 'false': 'companyalsoknownas(K, A), bankboughtbank(A, L)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.355, 1, 14], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.001, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankchiefexecutiveceo(A, F)', 'true,true,false': 'acquired(C, E), companyalsoknownas(E, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.006, 0, 11], 'true,true,false,false': [0.336, 1, 4], 'true,false': [0.0, 0, 0], 'false': [0.000944, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(G, F)', 'false,true,true': 'companyalsoknownas(H, A)', 'false,true,false': 'companyalsoknownas(A, I), bankchiefexecutiveceo(A, J)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.355, 1, 14], 'false,false': [0.00089, 14, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'false': [0.0, -1.2810265668751807e-17], 'false,true': [nan, 0.0], 'true': [nan, -2.3684757858670006e-16], 'true,false': [nan, -2.3684757858670006e-16], 'true,false,false': [nan, -2.3684757858670006e-16]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true': [nan, 2.3684757858670006e-16], 'true,false': [0.0, 1.9032394707859825e-16], 'true,false,false': [nan, 1.9032394707859825e-16], 'false': [nan, 3.7007434154171884e-18], 'false,false': [nan, 3.7007434154171884e-18], 'true,false,true': [nan, 0.0]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.5376526277146434e-16, 0.11145008534151415], 'true,false': [nan, 0.11145008534151415], 'true,false,false': [nan, 0.11145008534151415], 'false': [nan, 9.912705577010326e-18], 'true,true': [nan, -2.5376526277146434e-16], 'true,true,false': [-2.0185873175002846e-16, 3.700743415417188e-17]}, {'': [0.0004255514141760545, 7.524062919447109e-05], 'true': [1.2688263138573217e-16, 0.0], 'false': [0.0, 8.58620874155007e-05], 'true,true': [nan, 1.2688263138573217e-16], 'true,true,false': [nan, 1.2688263138573217e-16], 'true,false': [nan, 0.0], 'false,true': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.012005062053929455, 6.183251610130431e-09], 'true': [nan, 0.0120050620539294], 'true,false': [0.012005062053929455, nan], 'false': [nan, 6.183251610130431e-09]}, {'': [0.010678322505802723, 5.3105676086787466e-09], 'true': [0.010678322505802723, nan], 'true,true': [0.0, 0.012116807495249364], 'true,true,false': [0.0, 0.014000958171196223], 'false': [nan, 5.3105676086787466e-09], 'true,true,true': [nan, 0.0]}, {'': [0.00014459349082971418, 0.000827349027947219], 'false': [nan, 0.000827349027947218], 'false,false': [0.0, 0.0009445919080478463], 'false,false,false': [nan, 0.0009445919080478463], 'true': [nan, 0.00014459349082972158]}, {'': [0.007919227309783568, 7.206516558301765e-08], 'true': [0.0, 0.008414812099231757], 'true,false': [nan, 0.008414812099231757], 'true,false,false': [0.008414812099231757, nan], 'false': [nan, 7.206516558004385e-08], 'true,true': [0.0, nan]}, {'': [0.007980424373305987, 6.361311671468758e-08], 'true': [0.007980424373305987, nan], 'true,true': [nan, 0.007980424373305987], 'true,true,false': [3.4782115418357567e-06, 0.022602717905518748]}, {'': [nan, 0.012662406123036252], 'false': [0.007904704485851302, 5.654293357732725e-08], 'false,true': [0.0, 0.008411634260837865], 'false,true,false': [nan, 0.00841163426083786], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
0;false;companyalsoknownas(J, A), companyalsoknownas(K, J).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
1;true;acquired(G, A), economicsectorcompany(H, G).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
2;true,true;companyalsoknownas(D, F).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;acquired(C, E).;true;true
3;false;companyalsoknownas(M, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
5;true,false;acquired(I, A), companyceo(I, J).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
6;false;companyalsoknownas(H, A), companyalsoknownas(A, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(C, E), companyalsoknownas(E, G).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;bankboughtbank(A, F), acquired(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(E, A), economicsectorcompany(F, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, G) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109543;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyceo(A, H) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 1.86e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22152502927633905;  // std dev = 0.472, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360638;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( companyceo(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5002131558403854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10427124517833795;  // std dev = 0.009, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.3321076692912028;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.28023360765621824;  // std dev = 0.128, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( acquired(A, E) )
%   | then return -0.09261637139427127;  // std dev = 0.000183, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0924665618042919;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.2530124091422311;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(F, A), companyceo(F, G) )
%   | | then return 0.25797692695805663;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2303641992274755;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( companyceo(A, H) )
%   | then return -0.08512506095213597;  // std dev = 0.000161, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08499294622048277;  // std dev = 3.35e-06, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(B, E) )
%   | then return 0.20948376901268784;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22229206520188152;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(A, F) )
%   | then return -0.07878652299240331;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.08730517114252684;  // std dev = 0.030, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.18491558810756903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, E) )
%   | | then return 0.18415422874512072;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.14816448072113542;  // std dev = 0.109, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( companyceo(A, F) )
%   | then return -0.07300595997941077;  // std dev = 0.000609, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07251645010567119;  // std dev = 2.90e-06, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyalsoknownas(D, E) )
%   | then return 0.16026799512359388;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.09077421243365566;  // std dev = 0.328, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( acquired(A, F) )
%   | then return -0.06822657092361438;  // std dev = 0.000548, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06778510045005132;  // std dev = 1.13e-05, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D), acquired(E, D) )
%   | then return 0.13840802053923418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyceo(A, F) )
%   | | then return 0.14319288115642398;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.10747930109398669;  // std dev = 0.108, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( acquired(A, G) )
%   | then return -0.06401499771388382;  // std dev = 0.000516, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06362520902452594;  // std dev = 1.06e-05, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.974821
   AUC PR    = 0.035525
   CLL	      = -0.180728
   Precision = 0.021306 at threshold = 0.5
   Recall    = 0.842308
   F1        = 0.04156


Total learning time: 1.369 seconds
Total inference time: 10.948 seconds
AUC ROC: 0.974821


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106782
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.534 seconds
Refined model CLL: -0.106782


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.974821
   AUC PR    = 0.035525
   CLL	      = -0.180728
   Precision = 0.021306 at threshold = 0.5
   Recall    = 0.842308
   F1        = 0.04156


Total learning time: 15.048 seconds
Total inference time: 10.948 seconds
AUC ROC: 0.974821
Total revision time: 15.048
Best scored revision CLL: -0.106782


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 01:24:30
{'AUC ROC': 0.974821, 'AUC PR': 0.035525, 'CLL': -0.180728, 'Precision': [0.021306, 0.5], 'Recall': 0.842308, 'F1': 0.04156, 'Learning time': 15.048, 'Inference time': 10.948, 'parameter_15': {'AUC ROC': 0.975969, 'AUC PR': 0.04544, 'CLL': -0.178385, 'Precision': [0.02117, 0.5], 'Recall': 0.830769, 'F1': 0.041288, 'Learning time': 10.924, 'Inference time': 290.935}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), acquired(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, F), bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( companyalsoknownas(J, A), companyalsoknownas(K, J) )
%   | then if ( bankboughtbank(A, L), acquired(M, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08629550934493224;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then if ( companyceo(F, D), acquired(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(H, A), economicsectorcompany(I, H) )
%   | | then if ( acquired(C, A), bankchiefexecutiveceo(A, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, D), acquired(C, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109542;  // std dev = 7.30e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( bankchiefexecutiveceo(A, K) )
%   | then return -0.1316674303899586;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( bankboughtbank(L, A), companyalsoknownas(M, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0807340116107235;  // std dev = 0.974, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(D, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6197514886822831;  // std dev = 0.288, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2163290665862811;  // std dev = 0.479, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankboughtbank(A, I), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12150053704853009;  // std dev = 0.010, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41405355817133005;  // std dev = 0.027, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(K, A), acquired(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5015121419156237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(M, A) )
%   | then if ( bankboughtbank(N, A), bankboughtbank(N, M) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10488519492523357;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06182468079275422;  // std dev = 0.881, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, D) )
%   | | then return 0.32251283598782376;  // std dev = 0.671, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1026537308854471;  // std dev = 0.014, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(G, A), acquired(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24946118239383797;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(I, A), companyceo(I, J) )
%   | | | then return 0.25548768617946405;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.26078391677396995;  // std dev = 0.662, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), companyalsoknownas(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09357691370942883;  // std dev = 0.013, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankboughtbank(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20973338656151094;  // std dev = 0.049, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return -0.08336209601770794;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(A, H) )
%   | | then return -0.07979016655893006;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.04946544838592308;  // std dev = 0.780, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then if ( acquired(C, E), companyalsoknownas(F, E) )
%   | | then return 0.17652473834159954;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G), acquired(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, J) )
%   | | | then return 0.18382250993275268;  // std dev = 0.661, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A), bankboughtbank(A, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08166833601425373;  // std dev = 0.015, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, E), companyalsoknownas(E, G) )
%   | | | then return 0.1517432514227602;  // std dev = 0.002, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.1683005495083021;  // std dev = 0.653, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07574977781828592;  // std dev = 0.014, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13373386063161696;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(A, I), bankchiefexecutiveceo(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13679419199926005;  // std dev = 0.648, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return -0.07061466414401145;  // std dev = 0.014, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.961487
   AUC PR    = 0.01706
   CLL	      = -0.19779
   Precision = 0.02117 at threshold = 0.5
   Recall    = 0.830769
   F1        = 0.041288


Total learning time: 16.863 seconds
Total inference time: 292.918 seconds
AUC ROC: 0.961487


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.124104
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 2.78 seconds
Parameter learned model CLL: -0.124104


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), acquired(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), bankboughtbank(A, G)', 'true,false,false': 'acquired(C, H), bankchiefexecutiveceo(A, I)', 'false': 'companyalsoknownas(J, A), companyalsoknownas(K, J)', 'false,true': 'bankboughtbank(A, L), acquired(M, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 19], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'false,false': [0.972, 17, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'companyalsoknownas(A, E), acquired(F, E)', 'true,true': 'companyceo(F, D), acquired(C, G)', 'true,false': 'acquired(H, A), economicsectorcompany(I, H)', 'true,false,true': 'acquired(C, A), bankchiefexecutiveceo(A, D)', 'true,false,false': 'bankchiefexecutiveceo(A, D), acquired(C, J)', 'false': 'bankchiefexecutiveceo(A, K)', 'false,false': 'bankboughtbank(L, A), companyalsoknownas(M, L)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.3e-08, 0, 17], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.974, 19, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'bankchiefexecutiveceo(A, E)', 'true,true,false': 'companyalsoknownas(D, F)', 'true,false': 'bankchiefexecutiveceo(A, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'bankboughtbank(A, I), companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 14], 'true,true,false,false': [0.288, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.479, 1, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.01, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'acquired(C, E)', 'true,true': 'bankboughtbank(A, F), acquired(G, A)', 'true,true,false': 'bankchiefexecutiveceo(A, H), bankboughtbank(A, I)', 'true,false': 'companyalsoknownas(J, A)', 'true,false,false': 'bankboughtbank(K, A), acquired(L, K)', 'false': 'companyalsoknownas(M, A)', 'false,true': 'bankboughtbank(N, A), bankboughtbank(N, M)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.027, 0, 18], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'false,false': [0.881, 17, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D), bankchiefexecutiveceo(A, E)', 'true,false': 'acquired(F, D)', 'false': 'companyalsoknownas(G, A), bankboughtbank(A, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.671, 1, 20], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.014, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(G, A), acquired(H, G)', 'true,true,false': 'acquired(I, A), companyceo(I, J)', 'false': 'bankboughtbank(A, K), companyalsoknownas(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.012, 0, 4], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.662, 1, 14], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.013, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankboughtbank(A, E), bankchiefexecutiveceo(A, F)', 'false': 'bankchiefexecutiveceo(A, G)', 'false,false': 'companyalsoknownas(H, A), companyalsoknownas(A, H)', 'false,false,false': 'bankboughtbank(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.049, 0, 19], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.78, 16, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,true': 'acquired(C, E), companyalsoknownas(F, E)', 'true,false': 'bankboughtbank(A, G), acquired(H, G)', 'true,false,false': 'acquired(I, J)', 'false': 'companyalsoknownas(K, A), bankboughtbank(A, L)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.661, 1, 19], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.015, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankchiefexecutiveceo(A, F)', 'true,true,false': 'acquired(C, E), companyalsoknownas(E, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.002, 0, 14], 'true,true,false,false': [0.653, 1, 6], 'true,false': [0.0, 0, 0], 'false': [0.014, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(G, F)', 'false,true,true': 'companyalsoknownas(H, A)', 'false,true,false': 'companyalsoknownas(A, I), bankchiefexecutiveceo(A, J)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.648, 1, 19], 'false,false': [0.014, 19, 0]}]]
[{'': [-2.8047739569477637e-16, 0.045351473922902494], 'false': [0.0, 0.052469135802469175], 'false,true': [nan, 0.0], 'true': [nan, -2.8047739569477637e-16], 'true,false': [nan, -2.8047739569477637e-16], 'true,false,false': [nan, -2.8047739569477637e-16]}, {'': [2.8047739569477637e-16, 0.04527155169685358], 'false': [0.0, 0.04741159532224193], 'false,false': [nan, 0.04741159532224193], 'true': [0.0, 9.868649107779169e-17], 'true,false': [0.0, 3.134747363647501e-16], 'true,false,false': [nan, 3.134747363647501e-16], 'true,true': [nan, 0.0], 'true,false,true': [nan, 0.0]}, {'': [0.02654195759483294, 5.479137941451875e-06], 'true': [0.005167439641995748, 0.1149463383650112], 'true,false': [nan, 0.1149463383650112], 'true,false,false': [nan, 0.1149463383650112], 'true,true': [nan, 0.005167439641995748], 'true,true,false': [-2.5376526277146434e-16, 0.01658173965120504], 'false': [nan, 5.479137941451875e-06]}, {'': [0.00042108667625285817, 0.0371952947323934], 'false': [-2.3129646346357427e-18, 0.043129623681503734], 'true': [4.1901229407133776e-05, 0.0], 'true,true': [nan, 4.1901229407133776e-05], 'true,true,false': [nan, 4.1901229407133776e-05], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0], 'false,true': [nan, -2.3129646346357427e-18]}, {'': [0.021416567212524617, 1.0834736769479261e-05], 'true': [nan, 0.021416567212524617], 'true,false': [0.021416567212524617, nan], 'false': [nan, 1.0834736769479261e-05]}, {'': [0.020876035362949057, 9.176728034017204e-06], 'true': [0.020876035362949057, nan], 'true,true': [3.631874787816264e-05, 0.025757691909910847], 'true,true,false': [0.0, 0.02918875082434873], 'true,true,true': [nan, 3.631874787816264e-05], 'false': [nan, 9.176728034017204e-06]}, {'': [0.0001242736932944504, 0.029089568227221713], 'false': [0.0, 0.030503032277786758], 'false,false': [0.0, 0.03574798204696711], 'false,false,false': [nan, 0.03574798204696711], 'true': [nan, 0.0001242736932944621]}, {'': [0.02078516853097028, 1.2606766395143057e-05], 'true': [0.0, 0.021821890887509427], 'true,false': [nan, 0.021821890887509427], 'true,false,false': [0.021821890887509427, nan], 'false': [nan, 1.2606766395143057e-05], 'true,true': [0.0, nan]}, {'': [0.020359118354513137, 1.0976420128384098e-05], 'true': [0.020359118354513137, nan], 'true,true': [nan, 0.020359118354513137], 'true,true,false': [2.9486373184783865e-07, 0.060894002589480065]}, {'': [nan, 0.021201335711256413], 'false': [0.01996972516491596, 9.637671366374249e-06], 'false,true': [0.0, 0.020967765440872237], 'false,true,false': [nan, 0.020967765440872237], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
0;false;companyalsoknownas(J, A), companyalsoknownas(K, J).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
1;true;companyalsoknownas(A, E), acquired(F, E).;true;true
1;true,false;acquired(H, A), economicsectorcompany(I, H).;true;true
1;false;bankchiefexecutiveceo(A, K).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
2;true,true;companyalsoknownas(D, F).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;acquired(C, E).;true;true
3;false;companyalsoknownas(M, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
5;true,false;acquired(I, A), companyceo(I, J).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
6;false;bankchiefexecutiveceo(A, G).;true;true
6;false,false;companyalsoknownas(H, A), companyalsoknownas(A, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(C, E), companyalsoknownas(E, G).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;bankboughtbank(A, F), acquired(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07518439823382113;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109542;  // std dev = 7.30e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( bankchiefexecutiveceo(A, I) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(A, J) )
%   | | then return -0.12844397644987252;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06527653735826716;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6191737040669233;  // std dev = 0.285, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2148846050478815;  // std dev = 0.482, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.11421377289484408;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12455495978162646;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( companyceo(A, F), acquired(A, G) )
%   | | then return 0.40825485313664045;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.41632656736065987;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.501873253145819;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.10115025372098656;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.10516761965856314;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.054167755216933795;  // std dev = 0.226, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.3155455613033193;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3247125706830632;  // std dev = 0.173, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.09399592594008736;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10633857469385713;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.2519120915183205;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(F, A), companyceo(F, G) )
%   | | then return 0.254637839732722;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2596257453448832;  // std dev = 0.170, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.08629136946649608;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09664836514609913;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyceo(A, E) )
%   | then if ( acquired(A, F), economicsectorcompany(B, F) )
%   | | then return 0.20529747135608564;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2195119626711734;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20788942601825464;  // std dev = 0.003, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return -0.0782067936348769;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(A, H) )
%   | | then return -0.07828021529519608;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.05061568060461502;  // std dev = 0.188, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.177646302280972;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, E) )
%   | | then return 0.17376472237533766;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.18642161939600468;  // std dev = 0.170, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.07483231814400124;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08453313595401653;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyalsoknownas(D, E) )
%   | then if ( acquired(A, F) )
%   | | then return 0.15447936970841772;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15082920469698816;  // std dev = 0.000320, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(A, G) )
%   | | then return 0.1469321447446451;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1821004186627692;  // std dev = 0.649, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.06981407764437524;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07821716429235805;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D), acquired(E, D) )
%   | then return 0.13417919798941658;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.13063804960514777;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.13757718148229153;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1373580203694689;  // std dev = 0.644, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( companyceo(A, H) )
%   | then return -0.06469647129319067;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0724925571630872;  // std dev = 0.002, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.960977
   AUC PR    = 0.016656
   CLL	      = -0.202237
   Precision = 0.021306 at threshold = 0.5
   Recall    = 0.842308
   F1        = 0.04156


Total learning time: 1.632 seconds
Total inference time: 12.44 seconds
AUC ROC: 0.960977


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.123905
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.572 seconds
Refined model CLL: -0.123905


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.960977
   AUC PR    = 0.016656
   CLL	      = -0.202237
   Precision = 0.021306 at threshold = 0.5
   Recall    = 0.842308
   F1        = 0.04156


Total learning time: 21.847 seconds
Total inference time: 12.44 seconds
AUC ROC: 0.960977
Total revision time: 21.847
Best scored revision CLL: -0.123905


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 01:29:57
{'AUC ROC': 0.960977, 'AUC PR': 0.016656, 'CLL': -0.202237, 'Precision': [0.021306, 0.5], 'Recall': 0.842308, 'F1': 0.04156, 'Learning time': 21.847, 'Inference time': 12.44, 'parameter_20': {'AUC ROC': 0.961487, 'AUC PR': 0.01706, 'CLL': -0.19779, 'Precision': [0.02117, 0.5], 'Recall': 0.830769, 'F1': 0.041288, 'Learning time': 16.863, 'Inference time': 292.918}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(F, G), economicsectorcompany(B, F) )
%   | | then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then if ( bankboughtbank(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.05094197399139689;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, E), bankboughtbank(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(C, I) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6622329172201352;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( companyalsoknownas(J, K) )
%   | then return -0.05725192134661282;  // std dev = 1.357, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( bankboughtbank(F, A), acquired(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0.3736003178620208;  // std dev = 1.065, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.5720547993976931;  // std dev = 0.820, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.11929713488712428;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1291838946021198;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830986;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0.3515046964470549;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( bankboughtbank(H, I) )
%   | | | then return 0.4449717836025333;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return -0.12160278163431751;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.03708106019915938;  // std dev = 1.233, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( bankboughtbank(E, D) )
%   | | then return 0.30411086781386265;  // std dev = 1.351, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A) )
%   | then if ( companyalsoknownas(G, H) )
%   | | then return -0.0962152892917189;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1116041832063894;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1457010366723998;  // std dev = 0.993, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( bankboughtbank(I, A), acquired(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2854520910532267;  // std dev = 0.851, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A) )
%   | then return -0.08816747624228945;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10100903343213256;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, F) )
%   | then return 0.19727585655941962;  // std dev = 0.933, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.1146541919535454;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.031471988333790675;  // std dev = 0.232, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D), companyalsoknownas(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, G) )
%   | | then return 0.17176643217720516;  // std dev = 1.336, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.07316625665873436;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08959875100264038;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( bankboughtbank(C, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14409614401416984;  // std dev = 1.334, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08061793029290418;  // std dev = 0.023, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.12242827485629292;  // std dev = 1.332, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | else if ( bankboughtbank(F, D) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07484280477394095;  // std dev = 0.021, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.974655
   AUC PR    = 0.075121
   CLL	      = -0.20463
   Precision = 0.022103 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.043146


Total learning time: 5.775 seconds
Total inference time: 216.877 seconds
AUC ROC: 0.974655


Results scoring model
   AUC ROC   = 0.9904
   AUC PR    = 0.989776
   CLL	      = -0.188365
   Precision = 0.958333 at threshold = 0.5
   Recall    = 0.92
   F1        = 0.938776


Total scoring time: 1.315 seconds
Parameter learned model CLL: -0.188365


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,false': 'acquired(F, G), economicsectorcompany(B, F)', 'false': 'companyalsoknownas(H, A), companyalsoknownas(I, H)', 'false,true': 'bankboughtbank(J, I)'}, {'true,true': [0.0, 0, 10], 'true,false,true': [0.964, 1, 13], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'false,false': [1.348, 20, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(A, E), bankboughtbank(F, E)', 'true,false': 'bankboughtbank(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(C, I)', 'false': 'companyalsoknownas(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.98e-08, 0, 10], 'true,false,false,false': [0.964, 1, 13], 'false,true': [1.357, 24, 2], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'bankboughtbank(F, A), acquired(C, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'companyalsoknownas(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 10], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.065, 2, 6], 'true,false,false,false': [0.82, 1, 9], 'false,true': [0.0, 3, 0], 'false,false': [1.29e-08, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'companyalsoknownas(G, A)', 'true,false,false': 'bankboughtbank(H, I)', 'false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [1.05e-08, 0, 9], 'true,false,true': [0.926, 1, 6], 'true,false,false,true': [0.0, 0, 7], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.025, 4, 0], 'false,false': [1.233, 20, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,false': 'bankboughtbank(E, D)', 'false': 'companyalsoknownas(F, A)', 'false,true': 'companyalsoknownas(G, H)'}, {'true,true': [0.0, 0, 10], 'true,false,true': [1.351, 3, 15], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(H, G)', 'true,true,false': 'bankboughtbank(I, A), acquired(I, J)', 'false': 'companyalsoknownas(K, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.993, 2, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.851, 1, 19], 'true,false': [0.0, 0, 0], 'false,true': [1.86e-09, 3, 0], 'false,false': [9.13e-09, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(E, F)', 'false': 'companyalsoknownas(G, A), companyalsoknownas(A, G)'}, {'true,true': [0.933, 1, 23], 'true,false': [0.0, 0, 0], 'false,true': [0.115, 4, 0], 'false,false': [0.232, 20, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D), companyalsoknownas(E, D)', 'true,false': 'acquired(F, G)', 'false': 'companyalsoknownas(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.336, 3, 25], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [9.13e-09, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'bankboughtbank(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.334, 3, 25], 'true,false': [0.0, 0, 0], 'false': [0.023, 22, 0]}], ['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, D)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [1.332, 3, 25], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.021, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.039930555555556024, 0.07100591715976332], 'false': [0.0, 0.0826446280991736], 'true': [-8.881784197001253e-17, 0.06632653061224467], 'true,false': [0.06632653061224467, nan], 'false,true': [nan, 0.0]}, {'': [0.03948684146365503, 0.07077556932582157], 'false': [0.0707755693258215, nan], 'true': [nan, 0.03948684146365533], 'true,false': [nan, 0.03948684146365489], 'true,false,false': [8.881784197001253e-17, 0.0663265306122444]}, {'': [0.07194658781027312, 1.151164670814351e-05], 'true': [-1.7763568394002506e-16, 0.11009041467400375], 'true,false': [nan, 0.11009041467400375], 'true,false,false': [0.14184969984665652, 0.06717890598406262], 'false': [-2.3129646346357427e-18, 8.764918615461762e-18], 'true,true': [nan, -1.7763568394002506e-16]}, {'': [0.037078604361572044, 0.05948095043296708], 'false': [0.0006118866042873743, 0.06908535175373427], 'true': [1.3322676295501878e-16, 0.06340851389125092], 'true,false': [0.12244897959183675, 0.0], 'true,true': [0.0, 1.2335811384723962e-16], 'true,false,false': [0.0, nan]}, {'': [0.06525655137514234, 2.7889729725750163e-05], 'true': [-4.4408920985006264e-17, 0.10141176512969359], 'true,false': [0.10141176512969359, nan], 'false': [0.0, -8.764918615461762e-18], 'false,true': [0.0, nan]}, {'': [0.06508389792515237, 1.942069977360123e-05], 'true': [0.06508389792515237, nan], 'true,true': [0.12334612093674835, 0.03619890666321328], 'true,true,true': [nan, 0.12334612093674835], 'true,true,false': [nan, 0.03619890666321328], 'false': [1.1564823173178713e-18, 4.382459307730881e-18]}, {'': [0.036273543495070164, 0.04681711268996914], 'false': [0.0033311116517344957, 0.053659153871893975], 'true': [0.036273543495070164, nan]}, {'': [0.06374366001373914, 3.18006851460003e-05], 'true': [nan, 0.06374366001373913], 'true,false': [0.06374366001373914, nan], 'false': [0.0, 4.382459307730881e-18]}, {'': [0.06352676547621458, 2.373647813343205e-05], 'true': [0.06352676547621458, nan], 'true,true': [nan, 0.06352676547621462]}, {'': [0.045079180745527934, nan], 'true': [0.06335930085715036, 2.068116998806622e-05], 'true,false': [2.068116998806622e-05, nan], 'true,false,true': [nan, 2.068116998806622e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
0;true;bankboughtbank(C, E).;true;true
0;false;companyalsoknownas(H, A), companyalsoknownas(I, H).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
1;true;bankboughtbank(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;bankboughtbank(C, D).;true;true
2;false;companyalsoknownas(I, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
3;true;bankboughtbank(C, E).;true;true
3;true,true;bankboughtbank(F, A).;true;true
3;true,false;companyalsoknownas(G, A).;true;true
3;false;companyalsoknownas(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;bankboughtbank(C, D).;true;true
4;false;companyalsoknownas(F, A).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;false;companyalsoknownas(K, A).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;false;companyalsoknownas(H, A).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyceo(A, J) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.08629550934493224;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(A, F), countryhascompanyoffice(G, F) )
%   | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.13922843320969513;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(A, I) )
%   | | then return -0.12959316643610286;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.008159001125851429;  // std dev = 0.327, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | | then return 0.32426487344850347;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.6414664078975183;  // std dev = 0.259, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5021939111700756;  // std dev = 0.741, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.11094944065399633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12976599895801746;  // std dev = 0.026, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( companyalsoknownas(G, A) )
%   | | then if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.5240587259279942;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26014600769722246;  // std dev = 0.743, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.42085196624392907;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( companyalsoknownas(I, A) )
%   | then return -0.11245226436772993;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( companyceo(A, J) )
%   | | then return 0.09307135364426483;  // std dev = 0.750, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.06823837896333881;  // std dev = 0.212, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( companyalsoknownas(A, E), companyceo(E, F) )
%   | | then return 0.17125797929804618;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.4290141098101584;  // std dev = 0.362, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3259340590010097;  // std dev = 0.708, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.09075250909642725;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyceo(A, I) )
%   | | then return -0.13379948282681264;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.107655768189058;  // std dev = 0.005, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyceo(D, E) )
%   | then return 0.13413006835094254;  // std dev = 0.826, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( companyceo(A, F) )
%   | | then return 0.33894414949076623;  // std dev = 0.351, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2578705821632747;  // std dev = 0.172, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( companyalsoknownas(G, A) )
%   | then return -0.08353687258952547;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyceo(A, H) )
%   | | then return -0.1190378003402822;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09774396534001548;  // std dev = 0.004, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), countryhascompanyoffice(D, A) )
%   then return 0.3281073934698526;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then if ( cityhascompanyoffice(E, F), economicsectorcompany(B, F) )
%   | | then return 0.2856115181839334;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(A, G), acquired(G, H) )
%   | | | then return -0.22348072073006428;  // std dev = 0.358, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09593637409197536;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.08114298121109378;  // std dev = 0.205, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyceo(A, E) )
%   | then if ( companyalsoknownas(D, F), companyalsoknownas(F, F) )
%   | | then return -0.03676744931058021;  // std dev = 0.606, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2548642809029939;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, G) )
%   | | then return 0.19105669144957074;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.211906107017055;  // std dev = 0.184, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.06548845614068978;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(A, I) )
%   | | then return -0.09143297374217918;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return -0.0902273246708316;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09825942962676272;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), countryhascompanyoffice(E, D) )
%   | then return 0.012239751691895617;  // std dev = 0.570, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( companyceo(A, F), acquired(A, G) )
%   | | then return 0.12170266040403341;  // std dev = 0.361, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.17802578539292135;  // std dev = 0.173, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( companyalsoknownas(A, H) )
%   | then return -0.06159366843774925;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(A, I) )
%   | | then return -0.08411771657120044;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return -0.08310007816609877;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08989030272974972;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyceo(D, E) )
%   | then return 0.04389197675568086;  // std dev = 0.673, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( companyceo(A, F) )
%   | | then return 0.1980612822649304;  // std dev = 0.271, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13728280525898948;  // std dev = 0.172, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( companyalsoknownas(A, G) )
%   | then return -0.05812894473557997;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.07868835173541602;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08174921895972183;  // std dev = 0.003, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.975613
   AUC PR    = 0.037471
   CLL	      = -0.215169
   Precision = 0.020137 at threshold = 0.5
   Recall    = 0.907692
   F1        = 0.039399


Total learning time: 2.375 seconds
Total inference time: 16.658 seconds
AUC ROC: 0.975613


Results scoring model
   AUC ROC   = 0.9976
   AUC PR    = 0.997719
   CLL	      = -0.15881
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.608 seconds
Refined model CLL: -0.15881


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.975613
   AUC PR    = 0.037471
   CLL	      = -0.215169
   Precision = 0.020137 at threshold = 0.5
   Recall    = 0.907692
   F1        = 0.039399


Total learning time: 10.073 seconds
Total inference time: 16.658 seconds
AUC ROC: 0.975613
Total revision time: 10.073
Best scored revision CLL: -0.15881


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 01:34:02
{'AUC ROC': 0.975613, 'AUC PR': 0.037471, 'CLL': -0.215169, 'Precision': [0.020137, 0.5], 'Recall': 0.907692, 'F1': 0.039399, 'Learning time': 10.073, 'Inference time': 16.658, 'parameter_25': {'AUC ROC': 0.974655, 'AUC PR': 0.075121, 'CLL': -0.20463, 'Precision': [0.022103, 0.5], 'Recall': 0.9, 'F1': 0.043146, 'Learning time': 5.775, 'Inference time': 216.877}}


Starting fold 3

Target train facts examples: 5307
Target train pos examples: 520
Target train neg examples: 366438

Target test facts examples: 5307
Target test pos	 examples: 258
Target test neg examples: 183217

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( acquired(H, A), acquired(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(A, E), companyalsoknownas(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(H, G) )
%   | | then if ( companyalsoknownas(C, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(C, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(J, A), acquired(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, F), acquired(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(I, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(J, A), companyalsoknownas(K, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(L, A) )
%   | then if ( bankboughtbank(M, A), bankboughtbank(M, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(E, A), bankboughtbank(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( acquired(A, F), acquired(F, G) )
%   | | then if ( bankboughtbank(G, A), companyalsoknownas(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(I, A), countryhascompanyoffice(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), acquired(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( acquired(F, A), acquired(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, E), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(G, H) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(I, A), bankboughtbank(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( companyalsoknownas(C, E), acquired(E, F) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), acquired(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.977884
   AUC PR    = 0.044829
   CLL	      = -0.133305
   Precision = 0.029039 at threshold = 0.5
   Recall    = 0.763566
   F1        = 0.05595


Total learning time: 4.621 seconds
Total inference time: 223.10399999999998 seconds
AUC ROC: 0.977884


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.198 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,false': 'bankboughtbank(A, F)', 'true,false,false': 'companyalsoknownas(C, G)', 'false': 'acquired(H, A), acquired(I, H)'}, {'true,true': [2.11e-08, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(A, E), companyalsoknownas(F, E)', 'true,false': 'companyalsoknownas(G, A), economicsectorcompany(H, G)', 'true,false,true': 'companyalsoknownas(C, A)', 'true,false,false': 'companyalsoknownas(C, I)', 'false': 'bankboughtbank(J, A), acquired(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 3], 'true,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'acquired(D, E)', 'false': 'bankboughtbank(A, F), acquired(G, A)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'bankboughtbank(A, F), companyalsoknownas(G, A)', 'true,true,false': 'bankboughtbank(A, H)', 'true,false': 'acquired(I, A)', 'true,false,false': 'bankboughtbank(J, A), companyalsoknownas(K, J)', 'false': 'acquired(L, A)', 'false,true': 'bankboughtbank(M, A), bankboughtbank(M, L)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 3], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false': [0.0, 4, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'acquired(E, A), bankboughtbank(A, F)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'acquired(A, F), acquired(F, G)', 'true,true,true': 'bankboughtbank(G, A), companyalsoknownas(H, G)', 'true,true,false': 'companyalsoknownas(I, A), countryhascompanyoffice(J, I)', 'false': 'bankboughtbank(A, K), acquired(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E)', 'false': 'acquired(F, A), acquired(A, F)', 'false,false': 'bankboughtbank(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,false': 'bankboughtbank(A, E), companyalsoknownas(F, E)', 'true,false,false': 'companyalsoknownas(G, H)', 'false': 'acquired(I, A), bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'companyalsoknownas(C, E), acquired(E, F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), acquired(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false,true,false': 'acquired(A, H)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 4], 'false,false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0], 'false': [nan, -2.7755575615628915e-18]}, {'': [0.0, 0.0], 'true': [nan, 0.0], 'false': [nan, 0.0], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'false': [nan, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [-3.700743415417188e-17, 0.0], 'false': [0.0, 0.0], 'true,false': [0.0, 0.0], 'false,true': [nan, 0.0], 'true,false,false': [nan, 0.0], 'true,true': [nan, -3.700743415417188e-17], 'true,true,false': [nan, -3.700743415417188e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'false': [nan, 0.0], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'true,true': [0.0, 0.0], 'true,true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'false': [nan, -1.3877787807814458e-18], 'false,false': [nan, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, -6.938893903907229e-19], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan], 'false': [nan, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [nan, 0.009820698026241881], 'false': [0.0, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
0;true;companyalsoknownas(C, E).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
1;true;companyalsoknownas(G, A), economicsectorcompany(H, G).;true;true
1;true,false;companyalsoknownas(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;true,false;acquired(I, A).;true;true
3;false;acquired(L, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;acquired(A, F), acquired(F, G).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;acquired(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(E, A), economicsectorcompany(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(C, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(G, A) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), acquired(D, E) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.968571
   AUC PR    = 0.026193
   CLL	      = -0.164662
   Precision = 0.028843 at threshold = 0.5
   Recall    = 0.763566
   F1        = 0.055587


Total learning time: 0.787 seconds
Total inference time: 7.755 seconds
AUC ROC: 0.968571


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.444 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.977884
   AUC PR    = 0.044829
   CLL	      = -0.133305
   Precision = 0.029039 at threshold = 0.5
   Recall    = 0.763566
   F1        = 0.05595


Total learning time: 7.050000000000001 seconds
Total inference time: 223.10399999999998 seconds
AUC ROC: 0.977884
Total revision time: 7.050000000000001
Best scored revision CLL: -0.094637


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 01:38:02
{'AUC ROC': 0.977884, 'AUC PR': 0.044829, 'CLL': -0.133305, 'Precision': [0.029039, 0.5], 'Recall': 0.763566, 'F1': 0.05595, 'Learning time': 7.050000000000001, 'Inference time': 223.10399999999998, 'parameter_5': {'AUC ROC': 0.977884, 'AUC PR': 0.044829, 'CLL': -0.133305, 'Precision': [0.029039, 0.5], 'Recall': 0.763566, 'F1': 0.05595, 'Learning time': 4.621, 'Inference time': 223.10399999999998}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( bankboughtbank(J, K) )
%   | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109172;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( acquired(D, F) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.974699
   AUC PR    = 0.034408
   CLL	      = -0.148231
   Precision = 0.027333 at threshold = 0.5
   Recall    = 0.852713
   F1        = 0.052967


Total learning time: 5.451 seconds
Total inference time: 189.701 seconds
AUC ROC: 0.974699


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.269 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [2.11e-08, 0, 3], 'true,false,true': [0.0, 0, 7], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 3], 'true,false,false,false': [2.11e-08, 0, 7], 'false,true': [5.27e-09, 10, 0], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'false': 'bankboughtbank(F, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.58e-08, 0, 7], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.73e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'false': 'bankboughtbank(E, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(A, H), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.83e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.73e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.31e-10, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.45e-09, 0, 10], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [2.63e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(D, F)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [3.73e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'false': [nan, -1.1102230246251566e-17], 'true': [1.4802973661668753e-16, -2.5376526277146434e-16], 'true,false': [-2.5376526277146434e-16, nan]}, {'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'false': [2.7755575615628915e-18, nan], 'true': [nan, -8.881784197001253e-17], 'true,false': [nan, 0.0], 'true,false,false': [0.0, 6.344131569286608e-17]}, {'': [-1.7763568394002506e-16, 0.0], 'false': [nan, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [nan, -1.7763568394002506e-16]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [-3.700743415417188e-17, 9.516197353929913e-17], 'true,false': [nan, 9.516197353929913e-17], 'true,false,false': [9.516197353929913e-17, nan], 'false': [nan, 1.3877787807814458e-18], 'true,true': [0.0, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'false': [nan, 0.0], 'true': [-4.4408920985006264e-17, nan]}, {'': [3.3306690738754695e-17, 1.3877787807814458e-18], 'true': [3.3306690738754695e-17, nan], 'true,true': [nan, 3.3306690738754695e-17], 'true,true,false': [nan, 3.3306690738754695e-17], 'false': [nan, 1.3877787807814458e-18]}, {'': [-2.7755575615628914e-17, 0.0], 'false': [nan, 0.0], 'true': [-2.7755575615628914e-17, nan]}, {'': [5.551115123125783e-18, 6.938893903907229e-19], 'true': [nan, 5.551115123125783e-18], 'true,false': [5.551115123125783e-18, nan], 'false': [nan, 6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [nan, 0.0]}, {'': [0.009820698026241881, nan], 'true': [0.0, 1.3877787807814458e-18], 'true,false': [1.3877787807814458e-18, nan], 'true,false,true': [nan, 1.3877787807814458e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(E, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(E, C).;true;true
3;true,true;acquired(A, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830986;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.10159632948783628;  // std dev = 1.32e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.2551722425694894;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.17709649774527736;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.15274385809367094;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 1.61e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.970725
   AUC PR    = 0.026134
   CLL	      = -0.175814
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 0.843 seconds
Total inference time: 7.069 seconds
AUC ROC: 0.970725


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.494 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.974699
   AUC PR    = 0.034408
   CLL	      = -0.148231
   Precision = 0.027333 at threshold = 0.5
   Recall    = 0.852713
   F1        = 0.052967


Total learning time: 8.057 seconds
Total inference time: 189.701 seconds
AUC ROC: 0.974699
Total revision time: 8.057
Best scored revision CLL: -0.094637


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 01:41:27
{'AUC ROC': 0.974699, 'AUC PR': 0.034408, 'CLL': -0.148231, 'Precision': [0.027333, 0.5], 'Recall': 0.852713, 'F1': 0.052967, 'Learning time': 8.057, 'Inference time': 189.701, 'parameter_10': {'AUC ROC': 0.974699, 'AUC PR': 0.034408, 'CLL': -0.148231, 'Precision': [0.027333, 0.5], 'Recall': 0.852713, 'F1': 0.052967, 'Learning time': 5.451, 'Inference time': 189.701}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then if ( acquired(A, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( bankboughtbank(J, K) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( acquired(A, F), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( bankboughtbank(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( acquired(D, E) )
%   | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23389993044712148;  // std dev = 0.330, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.21330557280030996;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08054293191062098;  // std dev = 0.007, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.17969434175747057;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.1598646847136663;  // std dev = 0.268, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07312642583548665;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0.15471174018065048;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.13801558706545805;  // std dev = 0.260, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06832210451604578;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.12262110206834138;  // std dev = 0.258, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( acquired(D, F) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0640993022032006;  // std dev = 6.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977852
   AUC PR    = 0.045872
   CLL	      = -0.144516
   Precision = 0.027533 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053359


Total learning time: 7.651 seconds
Total inference time: 183.796 seconds
AUC ROC: 0.977852


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101055
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.631 seconds
Parameter learned model CLL: -0.101055


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [2.11e-08, 0, 3], 'true,false,true': [0.0, 0, 12], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,true': 'acquired(A, C)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 3], 'true,false,false,false': [4.21e-08, 0, 11], 'false,true': [7.45e-09, 15, 0], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(A, F), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 13], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.21e-08, 0, 12], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'bankboughtbank(F, A)'}, {'true,true': [0.0, 0, 15], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.45e-09, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(A, H), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.33, 1, 15], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.33e-09, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [2.36e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.007, 15, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.268, 1, 13], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.26, 1, 13], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(D, F)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [0.258, 1, 15], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [6.45e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'false': [nan, -1.4802973661668754e-17], 'true': [1.4802973661668753e-16, -1.4802973661668753e-16], 'true,false': [-1.4802973661668753e-16, nan]}, {'': [0.0, 3.7007434154171884e-18], 'false': [3.7007434154171884e-18, nan], 'true': [nan, 0.0], 'true,false': [0.0, 6.344131569286608e-17], 'true,false,false': [0.0, 1.6148698540002277e-16], 'true,false,true': [nan, 0.0]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.3684757858670006e-16, 0.0], 'false': [nan, 9.912705577010326e-18], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0], 'true,true': [0.0, -2.7328566760003855e-16]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [-3.700743415417188e-17, 1.4802973661668753e-16], 'true,false': [nan, 1.4802973661668753e-16], 'true,false,false': [1.4802973661668753e-16, nan], 'false': [nan, -5.551115123125783e-18], 'true,true': [0.0, 0.0]}, {'': [0.010013797405959826, 3.96508223080413e-18], 'true': [-1.4802973661668754e-17, 0.0], 'false': [nan, 3.96508223080413e-18], 'true,false': [0.0, nan]}, {'': [0.006787668945471635, 4.956352788505163e-18], 'true': [0.006787668945471635, nan], 'true,true': [nan, 0.006787668945471635], 'true,true,false': [nan, 0.006787668945471635], 'false': [nan, 4.956352788505163e-18]}, {'': [3.700743415417188e-17, 4.3671345612857536e-05], 'false': [nan, 4.3671345612855686e-05], 'true': [3.700743415417188e-17, nan]}, {'': [0.004515831943422612, -2.9738116731030977e-18], 'true': [0.0, 0.005111798880173637], 'true,false': [0.005111798880173637, nan], 'false': [nan, -2.9738116731030977e-18]}, {'': [0.0042707202854563725, -2.9738116731030977e-18], 'true': [0.0042707202854563725, nan], 'true,true': [0.0, 0.004845977992272967]}, {'': [0.010904007099575246, nan], 'true': [0.00417490893841713, 2.9738116731030977e-18], 'true,false': [2.9738116731030977e-18, nan], 'true,false,true': [nan, 2.9738116731030977e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(E, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(A, G), economicsectorcompany(H, G).;true;true
1;true,false;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;bankboughtbank(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(E, C).;true;true
3;true,true;acquired(A, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(D, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(D, C), bankboughtbank(E, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(D, C), bankboughtbank(D, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(F, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, C) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109542;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( acquired(H, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 1.86e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 2.95e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4175135841583098;  // std dev = 1.29e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( acquired(G, A) )
%   | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( companyceo(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926096;  // std dev = 1.32e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.23389993044712148;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.08518475138839686;  // std dev = 2.28e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( companyceo(A, E) )
%   | then return 0.21330557280031004;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21330557280030996;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.08054293191062097;  // std dev = 0.007, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.17969434175747057;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1598646847136663;  // std dev = 0.071, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.07312642583548665;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(D, E) )
%   | then return 0.15471174018065048;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyceo(A, F) )
%   | | then return 0.15732277582682752;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13274999013053912;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06832210451604578;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.1226218337742366;  // std dev = 0.064, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.0640993022032006;  // std dev = 1.61e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.978656
   AUC PR    = 0.054719
   CLL	      = -0.143739
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 1.042 seconds
Total inference time: 9.121 seconds
AUC ROC: 0.978656


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101011
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.503 seconds
Refined model CLL: -0.101011


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978656
   AUC PR    = 0.054719
   CLL	      = -0.143739
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 10.827 seconds
Total inference time: 9.121 seconds
AUC ROC: 0.978656
Total revision time: 10.827
Best scored revision CLL: -0.101011


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 01:44:52
{'AUC ROC': 0.978656, 'AUC PR': 0.054719, 'CLL': -0.143739, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 10.827, 'Inference time': 9.121, 'parameter_15': {'AUC ROC': 0.977852, 'AUC PR': 0.045872, 'CLL': -0.144516, 'Precision': [0.027533, 0.5], 'Recall': 0.860465, 'F1': 0.053359, 'Learning time': 7.651, 'Inference time': 183.796}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then if ( acquired(A, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( bankboughtbank(J, K) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( acquired(A, F), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( bankboughtbank(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( acquired(D, E) )
%   | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23896476666673294;  // std dev = 0.332, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.2124568954916488;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08012528762637576;  // std dev = 0.006, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.1790737009362029;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.16446949530822;  // std dev = 0.270, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07315473837443288;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0.1542421161830767;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.14193849128268443;  // std dev = 0.263, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06834689128020265;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.1253123220267318;  // std dev = 0.261, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( acquired(D, F) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06412117494411532;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977852
   AUC PR    = 0.045872
   CLL	      = -0.145247
   Precision = 0.027533 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053359


Total learning time: 10.01 seconds
Total inference time: 190.417 seconds
AUC ROC: 0.977852


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099541
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.025 seconds
Parameter learned model CLL: -0.099541


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [0.0, 0, 5], 'true,false,true': [0.0, 0, 15], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.45e-09, 20, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,true': 'acquired(A, C)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [5.16e-08, 0, 14], 'false,true': [0.0, 20, 0], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(A, F), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 18], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.67e-08, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.71e-08, 0, 15], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 20, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'bankboughtbank(F, A)'}, {'true,true': [2.11e-08, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(A, H), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.332, 1, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.29e-08, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [1.83e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.006, 20, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.27, 1, 18], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.263, 1, 18], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(D, F)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [0.261, 1, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [9.13e-09, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'false': [nan, 2.7755575615628915e-18], 'true': [0.0, -2.3684757858670006e-16], 'true,false': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 0.0], 'true': [nan, 1.7763568394002506e-16], 'true,false': [0.0, 0.0], 'false': [0.0, nan], 'true,false,true': [nan, 0.0], 'true,false,false': [0.0, 1.9032394707859825e-16]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true': [-2.6645352591003756e-16, 0.0], 'false': [nan, 1.460819769243627e-17], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0], 'true,true': [0.0, -2.4671622769447924e-16]}, {'': [1.3322676295501878e-16, -2.7755575615628915e-18], 'true': [4.4408920985006264e-17, 1.4802973661668753e-16], 'true,false': [nan, 1.4802973661668753e-16], 'true,false,false': [1.4802973661668753e-16, nan], 'true,true': [0.0, -3.700743415417188e-17], 'false': [nan, -1.3877787807814458e-18]}, {'': [0.007750664054197215, 7.304098846218135e-18], 'true': [2.2204460492503132e-17, 0.0], 'false': [nan, 7.304098846218135e-18], 'true,false': [0.0, nan]}, {'': [0.005253645502768649, 8.764918615461762e-18], 'true': [0.005253645502768649, nan], 'true,true': [nan, 0.005253645502768649], 'true,true,false': [nan, 0.0052536455027686595], 'false': [nan, 8.764918615461762e-18]}, {'': [1.6653345369377347e-17, 3.455227842359548e-05], 'false': [nan, 3.455227842359409e-05], 'true': [1.6653345369377347e-17, nan]}, {'': [0.0034918412131887005, -7.304098846218135e-19], 'true': [0.0, 0.0038390907964393336], 'true,false': [0.0038390907964393336, nan], 'false': [nan, -7.304098846218135e-19]}, {'': [0.0033054111628731953, 2.921639538487254e-18], 'true': [0.0033054111628731953, nan], 'true,true': [0.0, 0.0036389321147139646]}, {'': [0.010648768182215974, nan], 'true': [0.0032379693231888163, 4.382459307730881e-18], 'true,false': [4.382459307730881e-18, nan], 'true,false,true': [nan, 4.382459307730881e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(E, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(A, G), economicsectorcompany(H, G).;true;true
1;true,false;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;bankboughtbank(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(E, C).;true;true
3;true,true;acquired(A, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(D, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(D, C), bankboughtbank(E, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(D, C), bankboughtbank(D, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(F, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, C) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( countryhascompanyoffice(I, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( acquired(J, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( countryhascompanyoffice(F, A) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360635;  // std dev = 3.48e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4175135841583098;  // std dev = 1.29e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( acquired(H, A) )
%   | then return -0.10159632948783631;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( countryhascompanyoffice(F, A) )
%   | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926094;  // std dev = 2.28e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.141719911250194;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2551722425694894;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839685;  // std dev = 2.63e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( companyalsoknownas(A, E) )
%   | then return 0.22270744043778967;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyceo(A, F) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20975771563253562;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( acquired(G, A) )
%   | then return -0.0833069971122785;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.17662666728852472;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.09819797322188761;  // std dev = 0.230, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17709649774527736;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.07293930130231266;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(D, E) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.15238744899528509;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1393055239669679;  // std dev = 0.064, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.06815825379296979;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then return 0.13446443216373583;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12333632733265777;  // std dev = 0.059, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.06395469171503519;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06419184008202619;  // std dev = 1.86e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.979279
   AUC PR    = 0.045344
   CLL	      = -0.144788
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 1.433 seconds
Total inference time: 12.104 seconds
AUC ROC: 0.979279


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098601
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.603 seconds
Refined model CLL: -0.098601


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.979279
   AUC PR    = 0.045344
   CLL	      = -0.144788
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 14.071 seconds
Total inference time: 12.104 seconds
AUC ROC: 0.979279
Total revision time: 14.071
Best scored revision CLL: -0.098601


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 01:48:29
{'AUC ROC': 0.979279, 'AUC PR': 0.045344, 'CLL': -0.144788, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 14.071, 'Inference time': 12.104, 'parameter_20': {'AUC ROC': 0.977852, 'AUC PR': 0.045872, 'CLL': -0.145247, 'Precision': [0.027533, 0.5], 'Recall': 0.860465, 'F1': 0.053359, 'Learning time': 10.01, 'Inference time': 190.417}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, D), bankboughtbank(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then if ( companyalsoknownas(G, F), economicsectorcompany(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankboughtbank(C, H), acquired(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( bankboughtbank(J, K) )
%   | then if ( acquired(A, L) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then if ( companyalsoknownas(E, D), bankboughtbank(C, G) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109542;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, H) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( acquired(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(A, F) )
%   | | then if ( bankboughtbank(G, A), companyalsoknownas(C, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.49972620216796043;  // std dev = 0.185, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.11231637819360639;  // std dev = 1.86e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankboughtbank(H, I) )
%   | | then return 0.42430875907309407;  // std dev = 0.032, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10443500249362582;  // std dev = 0.014, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D), acquired(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(F, D) )
%   | | then return 0.3062091654035855;  // std dev = 0.474, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, G) )
%   | then return -0.09245282078113498;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09245282078113502;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( bankboughtbank(F, G) )
%   | | then return 0.24365105508516743;  // std dev = 0.457, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08498233926439586;  // std dev = 2.79e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E) )
%   | then if ( acquired(F, D) )
%   | | then return 0.21296284177152058;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21296284177152058;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.21785581231394693;  // std dev = 0.022, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( acquired(A, H) )
%   | then return -0.07860291930271862;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.08586426010161254;  // std dev = 0.034, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.17899704580238046;  // std dev = 0.001, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( companyalsoknownas(E, F) )
%   | | then return 0.15771295823905523;  // std dev = 0.402, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07264582287900605;  // std dev = 0.000136, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( acquired(A, F) )
%   | | then if ( acquired(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15738255392702094;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankboughtbank(C, E) )
%   | | | then return 0.15418412042834181;  // std dev = 0.001, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1289467129949797;  // std dev = 0.405, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06790117706956222;  // std dev = 0.000624, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.12441432611194278;  // std dev = 0.418, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( bankboughtbank(D, E) )
%   | then if ( economicsectorcompany(B, F), economicsectorcompany(G, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06372772394906155;  // std dev = 0.000588, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97781
   AUC PR    = 0.088043
   CLL	      = -0.168039
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 2.4 seconds
Total inference time: 73.269 seconds
AUC ROC: 0.97781


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104729
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.112 seconds
Parameter learned model CLL: -0.104729


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(A, D), bankboughtbank(C, E)', 'true,false': 'acquired(A, F)', 'true,false,true': 'companyalsoknownas(G, F), economicsectorcompany(B, G)', 'true,false,false': 'bankboughtbank(C, H), acquired(A, I)', 'false': 'bankboughtbank(J, K)', 'false,true': 'acquired(A, L)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [2.11e-08, 0, 3], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 22], 'false,true,true': [0.0, 2, 0], 'false,true,false': [1.49e-08, 23, 0], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'true,true': 'companyalsoknownas(E, D), bankboughtbank(C, G)', 'false': 'acquired(A, H)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false': [5.96e-08, 0, 22], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.0, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'acquired(A, E)', 'true,false': 'acquired(A, F)', 'true,false,true': 'bankboughtbank(G, A), companyalsoknownas(C, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 11], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.05e-08, 0, 3], 'true,false,false': [0.185, 1, 11], 'false': [1.86e-09, 24, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,true,false': 'acquired(A, G)', 'true,false': 'bankboughtbank(H, I)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 3], 'true,false,true': [0.032, 0, 22], 'true,false,false': [0.0, 0, 0], 'false': [0.014, 25, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D), acquired(A, E)', 'true,false': 'bankboughtbank(F, D)', 'false': 'acquired(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.474, 1, 25], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false': [0.0, 22, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'bankboughtbank(F, G)'}, {'true,true,true': [0.457, 1, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.79e-09, 24, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(A, E)', 'true,true': 'acquired(F, D)', 'true,true,false': 'companyalsoknownas(G, E)', 'false': 'acquired(A, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.022, 0, 22], 'false,true': [0.0, 2, 0], 'false,false': [0.034, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,false': 'companyalsoknownas(E, F)'}, {'true,true': [0.001, 0, 11], 'true,false,true': [0.402, 1, 14], 'true,false,false': [0.0, 0, 0], 'false': [0.000136, 24, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'acquired(A, F)', 'true,true,true': 'acquired(E, F)', 'true,true,false': 'bankboughtbank(C, E)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 3], 'true,true,false,true': [0.001, 0, 11], 'true,true,false,false': [0.405, 1, 11], 'true,false': [0.0, 0, 0], 'false': [0.000624, 24, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'false': 'bankboughtbank(D, E)', 'false,true': 'economicsectorcompany(B, F), economicsectorcompany(G, D)'}, {'true': [0.418, 1, 25], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.000588, 24, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [7.105427357601002e-16, 1.3322676295501878e-17], 'true': [nan, 7.105427357601002e-16], 'true,false': [1.4802973661668753e-16, 1.6148698540002277e-16], 'true,false,false': [nan, -1.6148698540002277e-16], 'true,false,true': [nan, 1.4802973661668753e-16], 'false': [1.3322676295501878e-17, nan], 'false,true': [0.0, 9.654113257610057e-18]}, {'': [-1.4210854715202004e-16, -4.440892098500626e-18], 'false': [0.0, -2.413528314402514e-18], 'true': [-1.4210854715202004e-16, nan], 'true,true': [1.4802973661668753e-16, 1.6148698540002277e-16]}, {'': [0.016486699015016572, 2.3129646346357427e-18], 'true': [-2.0185873175002846e-16, 0.02773868790722102], 'true,false': [3.700743415417188e-17, 0.03405419274324021], 'true,false,true': [nan, 3.700743415417188e-17], 'true,true': [nan, -2.0185873175002846e-16]}, {'': [4.5509490731916455e-05, 0.0001933935464111447], 'true': [-3.700743415417188e-17, 4.617440212253208e-05], 'true,false': [4.617440212253208e-05, nan], 'true,true': [nan, -3.700743415417188e-17], 'true,true,false': [nan, -3.700743415417188e-17]}, {'': [0.00865916083471685, -1.1564823173178713e-18], 'true': [nan, 0.008659160834716798], 'true,false': [0.00865916083471685, nan], 'false': [0.0, -3.784851220313033e-18]}, {'': [0.008016782129848354, 8.0953762212251e-18], 'true': [0.008016782129848354, nan], 'true,true': [0.008016782129848354, nan]}, {'': [2.1115141779430857e-05, 0.001071076613167602], 'false': [0.0, 0.001159995544348965], 'true': [0.0, 2.112154000734965e-05], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.006312158474669769, 1.837476775248814e-08], 'true': [1.9818362425392458e-07, 0.010749270269483791], 'true,false': [0.010749270269483791, nan]}, {'': [0.006488275350522125, 1.621857939037204e-08], 'true': [0.006488275350522125, nan], 'true,true': [0.0, 0.007303667676831696], 'true,true,false': [1.5609323065919736e-07, 0.01369393616150081], 'true,true,true': [nan, 0.0]}, {'': [0.0067270577561590415, 1.4415091705947495e-08], 'false': [1.4415091705947495e-08, nan], 'false,true': [nan, 1.4415091705947495e-08]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(A, F).;true;true
0;false;acquired(A, L).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;companyalsoknownas(E, D), bankboughtbank(C, G).;true;true
1;false;acquired(A, H).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;bankboughtbank(C, D).;true;true
2;true,false;acquired(A, F).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;bankboughtbank(C, E).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;false;acquired(A, G).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
6;true;acquired(A, E).;true;true
6;true,true;acquired(F, D).;true;true
6;false;acquired(A, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(C, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(A, F).;true;true
8;true,false;bankboughtbank(C, E).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( acquired(A, F) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( companyalsoknownas(E, D), bankboughtbank(C, F) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( countryhascompanyoffice(H, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109543;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( acquired(A, I) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.49972620216796043;  // std dev = 0.185, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.4265738173780221;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4251581559374421;  // std dev = 0.027, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( acquired(H, A), acquired(I, H) )
%   | then return -0.12525193786941524;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.16552112898105664;  // std dev = 0.393, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.3253348527349974;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32453905165940955;  // std dev = 0.006, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( acquired(A, F) )
%   | then return -0.09170610078569592;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(G, A) )
%   | | then return -0.09203449258688427;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926093;  // std dev = 2.63e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.1343482115800465;  // std dev = 0.383, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return 0.26044363593591124;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2575013376890596;  // std dev = 0.005, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( acquired(F, A) )
%   | then return -0.08432900432947985;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( countryhascompanyoffice(G, A) )
%   | | then return -0.08521035286670091;  // std dev = 6.27e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839685;  // std dev = 2.63e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E) )
%   | then if ( acquired(F, D) )
%   | | then return 0.20860766467635072;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.23370362446637777;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.21455392084846406;  // std dev = 0.013, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( acquired(A, G) )
%   | then return -0.07802726896451002;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( acquired(H, A) )
%   | | then return -0.10847369861967276;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877655916222084;  // std dev = 5.70e-07, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.17467455464695866;  // std dev = 0.000517, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(A, E) )
%   | | then return 0.1884806406861537;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15586035989635402;  // std dev = 0.103, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07289093529908995;  // std dev = 0.000866, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.16138996596771102;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankboughtbank(C, E) )
%   | | then return 0.15090411521978;  // std dev = 0.000460, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1332151529423912;  // std dev = 0.103, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( countryhascompanyoffice(F, A) )
%   | then return -0.06803222194763159;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(G, A) )
%   | | then return -0.06633662729328839;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0684496416809812;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.1255577675483054;  // std dev = 0.072, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( acquired(D, A) )
%   | then return -0.062399111941245824;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return -0.06427016261140898;  // std dev = 8.52e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06421183602679867;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.976604
   AUC PR    = 0.041048
   CLL	      = -0.169404
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 1.722 seconds
Total inference time: 12.03 seconds
AUC ROC: 0.976604


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102611
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.603 seconds
Refined model CLL: -0.102611


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976604
   AUC PR    = 0.041048
   CLL	      = -0.169404
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 5.837 seconds
Total inference time: 12.03 seconds
AUC ROC: 0.976604
Total revision time: 5.837
Best scored revision CLL: -0.102611


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 01:50:01
{'AUC ROC': 0.976604, 'AUC PR': 0.041048, 'CLL': -0.169404, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 5.837, 'Inference time': 12.03, 'parameter_25': {'AUC ROC': 0.97781, 'AUC PR': 0.088043, 'CLL': -0.168039, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 2.4, 'Inference time': 73.269}}


Starting fold 1

Target train facts examples: 5307
Target train pos examples: 518
Target train neg examples: 366436

Target test facts examples: 5307
Target test pos	 examples: 260
Target test neg examples: 183219

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A), bankboughtbank(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E), companyalsoknownas(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(H, G) )
%   | | then if ( companyalsoknownas(C, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(J, A), bankboughtbank(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, F), bankboughtbank(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( acquired(A, F), companyalsoknownas(G, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(E, A), acquired(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), countryhascompanyoffice(I, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, J), bankboughtbank(K, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(A, E) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(G, H) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( bankboughtbank(I, A), bankboughtbank(A, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then if ( companyalsoknownas(C, E), bankboughtbank(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(G, H) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, I), companyalsoknownas(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(K, L) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(M, A), acquired(A, N) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( companyalsoknownas(C, E), bankboughtbank(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), bankboughtbank(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( acquired(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.975333
   AUC PR    = 0.038651
   CLL	      = -0.124005
   Precision = 0.039551 at threshold = 0.5
   Recall    = 0.676923
   F1        = 0.074735


Total learning time: 4.533 seconds
Total inference time: 181.69 seconds
AUC ROC: 0.975333


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.251 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'false': 'bankboughtbank(F, A), bankboughtbank(G, F)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E), companyalsoknownas(F, E)', 'true,false': 'companyalsoknownas(G, A), economicsectorcompany(H, G)', 'true,false,true': 'companyalsoknownas(C, A)', 'true,false,false': 'companyalsoknownas(C, I)', 'false': 'acquired(J, A), bankboughtbank(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'bankboughtbank(D, E)', 'false': 'acquired(A, F), bankboughtbank(G, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'acquired(A, F), companyalsoknownas(G, A)', 'true,true,false': 'acquired(A, H)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'bankboughtbank(E, A), acquired(A, F)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'companyalsoknownas(H, A), countryhascompanyoffice(I, H)', 'false': 'acquired(A, J), bankboughtbank(K, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(A, E)', 'true,true': 'bankboughtbank(E, F)', 'true,true,false': 'countryhascompanyoffice(G, H)', 'false': 'bankboughtbank(I, A), bankboughtbank(A, I)', 'false,false': 'acquired(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(A, D)', 'true,true': 'companyalsoknownas(C, E), bankboughtbank(F, E)', 'true,true,false': 'countryhascompanyoffice(G, H)', 'true,false': 'acquired(A, I), companyalsoknownas(J, I)', 'true,false,false': 'companyalsoknownas(K, L)', 'false': 'bankboughtbank(M, A), acquired(A, N)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'companyalsoknownas(C, E), bankboughtbank(E, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'acquired(A, C), bankboughtbank(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'acquired(A, F), companyalsoknownas(G, F)', 'false,true,false': 'bankboughtbank(A, H)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 5], 'false,false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'false': [nan, -2.7755575615628915e-18]}, {'': [0.0, 0.0], 'true': [nan, 0.0], 'false': [nan, 0.0], 'true,false': [0.0, 0.0], 'true,false,true': [0.0, nan], 'true,false,false': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'false': [nan, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [0.0, 0.0], 'false': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [-2.2204460492503132e-17, 0.0], 'false': [nan, 0.0], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'false': [nan, -1.3877787807814458e-18], 'false,false': [nan, -1.3877787807814458e-18], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,true,false': [0.0, nan], 'true,false,false': [0.0, nan], 'false': [nan, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [nan, 0.0]}, {'': [nan, 0.009820698026241881], 'false': [0.0, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
1;true;companyalsoknownas(G, A), economicsectorcompany(H, G).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
3;true;acquired(A, F), companyalsoknownas(G, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(H, A), countryhascompanyoffice(I, H).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
6;true;acquired(A, E).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(E, A), economicsectorcompany(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(A, E), companyalsoknownas(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, A), countryhascompanyoffice(E, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(A, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.964818
   AUC PR    = 0.023539
   CLL	      = -0.167989
   Precision = 0.026242 at threshold = 0.5
   Recall    = 0.715385
   F1        = 0.050626


Total learning time: 0.812 seconds
Total inference time: 7.38 seconds
AUC ROC: 0.964818


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.515 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.975333
   AUC PR    = 0.038651
   CLL	      = -0.124005
   Precision = 0.039551 at threshold = 0.5
   Recall    = 0.676923
   F1        = 0.074735


Total learning time: 7.111000000000001 seconds
Total inference time: 181.69 seconds
AUC ROC: 0.975333
Total revision time: 7.111000000000001
Best scored revision CLL: -0.094637


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 01:53:19
{'AUC ROC': 0.975333, 'AUC PR': 0.038651, 'CLL': -0.124005, 'Precision': [0.039551, 0.5], 'Recall': 0.676923, 'F1': 0.074735, 'Learning time': 7.111000000000001, 'Inference time': 181.69, 'parameter_5': {'AUC ROC': 0.975333, 'AUC PR': 0.038651, 'CLL': -0.124005, 'Precision': [0.039551, 0.5], 'Recall': 0.676923, 'F1': 0.074735, 'Learning time': 4.533, 'Inference time': 181.69}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, F), bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( acquired(J, A), acquired(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(A, E), companyalsoknownas(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(H, G) )
%   | | then if ( companyalsoknownas(C, A), bankchiefexecutiveceo(A, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7374506595744976;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6374506595744975;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(K, A), acquired(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(D, F) )
%   | | | then return 0.5948641173967226;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.40243980365007653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), acquired(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24262190907815856;  // std dev = 0.502, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankboughtbank(A, I), acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3717369142374048;  // std dev = 0.720, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( acquired(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(K, A), companyalsoknownas(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.538097909234658;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(M, A) )
%   | then if ( bankboughtbank(N, A), bankboughtbank(N, M) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10625603820648172;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, D) )
%   | | then return 0.25906788616857557;  // std dev = 0.829, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(G, A), bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09234903166935157;  // std dev = 0.000366, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( acquired(A, F), acquired(F, G) )
%   | | then if ( bankboughtbank(G, A), companyalsoknownas(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3035690777396216;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(I, A), companyceo(I, J) )
%   | | | then return 0.2828518013526443;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18526818508129933;  // std dev = 0.810, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), acquired(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08489421633999919;  // std dev = 0.000339, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankboughtbank(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19389525891263146;  // std dev = 0.735, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(H, A), acquired(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09029458964184006;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, E), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(G, H) )
%   | | | then return 0.12957786132319696;  // std dev = 0.810, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(I, A), bankboughtbank(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07223709751504821;  // std dev = 0.000293, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, E), acquired(E, G) )
%   | | | then return 0.20216541459778117;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17838041155576864;  // std dev = 0.583, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06754293967908889;  // std dev = 0.000275, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), acquired(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09270586076371938;  // std dev = 0.746, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return -0.06341127977156319;  // std dev = 0.000259, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.970723
   AUC PR    = 0.031236
   CLL	      = -0.147858
   Precision = 0.020704 at threshold = 0.5
   Recall    = 0.819231
   F1        = 0.040387


Total learning time: 10.817 seconds
Total inference time: 256.06 seconds
AUC ROC: 0.970723


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.168481
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 2.083 seconds
Parameter learned model CLL: -0.168481


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), bankboughtbank(A, G)', 'true,false,false': 'companyalsoknownas(C, H), bankchiefexecutiveceo(A, I)', 'false': 'acquired(J, A), acquired(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.953, 1, 10], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'acquired(A, E), companyalsoknownas(F, E)', 'true,false': 'companyalsoknownas(G, A), economicsectorcompany(H, G)', 'true,false,true': 'companyalsoknownas(C, A), bankchiefexecutiveceo(A, D)', 'true,false,false': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(K, A), acquired(L, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.949, 1, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'bankchiefexecutiveceo(A, E)', 'true,true,false': 'acquired(D, F)', 'true,false': 'bankchiefexecutiveceo(A, G)', 'true,false,false': 'acquired(A, H), acquired(H, A)', 'false': 'bankboughtbank(A, I), acquired(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.023, 0, 9], 'true,true,false,false': [0.0, 1, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.502, 1, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'bankboughtbank(A, F), companyalsoknownas(G, A)', 'true,true,false': 'bankchiefexecutiveceo(A, H), bankboughtbank(A, I)', 'true,false': 'acquired(J, A)', 'true,false,false': 'bankboughtbank(K, A), companyalsoknownas(L, K)', 'false': 'acquired(M, A)', 'false,true': 'bankboughtbank(N, A), bankboughtbank(N, M)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.72, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false': [0.035, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D), bankchiefexecutiveceo(A, E)', 'true,false': 'companyalsoknownas(F, D)', 'false': 'acquired(G, A), bankboughtbank(A, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.829, 2, 10], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000366, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'acquired(A, F), acquired(F, G)', 'true,true,true': 'bankboughtbank(G, A), companyalsoknownas(H, G)', 'true,true,false': 'companyalsoknownas(I, A), companyceo(I, J)', 'false': 'bankboughtbank(A, K), acquired(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.81, 2, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000339, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankboughtbank(A, E), bankchiefexecutiveceo(A, F)', 'false': 'bankchiefexecutiveceo(A, G)', 'false,false': 'acquired(H, A), acquired(A, H)', 'false,false,false': 'bankboughtbank(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.735, 1, 10], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.1, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,false': 'bankboughtbank(A, E), companyalsoknownas(F, E)', 'true,false,false': 'companyalsoknownas(G, H)', 'false': 'acquired(I, A), bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.81, 2, 10], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000293, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'bankchiefexecutiveceo(A, F)', 'true,true,false': 'companyalsoknownas(C, E), acquired(E, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.032, 0, 9], 'true,true,false,false': [0.583, 2, 1], 'true,false': [0.0, 0, 0], 'false': [0.000275, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), acquired(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false,true,false': 'acquired(A, H), bankchiefexecutiveceo(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.746, 2, 10], 'false,false': [0.000259, 8, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [nan, 0.0826446280991734], 'true,false': [nan, 0.0826446280991734], 'true,false,false': [nan, 0.0826446280991734], 'false': [nan, -9.25185853854297e-18]}, {'': [0.08264462809917372, 0.0], 'true': [nan, 0.08264462809917372], 'true,false': [0.0, 0.09000000000000012], 'true,false,false': [nan, 0.09000000000000012], 'false': [nan, 0.0], 'true,false,true': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.10449247451677628, -1.734723475976807e-18], 'true': [0.08956769564457634, 0.12598118777141393], 'true,false': [nan, 0.12598118777141393], 'true,false,false': [nan, 0.12598118777141393], 'true,true': [nan, 0.08956769564457634], 'true,true,false': [5.8150733775056786e-05, 0.0], 'false': [nan, -1.734723475976807e-18]}, {'': [0.049352070024859425, 0.00013724688019039108], 'true': [0.05177127878584751, 0.0], 'true,true': [nan, 0.05177127878584751], 'true,true,false': [nan, 0.05177127878584751], 'false': [0.0, 0.00015199019739834535], 'true,false': [nan, 0.0], 'false,true': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.05726780927819377, 1.673304448820967e-08], 'true': [nan, 0.05726780927819375], 'true,false': [0.05726780927819377, nan], 'false': [nan, 1.673304448820967e-08]}, {'': [0.056256821867853, 1.4374540807660097e-08], 'true': [0.056256821867853, nan], 'true,true': [0.0, 0.06037317428854141], 'true,true,false': [0.0, 0.06554480424788708], 'false': [nan, 1.4374540807660097e-08], 'true,true,true': [nan, 0.0]}, {'': [0.04908129696780006, 0.0011077787323142223], 'true': [nan, 0.04908129696780006], 'false': [nan, 0.0011077787323142208], 'false,false': [nan, 0.0011077787323142223], 'false,false,false': [nan, 0.0011077787323142208]}, {'': [0.05462890914189181, 1.0698631001948566e-08], 'true': [nan, 0.05462890914189181], 'true,false': [nan, 0.05462890914189181], 'true,false,false': [0.05462890914189181, nan], 'false': [nan, 1.0698631001948566e-08]}, {'': [0.05558294702512282, 9.448557070426689e-09], 'true': [0.05558294702512282, nan], 'true,true': [nan, 0.05558294702512282], 'true,true,false': [0.000113386719279043, 0.11338028359048839]}, {'': [nan, 0.03369624150160376], 'false': [0.046411372273662786, 8.402167326476695e-09], 'false,true': [nan, 0.046411372273662786], 'false,true,false': [nan, 0.04641137227366279]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
1;true;companyalsoknownas(G, A), economicsectorcompany(H, G).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;companyalsoknownas(C, D).;true;true
2;true,true;acquired(D, F).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;false;acquired(M, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;acquired(A, F), acquired(F, G).;true;true
5;true,false;companyalsoknownas(I, A), companyceo(I, J).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;companyalsoknownas(C, E), acquired(E, G).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(E, A) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(E, A), economicsectorcompany(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.6390927739180474;  // std dev = 0.299, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(D, E) )
%   | | then return 0.593069913329527;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.39466175783519275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.24651093198560042;  // std dev = 0.507, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( acquired(F, A) )
%   | | then return 0.4214096381762554;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3496207911878134;  // std dev = 0.267, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5451882024430379;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(G, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10631425495886036;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.1982171473839923;  // std dev = 0.404, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.27985679102542227;  // std dev = 0.235, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.09234476400410527;  // std dev = 0.000370, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), acquired(D, E) )
%   | then return 0.2706004956281093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(F, A), companyceo(F, G) )
%   | | then return 0.27084906465850866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1897852226099117;  // std dev = 0.255, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.08489059252272171;  // std dev = 0.000343, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(E, A) )
%   | then return 0.22539304462382095;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18163721343926326;  // std dev = 0.258, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08942883320444818;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.18849037082786899;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11098967739060271;  // std dev = 0.265, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07229225563101042;  // std dev = 0.000296, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), acquired(D, E) )
%   | then if ( acquired(F, A) )
%   | | then return 0.16133882652804954;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.21802699774337864;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1638072689110087;  // std dev = 0.589, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.06759129834206425;  // std dev = 0.000279, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.0911935932212256;  // std dev = 0.323, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.09467031746114996;  // std dev = 0.222, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.0634540077207413;  // std dev = 0.000263, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.971571
   AUC PR    = 0.039701
   CLL	      = -0.149487
   Precision = 0.020932 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.040858


Total learning time: 1.196 seconds
Total inference time: 9.452 seconds
AUC ROC: 0.971571


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.16698
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.501 seconds
Refined model CLL: -0.16698


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.971571
   AUC PR    = 0.039701
   CLL	      = -0.149487
   Precision = 0.020932 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.040858


Total learning time: 14.597 seconds
Total inference time: 9.452 seconds
AUC ROC: 0.971571
Total revision time: 14.597
Best scored revision CLL: -0.16698


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 01:58:00
{'AUC ROC': 0.971571, 'AUC PR': 0.039701, 'CLL': -0.149487, 'Precision': [0.020932, 0.5], 'Recall': 0.85, 'F1': 0.040858, 'Learning time': 14.597, 'Inference time': 9.452, 'parameter_10': {'AUC ROC': 0.970723, 'AUC PR': 0.031236, 'CLL': -0.147858, 'Precision': [0.020704, 0.5], 'Recall': 0.819231, 'F1': 0.040387, 'Learning time': 10.817, 'Inference time': 256.06}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, F), bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( acquired(J, A), acquired(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(A, E), companyalsoknownas(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(H, G) )
%   | | then if ( companyalsoknownas(C, A), bankchiefexecutiveceo(A, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7319131893798131;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6652465227131465;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( bankboughtbank(K, A), acquired(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(D, F) )
%   | | | then return 0.5827205516444967;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.41602701085837773;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), acquired(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3518765333632128;  // std dev = 0.569, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( bankboughtbank(A, I), acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3840061983055892;  // std dev = 0.730, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( acquired(J, A) )
%   | | then return 0.4968070456098076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(K, A), companyalsoknownas(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4968070456098076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(M, A) )
%   | then if ( bankboughtbank(N, A), bankboughtbank(N, M) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10550908451861425;  // std dev = 0.049, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(F, D) )
%   | | then return 0.27721594898281127;  // std dev = 0.852, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(G, A), bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09238801113864373;  // std dev = 0.000316, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( acquired(A, F), acquired(F, G) )
%   | | then if ( bankboughtbank(G, A), companyalsoknownas(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28805727030850603;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyalsoknownas(I, A), companyceo(I, J) )
%   | | | then return 0.27458066061668296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20383936266804262;  // std dev = 0.838, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), acquired(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08492731357545372;  // std dev = 0.000293, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankboughtbank(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19900971573769702;  // std dev = 0.752, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return -0.07853383624739613;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(H, A), acquired(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08847850828025138;  // std dev = 0.124, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, E), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(G, H) )
%   | | | then return 0.14202172612866198;  // std dev = 0.839, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(I, A), bankboughtbank(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07243684752675596;  // std dev = 0.000672, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, E), acquired(E, G) )
%   | | | then return 0.18654563481628994;  // std dev = 0.024, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.10239364166671575;  // std dev = 0.682, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06771804684029213;  // std dev = 0.000631, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), acquired(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10265866697926052;  // std dev = 0.800, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return -0.06356598300580915;  // std dev = 0.000595, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.970568
   AUC PR    = 0.036988
   CLL	      = -0.158219
   Precision = 0.020698 at threshold = 0.5
   Recall    = 0.819231
   F1        = 0.040375


Total learning time: 15.113 seconds
Total inference time: 260.145 seconds
AUC ROC: 0.970568


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.150667
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 2.555 seconds
Parameter learned model CLL: -0.150667


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), bankboughtbank(A, G)', 'true,false,false': 'companyalsoknownas(C, H), bankchiefexecutiveceo(A, I)', 'false': 'acquired(J, A), acquired(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.968, 1, 15], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'acquired(A, E), companyalsoknownas(F, E)', 'true,false': 'companyalsoknownas(G, A), economicsectorcompany(H, G)', 'true,false,true': 'companyalsoknownas(C, A), bankchiefexecutiveceo(A, D)', 'true,false,false': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(K, A), acquired(L, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.966, 1, 14], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [7.45e-09, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'bankchiefexecutiveceo(A, E)', 'true,true,false': 'acquired(D, F)', 'true,false': 'bankchiefexecutiveceo(A, G)', 'true,false,false': 'acquired(A, H), acquired(H, A)', 'false': 'bankboughtbank(A, I), acquired(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.016, 0, 13], 'true,true,false,false': [0.0, 1, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.569, 1, 2], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'bankboughtbank(A, F), companyalsoknownas(G, A)', 'true,true,false': 'bankchiefexecutiveceo(A, H), bankboughtbank(A, I)', 'true,false': 'acquired(J, A)', 'true,false,false': 'bankboughtbank(K, A), companyalsoknownas(L, K)', 'false': 'acquired(M, A)', 'false,true': 'bankboughtbank(N, A), bankboughtbank(N, M)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.73, 1, 13], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false': [0.049, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D), bankchiefexecutiveceo(A, E)', 'true,false': 'companyalsoknownas(F, D)', 'false': 'acquired(G, A), bankboughtbank(A, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.852, 2, 15], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000316, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'acquired(A, F), acquired(F, G)', 'true,true,true': 'bankboughtbank(G, A), companyalsoknownas(H, G)', 'true,true,false': 'companyalsoknownas(I, A), companyceo(I, J)', 'false': 'bankboughtbank(A, K), acquired(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.838, 2, 12], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000293, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankboughtbank(A, E), bankchiefexecutiveceo(A, F)', 'false': 'bankchiefexecutiveceo(A, G)', 'false,false': 'acquired(H, A), acquired(A, H)', 'false,false,false': 'bankboughtbank(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.752, 1, 15], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.124, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,false': 'bankboughtbank(A, E), companyalsoknownas(F, E)', 'true,false,false': 'companyalsoknownas(G, H)', 'false': 'acquired(I, A), bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.839, 2, 15], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000672, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'bankchiefexecutiveceo(A, F)', 'true,true,false': 'companyalsoknownas(C, E), acquired(E, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.024, 0, 13], 'true,true,false,false': [0.682, 2, 2], 'true,false': [0.0, 0, 0], 'false': [0.000631, 13, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), acquired(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false,true,false': 'acquired(A, H), bankchiefexecutiveceo(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.8, 2, 15], 'false,false': [0.000595, 13, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [nan, 0.05859374999999978], 'true,false': [nan, 0.05859374999999978], 'true,false,false': [nan, 0.05859374999999978], 'false': [nan, -1.1895246692412391e-17]}, {'': [0.05859375, 3.96508223080413e-18], 'true': [nan, 0.05859375000000017], 'true,false': [0.0, 0.0622222222222223], 'true,false,false': [nan, 0.0622222222222223], 'false': [0.0, 4.270088556250602e-18], 'false,false': [nan, 4.270088556250602e-18], 'true,false,true': [nan, 0.0]}, {'': [0.07720943938149084, 8.540177112501205e-18], 'true': [0.06617797366622938, 0.10773752956979844], 'true,false': [nan, 0.10773752956979844], 'true,false,false': [nan, 0.10773752956979844], 'true,true': [nan, 0.06617797366622938], 'true,true,false': [1.8823196210604465e-05, 0.0], 'false': [nan, 8.540177112501205e-18]}, {'': [0.03473844144525473, 0.00017160870047009828], 'true': [0.03811057204336531, 0.0], 'true,true': [nan, 0.03811057204336531], 'true,true,false': [nan, 0.03811057204336531], 'false': [0.0, 0.0001837158231705327], 'true,false': [0.0, 0.0], 'false,true': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.04270365397888784, 7.664140911655382e-09], 'true': [nan, 0.04270365397888787], 'true,false': [0.04270365397888784, nan], 'false': [nan, 7.66414091592547e-09]}, {'': [0.04221835252207007, 6.5835362834409086e-09], 'true': [0.04221835252207007, nan], 'true,true': [0.0, 0.04710387330228008], 'true,true,false': [0.0, 0.05013481359865048], 'false': [nan, 6.5835362834409086e-09], 'true,true,true': [nan, 0.0]}, {'': [0.03531499555505098, 0.0011033224803464828], 'true': [nan, 0.03531499555505098], 'false': [0.0, 0.0011811294045273452], 'false,false': [nan, 0.001181129404527342], 'false,false,false': [nan, 0.0011811294045273452]}, {'': [0.04145278695116262, 3.474167703841304e-08], 'true': [nan, 0.04145278695116262], 'true,false': [nan, 0.04145278695116262], 'true,false,false': [0.04145278695116262, nan], 'false': [nan, 3.474167703734552e-08]}, {'': [0.04242861471225575, 3.067449785949698e-08], 'true': [0.04242861471225575, nan], 'true,true': [nan, 0.04242861471225575], 'true,true,false': [4.3835728752546105e-05, 0.11633698338341784]}, {'': [nan, 0.028104269887265842], 'false': [0.03762247468771612, 2.7271170320906602e-08], 'false,true': [nan, 0.03762247468771612], 'false,true,false': [nan, 0.037622474687716116]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
1;true;companyalsoknownas(G, A), economicsectorcompany(H, G).;true;true
1;false;bankchiefexecutiveceo(A, J).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;companyalsoknownas(C, D).;true;true
2;true,true;acquired(D, F).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;true,false;acquired(J, A).;true;true
3;false;acquired(M, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;acquired(A, F), acquired(F, G).;true;true
5;true,false;companyalsoknownas(I, A), companyceo(I, J).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
6;false;bankchiefexecutiveceo(A, G).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;companyalsoknownas(C, E), acquired(E, G).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(E, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7672398441904213;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(E, A), economicsectorcompany(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6465415686654066;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( bankchiefexecutiveceo(A, H) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( acquired(D, E) )
%   | | then if ( acquired(F, A) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5953720706736498;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.40462792932635017;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.34614070974210936;  // std dev = 0.562, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360636;  // std dev = 2.95e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( acquired(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3719125778856377;  // std dev = 0.228, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( acquired(G, A) )
%   | | then return 0.46909866940223544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5100181284296532;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(H, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10545218514177766;  // std dev = 0.013, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.2774251426772332;  // std dev = 0.205, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.09239241429996287;  // std dev = 8.63e-05, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), acquired(D, E) )
%   | then return 0.2634860966453879;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, A), companyceo(F, G) )
%   | | then return 0.2634860966453879;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20850587481011873;  // std dev = 0.223, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.08493105221469656;  // std dev = 8.00e-05, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then return 0.19939791592190617;  // std dev = 0.186, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( bankchiefexecutiveceo(A, E) )
%   | then return -0.07853736472397078;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.08847128938393041;  // std dev = 0.034, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.19228999131693486;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12158030697244147;  // std dev = 0.237, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07244025788370342;  // std dev = 0.000186, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), acquired(D, E) )
%   | then return 0.1870557073387691;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.10093321948258782;  // std dev = 0.665, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06772103592980926;  // std dev = 0.000175, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.07659090571152602;  // std dev = 0.326, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( acquired(E, A) )
%   | | then return 0.15874336962169186;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0972231443152989;  // std dev = 0.223, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.063568623375683;  // std dev = 0.000165, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.97134
   AUC PR    = 0.03788
   CLL	      = -0.158274
   Precision = 0.020932 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.040858


Total learning time: 1.309 seconds
Total inference time: 9.852 seconds
AUC ROC: 0.97134


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.148598
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.554 seconds
Refined model CLL: -0.148598


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97134
   AUC PR    = 0.03788
   CLL	      = -0.158274
   Precision = 0.020932 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.040858


Total learning time: 19.531 seconds
Total inference time: 9.852 seconds
AUC ROC: 0.97134
Total revision time: 19.531
Best scored revision CLL: -0.148598


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 02:02:50
{'AUC ROC': 0.97134, 'AUC PR': 0.03788, 'CLL': -0.158274, 'Precision': [0.020932, 0.5], 'Recall': 0.85, 'F1': 0.040858, 'Learning time': 19.531, 'Inference time': 9.852, 'parameter_15': {'AUC ROC': 0.970568, 'AUC PR': 0.036988, 'CLL': -0.158219, 'Precision': [0.020698, 0.5], 'Recall': 0.819231, 'F1': 0.040375, 'Learning time': 15.113, 'Inference time': 260.145}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, F), bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( acquired(J, A), acquired(K, J) )
%   | then if ( bankboughtbank(A, L), companyalsoknownas(M, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(A, E), companyalsoknownas(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(H, G) )
%   | | then if ( companyalsoknownas(C, A), bankchiefexecutiveceo(A, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7294533872440254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6789543884923717;  // std dev = 0.974, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( bankboughtbank(K, A), acquired(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.5653482252314954;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(D, F) )
%   | | | then return 0.5768647051415147;  // std dev = 0.012, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.42240785094133493;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), acquired(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3476226399745746;  // std dev = 0.563, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( bankboughtbank(A, I), acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3933246196270155;  // std dev = 0.737, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( acquired(J, A) )
%   | | then return 0.49131938141529063;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(K, A), companyalsoknownas(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.49131938141529063;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(M, A) )
%   | then if ( bankboughtbank(N, A), bankboughtbank(N, M) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10455615010272415;  // std dev = 0.049, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0.3327493700105487;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(F, D) )
%   | | then return 0.2847752057330422;  // std dev = 0.859, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(G, A), bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0924702807827286;  // std dev = 0.000331, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( acquired(A, F), acquired(F, G) )
%   | | then if ( bankboughtbank(G, A), companyalsoknownas(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2804828350000048;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyalsoknownas(I, A), companyceo(I, J) )
%   | | | then return 0.27040537438991386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21806545809334785;  // std dev = 0.851, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), acquired(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08499716315998768;  // std dev = 0.000307, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankboughtbank(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20124779500420975;  // std dev = 0.761, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return -0.0785918078209747;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(H, A), acquired(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08594873929793127;  // std dev = 0.128, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, E), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(G, H) )
%   | | | then return 0.14948293581425506;  // std dev = 0.852, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(I, A), bankboughtbank(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07263870313148894;  // std dev = 0.000531, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then if ( bankchiefexecutiveceo(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16835627334004333;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(C, E), acquired(E, G) )
%   | | | then return 0.1788778957915912;  // std dev = 0.018, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1110954590692467;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06789493867636864;  // std dev = 0.000499, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), acquired(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0.1460806355579397;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10747943830783688;  // std dev = 0.811, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else return -0.06372221482021588;  // std dev = 0.000470, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.971056
   AUC PR    = 0.033626
   CLL	      = -0.16204
   Precision = 0.020905 at threshold = 0.5
   Recall    = 0.846154
   F1        = 0.040801


Total learning time: 20.485 seconds
Total inference time: 305.313 seconds
AUC ROC: 0.971056


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.137675
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 3.818 seconds
Parameter learned model CLL: -0.137675


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), bankboughtbank(A, G)', 'true,false,false': 'companyalsoknownas(C, H), bankchiefexecutiveceo(A, I)', 'false': 'acquired(J, A), acquired(K, J)', 'false,true': 'bankboughtbank(A, L), companyalsoknownas(M, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.975, 1, 19], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false': [0.0, 18, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'acquired(A, E), companyalsoknownas(F, E)', 'true,false': 'companyalsoknownas(G, A), economicsectorcompany(H, G)', 'true,false,true': 'companyalsoknownas(C, A), bankchiefexecutiveceo(A, D)', 'true,false,false': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(K, A), acquired(L, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.974, 1, 19], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 18, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'bankchiefexecutiveceo(A, E)', 'true,true,false': 'acquired(D, F)', 'true,false': 'bankchiefexecutiveceo(A, G)', 'true,false,false': 'acquired(A, H), acquired(H, A)', 'false': 'bankboughtbank(A, I), acquired(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.012, 0, 17], 'true,true,false,false': [0.0, 1, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.563, 1, 2], 'false,true': [0.0, 0, 0], 'false,false': [1.67e-08, 18, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'bankboughtbank(A, F), companyalsoknownas(G, A)', 'true,true,false': 'bankchiefexecutiveceo(A, H), bankboughtbank(A, I)', 'true,false': 'acquired(J, A)', 'true,false,false': 'bankboughtbank(K, A), companyalsoknownas(L, K)', 'false': 'acquired(M, A)', 'false,true': 'bankboughtbank(N, A), bankboughtbank(N, M)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.737, 1, 18], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [0.049, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D), bankchiefexecutiveceo(A, E)', 'true,false': 'companyalsoknownas(F, D)', 'false': 'acquired(G, A), bankboughtbank(A, H)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.859, 2, 19], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000331, 18, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'acquired(A, F), acquired(F, G)', 'true,true,true': 'bankboughtbank(G, A), companyalsoknownas(H, G)', 'true,true,false': 'companyalsoknownas(I, A), companyceo(I, J)', 'false': 'bankboughtbank(A, K), acquired(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.851, 2, 17], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000307, 18, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankboughtbank(A, E), bankchiefexecutiveceo(A, F)', 'false': 'bankchiefexecutiveceo(A, G)', 'false,false': 'acquired(H, A), acquired(A, H)', 'false,false,false': 'bankboughtbank(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.761, 1, 20], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.128, 18, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,false': 'bankboughtbank(A, E), companyalsoknownas(F, E)', 'true,false,false': 'companyalsoknownas(G, H)', 'false': 'acquired(I, A), bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.852, 2, 20], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000531, 18, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'bankchiefexecutiveceo(A, F)', 'true,true,true': 'bankchiefexecutiveceo(E, F)', 'true,true,false': 'companyalsoknownas(C, E), acquired(E, G)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.018, 0, 17], 'true,true,false,false': [0.687, 2, 2], 'true,false': [0.0, 0, 0], 'false': [0.000499, 18, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), acquired(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false,true,false': 'acquired(A, H), bankchiefexecutiveceo(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.811, 2, 19], 'false,false': [0.00047, 18, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true': [nan, 0.04535147392290242], 'true,false': [nan, 0.04535147392290242], 'true,false,false': [0.0, 0.047499999999999785], 'false': [0.0, -3.0839528461809902e-18], 'false,true': [nan, 0.0]}, {'': [0.04531073026749942, 0.0], 'true': [nan, 0.045310730267499336], 'true,false': [0.0, 0.04745483112016391], 'true,false,false': [nan, 0.04745483112016391], 'false': [0.0, 0.0], 'true,false,true': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.06102997989933941, 1.5419764230904953e-17], 'true': [0.049739411195758323, 0.10577195021675513], 'true,false': [nan, 0.10577195021675513], 'true,false,false': [nan, 0.10577195021675513], 'true,true': [0.0, 0.052400823277423125], 'true,true,false': [8.46679444155285e-06, 0.0], 'false': [nan, 1.5419764230904953e-17]}, {'': [0.026703871293897525, 0.0001262391109478666], 'true': [0.02860023622498005, 0.0], 'true,true': [nan, 0.02860023622498005], 'true,true,false': [nan, 0.02860023622498005], 'false': [0.0, 0.0001401686091570346], 'true,false': [0.0, 0.0], 'false,true': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.033643108126730305, 6.104871211948865e-09], 'true': [0.0, 0.03514054632930054], 'true,false': [0.03514054632930052, nan], 'false': [nan, 6.104871213490842e-09]}, {'': [0.033310743109755236, 5.243474227343034e-09], 'true': [0.033310743109755236, nan], 'true,true': [0.0, 0.03631671873175549], 'true,true,false': [0.0, 0.03809115163889867], 'false': [nan, 5.243474227343034e-09], 'true,true,true': [nan, 0.0]}, {'': [0.027578569516898584, 0.0008684187264630792], 'true': [nan, 0.027578569516898584], 'false': [0.0, 0.0009138155564899173], 'false,false': [nan, 0.0009138155564899173], 'false,false,false': [nan, 0.0009138155564899173]}, {'': [0.03302218441520417, 1.5658774220174266e-08], 'true': [nan, 0.03302218441520417], 'true,false': [nan, 0.03302218441520417], 'true,false,false': [0.03302218441520417, nan], 'false': [nan, 1.5658774221716243e-08]}, {'': [0.03390145995956579, 1.382129168444848e-08], 'true': [0.03390145995956579, nan], 'true,true': [0.0, 0.035424946601718986], 'true,true,false': [1.8697314856936802e-05, 0.11783306364244268], 'true,true,true': [nan, 0.0]}, {'': [nan, 0.02387430840190256], 'false': [0.029946583953362485, 1.228437985130911e-08], 'false,true': [nan, 0.029946583953362485], 'false,true,false': [0.0, 0.031304882104795394]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
0;true;companyalsoknownas(C, H), bankchiefexecutiveceo(A, I).;true;true
0;false;acquired(J, A), acquired(K, J).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
1;true;companyalsoknownas(G, A), economicsectorcompany(H, G).;true;true
1;false;bankchiefexecutiveceo(A, J).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;companyalsoknownas(C, D).;true;true
2;true,true;bankchiefexecutiveceo(A, E).;true;true
2;true,true,false;acquired(D, F).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;true,false;acquired(J, A).;true;true
3;false;acquired(M, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;companyalsoknownas(C, D), bankchiefexecutiveceo(A, E).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;acquired(A, F), acquired(F, G).;true;true
5;true,false;companyalsoknownas(I, A), companyceo(I, J).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
6;false;bankchiefexecutiveceo(A, G).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;bankchiefexecutiveceo(A, F).;true;true
8;true,false;companyalsoknownas(C, E), acquired(E, G).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;acquired(A, H), bankchiefexecutiveceo(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E), bankchiefexecutiveceo(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7914822684328456;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( acquired(H, A), acquired(I, H) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(E, A), economicsectorcompany(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6660633000779167;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( bankchiefexecutiveceo(A, H) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(D, F) )
%   | | | then return 0.5778642164571252;  // std dev = 0.051, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.41521338978569294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.34261222292232846;  // std dev = 0.558, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360635;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( acquired(A, F) )
%   | | then return 0.42075914683657334;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3867977652786384;  // std dev = 0.189, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( acquired(G, A) )
%   | | then return 0.46997751669576315;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4999605521418091;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(H, A) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10451824451139204;  // std dev = 0.012, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0.32000519445703246;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(F, A) )
%   | | then return 0.32637100298434885;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.19615300178370434;  // std dev = 0.410, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.29041114828164;  // std dev = 0.727, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.0924731076404772;  // std dev = 7.71e-05, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), acquired(D, E) )
%   | then return 0.24924992223726283;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, A), companyceo(F, G) )
%   | | then return 0.2556588869339851;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.15844602390017196;  // std dev = 0.395, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23417421710372724;  // std dev = 0.739, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.08499956308767284;  // std dev = 7.15e-05, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then return 0.20040325288333646;  // std dev = 0.167, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( bankchiefexecutiveceo(A, E) )
%   | then return -0.07859417429372267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.08459826177707207;  // std dev = 0.025, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.18284935340049843;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.10667864241758478;  // std dev = 0.344, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14483290432802012;  // std dev = 0.211, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07272655164742675;  // std dev = 0.000107, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankchiefexecutiveceo(A, D) )
%   | then return 0.1556207284056923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(C, E), acquired(E, F) )
%   | | then if ( acquired(G, A) )
%   | | | then return 0.1524098080964556;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18578932342090754;  // std dev = 0.033, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.09901958110626886;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06797190482720432;  // std dev = 0.000101, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), bankchiefexecutiveceo(A, E) )
%   | then return 0.13624897194539265;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F) )
%   | | then return 0.13866197919436732;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.15475261396482323;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09343102979737115;  // std dev = 0.795, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.06379017760992628;  // std dev = 9.49e-05, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.971733
   AUC PR    = 0.032995
   CLL	      = -0.162418
   Precision = 0.020932 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.040858


Total learning time: 1.681 seconds
Total inference time: 11.902 seconds
AUC ROC: 0.971733


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.136191
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.664 seconds
Refined model CLL: -0.136191


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.971733
   AUC PR    = 0.032995
   CLL	      = -0.162418
   Precision = 0.020932 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.040858


Total learning time: 26.648000000000003 seconds
Total inference time: 11.902 seconds
AUC ROC: 0.971733
Total revision time: 26.648000000000003
Best scored revision CLL: -0.136191


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 02:08:34
{'AUC ROC': 0.971733, 'AUC PR': 0.032995, 'CLL': -0.162418, 'Precision': [0.020932, 0.5], 'Recall': 0.85, 'F1': 0.040858, 'Learning time': 26.648000000000003, 'Inference time': 11.902, 'parameter_20': {'AUC ROC': 0.971056, 'AUC PR': 0.033626, 'CLL': -0.16204, 'Precision': [0.020905, 0.5], 'Recall': 0.846154, 'F1': 0.040801, 'Learning time': 20.485, 'Inference time': 305.313}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, F), bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.818148935099512;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( acquired(J, A), acquired(K, J) )
%   | then if ( bankboughtbank(A, L), companyalsoknownas(M, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(A, E), companyalsoknownas(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(H, G) )
%   | | then if ( companyalsoknownas(C, A), bankchiefexecutiveceo(A, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7274753536316645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6871552759748362;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( bankboughtbank(K, A), acquired(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.5633319551072151;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(D, F) )
%   | | | then return 0.5726742953011454;  // std dev = 0.010, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.07314534917076465;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), acquired(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34465810671597435;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( bankboughtbank(A, I), acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39751747102340274;  // std dev = 0.870, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( acquired(J, A) )
%   | | then return 0.4592307299286824;  // std dev = 0.040, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( bankboughtbank(K, A), companyalsoknownas(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48751201818724865;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(M, A) )
%   | then if ( bankboughtbank(N, A), bankboughtbank(N, M) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10386612071179484;  // std dev = 0.049, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0.33044930212925694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(F, D) )
%   | | then return 0.29145206942610463;  // std dev = 0.982, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(G, A), bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09251714770847441;  // std dev = 0.000258, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( acquired(A, F), acquired(F, G) )
%   | | then if ( bankboughtbank(G, A), companyalsoknownas(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2754892389777447;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyalsoknownas(I, A), companyceo(I, J) )
%   | | | then return 0.2675148234197733;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22564271850791195;  // std dev = 0.976, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), acquired(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08503695054018015;  // std dev = 0.000239, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankboughtbank(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20213058332364414;  // std dev = 0.893, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return -0.078635512420871;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( acquired(H, A), acquired(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08447375035146172;  // std dev = 0.131, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, E), companyalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(G, H) )
%   | | | then return 0.15373377432397067;  // std dev = 0.969, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(I, A), bankboughtbank(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0727594585888017;  // std dev = 0.000426, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then if ( bankchiefexecutiveceo(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16546568710843657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(C, E), acquired(E, G) )
%   | | | then return 0.17366699149484374;  // std dev = 0.016, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.06174361758177741;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06800073238327906;  // std dev = 0.000400, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), acquired(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0.14386216858383383;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11149403125249178;  // std dev = 0.942, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return -0.06381563061925082;  // std dev = 0.000377, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.971075
   AUC PR    = 0.031873
   CLL	      = -0.169431
   Precision = 0.020839 at threshold = 0.5
   Recall    = 0.846154
   F1        = 0.040677


Total learning time: 25.198 seconds
Total inference time: 303.305 seconds
AUC ROC: 0.971075


Results scoring model
   AUC ROC   = 0.9992
   AUC PR    = 0.999231
   CLL	      = -0.140106
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 4.526 seconds
Parameter learned model CLL: -0.140106


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), bankboughtbank(A, G)', 'true,false,false': 'companyalsoknownas(C, H), bankchiefexecutiveceo(A, I)', 'false': 'acquired(J, A), acquired(K, J)', 'false,true': 'bankboughtbank(A, L), companyalsoknownas(M, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.98, 1, 24], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false': [1.49e-08, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'acquired(A, E), companyalsoknownas(F, E)', 'true,false': 'companyalsoknownas(G, A), economicsectorcompany(H, G)', 'true,false,true': 'companyalsoknownas(C, A), bankchiefexecutiveceo(A, D)', 'true,false,false': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(K, A), acquired(L, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.98, 1, 24], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'bankchiefexecutiveceo(A, E)', 'true,true,false': 'acquired(D, F)', 'true,false': 'bankchiefexecutiveceo(A, G)', 'true,false,false': 'acquired(A, H), acquired(H, A)', 'false': 'bankboughtbank(A, I), acquired(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.01, 0, 21], 'true,true,false,false': [0.707, 1, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.56, 1, 2], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'bankboughtbank(A, F), companyalsoknownas(G, A)', 'true,true,false': 'bankchiefexecutiveceo(A, H), bankboughtbank(A, I)', 'true,false': 'acquired(J, A)', 'true,false,false': 'bankboughtbank(K, A), companyalsoknownas(L, K)', 'false': 'acquired(M, A)', 'false,true': 'bankboughtbank(N, A), bankboughtbank(N, M)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.87, 1, 22], 'true,false,true': [0.04, 0, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [0.049, 22, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D), bankchiefexecutiveceo(A, E)', 'true,false': 'companyalsoknownas(F, D)', 'false': 'acquired(G, A), bankboughtbank(A, H)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.982, 2, 24], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000258, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'acquired(A, F), acquired(F, G)', 'true,true,true': 'bankboughtbank(G, A), companyalsoknownas(H, G)', 'true,true,false': 'companyalsoknownas(I, A), companyceo(I, J)', 'false': 'bankboughtbank(A, K), acquired(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.976, 2, 22], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000239, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankboughtbank(A, E), bankchiefexecutiveceo(A, F)', 'false': 'bankchiefexecutiveceo(A, G)', 'false,false': 'acquired(H, A), acquired(A, H)', 'false,false,false': 'bankboughtbank(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.893, 1, 25], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.131, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,false': 'bankboughtbank(A, E), companyalsoknownas(F, E)', 'true,false,false': 'companyalsoknownas(G, H)', 'false': 'acquired(I, A), bankboughtbank(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.969, 2, 25], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000426, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'bankchiefexecutiveceo(A, F)', 'true,true,true': 'bankchiefexecutiveceo(E, F)', 'true,true,false': 'companyalsoknownas(C, E), acquired(E, G)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.016, 0, 21], 'true,true,false,false': [0.852, 2, 3], 'true,false': [0.0, 0, 0], 'false': [0.0004, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), acquired(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), companyalsoknownas(G, F)', 'false,true,false': 'acquired(A, H), bankchiefexecutiveceo(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.942, 2, 24], 'false,false': [0.000377, 23, 0]}]]
[{'': [0.03698224852071082, 9.25185853854297e-18], 'true': [nan, 0.03698224852071082], 'true,false': [nan, 0.03698224852071082], 'true,false,false': [0.0, 0.03840000000000018], 'false': [0.0, 9.654113257610057e-18], 'false,true': [nan, 0.0]}, {'': [0.036960942150623226, -4.625929269271485e-18], 'true': [nan, 0.036960942150622886], 'true,false': [0.0, 0.03837685258040764], 'true,false,false': [nan, 0.03837685258040743], 'true,false,true': [nan, 0.0], 'false': [0.0, -2.413528314402514e-18], 'false,false': [nan, -2.413528314402514e-18]}, {'': [0.05045789702301345, 4.827056628805028e-18], 'true': [0.039869549320755704, 0.1044128399291883], 'true,false': [nan, 0.1044128399291883], 'true,false,false': [nan, 0.1044128399291883], 'true,true': [0.0, 0.041554571892657474], 'true,true,false': [4.437834961523195e-06, 0.25], 'false': [nan, 4.827056628805028e-18]}, {'': [0.029709326216111887, 9.956863176110303e-05], 'true': [0.032907765881057406, 0.0007109611249458414], 'true,true': [nan, 0.032907765881057406], 'true,true,false': [nan, 0.03290776588105727], 'true,false': [0.0007998312655640993, 0.0], 'false': [0.0, 0.00010819099620753987], 'true,false,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [0.0358017899368978, 2.8876883613772873e-09], 'true': [0.0, 0.03712245651834388], 'true,false': [0.037122456518343894, nan], 'false': [nan, 2.887688363790816e-09]}, {'': [0.035491057814618275, 2.4800683680627753e-09], 'true': [0.035491057814618275, nan], 'true,true': [0.0, 0.038158453066361585], 'true,true,false': [0.0, 0.03967825768400335], 'false': [nan, 2.4800683680627753e-09], 'true,true,true': [nan, 0.0]}, {'': [0.03065009261793268, 0.000716309774018291], 'true': [nan, 0.03065009261793268], 'false': [0.0, 0.0007460334679808857], 'false,false': [nan, 0.0007460334679808857], 'false,false,false': [nan, 0.0007460334679808857]}, {'': [0.03478532290512672, 7.885920321941589e-09], 'true': [nan, 0.03478532290512672], 'true,false': [nan, 0.03478532290512672], 'true,false,false': [0.03478532290512672, nan], 'false': [nan, 7.885920320131443e-09]}, {'': [0.035228645945138144, 6.959280459273781e-09], 'true': [0.035228645945138144, nan], 'true,true': [0.0, 0.036532698220809665], 'true,true,false': [1.2103262648068719e-05, 0.14515837965345996], 'true,true,true': [nan, 0.0]}, {'': [nan, 0.02550799356209026], 'false': [0.03290560754340514, 6.184408915532735e-09], 'false,true': [nan, 0.03290560754340514], 'false,true,false': [0.0, 0.03413240426633979]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
0;true;companyalsoknownas(C, H), bankchiefexecutiveceo(A, I).;true;true
0;false;acquired(J, A), acquired(K, J).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
1;true;companyalsoknownas(G, A), economicsectorcompany(H, G).;true;true
1;false;bankchiefexecutiveceo(A, J).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;companyalsoknownas(C, D).;true;true
2;true,true;bankchiefexecutiveceo(A, E).;true;true
2;true,true,false;acquired(D, F).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;true,false;acquired(J, A).;true;true
3;false;acquired(M, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;companyalsoknownas(C, D), bankchiefexecutiveceo(A, E).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;acquired(A, F), acquired(F, G).;true;true
5;true,false;companyalsoknownas(I, A), companyceo(I, J).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
6;false;bankchiefexecutiveceo(A, G).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;bankchiefexecutiveceo(A, F).;true;true
8;true,false;companyalsoknownas(C, E), acquired(E, G).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;acquired(A, H), bankchiefexecutiveceo(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E), bankchiefexecutiveceo(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.8025933795439567;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( acquired(H, A), acquired(I, H) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(E, A), economicsectorcompany(F, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, A) )
%   | | then if ( companyceo(G, H) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6749928282743806;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( bankchiefexecutiveceo(A, I) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(D, F) )
%   | | | then return 0.5728992668568017;  // std dev = 0.051, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.07991239890100876;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.3409874858178956;  // std dev = 0.555, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360638;  // std dev = 2.28e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( acquired(A, F) )
%   | | then return 0.44841189088045696;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(G, A) )
%   | | | then return 0.41325593672345273;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37921240919800164;  // std dev = 0.848, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( acquired(H, A) )
%   | | then return 0.44181909644647427;  // std dev = 0.040, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.49535671007783144;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(I, A) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then return -0.11808435584793908;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0.3140180870843814;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.2552043480339648;  // std dev = 0.432, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( companyceo(A, G) )
%   | | | then return 0.37665946419603696;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2904929233149948;  // std dev = 0.851, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else return -0.09257150615903928;  // std dev = 0.000388, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), acquired(D, E) )
%   | then return 0.2550788062436105;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, A), companyceo(F, G) )
%   | | then return 0.26522576171701195;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.1761392191645852;  // std dev = 0.401, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23777069069381468;  // std dev = 0.870, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return -0.0850831067140064;  // std dev = 0.000360, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then return 0.23974876230525127;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1925181258319103;  // std dev = 0.192, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( bankchiefexecutiveceo(A, F) )
%   | then return -0.0787928245113532;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.08377472798236629;  // std dev = 0.024, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.15397241253157412;  // std dev = 0.184, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else return -0.07284107401901355;  // std dev = 0.000324, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankchiefexecutiveceo(A, D) )
%   | then return 0.15713784799117192;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(C, E), acquired(E, F) )
%   | | then if ( acquired(G, A) )
%   | | | then return 0.1577870885214359;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1815918718464775;  // std dev = 0.013, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.06319637547193624;  // std dev = 0.832, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( companyceo(A, H) )
%   | then return -0.06825453392659168;  // std dev = 0.000259, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06804488496154557;  // std dev = 0.000312, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), bankchiefexecutiveceo(A, E) )
%   | then return 0.13742807598688056;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(F, A) )
%   | | then if ( companyceo(F, G) )
%   | | | then return 0.13565621273351539;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15235002736092898;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09957410353428565;  // std dev = 0.211, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( companyceo(A, H) )
%   | then return -0.06403967228197022;  // std dev = 0.000244, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06385461827045638;  // std dev = 0.000294, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.972026
   AUC PR    = 0.034026
   CLL	      = -0.169388
   Precision = 0.020932 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.040858


Total learning time: 1.848 seconds
Total inference time: 13.098 seconds
AUC ROC: 0.972026


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.138339
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.648 seconds
Refined model CLL: -0.138339


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.972026
   AUC PR    = 0.034026
   CLL	      = -0.169388
   Precision = 0.020932 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.040858


Total learning time: 32.22 seconds
Total inference time: 13.098 seconds
AUC ROC: 0.972026
Total revision time: 32.22
Best scored revision CLL: -0.138339


Dataset: 9_nell_sports_nell_finances, Fold: 1, Type: Transfer (trRDN-B), Time: 02:14:24
{'AUC ROC': 0.972026, 'AUC PR': 0.034026, 'CLL': -0.169388, 'Precision': [0.020932, 0.5], 'Recall': 0.85, 'F1': 0.040858, 'Learning time': 32.22, 'Inference time': 13.098, 'parameter_25': {'AUC ROC': 0.971075, 'AUC PR': 0.031873, 'CLL': -0.169431, 'Precision': [0.020839, 0.5], 'Recall': 0.846154, 'F1': 0.040677, 'Learning time': 25.198, 'Inference time': 303.305}}


Starting fold 2

Target train facts examples: 5307
Target train pos examples: 518
Target train neg examples: 366436

Target test facts examples: 5307
Target test pos	 examples: 260
Target test neg examples: 183219

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A), bankboughtbank(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E), companyalsoknownas(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(J, A), bankboughtbank(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, F), bankboughtbank(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( acquired(A, F), companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(E, A), acquired(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), countryhascompanyoffice(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(A, J), bankboughtbank(K, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(A, E) )
%   | then if ( bankboughtbank(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(G, H) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( bankboughtbank(I, A), bankboughtbank(A, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then if ( companyalsoknownas(C, E), bankboughtbank(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(G, H) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, I), companyalsoknownas(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(K, L) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(M, A), acquired(A, N) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( companyalsoknownas(C, E), bankboughtbank(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), bankboughtbank(D, C) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, F) )
%   | then if ( acquired(A, G), companyalsoknownas(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.977642
   AUC PR    = 0.041557
   CLL	      = -0.122233
   Precision = 0.042039 at threshold = 0.5
   Recall    = 0.688462
   F1        = 0.079239


Total learning time: 4.84 seconds
Total inference time: 157.69400000000002 seconds
AUC ROC: 0.977642


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.26 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'false': 'bankboughtbank(F, A), bankboughtbank(G, F)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E), companyalsoknownas(F, E)', 'true,false': 'companyalsoknownas(G, A), economicsectorcompany(H, G)', 'true,false,false': 'companyalsoknownas(C, I)', 'false': 'acquired(J, A), bankboughtbank(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'bankboughtbank(D, E)', 'false': 'acquired(A, F), bankboughtbank(G, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'acquired(A, F), companyalsoknownas(G, A)', 'true,true,false': 'acquired(A, H)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'false': 'bankboughtbank(E, A), acquired(A, F)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'companyalsoknownas(H, A), countryhascompanyoffice(I, H)', 'false': 'acquired(A, J), bankboughtbank(K, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(A, E)', 'true,true': 'bankboughtbank(E, F)', 'true,true,false': 'countryhascompanyoffice(G, H)', 'false': 'bankboughtbank(I, A), bankboughtbank(A, I)', 'false,false': 'acquired(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(A, D)', 'true,true': 'companyalsoknownas(C, E), bankboughtbank(F, E)', 'true,true,false': 'countryhascompanyoffice(G, H)', 'true,false': 'acquired(A, I), companyalsoknownas(J, I)', 'true,false,false': 'companyalsoknownas(K, L)', 'false': 'bankboughtbank(M, A), acquired(A, N)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 3], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'companyalsoknownas(C, E), bankboughtbank(E, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'acquired(A, C), bankboughtbank(D, C)', 'true': 'economicsectorcompany(B, E)', 'false': 'economicsectorcompany(B, F)', 'false,true': 'acquired(A, G), companyalsoknownas(H, G)', 'false,true,false': 'bankboughtbank(A, I)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 4], 'false,false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'false': [nan, -2.7755575615628915e-18]}, {'': [0.0, 0.0], 'true': [nan, 0.0], 'false': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'false': [nan, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [nan, 2.2204460492503132e-17], 'true,true,false': [0.0, -3.700743415417188e-17], 'false': [nan, 0.0]}, {'': [-2.2204460492503132e-17, 0.0], 'false': [nan, 0.0], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'false': [nan, -1.3877787807814458e-18], 'false,false': [nan, -1.3877787807814458e-18], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,true,false': [0.0, nan], 'true,false,false': [0.0, nan], 'false': [nan, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [nan, 0.0]}, {'': [0.0, 0.009699454840732723], 'false': [0.0, 0.0], 'true': [0.0, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
3;true;acquired(A, H).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
6;true;acquired(A, E).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(D, C).;true;true
9;false;economicsectorcompany(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(A, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), bankboughtbank(D, C) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( economicsectorcompany(B, E) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.965765
   AUC PR    = 0.024406
   CLL	      = -0.165691
   Precision = 0.027271 at threshold = 0.5
   Recall    = 0.719231
   F1        = 0.05255


Total learning time: 0.708 seconds
Total inference time: 7.274 seconds
AUC ROC: 0.965765


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.444 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.977642
   AUC PR    = 0.041557
   CLL	      = -0.122233
   Precision = 0.042039 at threshold = 0.5
   Recall    = 0.688462
   F1        = 0.079239


Total learning time: 7.252 seconds
Total inference time: 157.69400000000002 seconds
AUC ROC: 0.977642
Total revision time: 7.252
Best scored revision CLL: -0.094637


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 02:17:18
{'AUC ROC': 0.977642, 'AUC PR': 0.041557, 'CLL': -0.122233, 'Precision': [0.042039, 0.5], 'Recall': 0.688462, 'F1': 0.079239, 'Learning time': 7.252, 'Inference time': 157.69400000000002, 'parameter_5': {'AUC ROC': 0.977642, 'AUC PR': 0.041557, 'CLL': -0.122233, 'Precision': [0.042039, 0.5], 'Recall': 0.688462, 'F1': 0.079239, 'Learning time': 4.84, 'Inference time': 157.69400000000002}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A), companyalsoknownas(G, F) )
%   | then if ( bankboughtbank(A, H), acquired(I, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then if ( acquired(C, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(C, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A), companyalsoknownas(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, F), companyalsoknownas(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(I, A) )
%   | then if ( bankboughtbank(J, A), bankboughtbank(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.283129745037476;  // std dev = 0.394, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(E, A), bankboughtbank(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A), countryhascompanyoffice(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22767279063561868;  // std dev = 0.364, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, J), companyalsoknownas(K, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then if ( companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(G, H) )
%   | | | then return 0.22074934207369767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22074934207369767;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(I, A), companyalsoknownas(A, I) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( bankboughtbank(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0871161430930104;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then if ( acquired(C, E), companyalsoknownas(F, E) )
%   | | then return 0.18511733806448838;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G), acquired(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, J) )
%   | | | then return 0.15310639001814488;  // std dev = 0.304, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A), bankboughtbank(A, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07280749914505685;  // std dev = 0.000704, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(C, E), companyalsoknownas(E, F) )
%   | | then return 0.16269233301577504;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.15388943812871886;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06804281816033927;  // std dev = 0.000661, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13825448532283946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11441128707700603;  // std dev = 0.263, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.06385279053287712;  // std dev = 0.000623, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.976551
   AUC PR    = 0.055498
   CLL	      = -0.103406
   Precision = 0.050392 at threshold = 0.5
   Recall    = 0.642308
   F1        = 0.093453


Total learning time: 7.524 seconds
Total inference time: 129.27 seconds
AUC ROC: 0.976551


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104517
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.61 seconds
Parameter learned model CLL: -0.104517


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'false': 'companyalsoknownas(F, A), companyalsoknownas(G, F)', 'false,true': 'bankboughtbank(A, H), acquired(I, G)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [0.0, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,true': 'acquired(C, A)', 'true,false,false': 'acquired(C, I)', 'false': 'bankboughtbank(J, A), companyalsoknownas(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 9], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.27e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'false': 'bankboughtbank(A, F), companyalsoknownas(G, A)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'true,true': 'bankboughtbank(A, F), acquired(G, A)', 'true,true,false': 'bankboughtbank(A, H)', 'false': 'companyalsoknownas(I, A)', 'false,true': 'bankboughtbank(J, A), bankboughtbank(J, I)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [3.33e-08, 0, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [3.73e-09, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'false': 'companyalsoknownas(E, A), bankboughtbank(A, F)'}, {'true,true': [0.394, 1, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,false': 'acquired(H, A), countryhascompanyoffice(I, H)', 'false': 'bankboughtbank(A, J), companyalsoknownas(K, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.364, 1, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.73e-09, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E)', 'true,true': 'companyalsoknownas(E, F)', 'true,true,false': 'countryhascompanyoffice(G, H)', 'false': 'companyalsoknownas(I, A), companyalsoknownas(A, I)', 'false,false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [7.45e-09, 0, 9], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.062, 8, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,true': 'acquired(C, E), companyalsoknownas(F, E)', 'true,false': 'bankboughtbank(A, G), acquired(H, G)', 'true,false,false': 'acquired(I, J)', 'false': 'companyalsoknownas(K, A), bankboughtbank(A, L)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.304, 1, 9], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.000704, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.004, 0, 10], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.000661, 9, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(G, F)', 'false,true,true': 'companyalsoknownas(H, A)', 'false,true,false': 'companyalsoknownas(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.263, 1, 9], 'false,false': [0.000623, 9, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'false': [0.0, -6.938893903907228e-18], 'false,true': [nan, 0.0], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [nan, 8.881784197001253e-17], 'true,false': [0.0, 0.0], 'false': [nan, 2.7755575615628915e-18], 'true,false,true': [nan, 0.0], 'true,false,false': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [0.036843003418682206, nan], 'true,true': [-1.7763568394002506e-16, 0.0], 'false': [nan, -1.5419764230904951e-18]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [nan, 1.3322676295501878e-16], 'true,true,false': [0.0, 1.2335811384723962e-16], 'false': [0.0, 1.734723475976807e-18], 'false,true': [nan, 0.0]}, {'': [0.014124143999590711, 0.0], 'true': [0.014124143999590711, nan], 'false': [nan, -1.5419764230904951e-18]}, {'': [0.012046285211492253, 1.5419764230904951e-18], 'true': [0.012046285211492253, nan], 'true,true': [nan, 0.012046285211492253], 'true,true,false': [nan, 0.012046285211492253], 'false': [nan, 1.5419764230904951e-18]}, {'': [1.1102230246251566e-17, 0.0004005814939252117], 'false': [0.0, 0.0004868177877563346], 'false,false': [nan, 0.0004868177877563346], 'true': [0.0, 6.1679056923619804e-18], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.00846860161012978, 5.4994584454249996e-08], 'true': [0.0, 0.009222307153431327], 'true,false': [nan, 0.009222307153431327], 'true,false,false': [0.009222307153431327, nan], 'false': [nan, 5.499458445193703e-08], 'true,true': [0.0, nan]}, {'': [0.008284505715461915, 4.852924668369285e-08], 'true': [0.008284505715461915, nan], 'true,true': [1.6819396458644942e-06, 0.0]}, {'': [nan, 0.011536503514374363], 'false': [0.006325415955157923, 4.3123297291083574e-08], 'false,true': [0.0, 0.006906275904983711], 'false,true,false': [nan, 0.006906275904983711], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
0;false;companyalsoknownas(F, A), companyalsoknownas(G, F).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
1;true;acquired(G, A), economicsectorcompany(H, G).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;companyalsoknownas(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
3;true;bankboughtbank(A, H).;true;true
3;false;companyalsoknownas(I, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
6;true;bankboughtbank(A, E).;true;true
6;false;companyalsoknownas(I, A), companyalsoknownas(A, I).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(C, E), companyalsoknownas(E, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;bankboughtbank(A, F), acquired(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(E, A), companyalsoknownas(F, E) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(E, A), economicsectorcompany(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then return 0.4946679990244764;  // std dev = 0.192, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0.43234490498365175;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.4323449049836517;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(F, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11037705258728502;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.28646866854872993;  // std dev = 0.140, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.09211897254391617;  // std dev = 0.000306, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.22805222929760244;  // std dev = 0.135, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08469883587194042;  // std dev = 0.000284, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0.2280849867379966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2280849867379966;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(A, F) )
%   | then return -0.07885358496986754;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09808201972729401;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.1904265210490208;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14939930057153455;  // std dev = 0.123, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.07185042048880227;  // std dev = 0.000782, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyalsoknownas(D, E) )
%   | then return 0.16788478316283706;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.24653723233330962;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06720384554314549;  // std dev = 0.000735, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D), acquired(E, D) )
%   | then return 0.1411765131752516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.11123814451629388;  // std dev = 0.105, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06311160466454008;  // std dev = 0.000693, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.972767
   AUC PR    = 0.046267
   CLL	      = -0.140219
   Precision = 0.027271 at threshold = 0.5
   Recall    = 0.719231
   F1        = 0.05255


Total learning time: 3.097 seconds
Total inference time: 10.752 seconds
AUC ROC: 0.972767


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110994
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.453 seconds
Refined model CLL: -0.110994


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976551
   AUC PR    = 0.055498
   CLL	      = -0.103406
   Precision = 0.050392 at threshold = 0.5
   Recall    = 0.642308
   F1        = 0.093453


Total learning time: 12.684 seconds
Total inference time: 129.27 seconds
AUC ROC: 0.976551
Total revision time: 12.684
Best scored revision CLL: -0.104517


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 02:19:51
{'AUC ROC': 0.976551, 'AUC PR': 0.055498, 'CLL': -0.103406, 'Precision': [0.050392, 0.5], 'Recall': 0.642308, 'F1': 0.093453, 'Learning time': 12.684, 'Inference time': 129.27, 'parameter_10': {'AUC ROC': 0.976551, 'AUC PR': 0.055498, 'CLL': -0.103406, 'Precision': [0.050392, 0.5], 'Recall': 0.642308, 'F1': 0.093453, 'Learning time': 7.524, 'Inference time': 129.27}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( bankboughtbank(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then if ( bankboughtbank(A, J), acquired(K, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07042249347191636;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then if ( acquired(C, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( acquired(C, I) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(J, A), companyalsoknownas(K, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06998681839231705;  // std dev = 0.967, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.21488177026803107;  // std dev = 0.482, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( acquired(F, A), countryhascompanyoffice(G, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8743971037897776;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(A, I), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12451185564371348;  // std dev = 0.010, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( companyalsoknownas(I, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(J, A), acquired(K, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5018739618308302;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(L, A) )
%   | then if ( bankboughtbank(M, A), bankboughtbank(M, L) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10561369509848882;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.054140202257583626;  // std dev = 0.829, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.2935848396639127;  // std dev = 0.457, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( acquired(E, D) )
%   | | then return 0.7540169859061997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10565606118756074;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(G, A), acquired(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2603621346266617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(I, A), countryhascompanyoffice(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2561977529713992;  // std dev = 0.556, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), companyalsoknownas(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09608163382732553;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then if ( companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( countryhascompanyoffice(G, H) )
%   | | | then return 0.21411706241926287;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2176194481902329;  // std dev = 0.044, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( companyalsoknownas(I, A), companyalsoknownas(A, I) )
%   | then return -0.07990039536740212;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( bankboughtbank(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.05512317832184222;  // std dev = 0.619, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then if ( acquired(C, E), companyalsoknownas(F, E) )
%   | | then return 0.18028732958229465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G), acquired(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, J) )
%   | | | then return 0.18011806726225324;  // std dev = 0.538, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A), bankboughtbank(A, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08348338779880903;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(C, E), companyalsoknownas(E, F) )
%   | | then return 0.1547154536456928;  // std dev = 0.000697, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.14622087126877167;  // std dev = 0.530, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07731493270323285;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13594279468953285;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.13506452149025416;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13166721013905436;  // std dev = 0.526, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.07197747576646853;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.963251
   AUC PR    = 0.022587
   CLL	      = -0.189488
   Precision = 0.014248 at threshold = 0.5
   Recall    = 0.788462
   F1        = 0.02799


Total learning time: 14.192 seconds
Total inference time: 252.236 seconds
AUC ROC: 0.963251


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.124467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.474 seconds
Parameter learned model CLL: -0.124467


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'true,false': 'bankboughtbank(A, F)', 'true,false,false': 'acquired(C, G)', 'false': 'companyalsoknownas(H, A), companyalsoknownas(I, H)', 'false,true': 'bankboughtbank(A, J), acquired(K, I)'}, {'true,true': [0.0, 0, 13], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [0.964, 13, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'companyalsoknownas(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,true': 'acquired(C, A)', 'true,false,false': 'acquired(C, I)', 'false': 'bankboughtbank(J, A), companyalsoknownas(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 2], 'true,false,false,true': [4.21e-08, 0, 11], 'true,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.967, 15, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'acquired(F, A), countryhascompanyoffice(G, C)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'bankboughtbank(A, I), companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 13], 'true,true,false': [0.482, 1, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.01, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'acquired(C, E)', 'true,true': 'bankboughtbank(A, F), acquired(G, A)', 'true,true,false': 'bankboughtbank(A, H)', 'true,false': 'companyalsoknownas(I, A)', 'true,false,false': 'bankboughtbank(J, A), acquired(K, J)', 'false': 'companyalsoknownas(L, A)', 'false,true': 'bankboughtbank(M, A), bankboughtbank(M, L)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [4.21e-08, 0, 12], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [0.829, 13, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,false': 'acquired(E, D)', 'false': 'companyalsoknownas(F, A), bankboughtbank(A, G)'}, {'true,true': [0.457, 1, 14], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.015, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(G, A), acquired(H, G)', 'true,true,false': 'acquired(I, A), countryhascompanyoffice(J, I)', 'false': 'bankboughtbank(A, K), companyalsoknownas(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.556, 1, 14], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.013, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), countryhascompanyoffice(D, C)', 'true': 'bankboughtbank(A, E)', 'true,true': 'companyalsoknownas(E, F)', 'true,true,false': 'countryhascompanyoffice(G, H)', 'false': 'companyalsoknownas(I, A), companyalsoknownas(A, I)', 'false,false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.044, 0, 13], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.619, 13, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,true': 'acquired(C, E), companyalsoknownas(F, E)', 'true,false': 'bankboughtbank(A, G), acquired(H, G)', 'true,false,false': 'acquired(I, J)', 'false': 'companyalsoknownas(K, A), bankboughtbank(A, L)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.538, 1, 14], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.014, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.000697, 0, 13], 'true,true,false': [0.53, 1, 2], 'true,false': [0.0, 0, 0], 'false': [0.013, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(G, F)', 'false,true,true': 'companyalsoknownas(H, A)', 'false,true,false': 'companyalsoknownas(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.526, 1, 13], 'false,false': [0.012, 14, 0]}]]
[{'': [-2.5376526277146434e-16, 0.058593749999999986], 'false': [0.0, 0.06632653061224494], 'false,true': [nan, 0.0], 'true': [-2.7328566760003855e-16, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [1.9032394707859825e-16, 0.05847508140203502], 'false': [nan, 0.05847508140203501], 'true': [nan, 1.9032394707859825e-16], 'true,false': [0.0, 1.4802973661668753e-16], 'true,false,false': [1.6148698540002277e-16, 0.0], 'true,false,true': [nan, 0.0]}, {'': [0.03483202025461013, 7.142217106606166e-06], 'true': [0.028853641128805188, 0.0], 'true,true': [-2.7328566760003855e-16, 0.1159298081068075], 'false': [nan, 7.142217106606166e-06], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.0004720242508861526, 0.04323522823422549], 'false': [0.0, 0.04908049935238805], 'true': [1.3664283380001927e-16, 0.0], 'true,true': [nan, 1.3664283380001927e-16], 'true,true,false': [0.0, 1.4802973661668753e-16], 'false,true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.025460525352621277, 1.539560680025428e-05], 'true': [0.013908033628632783, 0.0], 'false': [nan, 1.5395606800258248e-05], 'true,false': [0.0, nan]}, {'': [0.019337783949560997, 1.2984399660488841e-05], 'true': [0.019337783949560997, nan], 'true,true': [0.0, 0.020625885666537707], 'true,true,false': [nan, 0.020625885666537728], 'false': [nan, 1.2984399660488841e-05], 'true,true,true': [nan, 0.0]}, {'': [0.00014212226084847623, 0.02399079191654139], 'false': [0.0, 0.027341309094053384], 'false,false': [nan, 0.027341309094053384], 'true': [0.0, 0.00015217854916013899], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.018091877115171955, 1.4301418925886339e-05], 'true': [0.0, 0.01929800046557511], 'true,false': [nan, 0.01929800046557511], 'true,false,false': [0.01929800046557511, nan], 'false': [nan, 1.4301418925886339e-05], 'true,true': [0.0, nan]}, {'': [0.017548474218184812, 1.2415968801207655e-05], 'true': [0.017548474218184812, nan], 'true,true': [3.7334799230813985e-08, 0.09353307239492703]}, {'': [nan, 0.019589180723986237], 'false': [0.01727573644801032, 1.0873769522910209e-05], 'false,true': [0.0, 0.018426427511989488], 'false,true,false': [0.0, 0.019741831457408553], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
0;true;acquired(C, E).;true;true
0;false;companyalsoknownas(H, A), companyalsoknownas(I, H).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
1;true;acquired(G, A), economicsectorcompany(H, G).;true;true
1;true,false;acquired(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
2;true,true;companyalsoknownas(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
3;true;acquired(C, E).;true;true
3;true,true;bankboughtbank(A, H).;true;true
3;false;companyalsoknownas(L, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(C, D).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), countryhascompanyoffice(D, C).;true;true
6;true;bankboughtbank(A, E).;true;true
6;false;companyalsoknownas(I, A), companyalsoknownas(A, I).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(C, E), companyalsoknownas(E, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;bankboughtbank(A, F), acquired(G, F).;true;true
9;true,false;companyalsoknownas(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(F, A), companyalsoknownas(G, F) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.050941973991396876;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(E, A), economicsectorcompany(F, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(C, G) )
%   | | then return 0.7194734122109542;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.05156919491479791;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.2127709566156562;  // std dev = 0.485, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.8701754764850279;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12883161969202922;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5024016555480435;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.1042745618723703;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0420002180190273;  // std dev = 0.247, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( cityhascompanyoffice(E, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.28633239538537225;  // std dev = 0.133, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.745420611239037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.09263502801177675;  // std dev = 0.000195, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1102827358326205;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.26176118997846276;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2550954041917464;  // std dev = 0.161, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.0851370127872209;  // std dev = 0.000181, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0999195105284561;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), countryhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0.21552628908121807;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.22008779768221673;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return -0.07950231451391757;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.07878430148383474;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.04974644092655984;  // std dev = 0.184, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.18131605206642443;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17942969158663927;  // std dev = 0.155, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.07319521591176165;  // std dev = 0.000199, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08703554258530569;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyalsoknownas(D, E) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15553335882474412;  // std dev = 0.000293, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1404550577590498;  // std dev = 0.529, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.06838232679598072;  // std dev = 0.000187, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08036499554616004;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D), acquired(E, D) )
%   | then return 0.13654284059043564;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, F) )
%   | | then return 0.13544528902066988;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12978147157199593;  // std dev = 0.527, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.06415244351469727;  // std dev = 0.000176, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07462331546503445;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.961547
   AUC PR    = 0.020497
   CLL	      = -0.195121
   Precision = 0.013596 at threshold = 0.5
   Recall    = 0.807692
   F1        = 0.026741


Total learning time: 1.417 seconds
Total inference time: 12.608 seconds
AUC ROC: 0.961547


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.12439
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.551 seconds
Refined model CLL: -0.12439


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.961547
   AUC PR    = 0.020497
   CLL	      = -0.195121
   Precision = 0.013596 at threshold = 0.5
   Recall    = 0.807692
   F1        = 0.026741


Total learning time: 18.634 seconds
Total inference time: 12.608 seconds
AUC ROC: 0.961547
Total revision time: 18.634
Best scored revision CLL: -0.12439


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 02:24:35
{'AUC ROC': 0.961547, 'AUC PR': 0.020497, 'CLL': -0.195121, 'Precision': [0.013596, 0.5], 'Recall': 0.807692, 'F1': 0.026741, 'Learning time': 18.634, 'Inference time': 12.608, 'parameter_15': {'AUC ROC': 0.963251, 'AUC PR': 0.022587, 'CLL': -0.189488, 'Precision': [0.014248, 0.5], 'Recall': 0.788462, 'F1': 0.02799, 'Learning time': 14.192, 'Inference time': 252.236}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyceo(A, D), acquired(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyceo(A, F), bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, H), companyceo(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( companyalsoknownas(J, A), companyalsoknownas(K, J) )
%   | then if ( bankboughtbank(A, L), acquired(M, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.08921948595311938;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then if ( acquired(C, A), companyceo(A, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyceo(A, D), acquired(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109542;  // std dev = 7.30e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( companyceo(A, J) )
%   | then return -0.12838906364745217;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( bankboughtbank(K, A), companyalsoknownas(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07839197033292761;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyceo(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyalsoknownas(D, F) )
%   | | | then return 0.5129906799858424;  // std dev = 0.656, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.32936240069059225;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( companyceo(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3773543285792078;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( bankboughtbank(A, I), companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12138370064674261;  // std dev = 0.012, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(A, H), bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.429228521107776;  // std dev = 0.047, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( companyalsoknownas(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(K, A), acquired(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4732792946514698;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(M, A) )
%   | then if ( bankboughtbank(N, A), bankboughtbank(N, M) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10281073355005413;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07044470028266046;  // std dev = 0.932, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyceo(A, E) )
%   | then return 0.3181650589598898;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(F, D) )
%   | | then return 0.2851415830913905;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10203853199615774;  // std dev = 0.014, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(G, A), acquired(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2756242032517567;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(I, A), bankchiefexecutiveceo(I, J) )
%   | | | then return 0.2534336646216866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22240473471371747;  // std dev = 0.959, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), companyalsoknownas(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09306239123344896;  // std dev = 0.013, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( bankboughtbank(A, E), companyceo(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22663937468038245;  // std dev = 0.046, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( companyceo(A, G) )
%   | then return -0.07971117998619716;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(A, H) )
%   | | then return -0.0802069601036951;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06613809872377172;  // std dev = 0.886, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then if ( acquired(C, E), companyalsoknownas(F, E) )
%   | | then return 0.1893825433805023;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, G), acquired(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(I, J) )
%   | | | then return 0.15821019810038825;  // std dev = 0.926, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A), bankboughtbank(A, L) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0803017873228749;  // std dev = 0.012, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( companyceo(A, F) )
%   | | then if ( companyceo(E, F) )
%   | | | then return 0.15204312246113605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14920422146837353;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(C, E), companyalsoknownas(E, G) )
%   | | | then return 0.13742498874747724;  // std dev = 0.435, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.12188835569198049;  // std dev = 0.821, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07456821670048058;  // std dev = 0.012, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), companyalsoknownas(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, E) )
%   | then if ( bankboughtbank(A, F), acquired(G, F) )
%   | | then if ( companyalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1442000871390191;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(A, I), companyceo(A, J) )
%   | | | then return 0.13123758719790735;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1138165565937355;  // std dev = 0.935, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else return -0.06958342190776812;  // std dev = 0.011, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.973658
   AUC PR    = 0.071619
   CLL	      = -0.124914
   Precision = 0.049411 at threshold = 0.5
   Recall    = 0.580769
   F1        = 0.091074


Total learning time: 19.103 seconds
Total inference time: 336.624 seconds
AUC ROC: 0.973658


Results scoring model
   AUC ROC   = 0.99625
   AUC PR    = 0.996477
   CLL	      = -0.154804
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 3.562 seconds
Parameter learned model CLL: -0.154804


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyceo(A, D), acquired(C, E)', 'true,false': 'companyceo(A, F), bankboughtbank(A, G)', 'true,false,false': 'acquired(C, H), companyceo(A, I)', 'false': 'companyalsoknownas(J, A), companyalsoknownas(K, J)', 'false,true': 'bankboughtbank(A, L), acquired(M, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'true,false,false,false': [0.0, 0, 17], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false': [0.973, 18, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'companyalsoknownas(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,true': 'acquired(C, A), companyceo(A, D)', 'true,false,false': 'companyceo(A, D), acquired(C, I)', 'false': 'companyceo(A, J)', 'false,false': 'bankboughtbank(K, A), companyalsoknownas(L, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 2], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.3e-08, 0, 17], 'false,true': [0.004, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.973, 18, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'companyceo(A, E)', 'true,true,false': 'companyalsoknownas(D, F)', 'true,false': 'companyceo(A, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'bankboughtbank(A, I), companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.656, 1, 15], 'true,true,false,false': [0.554, 1, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.707, 1, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.012, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'acquired(C, E)', 'true,true': 'bankboughtbank(A, F), acquired(G, A)', 'true,true,false': 'companyceo(A, H), bankboughtbank(A, I)', 'true,false': 'companyalsoknownas(J, A)', 'true,false,false': 'bankboughtbank(K, A), acquired(L, K)', 'false': 'companyalsoknownas(M, A)', 'false,true': 'bankboughtbank(N, A), bankboughtbank(N, M)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.047, 0, 18], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.003, 2, 0], 'false,false': [0.932, 18, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D), companyceo(A, E)', 'true,false': 'acquired(F, D)', 'false': 'companyalsoknownas(G, A), bankboughtbank(A, H)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.976, 3, 18], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.014, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(G, A), acquired(H, G)', 'true,true,false': 'acquired(I, A), bankchiefexecutiveceo(I, J)', 'false': 'bankboughtbank(A, K), companyalsoknownas(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.038, 0, 3], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.959, 3, 16], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.013, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), bankchiefexecutiveceo(C, D)', 'true': 'bankboughtbank(A, E), companyceo(A, F)', 'false': 'companyceo(A, G)', 'false,false': 'companyalsoknownas(H, A), companyalsoknownas(A, H)', 'false,false,false': 'bankboughtbank(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.046, 0, 19], 'false,true': [0.004, 2, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.886, 17, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,true': 'acquired(C, E), companyalsoknownas(F, E)', 'true,false': 'bankboughtbank(A, G), acquired(H, G)', 'true,false,false': 'acquired(I, J)', 'false': 'companyalsoknownas(K, A), bankboughtbank(A, L)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.926, 3, 19], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.012, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'companyceo(A, F)', 'true,true,true': 'companyceo(E, F)', 'true,true,false': 'acquired(C, E), companyalsoknownas(E, G)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.435, 1, 15], 'true,true,false,false': [0.821, 2, 3], 'true,false': [0.0, 0, 0], 'false': [0.012, 17, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), companyalsoknownas(D, C)', 'false': 'economicsectorcompany(B, E)', 'false,true': 'bankboughtbank(A, F), acquired(G, F)', 'false,true,true': 'companyalsoknownas(H, A)', 'false,true,false': 'companyalsoknownas(A, I), companyceo(A, J)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.935, 3, 18], 'false,false': [0.011, 17, 0]}]]
[{'': [-2.8047739569477637e-16, 0.045351473922902494], 'false': [0.0, 0.04986149584487539], 'false,true': [nan, 0.0], 'true': [nan, -2.8047739569477637e-16], 'true,false': [nan, -2.8047739569477637e-16], 'true,false,false': [0.0, -2.0898315757650005e-16]}, {'': [9.349246523159212e-17, 0.04530104849029101], 'false': [8.669639281751879e-06, 0.04983059976053193], 'false,false': [nan, 0.04983059976053193], 'true': [nan, 0.0], 'true,false': [-1.1102230246251565e-16, 3.134747363647501e-16], 'true,false,false': [nan, 3.134747363647501e-16], 'true,false,true': [nan, -1.1102230246251565e-16]}, {'': [0.0589277348205281, 8.49744219378106e-06], 'true': [0.03961137395737889, 0.25], 'true,false': [nan, 0.25], 'true,false,false': [nan, 0.25], 'true,true': [0.0, 0.04329588432110656], 'true,true,false': [0.02693557141530234, 0.10215564862692528], 'false': [nan, 8.49744219378106e-06]}, {'': [0.00021482309794736216, 0.041410187887510955], 'false': [5.315495065241066e-06, 0.045668827878295425], 'true': [0.0001246276803001193, 0.0], 'true,true': [nan, 0.0001246276803001193], 'true,true,false': [nan, 0.00012462768030009464], 'false,true': [nan, 5.315495065241066e-06], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.04151348324572412, 1.0918607242880446e-05], 'true': [0.0, 0.045372317885576975], 'true,false': [0.04537231788557702, nan], 'false': [nan, 1.091860724288208e-05]}, {'': [0.04036948982004283, 9.251016591368138e-06], 'true': [0.04036948982004283, nan], 'true,true': [0.0004807516698848065, 0.046004593868418854], 'true,true,false': [0.0, 0.048377748557984476], 'true,true,true': [nan, 0.0004807516698848065], 'false': [nan, 9.251016591368138e-06]}, {'': [0.00011001978618269419, 0.037442429491889286], 'false': [9.710296303384186e-06, 0.04136703229400313], 'false,false': [0.0, 0.04365478323580596], 'false,false,false': [nan, 0.04365478323580596], 'true': [nan, 0.00011001978618267665]}, {'': [0.03729112210852093, 8.984216795790749e-06], 'true': [0.0, 0.0389439246303988], 'true,false': [nan, 0.0389439246303988], 'true,false,false': [0.0389439246303988, nan], 'false': [nan, 8.984216795793198e-06], 'true,true': [0.0, nan]}, {'': [0.03761427139876069, 7.836103327758558e-06], 'true': [0.03761427139876069, nan], 'true,true': [2.0148397116767636e-06, 0.04117156164484718], 'true,true,false': [0.011835342037598371, 0.13486355050865198], 'true,true,true': [0.0, 0.0]}, {'': [nan, 0.030305366798894236], 'false': [0.03807893566609342, 6.891154499416411e-06], 'false,true': [0.0, 0.03977172391435732], 'false,true,false': [0.0, 0.04165182042444891], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
0;true;acquired(C, H), companyceo(A, I).;true;true
0;false;companyalsoknownas(J, A), companyalsoknownas(K, J).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
1;true;acquired(G, A), economicsectorcompany(H, G).;true;true
1;false;companyceo(A, J).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
2;true,true;companyceo(A, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
3;true;acquired(C, E).;true;true
3;false;companyalsoknownas(M, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(C, D), companyceo(A, E).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
5;true,false;acquired(I, A), bankchiefexecutiveceo(I, J).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), bankchiefexecutiveceo(C, D).;true;true
6;false;companyceo(A, G).;true;true
6;false,false;companyalsoknownas(H, A), companyalsoknownas(A, H).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;companyceo(A, F).;true;true
8;true,true;companyceo(E, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true
9;true;bankboughtbank(A, F), acquired(G, F).;true;true
9;true,false;companyalsoknownas(A, I), companyceo(A, J).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(C, E), companyceo(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( companyalsoknownas(G, A), companyalsoknownas(H, G) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06492798797741087;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(E, A), economicsectorcompany(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( companyceo(A, I) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( cityhascompanyoffice(J, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06208075604204155;  // std dev = 0.257, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( companyceo(A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4700603775627249;  // std dev = 0.903, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.37291796327780724;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), companyalsoknownas(H, H) )
%   | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12625290542289241;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( cityhascompanyoffice(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyalsoknownas(A, G) )
%   | | | then return 0.4314338223434975;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4383939414360913;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.43839394143609123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( companyalsoknownas(H, A) )
%   | then return -0.10389689287137399;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.057720805476218835;  // std dev = 0.257, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), companyceo(A, E) )
%   | then return 0.3191993443654896;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2777013156451853;  // std dev = 0.232, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), companyalsoknownas(H, H) )
%   | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09264295237479886;  // std dev = 0.000167, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10690370495448398;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.26928424533717754;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(F, A), bankchiefexecutiveceo(F, G) )
%   | | then return 0.25545981433031073;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( cityhascompanyoffice(H, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2154112501711074;  // std dev = 0.971, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( cityhascompanyoffice(I, A) )
%   | then if ( cityhascompanyoffice(I, J), companyalsoknownas(J, J) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08514373845846937;  // std dev = 0.000155, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09711868651606151;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankchiefexecutiveceo(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.21935471597358297;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.23450353662529563;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( companyceo(A, G) )
%   | then return -0.0786998357370069;  // std dev = 0.000118, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( companyalsoknownas(H, A), companyalsoknownas(A, H) )
%   | | then return -0.0803128436551674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( cityhascompanyoffice(I, A) )
%   | | | then return -0.07877934813063349;  // std dev = 7.10e-06, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06391882855416751;  // std dev = 0.888, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.19804726655440474;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then return 0.18365692688780466;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.17679229950156264;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14520458395955174;  // std dev = 0.934, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), companyalsoknownas(H, H) )
%   | | then return -0.07324604972041697;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07321580472876174;  // std dev = 0.000132, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08377236331081611;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyceo(A, D) )
%   | then if ( companyceo(E, D) )
%   | | then return 0.14950251553010557;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.15278322951196366;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1289533536350151;  // std dev = 0.222, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then if ( cityhascompanyoffice(G, H), companyalsoknownas(H, H) )
%   | | then return -0.06842682375062668;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06840034938979098;  // std dev = 0.000124, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0775633161263056;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D), acquired(E, D) )
%   | then return 0.15115836594194676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( companyalsoknownas(A, F), companyceo(A, G) )
%   | | then return 0.1294962262576994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1121205978067271;  // std dev = 0.207, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then if ( cityhascompanyoffice(H, I), companyalsoknownas(I, I) )
%   | | then return -0.06419170412512515;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06416834549695744;  // std dev = 0.000117, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07219311573034445;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.975411
   AUC PR    = 0.04232
   CLL	      = -0.13003
   Precision = 0.049363 at threshold = 0.5
   Recall    = 0.580769
   F1        = 0.090991


Total learning time: 1.899 seconds
Total inference time: 24.895 seconds
AUC ROC: 0.975411


Results scoring model
   AUC ROC   = 0.99375
   AUC PR    = 0.994358
   CLL	      = -0.155837
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.61 seconds
Refined model CLL: -0.155837


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.973658
   AUC PR    = 0.071619
   CLL	      = -0.124914
   Precision = 0.049411 at threshold = 0.5
   Recall    = 0.580769
   F1        = 0.091074


Total learning time: 25.174000000000003 seconds
Total inference time: 336.624 seconds
AUC ROC: 0.973658
Total revision time: 25.174000000000003
Best scored revision CLL: -0.154804


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 02:31:03
{'AUC ROC': 0.973658, 'AUC PR': 0.071619, 'CLL': -0.124914, 'Precision': [0.049411, 0.5], 'Recall': 0.580769, 'F1': 0.091074, 'Learning time': 25.174000000000003, 'Inference time': 336.624, 'parameter_20': {'AUC ROC': 0.973658, 'AUC PR': 0.071619, 'CLL': -0.124914, 'Precision': [0.049411, 0.5], 'Recall': 0.580769, 'F1': 0.091074, 'Learning time': 19.103, 'Inference time': 336.624}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankchiefexecutiveceo(A, F), bankboughtbank(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(C, H), bankchiefexecutiveceo(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7748156017661786;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( acquired(J, A), acquired(K, J) )
%   | then if ( bankboughtbank(A, L), companyalsoknownas(M, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09837280403092258;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( acquired(A, E), companyalsoknownas(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, D), companyalsoknownas(C, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6577883176481806;  // std dev = 1.357, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( bankchiefexecutiveceo(A, J) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(K, A), acquired(L, K) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08842408031587133;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.5705419778363892;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( acquired(D, F) )
%   | | | then return 0.4999205392664896;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.23511674060179766;  // std dev = 0.503, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( bankchiefexecutiveceo(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), acquired(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44987911074387;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( bankboughtbank(A, I), acquired(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12038017481960636;  // std dev = 0.004, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( bankboughtbank(A, F), companyalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankchiefexecutiveceo(A, H), bankboughtbank(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38651736508493867;  // std dev = 1.359, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else if ( acquired(J, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(K, A), companyalsoknownas(L, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4793909255368448;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(M, A) )
%   | then if ( bankboughtbank(N, A), bankboughtbank(N, M) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.10633560271491584;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07097390227087358;  // std dev = 0.918, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0.337826177970619;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, D) )
%   | | then return 0.27906276926476437;  // std dev = 1.591, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(G, A), bankboughtbank(A, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10124558917129255;  // std dev = 0.007, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( acquired(A, F), acquired(F, G) )
%   | | then if ( bankboughtbank(G, A), companyalsoknownas(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3104311107256692;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(I, A), companyceo(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21889485160354716;  // std dev = 1.584, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(A, K), acquired(L, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09239775709195464;  // std dev = 0.007, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( bankboughtbank(A, E), bankchiefexecutiveceo(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1867749370598569;  // std dev = 1.358, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( bankchiefexecutiveceo(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(H, A), acquired(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.062060645066686605;  // std dev = 0.855, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then if ( companyalsoknownas(C, E), acquired(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(G, H) )
%   | | | then return 0.23080445560330032;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(A, I), companyalsoknownas(J, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(K, L) )
%   | | | then return 0.14474820288000706;  // std dev = 1.577, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( acquired(M, A), bankboughtbank(A, N) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08023501628973341;  // std dev = 0.006, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then if ( bankchiefexecutiveceo(A, F) )
%   | | then if ( bankchiefexecutiveceo(E, F) )
%   | | | then return 0.17346867738156135;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17346867738156135;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyalsoknownas(C, E), acquired(E, G) )
%   | | | then return 0.11391649133130195;  // std dev = 1.347, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.14013428580795118;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07450990241799622;  // std dev = 0.006, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), acquired(D, C) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.17530369571227955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( economicsectorcompany(B, F) )
%   | then if ( bankboughtbank(A, G), companyalsoknownas(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, I), bankchiefexecutiveceo(A, J) )
%   | | | then return 0.1499861811592339;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09846756113660707;  // std dev = 1.574, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else return -0.069532054794868;  // std dev = 0.005, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.960885
   AUC PR    = 0.018268
   CLL	      = -0.173651
   Precision = 0.021324 at threshold = 0.5
   Recall    = 0.842308
   F1        = 0.041595


Total learning time: 23.586 seconds
Total inference time: 299.438 seconds
AUC ROC: 0.960885


Results scoring model
   AUC ROC   = 0.964
   AUC PR    = 0.950221
   CLL	      = -0.224861
   Precision = 0.923077 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.941176


Total scoring time: 4.164 seconds
Parameter learned model CLL: -0.224861


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, E)', 'true,false': 'bankchiefexecutiveceo(A, F), bankboughtbank(A, G)', 'true,false,false': 'companyalsoknownas(C, H), bankchiefexecutiveceo(A, I)', 'false': 'acquired(J, A), acquired(K, J)', 'false,true': 'bankboughtbank(A, L), companyalsoknownas(M, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'true,false,false,false': [1.354, 2, 22], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false': [0.978, 22, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'acquired(A, E), companyalsoknownas(F, E)', 'true,false': 'companyalsoknownas(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankchiefexecutiveceo(A, D), companyalsoknownas(C, I)', 'false': 'bankchiefexecutiveceo(A, J)', 'false,false': 'bankboughtbank(K, A), acquired(L, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.357, 2, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.979, 23, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D)', 'true,true': 'bankchiefexecutiveceo(A, E)', 'true,true,false': 'acquired(D, F)', 'true,false': 'bankchiefexecutiveceo(A, G)', 'true,false,false': 'acquired(A, H), acquired(H, A)', 'false': 'bankboughtbank(A, I), acquired(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [1.348, 2, 20], 'true,true,false,false': [0.503, 1, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.728, 1, 2], 'false,true': [0.0, 0, 0], 'false,false': [0.004, 21, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'companyalsoknownas(C, E)', 'true,true': 'bankboughtbank(A, F), companyalsoknownas(G, A)', 'true,true,false': 'bankchiefexecutiveceo(A, H), bankboughtbank(A, I)', 'true,false': 'acquired(J, A)', 'true,false,false': 'bankboughtbank(K, A), companyalsoknownas(L, K)', 'false': 'acquired(M, A)', 'false,true': 'bankboughtbank(N, A), bankboughtbank(N, M)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.359, 2, 23], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.003, 2, 0], 'false,false': [0.918, 21, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(C, D), bankchiefexecutiveceo(A, E)', 'true,false': 'companyalsoknownas(F, D)', 'false': 'acquired(G, A), bankboughtbank(A, H)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [1.591, 4, 23], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.007, 21, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'acquired(A, F), acquired(F, G)', 'true,true,true': 'bankboughtbank(G, A), companyalsoknownas(H, G)', 'true,true,false': 'companyalsoknownas(I, A), companyceo(I, J)', 'false': 'bankboughtbank(A, K), acquired(L, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.584, 4, 24], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.007, 21, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyceo(C, D)', 'true': 'bankboughtbank(A, E), bankchiefexecutiveceo(A, F)', 'false': 'bankchiefexecutiveceo(A, G)', 'false,false': 'acquired(H, A), acquired(A, H)', 'false,false,false': 'bankboughtbank(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.358, 2, 24], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.855, 23, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(A, D)', 'true,true': 'companyalsoknownas(C, E), acquired(F, E)', 'true,true,false': 'companyceo(G, H)', 'true,false': 'bankboughtbank(A, I), companyalsoknownas(J, I)', 'true,false,false': 'companyalsoknownas(K, L)', 'false': 'acquired(M, A), bankboughtbank(A, N)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.577, 4, 24], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.006, 21, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'companyalsoknownas(D, E)', 'true,true': 'bankchiefexecutiveceo(A, F)', 'true,true,true': 'bankchiefexecutiveceo(E, F)', 'true,true,false': 'companyalsoknownas(C, E), acquired(E, G)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [1.347, 2, 20], 'true,true,false,false': [0.817, 2, 3], 'true,false': [0.0, 0, 0], 'false': [0.006, 21, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(A, C), acquired(D, C)', 'true': 'economicsectorcompany(B, E)', 'false': 'economicsectorcompany(B, F)', 'false,true': 'bankboughtbank(A, G), companyalsoknownas(H, G)', 'false,true,false': 'acquired(A, I), bankchiefexecutiveceo(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.574, 4, 23], 'false,false': [0.005, 21, 0]}]]
[{'': [0.07100591715976402, 0.03993055555555556], 'true': [nan, 0.07100591715976402], 'true,false': [nan, 0.07100591715976368], 'true,false,false': [0.0, 0.07638888888888913], 'false': [0.0, 0.041587901701323295], 'false,true': [nan, 0.0]}, {'': [0.07082990808708896, 0.03991466036508839], 'true': [nan, 0.07082990808708903], 'true,false': [nan, 0.07082990808708924], 'true,false,false': [nan, 0.07082990808708896], 'false': [nan, 0.039914660365088346], 'false,false': [nan, 0.039914660365088346]}, {'': [0.09478538082798722, 9.328966899165477e-07], 'true': [0.08521772969570471, 0.17660019113070116], 'true,false': [nan, 0.17660019113070116], 'true,false,false': [nan, 0.17660019113070116], 'true,true': [0.0, 0.09165834997540186], 'true,true,false': [0.0826446280991738, 0.12653165980893033], 'false': [nan, 9.328966899165477e-07]}, {'': [0.07130598620044769, 0.035220016384269665], 'true': [0.07382647571650353, 0.0], 'true,true': [nan, 0.07382647571650348], 'true,true,false': [nan, 0.07382647571650361], 'false': [4.266707075059259e-06, 0.03831724401824773], 'false,true': [nan, 4.266707075059259e-06], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.0874993325403459, 2.5700831121395443e-06], 'true': [0.0, 0.09374261711811431], 'true,false': [0.09374261711811424, nan], 'false': [nan, 2.570083112142188e-06]}, {'': [0.08683785507326806, 2.1805614863928693e-06], 'true': [0.08683785507326806, nan], 'true,true': [0.0, 0.08965027991140939], 'true,true,false': [nan, 0.08965027991140939], 'false': [nan, 2.1805614863928693e-06], 'true,true,true': [nan, 0.0]}, {'': [0.07095662646998013, 0.030430843529987622], 'true': [nan, 0.07095662646998015], 'false': [nan, 0.030430843529987612], 'false,false': [nan, 0.030430843529987622], 'false,false,false': [nan, 0.030430843529987612]}, {'': [0.08595967336074786, 1.6861884372467082e-06], 'true': [0.0, 0.0887742934663439], 'true,false': [nan, 0.0887742934663439], 'true,false,false': [0.0887742934663439, nan], 'false': [nan, 1.68618843724803e-06], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0858323349889942, 1.471294767070123e-06], 'true': [0.0858323349889942, nan], 'true,true': [0.0, 0.09198395703463293], 'true,true,false': [0.08242729657473741, 0.13347318156043858], 'true,true,true': [0.0, 0.0]}, {'': [0.0, 0.0577005328883198], 'false': [0.08861261392518953, 1.2943256206107305e-06], 'false,true': [nan, 0.08861261392518953], 'false,true,false': [0.0, 0.09179977086733418], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
0;true;companyalsoknownas(C, H), bankchiefexecutiveceo(A, I).;true;true
0;false;acquired(J, A), acquired(K, J).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;companyalsoknownas(C, D).;true;true
2;true,true;bankchiefexecutiveceo(A, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyceo(C, D).;true;true
3;true;companyalsoknownas(C, E).;true;true
3;false;acquired(M, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;companyalsoknownas(C, D), bankchiefexecutiveceo(A, E).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;acquired(A, F), acquired(F, G).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;bankboughtbank(A, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;bankchiefexecutiveceo(A, F).;true;true
8;true,true;bankchiefexecutiveceo(E, F).;true;true
9;;companyeconomicsector(A, B) :- bankboughtbank(A, C), acquired(D, C).;true;true
9;false;economicsectorcompany(B, F).;true;true
9;false,true;acquired(A, I), bankchiefexecutiveceo(A, J).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E), bankchiefexecutiveceo(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( acquired(A, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7405018762759829;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( acquired(I, A), acquired(J, I) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( cityhascompanyoffice(K, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0793510649004878;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, D) )
%   then return -0.1301238324076707;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( companyalsoknownas(A, E) )
%   | then return 0.7271804829449984;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.44320153575891014;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3285280536367721;  // std dev = 2.462, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.6010804721693099;  // std dev = 0.067, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( acquired(F, A) )
%   | | | then return 0.6089613824286165;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5107556939981078;  // std dev = 1.491, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else return 0.4416944161899021;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14649073302146437;  // std dev = 0.145, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyceo(C, D) )
%   then if ( companyalsoknownas(C, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return 0.47728799934673427;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, G) )
%   | | | then return 0.45222470978700074;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41886443473992846;  // std dev = 1.308, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return 0.5718187917720949;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( acquired(H, A) )
%   | then return -0.1344705787025163;  // std dev = 0.051, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( cityhascompanyoffice(I, A) )
%   | | then return -0.09846001961145553;  // std dev = 0.000384, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10086121491655489;  // std dev = 0.231, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D), bankchiefexecutiveceo(A, E) )
%   | then return 0.3481448665614084;  // std dev = 0.073, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, F) )
%   | | then return 0.34840668680719233;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.3302084382372652;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.28871833098583627;  // std dev = 1.592, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.11810094203139347;  // std dev = 0.120, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D), acquired(D, E) )
%   | then return 0.23375737815269437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(A, F) )
%   | | then return 0.27342002012165534;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.2616421411008073;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22617002591287175;  // std dev = 1.591, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   else return -0.10641518884584299;  // std dev = 0.110, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), companyceo(C, D) )
%   then return -0.07578551451489383;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( companyalsoknownas(A, E) )
%   | then return 0.21156476191554766;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then if ( cityhascompanyoffice(F, G), economicsectorcompany(B, G) )
%   | | | then return 0.20936556307455512;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07297662804991098;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.12932845945605756;  // std dev = 0.314, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07553100636166737;  // std dev = 1.755, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.2597986942397126;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( countryhascompanyoffice(E, A) )
%   | | then return 0.2208513186914954;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.1768215172791337;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15175149802887777;  // std dev = 1.584, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   else return -0.09896509493881205;  // std dev = 0.132, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankchiefexecutiveceo(A, D) )
%   | then if ( bankchiefexecutiveceo(E, D) )
%   | | then return 0.17906845292497497;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, F) )
%   | | then return 0.16946296757809265;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.15639755713164571;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12068762502924105;  // std dev = 1.588, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.09055682499372261;  // std dev = 0.122, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(A, C), acquired(D, C) )
%   then return 0.1859904503303067;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( economicsectorcompany(B, E) )
%   | then if ( acquired(A, F), bankchiefexecutiveceo(A, G) )
%   | | then return 0.10941336766739707;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.10916644385421248;  // std dev = 0.307, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else return -0.08342762659872598;  // std dev = 0.113, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.966609
   AUC PR    = 0.025474
   CLL	      = -0.205972
   Precision = 0.01985 at threshold = 0.5
   Recall    = 0.873077
   F1        = 0.038817


Total learning time: 2.098 seconds
Total inference time: 17.528 seconds
AUC ROC: 0.966609


Results scoring model
   AUC ROC   = 0.9768
   AUC PR    = 0.974283
   CLL	      = -0.234076
   Precision = 0.923077 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.941176


Total scoring time: 0.689 seconds
Refined model CLL: -0.234076


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.960885
   AUC PR    = 0.018268
   CLL	      = -0.173651
   Precision = 0.021324 at threshold = 0.5
   Recall    = 0.842308
   F1        = 0.041595


Total learning time: 30.537 seconds
Total inference time: 299.438 seconds
AUC ROC: 0.960885
Total revision time: 30.537
Best scored revision CLL: -0.224861


Dataset: 9_nell_sports_nell_finances, Fold: 2, Type: Transfer (trRDN-B), Time: 02:36:51
{'AUC ROC': 0.960885, 'AUC PR': 0.018268, 'CLL': -0.173651, 'Precision': [0.021324, 0.5], 'Recall': 0.842308, 'F1': 0.041595, 'Learning time': 30.537, 'Inference time': 299.438, 'parameter_25': {'AUC ROC': 0.960885, 'AUC PR': 0.018268, 'CLL': -0.173651, 'Precision': [0.021324, 0.5], 'Recall': 0.842308, 'F1': 0.041595, 'Learning time': 23.586, 'Inference time': 299.438}}


Starting fold 3

Target train facts examples: 5307
Target train pos examples: 520
Target train neg examples: 366438

Target test facts examples: 5307
Target test pos	 examples: 258
Target test neg examples: 183217

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(C, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A), bankboughtbank(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(C, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, K) )
%   | then return 0.02176788419240575;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(F, A), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8523832062781437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( bankboughtbank(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1476167937218563;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(C, E) )
%   | then if ( acquired(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.010200659385962754;  // std dev = 0.768, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(E, D) )
%   | | then return 0.7090619720703777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1311495605511951;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, A), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3132013860753851;  // std dev = 0.260, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11691418175179176;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.20030077098153387;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.009946227787666392;  // std dev = 0.213, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), bankboughtbank(E, D) )
%   | then return 0.17012856540070986;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.2699744359637374;  // std dev = 0.245, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10443942558524273;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(C, E), bankboughtbank(E, F) )
%   | | then return 0.14743715121547174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20536236537791291;  // std dev = 0.229, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09506673826314008;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.16688945736455874;  // std dev = 0.211, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(F, D) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08719710953397912;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.969339
   AUC PR    = 0.023675
   CLL	      = -0.229425
   Precision = 0.012618 at threshold = 0.5
   Recall    = 0.992248
   F1        = 0.024918


Total learning time: 3.106 seconds
Total inference time: 176.398 seconds
AUC ROC: 0.969339


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.123851
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.017 seconds
Parameter learned model CLL: -0.123851


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(C, E)', 'false': 'bankboughtbank(F, A), bankboughtbank(G, F)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.913, 5, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(F, E)', 'true,false': 'acquired(G, A), economicsectorcompany(H, G)', 'true,false,false': 'acquired(C, I)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 4], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.913, 5, 1], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(F, A), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [1.05e-08, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(C, E)', 'true,true': 'acquired(F, A)', 'false': 'bankboughtbank(G, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.768, 5, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D)', 'true,false': 'acquired(E, D)', 'false': 'bankboughtbank(F, A)'}, {'true,true': [0.0, 0, 4], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(H, A), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.26, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.213, 5, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(C, D), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.245, 0, 3], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(C, E), bankboughtbank(E, F)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.229, 0, 4], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 5, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(F, D)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [0.211, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.0, 0.1388888888888889], 'false': [nan, 0.13888888888888892], 'true': [0.0, nan]}, {'': [0.0, 0.1388888888888889], 'false': [0.13888888888888887, nan], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan]}, {'': [0.014115033821302659, 0.0], 'true': [0.0, 0.0], 'false': [nan, 0.0], 'true,true': [0.0, 3.700743415417188e-17], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.0, 0.09826930452077899], 'false': [nan, 0.09826930452077903], 'true': [0.0, nan], 'true,true': [0.0, -3.700743415417188e-17]}, {'': [0.02413053112284629, 0.0], 'true': [0.0, 0.0], 'false': [nan, 0.0], 'true,false': [0.0, nan]}, {'': [0.013469525984111386, -5.551115123125783e-18], 'true': [0.013469525984111386, nan], 'true,true': [nan, 0.013469525984111386], 'true,true,false': [nan, 0.013469525984111386], 'false': [nan, -5.551115123125783e-18]}, {'': [0.0, 0.04553170812499439], 'false': [nan, 0.04553170812499438], 'true': [0.0, nan]}, {'': [0.014355644930623945, -2.7755575615628915e-18], 'true': [0.0, 0.01993839573697769], 'true,false': [0.01993839573697769, nan], 'false': [nan, -2.7755575615628915e-18]}, {'': [0.011011218787829059, 1.3877787807814458e-18], 'true': [0.011011218787829059, nan], 'true,true': [0.0, 0.013092957397633387]}, {'': [0.0205871119924298, nan], 'true': [0.008894232245717015, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(C, D).;true;true
2;true,true;bankboughtbank(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(F, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(C, D).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(C, D), bankboughtbank(E, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(C, E), bankboughtbank(E, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.02481560176617888;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.021767884192405735;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8523832062781437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.1476167937218563;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, A) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.010200659385962743;  // std dev = 0.768, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7090619720703777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.1311495605511951;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.3132013860753851;  // std dev = 0.260, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11691418175179176;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then return 0.20030077098153387;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.009946227787666387;  // std dev = 0.523, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), bankboughtbank(E, D) )
%   | then return 0.17012856540070986;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2699744359637374;  // std dev = 0.245, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10443942558524273;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(C, D), bankboughtbank(D, E) )
%   | then return 0.14743715121547174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20536236537791291;  // std dev = 0.229, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09506673826314008;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.16688945736455874;  // std dev = 0.211, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08719710953397912;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.960935
   AUC PR    = 0.016503
   CLL	      = -0.250887
   Precision = 0.012444 at threshold = 0.5
   Recall    = 0.996124
   F1        = 0.02458


Total learning time: 0.675 seconds
Total inference time: 7.459 seconds
AUC ROC: 0.960935


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.123851
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.434 seconds
Refined model CLL: -0.123851


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969339
   AUC PR    = 0.023675
   CLL	      = -0.229425
   Precision = 0.012618 at threshold = 0.5
   Recall    = 0.992248
   F1        = 0.024918


Total learning time: 5.231999999999999 seconds
Total inference time: 176.398 seconds
AUC ROC: 0.969339
Total revision time: 5.231999999999999
Best scored revision CLL: -0.123851


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 02:40:02
{'AUC ROC': 0.969339, 'AUC PR': 0.023675, 'CLL': -0.229425, 'Precision': [0.012618, 0.5], 'Recall': 0.992248, 'F1': 0.024918, 'Learning time': 5.231999999999999, 'Inference time': 176.398, 'parameter_5': {'AUC ROC': 0.969339, 'AUC PR': 0.023675, 'CLL': -0.229425, 'Precision': [0.012618, 0.5], 'Recall': 0.992248, 'F1': 0.024918, 'Learning time': 3.106, 'Inference time': 176.398}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( acquired(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A), companyalsoknownas(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(A, E), bankboughtbank(F, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( bankboughtbank(G, A), economicsectorcompany(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(C, I) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(J, K) )
%   | then return -0.04485324549538032;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then if ( companyalsoknownas(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( bankboughtbank(F, A), acquired(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(A, H), companyalsoknownas(H, A) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6600492534536265;  // std dev = 0.256, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( companyalsoknownas(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1305851131316895;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then if ( bankboughtbank(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4175135841583099;  // std dev = 9.13e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(G, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(H, I) )
%   | | | then return 0.3922959198179211;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03543508531187719;  // std dev = 0.850, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( bankboughtbank(E, D) )
%   | | then return 0.42724014504834174;  // std dev = 0.409, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11286393235405708;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( companyalsoknownas(A, F), companyalsoknownas(F, G) )
%   | | then if ( bankboughtbank(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23545834110860553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( bankboughtbank(I, A), acquired(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29702643612856905;  // std dev = 0.429, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(K, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10204744778113697;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, F) )
%   | then return 0.19578958904836888;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(G, A), companyalsoknownas(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.02702447620379386;  // std dev = 0.209, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D), companyalsoknownas(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(F, G) )
%   | | then return 0.21409033781062084;  // std dev = 0.450, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( companyalsoknownas(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09081275826003364;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(D, E) )
%   | then if ( bankboughtbank(C, E), companyalsoknownas(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18413255677825494;  // std dev = 0.428, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08358815653933896;  // std dev = 6.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.1610594831073588;  // std dev = 0.404, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( bankboughtbank(F, D) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07740405624640821;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.958703
   AUC PR    = 0.015855
   CLL	      = -0.240648
   Precision = 0.022447 at threshold = 0.5
   Recall    = 0.903101
   F1        = 0.043805


Total learning time: 3.071 seconds
Total inference time: 209.774 seconds
AUC ROC: 0.958703


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121202
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.973 seconds
Parameter learned model CLL: -0.121202


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,false': 'acquired(F, G), economicsectorcompany(B, F)', 'false': 'companyalsoknownas(H, A), companyalsoknownas(I, H)'}, {'true,true': [0.0, 0, 6], 'true,false,true': [2.11e-08, 0, 3], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.953, 10, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(A, E), bankboughtbank(F, E)', 'true,false': 'bankboughtbank(G, A), economicsectorcompany(H, G)', 'true,false,false': 'bankboughtbank(C, I)', 'false': 'companyalsoknownas(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.11e-08, 0, 6], 'true,false,false,false': [0.0, 0, 3], 'false,true': [0.953, 10, 1], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,true': 'companyalsoknownas(D, E)', 'true,false': 'bankboughtbank(F, A), acquired(C, G)', 'true,false,false': 'companyalsoknownas(A, H), companyalsoknownas(H, A)', 'false': 'companyalsoknownas(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.256, 0, 3], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'bankboughtbank(C, E)', 'true,true': 'bankboughtbank(F, A)', 'true,false': 'companyalsoknownas(G, A)', 'true,false,false': 'bankboughtbank(H, I)', 'false': 'companyalsoknownas(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [9.13e-09, 0, 6], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 2], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.85, 10, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D)', 'true,false': 'bankboughtbank(E, D)', 'false': 'companyalsoknownas(F, A)'}, {'true,true': [0.0, 0, 6], 'true,false,true': [0.409, 0, 4], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'companyalsoknownas(A, F), companyalsoknownas(F, G)', 'true,true,true': 'bankboughtbank(H, G)', 'true,true,false': 'bankboughtbank(I, A), acquired(I, J)', 'false': 'companyalsoknownas(K, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.429, 0, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.73e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), acquired(C, D)', 'true': 'companyalsoknownas(E, F)', 'false': 'companyalsoknownas(G, A), companyalsoknownas(A, G)'}, {'true,true': [0.035, 0, 9], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.209, 10, 1]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(C, D), companyalsoknownas(E, D)', 'true,false': 'acquired(F, G)', 'false': 'companyalsoknownas(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.45, 0, 10], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'bankboughtbank(D, E)', 'true,true': 'bankboughtbank(C, E), companyalsoknownas(E, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.428, 0, 10], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 10, 0]}], ['companyeconomicsector(A, B)', {'': 'companyalsoknownas(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'bankboughtbank(F, D)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [0.404, 0, 10], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [-2.9605947323337506e-16, 0.08264462809917354], 'false': [nan, 0.0826446280991736], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'true,false': [1.4802973661668753e-16, nan]}, {'': [-1.9737298215558337e-16, 0.08264462809917356], 'false': [0.0826446280991736, nan], 'true': [nan, -1.9737298215558337e-16], 'true,false': [nan, -1.9737298215558337e-16], 'true,false,false': [7.401486830834377e-17, 0.0]}, {'': [0.008876378612163994, -2.7755575615628915e-18], 'true': [-7.401486830834377e-17, 0.01849245544200878], 'true,false': [nan, 0.01849245544200878], 'true,false,false': [0.0, 0.02191698422756601], 'false': [nan, -2.7755575615628915e-18], 'true,true': [nan, -7.401486830834377e-17]}, {'': [0.00010991392996283366, 0.06565176302942412], 'false': [nan, 0.06565176302942412], 'true': [7.401486830834377e-17, 0.00014131790995212482], 'true,false': [0.0, 0.0], 'true,true': [nan, 7.401486830834377e-17], 'true,false,false': [0.0, nan]}, {'': [0.019423925951603183, 0.0], 'true': [-3.700743415417188e-17, 0.041750847928434864], 'true,false': [0.041750847928434864, nan], 'false': [nan, 0.0]}, {'': [0.01871639558309317, 1.3877787807814458e-18], 'true': [0.01871639558309317, nan], 'true,true': [0.0, 0.020416932059887], 'true,true,false': [nan, 0.020416932059887], 'false': [nan, 1.3877787807814458e-18], 'true,true,true': [nan, 0.0]}, {'': [0.00013469867084204342, 0.043618615148464865], 'false': [nan, 0.04361861514846485], 'true': [0.00013469867084204342, nan]}, {'': [0.02021831336972261, -1.3877787807814458e-18], 'true': [nan, 0.020218313369722594], 'true,false': [0.02021831336972261, nan], 'false': [nan, -1.3877787807814458e-18]}, {'': [0.01828283367125666, 4.163336342344337e-18], 'true': [0.01828283367125666, nan], 'true,true': [nan, 0.018282833671256642]}, {'': [0.022381565977552826, nan], 'true': [0.016330702154542832, -2.0816681711721684e-18], 'true,false': [-2.0816681711721684e-18, nan], 'true,false,true': [nan, -2.0816681711721684e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
0;true;bankboughtbank(C, E).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
1;true;bankboughtbank(C, I).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;bankboughtbank(C, D).;true;true
2;true,false;companyalsoknownas(A, H), companyalsoknownas(H, A).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
3;true;bankboughtbank(C, E).;true;true
3;true,false;companyalsoknownas(G, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;bankboughtbank(C, D).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;true;companyalsoknownas(A, F), companyalsoknownas(F, G).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), acquired(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.0010060779566550668;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 8.835646163369372E-4;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(A, E), companyalsoknownas(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6562172093122078;  // std dev = 0.247, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1420812455559455;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( bankboughtbank(C, E) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.393209854581016;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( acquired(G, A) )
%   | then return -0.1176166487831813;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.05110396399425139;  // std dev = 0.790, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( bankboughtbank(C, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.419445195974946;  // std dev = 0.380, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.09235664128601107;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12532094596616247;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(A, D), companyalsoknownas(D, E) )
%   | then return 0.23686446242306525;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.29327250538666716;  // std dev = 0.131, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( acquired(F, A) )
%   | then return -0.09550727707122826;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.103775153386558;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then return 0.1967719995810548;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.07732401426396765;  // std dev = 0.000478, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0031108056538453133;  // std dev = 0.244, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.21019422674086502;  // std dev = 0.128, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then return -0.07198450703041999;  // std dev = 0.000448, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10224483415350523;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.18048156649427977;  // std dev = 0.121, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then return -0.06732143324302413;  // std dev = 0.000421, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.093238164339965;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then return 0.15764483588106806;  // std dev = 0.114, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( cityhascompanyoffice(D, A) )
%   | then return -0.06321552300635788;  // std dev = 0.000397, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08565194024183044;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.957725
   AUC PR    = 0.015504
   CLL	      = -0.241758
   Precision = 0.014267 at threshold = 0.5
   Recall    = 0.972868
   F1        = 0.028122


Total learning time: 1.049 seconds
Total inference time: 9.377 seconds
AUC ROC: 0.957725


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.117227
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.464 seconds
Refined model CLL: -0.117227


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.957725
   AUC PR    = 0.015504
   CLL	      = -0.241758
   Precision = 0.014267 at threshold = 0.5
   Recall    = 0.972868
   F1        = 0.028122


Total learning time: 5.557 seconds
Total inference time: 9.377 seconds
AUC ROC: 0.957725
Total revision time: 5.557
Best scored revision CLL: -0.117227


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 02:43:47
{'AUC ROC': 0.957725, 'AUC PR': 0.015504, 'CLL': -0.241758, 'Precision': [0.014267, 0.5], 'Recall': 0.972868, 'F1': 0.028122, 'Learning time': 5.557, 'Inference time': 9.377, 'parameter_10': {'AUC ROC': 0.958703, 'AUC PR': 0.015855, 'CLL': -0.240648, 'Precision': [0.022447, 0.5], 'Recall': 0.903101, 'F1': 0.043805, 'Learning time': 3.071, 'Inference time': 209.774}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.024204006076958388;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then if ( acquired(A, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( bankboughtbank(J, K) )
%   | then return -0.021283130990843033;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( acquired(A, F), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5403043966793832;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( bankboughtbank(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.13640363003188422;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.41832858749138024;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.019736831850039202;  // std dev = 1.217, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.3205988752935635;  // std dev = 0.000283, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(D, E) )
%   | | then return 0.4035288351544879;  // std dev = 0.829, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11903214045832662;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27729643022235045;  // std dev = 0.841, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10710496094934487;  // std dev = 1.05e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.20436638328679294;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.023232445895046142;  // std dev = 0.255, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.17456994163917283;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.20602308012833967;  // std dev = 0.850, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09526348781157981;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0.15082449583992985;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.17421572690258186;  // std dev = 0.842, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08736345646281488;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.14713951580715542;  // std dev = 0.835, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( acquired(D, F) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08064436537532595;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.964947
   AUC PR    = 0.01899
   CLL	      = -0.206611
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 6.884 seconds
Total inference time: 186.454 seconds
AUC ROC: 0.964947


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995618
   CLL	      = -0.159112
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 1.491 seconds
Parameter learned model CLL: -0.159112


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [0.0, 0, 4], 'true,false,true': [0.0, 0, 9], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.328, 15, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,true': 'acquired(A, C)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 3], 'true,false,false,false': [2.98e-08, 0, 9], 'false,true': [1.328, 15, 2], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(A, F), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.817, 1, 4], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.005, 0, 9], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.217, 15, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'bankboughtbank(F, A)'}, {'true,true': [0.000283, 0, 11], 'true,false,true': [0.829, 1, 4], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(A, H), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.841, 1, 15], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [0.014, 0, 13], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.255, 15, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.85, 1, 13], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.842, 1, 13], 'true,false': [0.0, 0, 0], 'false': [8.33e-09, 14, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(D, F)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [0.835, 1, 15], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [3.73e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [-2.7328566760003855e-16, 0.10380622837370242], 'false': [nan, 0.10380622837370246], 'true': [0.0, -2.9605947323337506e-16], 'true,false': [-2.9605947323337506e-16, nan]}, {'': [0.0, 0.10380622837370243], 'false': [0.10380622837370243, nan], 'true': [nan, 0.0], 'true,false': [0.0, -7.401486830834377e-17], 'true,false,true': [nan, 0.0], 'true,false,false': [0.0, 9.868649107779169e-17]}, {'': [0.0417626707572491, -7.93016446160826e-18], 'true': [-2.0185873175002846e-16, 0.13348457670065134], 'true,false': [nan, 0.13348457670065134], 'true,false,false': [nan, 0.13348457670065134], 'false': [nan, -7.93016446160826e-18], 'true,true': [0.0, -1.4802973661668753e-16]}, {'': [1.7509743070507857e-06, 0.08717980167124473], 'false': [nan, 0.08717980167124482], 'true': [0.0, 2.3248065152229693e-06], 'true,false': [nan, 2.3248065152229693e-06], 'true,false,false': [2.3248065152229693e-06, nan], 'true,true': [0.0, 0.0]}, {'': [0.044467761285137505, 9.912705577010326e-18], 'true': [7.2929386772038e-09, 0.1375686225262325], 'true,false': [0.1375686225262325, nan], 'false': [nan, 9.912705577010326e-18]}, {'': [0.044213326500364164, 7.93016446160826e-18], 'true': [0.044213326500364164, nan], 'true,true': [nan, 0.044213326500364164], 'true,true,false': [nan, 0.04421332650036415], 'false': [nan, 7.93016446160826e-18]}, {'': [1.5549273181506648e-05, 0.06480650378841679], 'false': [nan, 0.06480650378841679], 'true': [1.5549273181506648e-05, nan]}, {'': [0.04530991963899783, -3.96508223080413e-18], 'true': [0.0, 0.05165910281160944], 'true,false': [0.051659102811609466, nan], 'false': [nan, -3.96508223080413e-18]}, {'': [0.044403549734885764, 4.956352788505163e-18], 'true': [0.044403549734885764, nan], 'true,true': [0.0, 0.050678520271398284]}, {'': [0.03615699085620161, nan], 'true': [0.043581126142985815, 9.912705577010326e-19], 'true,false': [9.912705577010326e-19, nan], 'true,false,true': [nan, 9.912705577010326e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(E, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(A, G), economicsectorcompany(H, G).;true;true
1;true,false;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;bankboughtbank(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(E, C).;true;true
3;true,true;acquired(A, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(D, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(D, C), bankboughtbank(E, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(D, C), bankboughtbank(D, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.058148935099512175;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, C) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109543;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(I, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.05092203251355425;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5287543532613149;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( acquired(F, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.15565370239533147;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4189548744864403;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(H, A) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0331260564362376;  // std dev = 0.366, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(A, E) )
%   | | then return 0.3205548910471181;  // std dev = 0.000314, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32048762414153315;  // std dev = 0.000142, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.38388597622123166;  // std dev = 0.823, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(G, A) )
%   | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14022087362153024;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.2550651471393286;  // std dev = 0.000274, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.27629496155174416;  // std dev = 0.239, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(F, A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12415291194322374;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E) )
%   | then return 0.20968206595538752;  // std dev = 0.000239, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2048081025345361;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.013067339903314516;  // std dev = 0.278, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.17457638474860326;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, F) )
%   | | then return 0.17704101278195744;  // std dev = 0.000210, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20665891791193722;  // std dev = 0.263, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( acquired(H, A) )
%   | | then return -0.07783364962170479;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10998465933400269;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(D, E) )
%   | then return 0.1508293974520809;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( acquired(A, F) )
%   | | then return 0.1527017675106475;  // std dev = 0.000186, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17237932844050233;  // std dev = 0.261, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( acquired(G, A) )
%   | then return -0.07142734269597359;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09967127162381174;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return 0.13152458550325585;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14315488438319723;  // std dev = 0.228, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( cityhascompanyoffice(E, A) )
%   | then return -0.06414684004200663;  // std dev = 0.000156, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0840858720655611;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.964789
   AUC PR    = 0.018656
   CLL	      = -0.209013
   Precision = 0.015387 at threshold = 0.5
   Recall    = 0.94186
   F1        = 0.030278


Total learning time: 1.314 seconds
Total inference time: 11.771 seconds
AUC ROC: 0.964789


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995618
   CLL	      = -0.156522
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.532 seconds
Refined model CLL: -0.156522


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.964789
   AUC PR    = 0.018656
   CLL	      = -0.209013
   Precision = 0.015387 at threshold = 0.5
   Recall    = 0.94186
   F1        = 0.030278


Total learning time: 10.221 seconds
Total inference time: 11.771 seconds
AUC ROC: 0.964789
Total revision time: 10.221
Best scored revision CLL: -0.156522


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 02:47:17
{'AUC ROC': 0.964789, 'AUC PR': 0.018656, 'CLL': -0.209013, 'Precision': [0.015387, 0.5], 'Recall': 0.94186, 'F1': 0.030278, 'Learning time': 10.221, 'Inference time': 11.771, 'parameter_15': {'AUC ROC': 0.964947, 'AUC PR': 0.01899, 'CLL': -0.206611, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 6.884, 'Inference time': 186.454}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.05094197399139689;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then if ( acquired(A, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( bankboughtbank(J, K) )
%   | then return -0.04485324549538034;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( acquired(A, F), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5457239951406309;  // std dev = 0.817, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( bankboughtbank(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.13058511313168947;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.4180551652914106;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03774238816002726;  // std dev = 1.237, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.320633197086651;  // std dev = 0.000215, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( acquired(D, E) )
%   | | then return 0.39480369238158436;  // std dev = 0.835, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11263311839642727;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.273565620765432;  // std dev = 0.848, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10185732845594943;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.2049440433434216;  // std dev = 0.016, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.033992347485642914;  // std dev = 0.229, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.1750592885555846;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.20072359007632076;  // std dev = 0.862, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0900843446028663;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0.14956453653110013;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1736375688063063;  // std dev = 0.852, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08296781108605426;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.14615737131056217;  // std dev = 0.844, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( acquired(D, F) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07686976692813324;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.964983
   AUC PR    = 0.019018
   CLL	      = -0.200127
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 7.924 seconds
Total inference time: 192.275 seconds
AUC ROC: 0.964983


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.997527
   CLL	      = -0.144031
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 1.782 seconds
Parameter learned model CLL: -0.144031


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [0.0, 0, 5], 'true,false,true': [0.0, 0, 13], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.348, 20, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,true': 'acquired(A, C)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 4], 'true,false,false,false': [4.21e-08, 0, 13], 'false,true': [1.348, 20, 2], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(A, F), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.817, 1, 5], 'false,true': [0.0, 0, 0], 'false,false': [7.45e-09, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.004, 0, 13], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.237, 20, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'bankboughtbank(F, A)'}, {'true,true': [0.000215, 0, 15], 'true,false,true': [0.835, 1, 5], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(A, H), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.848, 1, 20], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.29e-08, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [0.016, 0, 18], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.229, 20, 2]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.862, 1, 18], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.003, 0, 4], 'true,true,false': [0.852, 1, 16], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(D, F)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [0.844, 1, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [-2.9605947323337506e-16, 0.08264462809917356], 'false': [nan, 0.0826446280991736], 'true': [0.0, -2.7328566760003855e-16], 'true,false': [-2.7328566760003855e-16, nan]}, {'': [9.868649107779169e-17, 0.08264462809917356], 'false': [0.08264462809917349, nan], 'true': [nan, 9.868649107779169e-17], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0], 'true,false,false': [0.0, 1.3664283380001927e-16]}, {'': [0.031791571344456905, 2.921639538487254e-18], 'true': [-2.3684757858670006e-16, 0.11120408779122944], 'true,false': [nan, 0.11120408779122944], 'true,false,false': [nan, 0.11120408779122944], 'false': [nan, 2.921639538487254e-18], 'true,true': [0.0, -2.0185873175002846e-16]}, {'': [7.649600450114017e-07, 0.06954815061497081], 'false': [nan, 0.06954815061497083], 'true': [4.4408920985006264e-17, 9.77700412459097e-07], 'true,false': [nan, 9.77700412459097e-07], 'true,false,false': [9.77700412459097e-07, nan], 'true,true': [0.0, -3.700743415417188e-17]}, {'': [0.0343542454532339, 0.0], 'true': [3.092917063203989e-09, 0.11631037823095781], 'true,false': [0.11631037823095781, nan], 'false': [nan, 0.0]}, {'': [0.03427607937091557, 8.764918615461762e-18], 'true': [0.03427607937091557, nan], 'true,true': [nan, 0.03427607937091557], 'true,true,false': [nan, 0.03427607937091557], 'false': [nan, 8.764918615461762e-18]}, {'': [1.5048549702042132e-05, 0.05228769091014378], 'false': [nan, 0.052287690910143805], 'true': [1.5048549702042132e-05, nan]}, {'': [0.035422192015095895, -1.460819769243627e-18], 'true': [0.0, 0.039088114627820775], 'true,false': [0.03908811462782082, nan], 'false': [nan, -1.460819769243627e-18]}, {'': [0.03467602531401306, 0.0], 'true': [0.03467602531401306, nan], 'true,true': [2.6638477985431452e-06, 0.04272408028074487]}, {'': [0.03021678986836641, nan], 'true': [0.03392876563976229, -2.1912296538654404e-18], 'true,false': [-2.1912296538654404e-18, nan], 'true,false,true': [nan, -2.1912296538654404e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(E, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(A, G), economicsectorcompany(H, G).;true;true
1;true,false;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;bankboughtbank(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(E, C).;true;true
3;true,true;acquired(A, F).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
4;true;acquired(D, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(D, C), bankboughtbank(E, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(D, C), bankboughtbank(D, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(G, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.024815601766178853;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(F, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, C) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109542;  // std dev = 1.49e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(I, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.021767884192405756;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5372081548455475;  // std dev = 0.818, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1476167937218563;  // std dev = 1.86e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4185341666097605;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(H, A) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.012021890615852097;  // std dev = 0.341, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( acquired(E, A) )
%   | | then return 0.3206377474706136;  // std dev = 0.000182, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.32060069762584553;  // std dev = 0.000222, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3205173354751174;  // std dev = 0.000208, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.380196085505153;  // std dev = 0.828, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(H, A) )
%   | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1313572281178509;  // std dev = 1.86e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.2550986002418524;  // std dev = 0.000183, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.25512637637707086;  // std dev = 0.000156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.276226027297784;  // std dev = 0.223, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(G, A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11708087754910942;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then return 0.20971670199875447;  // std dev = 0.000182, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20516304709264968;  // std dev = 0.003, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(G, A) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.00406153744328207;  // std dev = 0.294, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.1745828378216674;  // std dev = 1.23e-05, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19464301705789877;  // std dev = 0.193, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then return -0.07324622576333704;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0971569197140348;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(D, E) )
%   | then return 0.15008522436185426;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( cityhascompanyoffice(F, A) )
%   | | then return 0.15048021504506529;  // std dev = 0.000110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17216132877813514;  // std dev = 0.231, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(H, A) )
%   | | then return -0.06691843602866372;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09633143397189302;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(A, D) )
%   | then return 0.13123569176045158;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( cityhascompanyoffice(E, A) )
%   | | then return 0.1322407457286653;  // std dev = 5.70e-05, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14592952986485255;  // std dev = 0.221, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( acquired(F, A) )
%   | then return -0.06319234605944146;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( cityhascompanyoffice(G, A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08826550784964457;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.964866
   AUC PR    = 0.018795
   CLL	      = -0.204327
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 1.719 seconds
Total inference time: 12.307 seconds
AUC ROC: 0.964866


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.997527
   CLL	      = -0.14169
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.598 seconds
Refined model CLL: -0.14169


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.964866
   AUC PR    = 0.018795
   CLL	      = -0.204327
   Precision = 0.02752 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.053333


Total learning time: 12.023 seconds
Total inference time: 12.307 seconds
AUC ROC: 0.964866
Total revision time: 12.023
Best scored revision CLL: -0.14169


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 02:50:54
{'AUC ROC': 0.964866, 'AUC PR': 0.018795, 'CLL': -0.204327, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 12.023, 'Inference time': 12.307, 'parameter_20': {'AUC ROC': 0.964983, 'AUC PR': 0.019018, 'CLL': -0.200127, 'Precision': [0.02752, 0.5], 'Recall': 0.860465, 'F1': 0.053333, 'Learning time': 7.924, 'Inference time': 192.275}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
0;true;teamplaysinleague(A, D), athleteledsportsteam(C, E).;false;true
0;true,false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;true,false,true;athleteplaysinleague(H, F), athleteplayssport(H, B).;false;false
0;true,false,false;athleteledsportsteam(C, I), teamplaysinleague(A, J).;false;false
0;false;teamalsoknownas(K, A), teamalsoknownas(L, K).;true;false
0;false,true;teamplaysagainstteam(A, M), athleteledsportsteam(N, L).;true;false
0;false,true,true;teamplaysinleague(A, P).;false;false
1;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
1;true;teamalsoknownas(A, E), athleteledsportsteam(F, E).;true;true
1;true,true;athleteplaysinleague(F, D), athleteledsportsteam(C, G).;false;false
1;true,false;athleteledsportsteam(H, A), athleteplayssport(H, I).;true;true
1;true,false,true;athleteledsportsteam(C, A), teamplaysinleague(A, D).;false;false
1;true,false,false;teamplaysinleague(A, D), athleteledsportsteam(C, J).;false;false
1;false;teamplaysinleague(A, K).;false;true
1;false,false;teamplaysagainstteam(L, A), teamalsoknownas(M, L).;false;false
2;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
2;true;athleteledsportsteam(C, D).;true;true
2;true,true;teamplaysinleague(A, E).;false;true
2;true,true,false;athleteplaysforteam(C, F), teamalsoknownas(D, F).;false;false
2;true,false;athleteplaysforteam(G, A), teamplaysinleague(A, H).;true;true
2;true,false,true;athleteledsportsteam(G, A), athleteplaysinleague(C, I).;false;false
2;true,false,false;teamalsoknownas(A, J), teamalsoknownas(J, A).;false;false
2;false;teamplaysagainstteam(A, K), teamalsoknownas(L, A).;false;false
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;athleteledsportsteam(C, E).;true;true
3;true,true;teamplaysagainstteam(A, F), athleteledsportsteam(G, A).;false;true
3;true,true,false;teamplaysinleague(A, H), teamplaysagainstteam(A, I).;false;false
3;true,false;teamalsoknownas(J, A).;false;true
3;true,false,false;teamplaysagainstteam(K, A), athleteledsportsteam(L, K).;false;false
3;false;teamalsoknownas(M, A), athleteplaysforteam(N, M).;true;false
3;false,true;teamplaysagainstteam(P, A), teamplaysagainstteam(P, M).;false;false
4;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;true;athleteplaysforteam(C, D).;true;true
4;true,true;athleteledsportsteam(C, D), teamplaysinleague(A, E).;false;true
4;true,true,false;athleteledsportsteam(F, D).;false;false
4;true,false;teamplaysagainstteam(G, A).;false;false
4;false;teamalsoknownas(H, A), teamplaysagainstteam(A, I).;true;false
4;false,true;teamplaysinleague(A, J).;true;false
4;false,true,true;teamalsoknownas(K, I).;false;false
5;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
5;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
5;true,true;teamalsoknownas(A, F), teamalsoknownas(F, G).;true;true
5;true,true,true;teamplaysagainstteam(G, A), athleteledsportsteam(H, G).;false;false
5;true,true,false;athleteledsportsteam(I, A), athleteplaysinleague(I, J).;false;false
5;true,false;teamalsoknownas(K, A), athleteplaysforteam(L, K).;false;true
5;true,false,false;teamplaysagainstteam(M, A), athleteplaysinleague(C, N).;false;false
5;false;teamplaysagainstteam(A, P), teamalsoknownas(Q, A).;false;false
6;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
6;true;teamplaysagainstteam(A, E), teamplaysinleague(A, F).;true;false
6;true,true;teamplaysinleague(E, D).;true;true
6;true,true,true;teamalsoknownas(E, G), athleteplaysforteam(C, G).;false;false
6;true,true,false;athleteplaysinleague(H, F), athleteplaysforteam(H, E).;false;false
6;false;teamplaysinleague(A, I).;false;true
6;false,false;teamalsoknownas(J, A), teamalsoknownas(A, J).;false;true
6;false,false,false;teamplaysagainstteam(K, A).;false;false
7;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
7;true;teamplaysagainstteam(A, D), athleteplaysforteam(C, D).;true;true
7;true,true;athleteledsportsteam(C, E), teamalsoknownas(F, E).;false;true
7;true,true,false;athleteplaysforteam(G, A), athleteplaysinleague(G, H).;false;false
7;true,false;teamplaysagainstteam(A, I), athleteledsportsteam(J, I).;true;true
7;true,false,true;athleteplayssport(J, K).;false;false
7;true,false,false;athleteplaysforteam(C, L), athleteledsportsteam(M, L).;false;false
7;false;teamalsoknownas(N, A), teamplaysagainstteam(A, P).;false;false
8;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;false
8;true;athleteplaysforteam(C, D), athleteledsportsteam(E, D).;true;true
8;true,true;teamplaysinleague(A, F).;true;true
8;true,true,true;teamplaysinleague(D, F).;false;false
8;true,true,false;athleteledsportsteam(C, D), teamalsoknownas(D, G).;false;false
8;true,false;teamplaysinleague(A, H), athleteplaysinleague(I, H).;true;true
8;true,false,true;teamplaysagainstteam(A, J).;false;false
8;true,false,false;athleteplaysforteam(C, K).;false;false
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
9;true;athleteplayssport(E, B), athleteplaysforteam(E, D).;false;true
9;true,false;teamplaysagainstteam(C, D), athleteledsportsteam(F, C).;true;false
9;true,false,true;athleteplayssport(G, B), athleteplayssport(F, H).;false;false
9;false;athleteplayssport(I, B).;true;false
9;false,true;teamplaysagainstteam(A, J), athleteledsportsteam(K, J).;true;true
9;false,true,true;teamalsoknownas(L, A).;false;false
9;false,true,false;teamalsoknownas(A, M), teamplaysinleague(A, N).;false;false


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( companyalsoknownas(F, G), economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A), bankboughtbank(I, H) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0039200304177291635;  // std dev = 1.857, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(A, E), acquired(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( acquired(A, G), economicsectorcompany(H, G) )
%   | | then if ( acquired(A, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( acquired(I, C) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( bankboughtbank(J, K) )
%   | then return -0.0034435173140947677;  // std dev = 1.857, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5770576150625517;  // std dev = 0.293, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( acquired(A, F), companyalsoknownas(C, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( bankboughtbank(A, H), bankboughtbank(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.49516424701362116;  // std dev = 1.103, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( bankboughtbank(I, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14095706682597695;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.41224800432404285;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41224800432404285;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( bankboughtbank(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(H, I) )
%   | | | then return 0.4179982204392993;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0.7738721151563073;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.03319774725553039;  // std dev = 1.510, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then return 0.33312440421398315;  // std dev = 0.287, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( acquired(D, E) )
%   | | then return 0.3710569931452924;  // std dev = 1.098, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(F, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12115707268766485;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( bankboughtbank(A, F), bankboughtbank(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( acquired(A, H), companyalsoknownas(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.275340142709559;  // std dev = 1.136, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(J, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10883705495687003;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( bankboughtbank(E, F) )
%   | then return 0.20294512519377053;  // std dev = 0.011, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(G, A), bankboughtbank(A, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.01616197316762818;  // std dev = 0.262, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.17330300847575164;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( companyalsoknownas(F, G) )
%   | | then return 0.2049021918421318;  // std dev = 1.145, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( bankboughtbank(H, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09729269436264316;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, E) )
%   | then if ( acquired(D, C), bankboughtbank(D, F) )
%   | | then return 0.14826741223065315;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17508100494599083;  // std dev = 1.134, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08907619263493487;  // std dev = 1.39e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, E) )
%   | then return 0.14548383326699985;  // std dev = 1.126, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else if ( acquired(D, F) )
%   | | then if ( economicsectorcompany(B, G), economicsectorcompany(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08210807032902562;  // std dev = 1.29e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.974349
   AUC PR    = 0.034476
   CLL	      = -0.210924
   Precision = 0.026182 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.050818


Total learning time: 9.857 seconds
Total inference time: 188.209 seconds
AUC ROC: 0.974349


Results scoring model
   AUC ROC   = 0.9952
   AUC PR    = 0.995286
   CLL	      = -0.16561
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.93617


Total scoring time: 1.928 seconds
Parameter learned model CLL: -0.16561


Structure after Parameter Learning
[['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,false': 'companyalsoknownas(F, G), economicsectorcompany(B, F)', 'false': 'bankboughtbank(H, A), bankboughtbank(I, H)'}, {'true,true': [0.0, 0, 6], 'true,false,true': [0.0, 0, 15], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.857, 25, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(A, E), acquired(E, F)', 'true,false': 'acquired(A, G), economicsectorcompany(H, G)', 'true,false,true': 'acquired(A, C)', 'true,false,false': 'acquired(I, C)', 'false': 'bankboughtbank(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [5.16e-08, 0, 15], 'false,true': [1.857, 25, 4], 'false,false': [0.0, 0, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,true': 'bankboughtbank(D, E)', 'true,false': 'acquired(A, F), companyalsoknownas(C, G)', 'true,false,false': 'bankboughtbank(A, H), bankboughtbank(H, A)', 'false': 'bankboughtbank(I, A)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.293, 0, 14], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.103, 2, 6], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'acquired(E, C)', 'true,true': 'acquired(A, F)', 'true,false': 'bankboughtbank(G, A)', 'true,false,false': 'acquired(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.029, 0, 15], 'true,false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false': [1.51, 25, 3]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C)', 'true,false': 'acquired(D, E)', 'false': 'bankboughtbank(F, A)'}, {'true,true': [0.287, 0, 19], 'true,false,true': [1.098, 2, 6], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'bankboughtbank(A, F), bankboughtbank(F, G)', 'true,true,false': 'acquired(A, H), companyalsoknownas(H, I)', 'false': 'bankboughtbank(J, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.136, 2, 25], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C), companyalsoknownas(C, D)', 'true': 'bankboughtbank(E, F)', 'false': 'bankboughtbank(G, A), bankboughtbank(A, G)'}, {'true,true': [0.011, 0, 21], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.262, 25, 4]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, C), bankboughtbank(E, D)', 'true,false': 'companyalsoknownas(F, G)', 'false': 'bankboughtbank(H, A)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [1.145, 2, 22], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'economicsectorcompany(B, C)', 'true': 'acquired(D, E)', 'true,true': 'acquired(D, C), bankboughtbank(D, F)'}, {'true,true,true': [0.004, 0, 5], 'true,true,false': [1.134, 2, 20], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 23, 0]}], ['companyeconomicsector(A, B)', {'': 'bankboughtbank(C, D)', 'true': 'economicsectorcompany(B, E)', 'true,false': 'acquired(D, F)', 'true,false,true': 'economicsectorcompany(B, G), economicsectorcompany(H, F)'}, {'true,true': [1.126, 2, 25], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [1.29e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.0, 0.11890606420927466], 'false': [nan, 0.11890606420927455], 'true': [-1.4802973661668753e-16, -2.3684757858670006e-16], 'true,false': [-2.3684757858670006e-16, nan]}, {'': [2.5376526277146434e-16, 0.11890606420927469], 'false': [0.11890606420927466, nan], 'true': [nan, 2.5376526277146434e-16], 'true,false': [0.0, 1.7763568394002506e-16], 'true,false,false': [0.0, 1.7763568394002506e-16], 'true,false,true': [nan, 0.0]}, {'': [0.04953473323028911, -4.827056628805028e-18], 'true': [0.004598197952042159, 0.15217458218916446], 'true,false': [nan, 0.15217458218916446], 'true,false,false': [nan, 0.15217458218916446], 'true,true': [-4.4408920985006264e-17, 0.00611659381772497], 'false': [nan, -4.827056628805028e-18]}, {'': [4.673235784518377e-05, 0.10028146999086879], 'false': [0.0, 0.08140220062012762], 'true': [0.0, 5.597816230569208e-05], 'true,false': [nan, 5.597816230569208e-05], 'true,false,false': [5.597816230569208e-05, nan], 'true,true': [0.0, 0.0]}, {'': [0.048037037034733665, -4.827056628805028e-18], 'true': [0.004329354780215607, 0.1508302362870808], 'true,false': [0.1508302362870808, nan], 'false': [nan, -4.827056628805028e-18]}, {'': [0.047798814054524595, 4.827056628805028e-18], 'true': [0.047798814054524595, nan], 'true,true': [nan, 0.047798814054524595], 'true,true,false': [nan, 0.04779881405452456], 'false': [nan, 4.827056628805028e-18]}, {'': [5.974530619895766e-06, 0.06859014936646494], 'false': [nan, 0.06859014936646496], 'true': [5.974530619895766e-06, nan]}, {'': [0.04862228269390115, 0.0], 'true': [0.0, 0.054589122654036336], 'true,false': [0.054589122654036315, nan], 'false': [nan, 0.0]}, {'': [0.04771266435186705, 8.4473491004088e-18], 'true': [0.04771266435186705, nan], 'true,true': [3.8044013097121577e-06, 0.05842244470599461]}, {'': [0.03821952492419666, nan], 'true': [0.0469497836998388, 7.240584943207542e-18], 'true,false': [7.240584943207542e-18, nan], 'true,false,true': [nan, 7.240584943207542e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
0;true;acquired(E, C).;true;true
1;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
1;true;acquired(A, G), economicsectorcompany(H, G).;true;true
1;true,false;acquired(I, C).;true;true
2;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
2;true;acquired(D, C).;true;true
2;true,true;bankboughtbank(D, E).;true;true
3;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
3;true;acquired(E, C).;true;true
3;true,true;acquired(A, F).;true;true
3;false;bankboughtbank(J, A).;true;true
4;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
5;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
6;;companyeconomicsector(A, B) :- economicsectorcompany(B, C), companyalsoknownas(C, D).;true;true
7;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
7;true;acquired(D, C), bankboughtbank(E, D).;true;true
8;;companyeconomicsector(A, B) :- economicsectorcompany(B, C).;true;true
8;true;acquired(D, C), bankboughtbank(D, F).;true;true
9;;companyeconomicsector(A, B) :- economicsectorcompany(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0039200304177291175;  // std dev = 0.345, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(A, E), economicsectorcompany(F, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( acquired(G, C) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.14137455179685335;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(I, A), companyceo(I, J) )
%   | | then return -0.14137455179685335;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0691517639926203;  // std dev = 0.408, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C) )
%   | then if ( bankboughtbank(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( acquired(F, A) )
%   | | | then return 0.6535847305507053;  // std dev = 0.241, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4895257376295738;  // std dev = 0.391, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.12506734316641102;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(H, A), companyceo(H, I) )
%   | | then return -0.12506734316641102;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1499786818404529;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C) )
%   | then if ( acquired(A, F) )
%   | | then return 0.4056758567728218;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.4115947204655659;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.42073234123507675;  // std dev = 0.006, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( bankboughtbank(G, A) )
%   | then return 0.7467178911663881;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( cityhascompanyoffice(H, A) )
%   | | then return -0.11201103475181581;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( acquired(I, A) )
%   | | | then return -0.11696942109334706;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.017661247506196145;  // std dev = 1.453, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.37649831677528145;  // std dev = 0.239, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyalsoknownas(A, E) )
%   | | then return 0.32495366673673237;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(F, A) )
%   | | | then return 0.32067490886594074;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.33862969978660207;  // std dev = 1.100, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.10134460867866354;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(H, A), companyceo(H, I) )
%   | | then return -0.10089392099316519;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.13273648693062817;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then return 0.33174573979246386;  // std dev = 0.193, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(E, A) )
%   | | then return 0.23376119034179596;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.25807304317603985;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.27017027199916044;  // std dev = 1.100, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.09248047257373433;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(H, A) )
%   | | then return -0.09552538605419852;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1192215924382063;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( companyalsoknownas(A, E) )
%   | then return 0.21180984061337632;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(F, A) )
%   | | then return 0.19452223955317918;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.2039554206736457;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20505476777233494;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.08500581521496932;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(I, A) )
%   | | then return 0.011455430889356966;  // std dev = 0.443, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.0022005034336505915;  // std dev = 0.312, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(E, D) )
%   | then return 0.17299535737888103;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( acquired(F, A) )
%   | | then return 0.24284655495843835;  // std dev = 0.198, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( cityhascompanyoffice(G, A) )
%   | | | then return 0.1739954554241298;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19730018978263775;  // std dev = 1.105, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.07862308374816497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(I, A), companyceo(I, J) )
%   | | then return -0.08530986785282217;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10636063721804152;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, C), bankboughtbank(D, E) )
%   | then return 0.14824914816446663;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( acquired(F, A) )
%   | | then return 0.2036709763455332;  // std dev = 0.177, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(A, G) )
%   | | | then return 0.14789915120831312;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16679871964684673;  // std dev = 1.100, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then return -0.0731129003593566;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(I, A), companyceo(I, J) )
%   | | then return -0.07888417939701654;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09666681624434235;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C) )
%   then if ( acquired(D, A) )
%   | then return 0.16390375635495708;  // std dev = 0.162, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( acquired(A, E) )
%   | | then return 0.13021883926874087;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( companyalsoknownas(A, F) )
%   | | | then return 0.13224493214316124;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1393777647870198;  // std dev = 1.097, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( cityhascompanyoffice(G, A) )
%   | then return -0.06831026296870137;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( acquired(H, A) )
%   | | then return -0.0753905745036521;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08913263626786251;  // std dev = 1.32e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.973958
   AUC PR    = 0.030758
   CLL	      = -0.209858
   Precision = 0.025844 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.050181


Total learning time: 1.89 seconds
Total inference time: 13.703 seconds
AUC ROC: 0.973958


Results scoring model
   AUC ROC   = 0.9952
   AUC PR    = 0.995286
   CLL	      = -0.163115
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.93617


Total scoring time: 0.584 seconds
Refined model CLL: -0.163115


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.973958
   AUC PR    = 0.030758
   CLL	      = -0.209858
   Precision = 0.025844 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.050181


Total learning time: 14.259 seconds
Total inference time: 13.703 seconds
AUC ROC: 0.973958
Total revision time: 14.259
Best scored revision CLL: -0.163115


Dataset: 9_nell_sports_nell_finances, Fold: 3, Type: Transfer (trRDN-B), Time: 02:54:31
{'AUC ROC': 0.973958, 'AUC PR': 0.030758, 'CLL': -0.209858, 'Precision': [0.025844, 0.5], 'Recall': 0.860465, 'F1': 0.050181, 'Learning time': 14.259, 'Inference time': 13.703, 'parameter_25': {'AUC ROC': 0.974349, 'AUC PR': 0.034476, 'CLL': -0.210924, 'Precision': [0.026182, 0.5], 'Recall': 0.860465, 'F1': 0.050818, 'Learning time': 9.857, 'Inference time': 188.209}}


