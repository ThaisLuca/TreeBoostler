Starting experiment #1 for 8_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.8343394112899858;  // std dev = 0.152, 168.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=164 */
%   | else return 0.6581489350995121;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then return -0.11685106490048831;  // std dev = 0.156, 280.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=7 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.8581489350995117;  // std dev = 2.46e-07, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.14185106490048788;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.8581489350995117;  // std dev = 2.46e-07, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.12735831127729927;  // std dev = 0.993, 69.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.13592671287729013;  // std dev = 2.687, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.16926004621062346;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.7019794613705439;  // std dev = 0.150, 172.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=168 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | | then return 0.7467868748445635;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.12821312515543656;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.12544463852839124;  // std dev = 5.96e-08, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else if ( tweets(A, H), follows(A, I) )
%   | | then if ( tweets(J, H), recursion_accounttype(J, B) )
%   | | | then return 0.7437355369469283;  // std dev = 0.266, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.13212316360853368;  // std dev = 0.089, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( follows(A, K), recursion_accounttype(K, B) )
%   | | | then return 0.5078442432795502;  // std dev = 0.919, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12263453840538693;  // std dev = 4.521, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then return 0.5270794397000824;  // std dev = 0.192, 104.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=100 */
%   | else return 0.5680520050940354;  // std dev = 0.083, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then return -0.0950011933080255;  // std dev = 0.131, 308.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=7 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.4871846185644659;  // std dev = 1.672, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.1123163781936063;  // std dev = 8.43e-08, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.5621369684388715;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3866306560587211;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.0731778145777207;  // std dev = 3.578, 116.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=31 */
%   | | | else return 0.14834436479530716;  // std dev = 3.879, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(A, E) )
%   | | then return 0.4066579529988187;  // std dev = 0.164, 108.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=105 */
%   | | else return 0.3768702874264728;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.4276024039033984;  // std dev = 0.049, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(G, A), follows(F, G) )
%   | | then return 0.4629919549806269;  // std dev = 0.096, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( follows(H, A), follows(H, F) )
%   | | | then return 0.10084908548486109;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.4511367043126645;  // std dev = 0.308, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( follows(I, A) )
%   | | then return -0.06945594393685463;  // std dev = 0.148, 513.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=30 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.039465510529457695;  // std dev = 3.609, 132.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=31 */
%   | | | else return 0.14684103556416786;  // std dev = 3.797, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(D, A) )
%   | then if ( recursion_accounttype(D, B), follows(A, C) )
%   | | then return 0.3367481057801633;  // std dev = 0.037, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | | else if ( tweets(C, E), tweets(A, F) )
%   | | | then return 0.25080423181065076;  // std dev = 1.911, 47.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | | | else return 0.3295874702555186;  // std dev = 0.025, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.33457601006274196;  // std dev = 0.079, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.35932265668863483;  // std dev = 0.090, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.49589419085559894;  // std dev = 1.034, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.09767103478952326;  // std dev = 0.034, 421.000 (wgt'ed) examples reached here.  /* #neg=421 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.048430591710203835;  // std dev = 3.543, 121.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | | else return 0.09458137804957077;  // std dev = 3.881, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(C, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then return 0.24814289195417885;  // std dev = 0.139, 99.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=97 */
%   | | else if ( follows(F, A), follows(F, C) )
%   | | | then return 0.03478259451822796;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2611046940163124;  // std dev = 0.025, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.27417270142462274;  // std dev = 0.083, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.28399626631597213;  // std dev = 0.086, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.07408003305473813;  // std dev = 1.937, 262.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=6 */
%   | | | else return -0.029585705625648148;  // std dev = 2.010, 165.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=24 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.04083557169671853;  // std dev = 2.775, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return 0.0717635864929312;  // std dev = 4.425, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(C, E) )
%   | then return 0.20337529717776584;  // std dev = 0.141, 148.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=145 */
%   | else if ( tweets(A, F) )
%   | | then if ( follows(C, G), follows(G, C) )
%   | | | then return -0.09701392147312816;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.10338662139195405;  // std dev = 0.617, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3016889375658778;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( follows(H, A), follows(A, I) )
%   | then if ( follows(H, I) )
%   | | then return -0.04624532996002867;  // std dev = 0.135, 378.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=33 */
%   | | else return 0.035275875185003455;  // std dev = 0.186, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else if ( follows(J, A), recursion_accounttype(J, B) )
%   | | then return 0.22831917702746535;  // std dev = 0.030, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( follows(K, A) )
%   | | | then return -0.06768192685583616;  // std dev = 0.589, 50.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=2 */
%   | | | else return 0.052310061791968294;  // std dev = 5.187, 187.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=55 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D) )
%   | then return 0.18665250536431746;  // std dev = 0.079, 161.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=160 */
%   | else return 0.08524663611916869;  // std dev = 0.308, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), recursion_accounttype(G, B) )
%   | | | then return 0.1212487560758209;  // std dev = 1.139, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.3849859652252608;  // std dev = 1.354, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.08144016677623993;  // std dev = 0.035, 424.000 (wgt'ed) examples reached here.  /* #neg=424 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.4672327989922552;  // std dev = 1.078, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.15312524265950767;  // std dev = 0.595, 92.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=1 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.022228802431254108;  // std dev = 1.697, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.03134228927955421;  // std dev = 3.550, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return 0.1448296554861578;  // std dev = 0.145, 140.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=137 */
%   | else if ( tweets(A, E), follows(A, C) )
%   | | then return -0.024015520032819947;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1284008443070478;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then return 0.16284903854503116;  // std dev = 0.067, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( follows(F, H), follows(H, F) )
%   | | | then return -0.2682968402805017;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.246118978827769;  // std dev = 0.239, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( follows(I, A) )
%   | | then return -0.04848547232455795;  // std dev = 0.114, 435.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=30 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.022426810868940415;  // std dev = 3.916, 161.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=44 */
%   | | | else return -0.029202864269815818;  // std dev = 2.882, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.14207339445083866;  // std dev = 0.078, 169.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=168 */
%   else if ( follows(D, A) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( follows(A, D), tweets(A, F) )
%   | | | then return -0.04779449883297215;  // std dev = 1.805, 200.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=7 */
%   | | | else return -0.0744974358820883;  // std dev = 0.272, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.19645573989931372;  // std dev = 1.146, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.07331692359709907;  // std dev = 0.025, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.4301533923988944;  // std dev = 1.389, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.1710290445850767;  // std dev = 0.568, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.09967092525895942;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.196174223146492;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2670719622367217;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.41032057945967293;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.13630604199651544;  // std dev = 0.969, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.46957575292864107;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.0314673402253272;  // std dev = 0.743, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.22865253600839908;  // std dev = 0.752, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.11157300180707574;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.07456683833680289;  // std dev = 0.538, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.10098330655482783;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.24996100559052215;  // std dev = 0.462, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35331838416153233;  // std dev = 0.165, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1640218162261698;  // std dev = 0.307, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return -0.06286233535979978;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.025099945305525086;  // std dev = 0.659, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10571353738280888;  // std dev = 0.605, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08329117288501442;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.700023
   AUC PR    = 0.040665
   CLL	      = -0.414993
   Precision = 0.014614 at threshold = 0.5
   Recall    = 0.482759
   F1        = 0.028369


Total learning time: 0.867 seconds
Total inference time: 7.008 seconds
AUC ROC: 0.700023


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.203759
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.498 seconds
Parameter learned model CLL: -0.203759


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.866, 1, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.807, 1, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [0.969, 4, 3], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.743, 4, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.752, 1, 3], 'false,false,true,false': [0.0, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.538, 1, 1], 'false,true,false': [0.0, 2, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.462, 1, 2], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.165, 0, 3], 'false,true,false': [0.307, 5, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.659, 4, 3], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.605, 1, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.037, 4, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24691358024691348], 'false': [0.2343749999999999, 0.0], 'false,true': [0.18750000000000006, 0.0], 'true': [nan, 0.0], 'false,false': [0.0, nan], 'false,true,false': [nan, 0.0], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.20215620683712945], 'false': [0.19695689556468893, 0.0], 'false,true': [0.18750000000000006, 0.0], 'false,true,true': [0.0, 0.25], 'false,false': [nan, 0.0], 'false,true,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.14934461957403747], 'false': [0.14966469994692957, 0.0], 'false,true': [0.1627547051413213, 0.0], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,true,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.11947879815266685], 'false': [0.0, 0.12612941320781598], 'false,false': [0.13426319058784783, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.11067663134907404], 'false': [0.0, 0.11860748508004437], 'false,false': [0.13009003151199341, 0.0], 'false,false,true': [0.0, 0.11039913520327756], 'true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.09128301210500049], 'false': [0.0, 0.09870051050262908], 'false,false': [0.10908835175770408, 0.0], 'false,false,true': [0.14129600846948398, 0.0], 'true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.08169141319028686], 'false': [0.07249398137779843, 0.04306634266184918], 'false,true': [0.1446390478590399, 0.0], 'false,false': [0.0, 0.05365109406842378], 'false,false,false': [0.07113071596037022, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.0714034318207552], 'false': [0.07792407850831214, 0.0], 'false,true': [0.009112287959857393, 0.018845821735939555], 'false,true,true': [nan, 0.009112287959857376], 'true': [nan, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.05091045380541184], 'false': [0.0, 0.05607438243412263], 'false,false': [0.06204838743715668, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [0.0, 0.05023226075967669], 'false': [0.054835868884983, 0.0], 'false,true': [0.09146454457426684, 0.00034580294398726345], 'false,true,true': [nan, 0.09146454457426684], 'false,true,false': [nan, 0.00034580294398726345], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
4;false,false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
5;false,false,true;interaction(F, G), interaction(G, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,true;interaction(F, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(H, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2670719622367217;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.41032057945967293;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.544360069684117;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16973447876918568;  // std dev = 0.236, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.370539851045779;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.02083082341343511;  // std dev = 0.613, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.18623815200388505;  // std dev = 0.621, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.08547527245615184;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return -0.060446085640694064;  // std dev = 0.442, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.07902616282309052;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.20818176560145404;  // std dev = 0.379, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.293106687382113;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1349697080924078;  // std dev = 0.251, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.06459570577813933;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.23772171605360268;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1356922960380122;  // std dev = 0.223, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.07385383958143621;  // std dev = 0.444, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.062367479952289515;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.555254
   AUC PR    = 0.010927
   CLL	      = -0.598693
   Precision = 0.010064 at threshold = 0.5
   Recall    = 0.471264
   F1        = 0.019707


Total learning time: 0.891 seconds
Total inference time: 4.212 seconds
AUC ROC: 0.555254


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.150433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.508 seconds
Refined model CLL: -0.150433


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.555254
   AUC PR    = 0.010927
   CLL	      = -0.598693
   Precision = 0.010064 at threshold = 0.5
   Recall    = 0.471264
   F1        = 0.019707


Total learning time: 2.7640000000000002 seconds
Total inference time: 4.212 seconds
AUC ROC: 0.555254
Total revision time: 2.7640000000000002
Best scored revision CLL: -0.150433


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:14
{'AUC ROC': 0.555254, 'AUC PR': 0.010927, 'CLL': -0.598693, 'Precision': [0.010064, 0.5], 'Recall': 0.471264, 'F1': 0.019707, 'Learning time': 2.7640000000000002, 'Inference time': 4.212, 'parameter_5': {'AUC ROC': 0.700023, 'AUC PR': 0.040665, 'CLL': -0.414993, 'Precision': [0.014614, 0.5], 'Recall': 0.482759, 'F1': 0.028369, 'Learning time': 0.867, 'Inference time': 7.008}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.058741135785635;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.25072476751595946;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.12379829877082144;  // std dev = 1.346, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5642888797107009;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0318016472032522;  // std dev = 1.125, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.12570130254880207;  // std dev = 1.009, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04893885145408169;  // std dev = 0.703, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.1259563281780567;  // std dev = 0.600, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.12184500923124171;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.2294174342015029;  // std dev = 0.823, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3944666982739012;  // std dev = 0.296, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16676626077514928;  // std dev = 0.232, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return -0.06270085214695825;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.031220778330399837;  // std dev = 0.945, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06398221675527604;  // std dev = 0.793, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23278844726482306;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10664098645883549;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.948273
   AUC PR    = 0.091371
   CLL	      = -0.315822
   Precision = 0.091172 at threshold = 0.5
   Recall    = 0.724138
   F1        = 0.161954


Total learning time: 0.961 seconds
Total inference time: 6.89 seconds
AUC ROC: 0.948273


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.209021
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.486 seconds
Parameter learned model CLL: -0.209021


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true': [1.225, 3, 3], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.112, 3, 3], 'false,true,false,true': [1.05e-08, 0, 3], 'false,true,false,false': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [1.346, 9, 6], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [1.125, 9, 4], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 1, 0], 'false,false,true,true': [1.009, 3, 3], 'false,false,true,false': [0.703, 6, 3], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.6, 3, 1], 'false,true,false': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [0.823, 3, 5], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.296, 0, 6], 'false,true,false': [0.232, 10, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.945, 9, 6], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.793, 3, 3], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [0.067, 7, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24691358024691368], 'false': [0.23437500000000006, 0.0], 'false,true': [0.24999999999999992, 0.20999999999999988], 'false,true,false': [1.4802973661668753e-16, -7.93016446160826e-18], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [0.0, 0.20050859278119473], 'false': [0.19510140957743877, 0.0], 'false,true': [0.24999999999999992, 0.14991616761768686], 'false,true,true': [0.0, 0.18750000000000003], 'false,true,false': [0.0, -1.982541115402065e-18], 'false,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.142499302205907], 'false': [0.14196484474923107, 0.0], 'false,true': [0.2059908600173882, 0.0936180716868719], 'false,true,false': [3.700743415417188e-17, -1.982541115402065e-18], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.11266371766123842], 'false': [0.0, 0.11553690218317011], 'false,false': [0.12079256731305309, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.10487724921913696], 'false': [0.0, 0.10832996834042616], 'false,false': [0.1171874232768774, 0.0], 'false,false,true': [0.0, 0.09741057058937398], 'true': [0.0, 0.0], 'false,false,false': [0.0, nan], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.08995532685493873], 'false': [0.0, 0.0933355692418958], 'false,false': [0.1021555796951318, 0.0], 'false,false,true': [0.1695400425085063, 0.05487561492698777], 'true': [nan, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.08270419404278251], 'false': [0.05145891624948066, 0.0565544293536397], 'false,false': [0.0, 0.06782408807405181], 'false,false,false': [0.08470280918572257, 0.0], 'false,true': [0.09004585931795583, 2.3129646346357427e-18], 'true': [0.0, nan]}, {'': [0.0, 0.07521819006758021], 'false': [0.08264316755707757, 0.0], 'false,true': [0.014555526483065887, 0.005377339330377135], 'false,true,true': [nan, 0.014555526483065814], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [0.0, 0.05172273338769388], 'false': [0.0, 0.05411462290423503], 'false,false': [0.059592510791644765, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [0.0, 0.05091187033026348], 'false': [0.055856541516145344, 0.0], 'false,true': [0.10491645280458385, 0.02464584507940305], 'false,true,true': [nan, 0.10491645280458388], 'false,true,false': [0.0, 0.0006446479700438847], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
5;false,false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,true;interaction(F, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,false;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(H, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.058741135785635;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.25072476751595946;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.06307204741187988;  // std dev = 0.731, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.2873098516806852;  // std dev = 0.905, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5666547712835396;  // std dev = 0.061, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.02853283835646129;  // std dev = 1.042, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.07685101322667734;  // std dev = 0.614, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.21308877569395104;  // std dev = 0.820, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return -0.04560583712684614;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.09187089286833666;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.17367877831724046;  // std dev = 0.795, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.18971684335806852;  // std dev = 0.655, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.1043607554558894;  // std dev = 0.416, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.036364500713468244;  // std dev = 0.542, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.08721338244184976;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F), phenotype(A, G) )
%   | | | then return -0.158126691440254;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09084048366893738;  // std dev = 0.937, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.10524481493907116;  // std dev = 0.796, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2291798850209705;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13001501480458275;  // std dev = 0.143, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.884902
   AUC PR    = 0.047296
   CLL	      = -0.399472
   Precision = 0.05698 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.105263


Total learning time: 1.024 seconds
Total inference time: 4.409 seconds
AUC ROC: 0.884902


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.216916
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.48 seconds
Refined model CLL: -0.216916


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.948273
   AUC PR    = 0.091371
   CLL	      = -0.315822
   Precision = 0.091172 at threshold = 0.5
   Recall    = 0.724138
   F1        = 0.161954


Total learning time: 2.951 seconds
Total inference time: 6.89 seconds
AUC ROC: 0.948273
Total revision time: 2.951
Best scored revision CLL: -0.209021


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:29
{'AUC ROC': 0.948273, 'AUC PR': 0.091371, 'CLL': -0.315822, 'Precision': [0.091172, 0.5], 'Recall': 0.724138, 'F1': 0.161954, 'Learning time': 2.951, 'Inference time': 6.89, 'parameter_10': {'AUC ROC': 0.948273, 'AUC PR': 0.091371, 'CLL': -0.315822, 'Precision': [0.091172, 0.5], 'Recall': 0.724138, 'F1': 0.161954, 'Learning time': 0.961, 'Inference time': 6.89}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.183741135785635;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.25359931568560135;  // std dev = 1.508, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.34838531790394595;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.13183408097681423;  // std dev = 1.752, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.27416559297376114;  // std dev = 0.606, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.561604533960273;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06357855785673017;  // std dev = 1.596, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21234665974913827;  // std dev = 0.591, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.13796505367522438;  // std dev = 1.441, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.0430486784336002;  // std dev = 0.803, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.020538271279289033;  // std dev = 0.468, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.44972357131919904;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.0654904804507219;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.19281241190659987;  // std dev = 0.650, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.12552148745195155;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.20370997563268606;  // std dev = 1.264, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.12488170213018392;  // std dev = 0.539, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18810239056007816;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4314549276895466;  // std dev = 0.403, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1957342034623113;  // std dev = 0.347, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3190937051053211;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.013631370123761116;  // std dev = 0.465, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.17079840956626802;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1522709012780404;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return -0.06982840777795321;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.034086202070536635;  // std dev = 1.275, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0776055710101813;  // std dev = 0.513, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13721559445037526;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.26393931971276013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1037830377435578;  // std dev = 1.073, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.22431395413743704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11202145130269645;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.27055010570010435;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.3569060636493014;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.963567
   AUC PR    = 0.133516
   CLL	      = -0.302033
   Precision = 0.127869 at threshold = 0.5
   Recall    = 0.896552
   F1        = 0.223816


Total learning time: 1.069 seconds
Total inference time: 6.722 seconds
AUC ROC: 0.963567


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.246894
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.563 seconds
Parameter learned model CLL: -0.246894


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 1], 'false,true,true': [1.581, 5, 5], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.707, 1, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.369, 5, 3], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.508, 5, 5], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 9, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.631, 1, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [1.752, 13, 9], 'false,false,false,true': [0.606, 1, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [1.596, 13, 7], 'false,false,false,true': [0.591, 1, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 1, 0], 'false,false,true,true': [1.441, 5, 5], 'false,false,true,false': [0.803, 8, 4], 'false,false,false,true': [0.468, 1, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.204, 1, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.65, 4, 1], 'false,true,false': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [1.264, 6, 8], 'false,false,false,false': [0.539, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.016, 0, 2], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.403, 0, 9], 'false,true,false': [0.347, 14, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.465, 1, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.001, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.275, 13, 9], 'false,false,false,true': [0.513, 1, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.012, 0, 4], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.073, 4, 5], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.067, 9, 0], 'false,false,true,true': [0.044, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24408284023668642], 'false': [0.23818525519848777, 0.22222222222222224], 'false,true': [0.24999999999999983, 0.21301775147928984], 'false,false': [0.22222222222222224, nan], 'false,false,true': [0.0, 0.25], 'false,true,false': [0.0, -9.25185853854297e-18], 'true': [1.4802973661668753e-16, 0.0]}, {'': [0.0, 0.20799825471802494], 'false': [0.2021068248774059, 0.20415577842167218], 'false,false': [0.20735831983071118, 0.0], 'false,false,true': [0.0, 0.0], 'false,true': [0.24999999999999994, 0.1520704996967238], 'false,true,true': [0.0, 0.234375], 'false,true,false': [0.0, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.15935606827547175], 'false': [0.15888131022119584, 0.13255959910809242], 'false,true': [0.22741903674463176, 0.09496338632649728], 'false,false': [nan, 0.13255959910809242], 'false,false,false': [0.13255959910809242, nan], 'false,true,false': [0.0, -1.5419764230904951e-18], 'true': [0.0, 3.700743415417188e-17]}, {'': [0.0, 0.13652316234906559], 'false': [0.0, 0.13957042129503125], 'false,false': [0.13950304939375416, 0.12223721371393965], 'false,false,false': [0.12223721371393965, nan], 'true': [0.0, -3.700743415417188e-17], 'false,true': [nan, 0.0], 'true,true': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.13148405688337278], 'false': [0.0, 0.134982625720377], 'false,false': [0.13621262292719247, 0.11653713888432597], 'false,false,true': [0.0, 0.1272857149586493], 'false,false,false': [0.11653713888432597, nan], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.12153790632647773], 'false': [0.0, 0.12514402814689066], 'false,false': [0.1259514123101515, 0.11395031325438609], 'false,false,true': [0.20769115886909809, 0.0537399030766314], 'false,false,false': [0.10952546262479662, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.02081303514700473, 0.10993622579546754], 'false': [0.05393655666836672, 0.09523111927352654], 'false,false': [0.0, 0.11197685898231723], 'false,false,false': [0.11415983723732813, 0.09667230042869411], 'false,true': [0.08460046497665127, 2.3129646346357427e-18], 'true': [0.02081303514700473, nan]}, {'': [9.084725748815387e-05, 0.10516385007443335], 'false': [0.10601391621383441, 0.0966432463203356], 'false,true': [0.018088190813664973, 0.008611690040611544], 'false,false': [0.0966432463203356, nan], 'false,false,true': [0.0, 0.10806287758510393], 'false,true,true': [nan, 0.01808819081366495], 'true': [0.0001211296766508857, 0.0]}, {'': [6.46983878561172e-05, 0.07327855847557445], 'false': [0.0, 0.07575159041500566], 'false,false': [0.0739104597621781, 0.08758655198625165], 'false,false,false': [0.08758655198625165, nan], 'true': [0.0, 4.4737629890471514e-07], 'true,false': [nan, 4.4737629890471514e-07], 'false,true': [0.0, nan]}, {'': [3.867281186281657e-05, 0.07273221871548988], 'false': [0.07056563397230735, 0.08812600891225636], 'false,false': [0.08812600891225636, nan], 'false,false,true': [0.0009552652168411668, 0.0], 'false,true': [0.1273011990580828, 0.024441603839007987], 'false,true,true': [0.0, 0.12792380351387989], 'false,true,false': [0.0, 0.0004979219700812406]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, A).;true;true
5;false,false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,true;interaction(F, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,false;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.19619426619704294;  // std dev = 1.250, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.7816289395752953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), phenotype(A, H) )
%   | | | then return -0.17093855150367654;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.42205434608448134;  // std dev = 1.018, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.352832875377745;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), location(F, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.515223986708049;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.016348705454283588;  // std dev = 1.166, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return 0.3113928184801561;  // std dev = 0.646, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.32851687472887836;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0743776239266197;  // std dev = 1.332, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0.2036948711319295;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.10072326331265143;  // std dev = 0.407, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.1842616234182574;  // std dev = 1.107, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.029492855237396448;  // std dev = 0.535, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.4074866805813492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.0654904804507219;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return -0.07949047902627956;  // std dev = 0.410, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.10068749149126129;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return -0.08149218495259712;  // std dev = 0.465, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.21559600664069015;  // std dev = 1.009, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18810239056007816;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.28632203773435294;  // std dev = 0.538, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.18821823504357646;  // std dev = 0.189, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.03601502187625442;  // std dev = 0.545, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.18416706418947362;  // std dev = 0.339, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then return 0.09418654521649923;  // std dev = 0.531, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.17079840956626802;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1522709012780404;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.10839203557028823;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.25818840695807355;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), location(G, H) )
%   | | | then return -0.023258184101060765;  // std dev = 0.931, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.11755942445652588;  // std dev = 0.553, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13721559445037526;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.11396222860072679;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07859647836090135;  // std dev = 0.808, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.26723872110099445;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11372713667363328;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.049215082131641295;  // std dev = 0.535, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.879512
   AUC PR    = 0.086182
   CLL	      = -0.428629
   Precision = 0.029399 at threshold = 0.5
   Recall    = 0.804598
   F1        = 0.056726


Total learning time: 1.493 seconds
Total inference time: 6.822 seconds
AUC ROC: 0.879512


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.212176
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.642 seconds
Refined model CLL: -0.212176


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.879512
   AUC PR    = 0.086182
   CLL	      = -0.428629
   Precision = 0.029399 at threshold = 0.5
   Recall    = 0.804598
   F1        = 0.056726


Total learning time: 3.767 seconds
Total inference time: 6.822 seconds
AUC ROC: 0.879512
Total revision time: 3.767
Best scored revision CLL: -0.212176


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:47
{'AUC ROC': 0.879512, 'AUC PR': 0.086182, 'CLL': -0.428629, 'Precision': [0.029399, 0.5], 'Recall': 0.804598, 'F1': 0.056726, 'Learning time': 3.767, 'Inference time': 6.822, 'parameter_15': {'AUC ROC': 0.963567, 'AUC PR': 0.133516, 'CLL': -0.302033, 'Precision': [0.127869, 0.5], 'Recall': 0.896552, 'F1': 0.223816, 'Learning time': 1.069, 'Inference time': 6.722}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1420744691189683;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7505511758931249;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.328092150523452;  // std dev = 0.641, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.25264661014710393;  // std dev = 1.625, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.42826288541458973;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.16606739159659767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.13212024095912456;  // std dev = 1.939, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3339208793896207;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1443245831087798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.517770106275849;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04390895520491567;  // std dev = 1.691, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2557812586661915;  // std dev = 0.683, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1273994028521799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.13699296435634878;  // std dev = 1.533, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.04954940473533582;  // std dev = 0.945, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.10005524916993581;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18419669609740516;  // std dev = 0.422, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.0654904804507219;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.08293901117196163;  // std dev = 0.836, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.04676866048243326;  // std dev = 0.346, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1516053702763861;  // std dev = 1.448, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.10699446510173627;  // std dev = 0.724, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18443375962181122;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42068019497048814;  // std dev = 0.462, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.19407251083419838;  // std dev = 0.398, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.26236453737699295;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10297410080964704;  // std dev = 0.659, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14674536691891082;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.17131861191417208;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15227029764097222;  // std dev = 0.000947, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return -0.06993641588502275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.03518167610107735;  // std dev = 1.443, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0643831949819229;  // std dev = 0.705, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13657909144393046;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.020381475955451422;  // std dev = 0.416, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.07090402019163936;  // std dev = 1.183, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2298620446354215;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11187568970470464;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.29018068117593054;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3057277350422384;  // std dev = 0.239, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.951948
   AUC PR    = 0.138664
   CLL	      = -0.297533
   Precision = 0.139073 at threshold = 0.5
   Recall    = 0.724138
   F1        = 0.233333


Total learning time: 1.002 seconds
Total inference time: 6.694 seconds
AUC ROC: 0.951948


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.249878
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.918919


Total scoring time: 0.573 seconds
Parameter learned model CLL: -0.249878


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true': [1.732, 6, 6], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 12, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [1.49e-08, 0, 3], 'false,true,true,false': [1.414, 6, 3], 'false,true,false,true': [2.11e-08, 0, 6], 'false,true,false,false': [5.27e-09, 12, 0], 'false,false,true,true': [0.044, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.641, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 4], 'false,true,true': [1.625, 6, 6], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [9.13e-09, 12, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.717, 1, 3], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [1.939, 17, 12], 'false,false,false,true': [0.694, 1, 3], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.152, 0, 4], 'false,false,true,false': [1.691, 17, 8], 'false,false,false,true': [0.683, 1, 3], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [0.0, 1, 0], 'false,false,true,true': [1.533, 6, 6], 'false,false,true,false': [0.945, 11, 6], 'false,false,false,true': [0.594, 1, 2], 'false,false,false,false': [0.422, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.204, 1, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.836, 4, 2], 'false,true,false': [0.346, 4, 1], 'false,false,true': [0.0, 0, 4], 'false,false,false,true': [1.448, 9, 9], 'false,false,false,false': [0.724, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.018, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.462, 0, 12], 'false,true,false': [0.398, 18, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.659, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.000947, 0, 4], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.443, 17, 12], 'false,false,false,true': [0.705, 2, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.013, 0, 5], 'false,true,true,true': [0.416, 1, 1], 'false,true,true,false': [1.183, 5, 5], 'false,true,false,true': [0.042, 0, 6], 'false,true,false,false': [0.058, 12, 0], 'false,false,true,true': [0.118, 0, 3], 'false,false,true,false': [0.239, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.244897959183673], 'false': [0.23999999999999952, 0.23999999999999994], 'false,false': [0.18750000000000006, 0.0], 'false,true': [0.25, 0.22222222222222207], 'false,true,false': [-1.4802973661668753e-16, -1.1564823173178714e-17], 'false,false,true': [0.0, 0.22222222222222224], 'true': [1.4802973661668753e-16, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.20568157179843546], 'false': [0.20076976708768338, 0.21021462634225657], 'false,false': [0.20926839604835526, 0.2056956190234563], 'false,false,true': [0.0009658273954848973, 0.0], 'false,false,false': [nan, 0.2056956190234563], 'false,true': [0.25000000000000006, 0.1586414472144836], 'false,true,true': [7.401486830834377e-17, 0.2222222222222222], 'false,true,false': [7.401486830834377e-17, 2.3129646346357427e-18]}, {'': [-4.4408920985006264e-17, 0.15582792770544213], 'false': [0.15236530768329498, 0.15927358347878862], 'false,false': [nan, 0.15927358347878862], 'false,false,false': [0.12844628371404687, 0.0], 'false,true': [0.22014614910834676, 0.09906674252579038], 'false,true,false': [-7.401486830834377e-17, 6.938893903907228e-18], 'true': [0.0, 0.0]}, {'': [4.4408920985006264e-17, 0.1295316885332868], 'false': [0.0, 0.13156532982812666], 'false,false': [0.12966820175058053, 0.13295760296020137], 'false,false,false': [0.12045325922018993, 0.0], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'true,true': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [-2.2204460492503132e-17, 0.1230340649322062], 'false': [0.0, 0.1253657357252392], 'false,false': [0.12611519738708188, 0.11685423878905028], 'false,false,true': [0.005807611321848316, 0.11439277108934416], 'false,false,false': [0.11670231461398149, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.11076777852880866], 'false': [0.0, 0.11312066760338967], 'false,false': [0.1136840477792559, 0.1078896149817494], 'false,false,true': [0.1958828148295998, 0.052497370980401616], 'false,false,false': [0.11774467700411184, 0.0888591520935768], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.02081303514700473, 0.10102373136397166], 'false': [0.07474919970252906, 0.09791345930240355], 'false,false': [0.0, 0.11425986145641132], 'false,false,false': [0.11644669501081421, 0.10482976537842918], 'false,true': [0.11650440485044965, 0.023929338469204326], 'true': [0.02081303514700473, nan]}, {'': [7.752299305656685e-05, 0.1033733271402815], 'false': [0.1030938301723233, 0.10411236487972222], 'false,false': [0.1133706376981998, 0.0], 'false,false,true': [0.0, 0.1448095224469841], 'false,true': [0.017781277431502818, 0.008800509615196924], 'false,true,true': [nan, 0.017781277431502745], 'true': [0.00010767082368967618, 0.0], 'false,false,false': [nan, 0.0]}, {'': [5.8233531865981016e-05, 0.0741246961705913], 'false': [0.0, 0.0759628034219832], 'false,false': [0.07179447698474906, 0.09941176933313207], 'false,false,false': [0.09941176933313207, nan], 'true': [0.0, 2.242595023571603e-07], 'true,false': [nan, 2.242595023571603e-07], 'false,true': [0.0, nan]}, {'': [3.4762073748476066e-05, 0.07360300743832397], 'false': [0.06920474424537286, 0.09943077294975759], 'false,false': [0.09943077294975759, nan], 'false,false,true': [0.004635009833965291, 0.02856031331165819], 'false,true': [0.13146342674622535, 0.026237434120654976], 'false,true,true': [0.08648308034375404, 0.14003407478070334], 'false,true,false': [0.0002972549901164208, 0.00027929732861671264]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(I, A).;true;true
3;false,false,false;interaction(A, J), interaction(J, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,false;interaction(A, J), interaction(J, K).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7611380874192215;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1500243210302442;  // std dev = 1.300, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7505511758931249;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.328092150523452;  // std dev = 0.641, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.6166395641639695;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.060416346583549115;  // std dev = 1.162, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.42826288541458973;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.16606739159659767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.4681985671539417;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07183311704680582;  // std dev = 1.548, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.3339208793896207;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1443245831087798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.20331437134884264;  // std dev = 0.869, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.04855211818916342;  // std dev = 1.327, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2557812586661915;  // std dev = 0.683, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1273994028521799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.2789436810767375;  // std dev = 0.554, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.16509501034080493;  // std dev = 0.119, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return -0.014550467313381414;  // std dev = 0.707, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.20417120020188417;  // std dev = 1.178, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.0654904804507219;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.2264132290281603;  // std dev = 0.531, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1438586948078727;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return -0.012192762183273202;  // std dev = 0.708, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.16624449586717002;  // std dev = 1.150, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18443375962181122;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(A, G) )
%   | | then return -0.13350549607576215;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.25977483029779086;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.03039376785190748;  // std dev = 1.107, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.2319949275371188;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13328852977535113;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.11122454645803621;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.17131861191417208;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15227029764097222;  // std dev = 0.000947, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.07398010906094434;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.23915414204484906;  // std dev = 0.167, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.030335573193150486;  // std dev = 0.861, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.07638800770216368;  // std dev = 1.158, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13657909144393046;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F), complex(A, G) )
%   | | | then return -0.06158322728978379;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10654566668384047;  // std dev = 0.998, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.27953371715183867;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13235488748072696;  // std dev = 0.151, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.06525977552349241;  // std dev = 0.661, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.78909
   AUC PR    = 0.032514
   CLL	      = -0.544981
   Precision = 0.01922 at threshold = 0.5
   Recall    = 0.804598
   F1        = 0.037544


Total learning time: 1.671 seconds
Total inference time: 6.696 seconds
AUC ROC: 0.78909


Results scoring model
   AUC ROC   = 0.99625
   AUC PR    = 0.996477
   CLL	      = -0.234712
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.575 seconds
Refined model CLL: -0.234712


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.78909
   AUC PR    = 0.032514
   CLL	      = -0.544981
   Precision = 0.01922 at threshold = 0.5
   Recall    = 0.804598
   F1        = 0.037544


Total learning time: 3.8209999999999997 seconds
Total inference time: 6.696 seconds
AUC ROC: 0.78909
Total revision time: 3.8209999999999997
Best scored revision CLL: -0.234712


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:05
{'AUC ROC': 0.78909, 'AUC PR': 0.032514, 'CLL': -0.544981, 'Precision': [0.01922, 0.5], 'Recall': 0.804598, 'F1': 0.037544, 'Learning time': 3.8209999999999997, 'Inference time': 6.696, 'parameter_20': {'AUC ROC': 0.951948, 'AUC PR': 0.138664, 'CLL': -0.297533, 'Precision': [0.139073, 0.5], 'Recall': 0.724138, 'F1': 0.233333, 'Learning time': 1.002, 'Inference time': 6.694}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6138441103933203;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11384411039332028;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7505511758931249;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.328092150523452;  // std dev = 0.641, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.23163182977424038;  // std dev = 1.858, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.42826288541458973;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.16606739159659767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return -0.3475766469941391;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.15579819898114974;  // std dev = 2.191, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3339208793896207;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1443245831087798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.18306104318283895;  // std dev = 0.128, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5690829479836912;  // std dev = 0.211, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.062013440468197276;  // std dev = 1.863, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2557812586661915;  // std dev = 0.683, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1273994028521799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return -0.15850284392617786;  // std dev = 0.113, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.14562718719449805;  // std dev = 1.647, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.07595885909705712;  // std dev = 1.159, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.10005524916993581;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18419669609740516;  // std dev = 0.422, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return -0.022979758516038323;  // std dev = 0.303, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.009120043800690104;  // std dev = 1.098, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.00955653684922732;  // std dev = 0.516, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.14117737340040923;  // std dev = 1.536, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.10699446510173627;  // std dev = 0.724, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18926174293898848;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return -0.2072094820379492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4019766299448133;  // std dev = 0.521, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.1977941391446125;  // std dev = 0.425, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.26236453737699295;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10297410080964704;  // std dev = 0.659, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14674536691891082;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.18352154659287157;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15196000761883982;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return -0.05501588293261639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return -0.17522522064861878;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.04458488305701011;  // std dev = 1.624, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0643831949819229;  // std dev = 0.705, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1382360246180115;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.05673409254181183;  // std dev = 0.560, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04481933587696334;  // std dev = 1.264, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.22840755474801303;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11975564456877891;  // std dev = 0.076, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.29018068117593054;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3057277350422384;  // std dev = 0.239, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.948099
   AUC PR    = 0.130273
   CLL	      = -0.30112
   Precision = 0.137472 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.230483


Total learning time: 1.064 seconds
Total inference time: 6.745 seconds
AUC ROC: 0.948099


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.248685
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.93617


Total scoring time: 0.601 seconds
Parameter learned model CLL: -0.248685


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true': [1.932, 8, 7], 'false,true,false,true': [0.0, 0, 10], 'false,true,false,false': [0.0, 15, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.894, 1, 4], 'false,true,true,false': [1.449, 7, 3], 'false,true,false,true': [2.98e-08, 0, 10], 'false,true,false,false': [7.45e-09, 15, 0], 'false,false,true,true': [0.044, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.641, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 4], 'false,true,true': [1.858, 8, 7], 'false,true,false,true': [0.0, 0, 10], 'false,true,false,false': [1.39e-08, 15, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.717, 1, 3], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [2.191, 21, 17], 'false,false,false,true': [0.694, 1, 3], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 3], 'false,true': [0.128, 2, 0], 'false,false,true,true': [0.211, 0, 5], 'false,false,true,false': [1.863, 21, 12], 'false,false,false,true': [0.683, 1, 3], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [0.113, 2, 0], 'false,false,true,true': [1.647, 7, 7], 'false,false,true,false': [1.159, 14, 10], 'false,false,false,true': [0.594, 1, 2], 'false,false,false,false': [0.422, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.303, 2, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [1.098, 5, 4], 'false,true,false': [0.516, 5, 2], 'false,false,true': [0.0, 0, 4], 'false,false,false,true': [1.536, 11, 11], 'false,false,false,false': [0.724, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.03, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.521, 0, 17], 'false,true,false': [0.425, 22, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.659, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.002, 0, 4], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [1.624, 21, 17], 'false,false,false,true': [0.705, 2, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.022, 0, 5], 'false,true,true,true': [0.56, 2, 2], 'false,true,true,false': [1.264, 6, 5], 'false,true,false,true': [0.068, 0, 10], 'false,true,false,false': [0.076, 15, 0], 'false,false,true,true': [0.118, 0, 3], 'false,false,true,false': [0.239, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2469135802469131], 'false': [0.2443749999999995, 0.23999999999999994], 'false,true': [0.24888888888888888, 0.24000000000000005], 'false,true,false': [-8.881784197001253e-17, -1.4802973661668754e-17], 'false,false': [0.18750000000000006, 0.0], 'false,false,true': [0.0, 0.22222222222222224], 'true': [1.4802973661668753e-16, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.20468327452519397], 'false': [0.20149968396072265, 0.21021462634225657], 'false,false': [0.20926839604835526, 0.2056956190234563], 'false,false,true': [0.0009658273954848973, 0.0], 'false,false,false': [nan, 0.2056956190234563], 'false,true': [0.24888888888888888, 0.17133276299164216], 'false,true,true': [0.15999999999999998, 0.21000000000000002], 'false,true,false': [8.881784197001253e-17, 3.7007434154171884e-18]}, {'': [-4.4408920985006264e-17, 0.15664415619549044], 'false': [0.15455673991336982, 0.15927358347878862], 'false,false': [nan, 0.15927358347878862], 'false,false,false': [0.12844628371404687, 0.0], 'false,true': [0.23013755849469353, 0.10699208192785356], 'false,true,false': [-1.7763568394002506e-16, 1.295260195396016e-17], 'true': [0.0, 0.0]}, {'': [4.4408920985006264e-17, 0.12921749486941067], 'false': [0.015126579150125379, 0.12776492823110275], 'false,false': [0.12629076380011084, 0.13295760296020137], 'false,false,false': [0.12045325922018993, 0.0], 'false,true': [0.0, 0.0], 'true': [0.0, 0.0], 'false,true,false': [nan, 0.0], 'true,true': [0.0, nan]}, {'': [-2.2204460492503132e-17, 0.12082433192430822], 'false': [0.00816669478647359, 0.1215795399959863], 'false,false': [0.12190578188261965, 0.11685423878905028], 'false,false,true': [0.008921140910585601, 0.10519315563469757], 'false,false,false': [0.11670231461398149, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.10642287991306551], 'false': [0.0064162583093104845, 0.10798003805610598], 'false,false': [0.10787222751424058, 0.1078896149817494], 'false,false,false': [0.11774467700411184, 0.0888591520935768], 'false,false,true': [0.19371790499007466, 0.05600738592109622], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.030506932884454132, 0.09784719426601109], 'false': [0.09205910673617716, 0.09381820860188235], 'false,false': [0.0, 0.10699312703996083], 'false,false,false': [0.10726841658564043, 0.10482976537842918], 'false,true': [0.13387956702328543, 0.038093735260960396], 'true': [0.030506932884454132, nan]}, {'': [0.00021311019449728462, 0.0999447400557163], 'false': [0.09933645642982186, 0.10411236487972222], 'false,false': [0.1133706376981998, 0.0], 'false,false,true': [0.0, 0.1448095224469841], 'false,true': [0.03455241088688542, 0.00821851940454023], 'false,true,true': [0.0, 0.015967810143122235], 'true': [0.0002959863812462271, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0001598724560390008, 0.07098421578615964], 'false': [0.0036125712185299773, 0.07295127172359381], 'false,false': [0.06942404902744005, 0.09941176933313207], 'false,false,false': [0.09941176933313207, nan], 'false,true': [0.0, 0.0], 'true': [0.0, 6.144215668919817e-07], 'true,false': [nan, 6.144215668919817e-07], 'false,true,false': [0.0, nan]}, {'': [9.414258407522413e-05, 0.07013793298785455], 'false': [0.06642436760555044, 0.09943077294975759], 'false,false': [0.09943077294975759, nan], 'false,false,true': [0.004635009833965291, 0.02856031331165819], 'false,true': [0.1274508097965727, 0.029504187011402325], 'false,true,true': [0.07839656862627503, 0.14525085929631223], 'false,true,false': [0.00045738214836895665, 0.0003816782433562186]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, A), interaction(F, G).;true;true
3;false,false;interaction(I, A).;true;true
3;false,false,false;interaction(A, J), interaction(J, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,false;interaction(A, J), interaction(J, K).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1377866547829789;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7505511758931249;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.328092150523452;  // std dev = 0.641, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.43176201413147386;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.04615097674296642;  // std dev = 1.124, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.42826288541458973;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.16606739159659767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return -0.4620556653186774;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.282813706580813;  // std dev = 1.079, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.07257757659723381;  // std dev = 1.648, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3339208793896207;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1443245831087798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.22190499707257288;  // std dev = 0.183, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.08283556170826652;  // std dev = 1.193, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.1561345037955184;  // std dev = 1.574, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2557812586661915;  // std dev = 0.683, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1273994028521799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(F, G), interaction(H, F) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.09571769900627008;  // std dev = 0.596, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.43452817518187703;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, E), interaction(J, J) )
%   | | | then return -0.20562965135286992;  // std dev = 0.131, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.002552940550116657;  // std dev = 0.422, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return 0.6141323066654495;  // std dev = 0.227, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.01641383874482891;  // std dev = 0.693, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.18381880853693272;  // std dev = 1.174, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return -0.06526284331863978;  // std dev = 0.377, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.26593357438669324;  // std dev = 0.451, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.17436723756507475;  // std dev = 0.115, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.03846332027683632;  // std dev = 0.398, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.010602020097103954;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13700493989369758;  // std dev = 1.423, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.19165784145109266;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return -0.308834125490066;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3449268069607387;  // std dev = 0.518, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.15009374426115388;  // std dev = 0.163, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.17147704157072538;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.2648159220708337;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10255836911063333;  // std dev = 0.654, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1350379873524919;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.18957386628301276;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15180640009124152;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return -0.06768839846928458;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.24704970812198507;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2588593576939738;  // std dev = 0.244, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16506777126471983;  // std dev = 0.311, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.1794756412786748;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04663613760644038;  // std dev = 1.086, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1390488523635078;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.028206893416602357;  // std dev = 0.534, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1876485270472267;  // std dev = 0.817, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.19321394900313757;  // std dev = 0.122, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11466463392805436;  // std dev = 0.094, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.06350630038905644;  // std dev = 0.640, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.881106
   AUC PR    = 0.095007
   CLL	      = -0.419426
   Precision = 0.026253 at threshold = 0.5
   Recall    = 0.758621
   F1        = 0.05075


Total learning time: 2.276 seconds
Total inference time: 7.36 seconds
AUC ROC: 0.881106


Results scoring model
   AUC ROC   = 0.9984
   AUC PR    = 0.998431
   CLL	      = -0.201543
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.608 seconds
Refined model CLL: -0.201543


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.881106
   AUC PR    = 0.095007
   CLL	      = -0.419426
   Precision = 0.026253 at threshold = 0.5
   Recall    = 0.758621
   F1        = 0.05075


Total learning time: 4.5489999999999995 seconds
Total inference time: 7.36 seconds
AUC ROC: 0.881106
Total revision time: 4.5489999999999995
Best scored revision CLL: -0.201543


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:24
{'AUC ROC': 0.881106, 'AUC PR': 0.095007, 'CLL': -0.419426, 'Precision': [0.026253, 0.5], 'Recall': 0.758621, 'F1': 0.05075, 'Learning time': 4.5489999999999995, 'Inference time': 7.36, 'parameter_25': {'AUC ROC': 0.948099, 'AUC PR': 0.130273, 'CLL': -0.30112, 'Precision': [0.137472, 0.5], 'Recall': 0.712644, 'F1': 0.230483, 'Learning time': 1.064, 'Inference time': 6.745}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.1579586273352368;  // std dev = 0.734, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13136113938524718;  // std dev = 0.702, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return -0.13121114347339868;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.18910067873694159;  // std dev = 0.555, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.3075902787573177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -3.430368321554929E-4;  // std dev = 0.377, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09531332960805339;  // std dev = 0.425, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2823005491440498;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14071890473727022;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.05214778484634949;  // std dev = 0.502, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11766177642586748;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21981132862362496;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14305975345292174;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.888414
   AUC PR    = 0.111848
   CLL	      = -0.193861
   Precision = 0.09699 at threshold = 0.5
   Recall    = 0.557692
   F1        = 0.165242


Total learning time: 0.97 seconds
Total inference time: 7.483 seconds
AUC ROC: 0.888414


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.150023
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.54 seconds
Parameter learned model CLL: -0.150023


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.734, 4, 4], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.702, 4, 4], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [0.555, 2, 4], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.377, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.425, 2, 2], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.045, 0, 4], 'false,true,false': [0.027, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.502, 4, 4], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,true': [0.038, 0, 4], 'false,true,false,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2469135802469134], 'false': [0.24999999999999986, 0.0], 'false,true': [0.0, 0.22222222222222224], 'false,true,false': [0.0, 0.0], 'true': [0.0, nan], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.17626827468275957], 'false': [0.17847162811629405, 0.0], 'false,true': [0.0, 0.1586414472144835], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.0], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.1100741583619893], 'false': [0.11145008534151415, 0.0], 'false,true': [0.0, 0.09906674252579038], 'false,true,false': [0.0, 0.0], 'true': [0.0, nan], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.06653706233227395], 'false': [nan, 0.06653706233227392], 'false,false': [0.06736877561142737, 0.0], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.059764633784183126], 'false': [nan, 0.059764633784183126], 'false,false': [0.06165749246000911, 0.0], 'false,false,true': [nan, 0.06165749246000911], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.05502492240829151], 'false': [nan, 0.05502492240829153], 'false,false': [0.05771231068933609, 0.0], 'false,false,true': [0.0, 0.05129983172385431], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.04649141435373954], 'false': [0.05333789635308343, 0.040898379706529195], 'false,true': [0.0, 0.047411463424963045], 'false,false': [nan, 0.040898379706529195], 'false,false,false': [0.04506150314011935, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.04211897874450418], 'false': [0.045078665400126186, 0.0], 'false,true': [0.0005011067038921541, 0.00018349491533511259], 'false,true,true': [nan, 0.0005011067038921541], 'true': [0.0, nan], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.029428993482627556], 'false': [nan, 0.029428993482627546], 'false,false': [0.03149225395708011, 0.0], 'true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.028650293349771136], 'false': [0.03091347563535495, 0.0], 'false,true': [0.0, 0.029498164539171395], 'false,true,false': [0.00035543940628913334, 0.0], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.0], 'false,false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(F, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
5;false,true;interaction(G, H), interaction(H, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,true;interaction(F, G).;true;true
6;false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.2877361057467734;  // std dev = 0.450, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.028181148923700286;  // std dev = 0.450, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.22945477343598797;  // std dev = 0.416, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.024520909256069187;  // std dev = 0.446, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return -0.13297296884891663;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.18165386692498453;  // std dev = 0.507, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return 0.2627287905449608;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.004195231529527388;  // std dev = 0.317, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then return 0.09691637494022022;  // std dev = 0.438, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.26529337732766073;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12721315492738522;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.1119051479357769;  // std dev = 0.291, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.008340541555205517;  // std dev = 0.337, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return -0.12195945316551482;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.20504142681897014;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11139062020144004;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.856871
   AUC PR    = 0.079559
   CLL	      = -0.188427
   Precision = 0.096154 at threshold = 0.5
   Recall    = 0.625
   F1        = 0.166667


Total learning time: 0.906 seconds
Total inference time: 4.128 seconds
AUC ROC: 0.856871


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140521
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.47 seconds
Refined model CLL: -0.140521


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.856871
   AUC PR    = 0.079559
   CLL	      = -0.188427
   Precision = 0.096154 at threshold = 0.5
   Recall    = 0.625
   F1        = 0.166667


Total learning time: 2.886 seconds
Total inference time: 4.128 seconds
AUC ROC: 0.856871
Total revision time: 2.886
Best scored revision CLL: -0.140521


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:39
{'AUC ROC': 0.856871, 'AUC PR': 0.079559, 'CLL': -0.188427, 'Precision': [0.096154, 0.5], 'Recall': 0.625, 'F1': 0.166667, 'Learning time': 2.886, 'Inference time': 4.128, 'parameter_5': {'AUC ROC': 0.888414, 'AUC PR': 0.111848, 'CLL': -0.193861, 'Precision': [0.09699, 0.5], 'Recall': 0.557692, 'F1': 0.165242, 'Learning time': 0.97, 'Inference time': 7.483}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16653882456488173;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1420942428155648;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.14132588915190578;  // std dev = 1.370, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.117131507782925;  // std dev = 1.355, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.07245863769997028;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.114285121385935;  // std dev = 0.685, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return 0.02772831377032428;  // std dev = 0.428, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.016169655088972168;  // std dev = 0.385, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.11151345522707502;  // std dev = 1.193, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3411022424069214;  // std dev = 0.806, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.21281904342653485;  // std dev = 0.195, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.04467088003872345;  // std dev = 1.177, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.3645969110189877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.0879502934954585;  // std dev = 0.964, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21806860033553935;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12894344495812005;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.906216
   AUC PR    = 0.108933
   CLL	      = -0.261166
   Precision = 0.096012 at threshold = 0.5
   Recall    = 0.625
   F1        = 0.166453


Total learning time: 1.032 seconds
Total inference time: 7.22 seconds
AUC ROC: 0.906216


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.257332
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.553 seconds
Parameter learned model CLL: -0.257332


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.37, 8, 6], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.355, 8, 6], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.155, 4, 2], 'false,false,true,false': [0.685, 4, 4], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.428, 1, 1], 'false,true,false': [0.385, 2, 1], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [1.193, 5, 4], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.806, 1, 6], 'false,true,false': [0.195, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.177, 8, 6], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.964, 3, 2], 'false,true,false,true': [0.095, 0, 5], 'false,true,false,false': [0.011, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24221453287197228], 'false': [0.24888888888888888, 0.0], 'false,true': [0.22222222222222224, 0.2469135802469136], 'false,true,false': [0.0, 0.0], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.19489452638408233], 'false': [0.20220415209352033, 0.0], 'false,true': [0.2222222222222222, 0.1762682746827595], 'false,true,true': [nan, 0.2222222222222222], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.15050029620380437], 'false': [0.15819208157148873, 0.0], 'false,true': [0.22222222222222224, 0.11007415836198929], 'false,true,false': [-4.4408920985006264e-17, 0.0], 'true': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [-3.700743415417188e-17, 0.12171553183760642], 'false': [0.0, 0.12379482758638241], 'false,false': [0.1341034024172588, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.115481380616767], 'false': [0.0, 0.11959239025919684], 'false,false': [0.13117381735485226, 0.0], 'false,false,true': [nan, 0.13117381735485226], 'true': [0.0, 0.0], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.11156450457101103], 'false': [0.0, 0.11659938313069901], 'false,false': [0.12913664911930084, 0.0], 'false,false,true': [0.22222222222222224, 0.05857270297602446], 'true': [0.0, 0.0], 'false,false,false': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.10369286039122859], 'false': [0.06635983121693696, 0.11642356637778663], 'false,false': [0.0, 0.1348765452914989], 'false,false,false': [0.15826540836530048, 0.0], 'false,true': [0.09169658368640889, 0.04941522186775089], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.0, 0.10653781626615096], 'false': [0.11827212070294175, 0.0], 'false,true': [0.08421056161197703, 0.005446282353817111], 'false,true,true': [0.0, 0.0928784063070069], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [-4.625929269271485e-18, 0.08356929491569837], 'false': [0.0, 0.08791382670091759], 'false,false': [0.09887405411883535, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.08270810536504876], 'false': [0.09237612296442796, 0.0], 'false,true': [0.18322546688969263, 0.030756591102267736], 'false,true,true': [0.0, 0.18573739821532448], 'false,true,false': [0.0018201251366054938, 2.864045996293571e-05], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(I, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, A).;true;true
5;false,false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(G, A), interaction(A, H).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;false,false,false;interaction(J, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.16653882456488173;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1420942428155648;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.2867758386604522;  // std dev = 1.096, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.05260737685948949;  // std dev = 0.530, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.2316369974581169;  // std dev = 1.083, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.04520816470193611;  // std dev = 0.534, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.03234205224571423;  // std dev = 1.073, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.29737547642390144;  // std dev = 0.551, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then return 0.022531356612747393;  // std dev = 0.454, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.10205217896764943;  // std dev = 1.143, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3212060173444982;  // std dev = 0.696, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.30256736806923973;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12623114440758196;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.12506301188284913;  // std dev = 0.889, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.06586756378447724;  // std dev = 0.463, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.25209153471287515;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05216152035910091;  // std dev = 0.858, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20928893623824313;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.113243547096291;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.909676
   AUC PR    = 0.107649
   CLL	      = -0.232861
   Precision = 0.098551 at threshold = 0.5
   Recall    = 0.653846
   F1        = 0.171285


Total learning time: 1.099 seconds
Total inference time: 5.566 seconds
AUC ROC: 0.909676


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.22616
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.532 seconds
Refined model CLL: -0.22616


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.909676
   AUC PR    = 0.107649
   CLL	      = -0.232861
   Precision = 0.098551 at threshold = 0.5
   Recall    = 0.653846
   F1        = 0.171285


Total learning time: 3.216 seconds
Total inference time: 5.566 seconds
AUC ROC: 0.909676
Total revision time: 3.216
Best scored revision CLL: -0.22616


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:55
{'AUC ROC': 0.909676, 'AUC PR': 0.107649, 'CLL': -0.232861, 'Precision': [0.098551, 0.5], 'Recall': 0.653846, 'F1': 0.171285, 'Learning time': 3.216, 'Inference time': 5.566, 'parameter_10': {'AUC ROC': 0.906216, 'AUC PR': 0.108933, 'CLL': -0.261166, 'Precision': [0.096012, 0.5], 'Recall': 0.625, 'F1': 0.166453, 'Learning time': 1.032, 'Inference time': 7.22}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30874113578563506;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6302322013528495;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2564123687585864;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4930252128087158;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48243342352027363;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.1651040148045066;  // std dev = 1.919, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.3652315706441568;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13363358811560114;  // std dev = 1.896, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.2853736932648162;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.14059785760212534;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08961191370146589;  // std dev = 1.233, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23088266070439345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return 0.059831760870247205;  // std dev = 0.678, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.06917215051694658;  // std dev = 0.581, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09813482511845319;  // std dev = 1.640, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1924425413229991;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2980715195657074;  // std dev = 1.316, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return -0.23192974029095623;  // std dev = 0.381, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1642885414014842;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.04419290190217197;  // std dev = 1.691, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.4911844342559462;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1261838772154325;  // std dev = 1.140, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.16497649415171162;  // std dev = 0.939, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.13026056988741178;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.902984
   AUC PR    = 0.106141
   CLL	      = -0.326435
   Precision = 0.089247 at threshold = 0.5
   Recall    = 0.798077
   F1        = 0.160542


Total learning time: 1.117 seconds
Total inference time: 7.572 seconds
AUC ROC: 0.902984


Results scoring model
   AUC ROC   = 0.957778
   AUC PR    = 0.938725
   CLL	      = -0.318669
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.611 seconds
Parameter learned model CLL: -0.318669


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.414, 4, 4], 'false,true,false,true': [0.943, 1, 8], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 3, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.414, 4, 4], 'false,true,false,true': [0.943, 1, 8], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.414, 4, 4], 'false,true,false,true': [0.943, 1, 8], 'false,true,false,false': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.63e-09, 3, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.919, 12, 11], 'false,false,false,true': [0.0, 3, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.896, 12, 11], 'false,false,false,true': [2.63e-09, 3, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.414, 4, 4], 'false,false,true,false': [1.233, 8, 7], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.678, 2, 2], 'false,true,false': [0.581, 3, 2], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [1.64, 7, 7], 'false,false,false,false': [0.0, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.316, 2, 11], 'false,true,false': [0.381, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.86e-09, 3, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.691, 12, 11], 'false,false,false,true': [0.0, 3, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.14, 3, 4], 'false,true,false,true': [0.939, 1, 8], 'false,true,false,false': [0.005, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.32e-09, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24691358024691315], 'false': [0.24999999999999956, 0.0], 'false,true': [0.24999999999999986, 0.24999999999999997], 'false,true,false': [0.09876543209876527, -7.93016446160826e-18], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.2083913924232395], 'false': [0.21407632187515033, 0.0], 'false,true': [0.24999999999999994, 0.1960867728952923], 'false,true,true': [nan, 0.24999999999999994], 'false,true,false': [0.09876543209876543, -1.982541115402065e-18], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.17268490644975043], 'false': [0.1806661994353854, 2.3129646346357427e-18], 'false,true': [0.25, 0.14573376584159087], 'false,true,false': [0.09876543209876543, -1.982541115402065e-18], 'true': [0.0, 0.0], 'false,false': [nan, 2.3129646346357427e-18], 'false,false,false': [2.3129646346357427e-18, nan]}, {'': [-3.700743415417188e-17, 0.14769449080332736], 'false': [0.0, 0.14888707154319797], 'false,false': [0.16009992354791253, -1.1564823173178713e-18], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'false,false,false': [-1.1564823173178713e-18, nan], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.14056825342620347], 'false': [0.0, 0.14351488486246045], 'false,false': [0.15632387795492114, 2.3129646346357427e-18], 'false,false,true': [nan, 0.15632387795492117], 'false,false,false': [2.3129646346357427e-18, nan], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.1359933417213522], 'false': [0.0, 0.13973877649432687], 'false,false': [0.15368847920485168, 0.0], 'false,false,true': [0.24999999999999997, 0.10141813774583651], 'true': [0.0, 0.0], 'false,false,false': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.00011156582607225324, 0.12870733787762748], 'false': [0.08862608868862519, 0.1476010597383889], 'false,false': [0.0, 0.16281810050970044], 'false,false,false': [0.19218456869638328, 0.0], 'false,true': [0.11501854712270501, 0.06747334732858264], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.0, 0.13094691290902338], 'false': [0.1449441493240415, 1.1564823173178713e-18], 'false,true': [0.12436831375277616, 0.014523290951527369], 'false,true,true': [0.0, 0.13313814418661726], 'false,false': [1.1564823173178713e-18, nan], 'false,false,true': [nan, 1.1564823173178713e-18], 'true': [0.0, 0.0]}, {'': [-4.625929269271485e-18, 0.10783361858325752], 'false': [0.0, 0.1113250279610405], 'false,false': [0.12438223332272798, -5.782411586589357e-19], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'false,false,false': [-5.782411586589357e-19, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.10697313347861392], 'false': [0.11913366621363086, 5.782411586589357e-19], 'false,true': [0.2040542220437508, 0.07661528577149415], 'false,true,true': [0.0, 0.1855618711917304], 'false,true,false': [0.09806780553389594, 3.2049082827850003e-06], 'false,false': [5.782411586589357e-19, nan], 'false,false,true': [nan, 5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(I, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, A).;true;true
5;false,false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(G, A), interaction(A, H).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;false,false,false;interaction(J, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.20087644510794878;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.48640172201338183;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6302322013528495;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.08887351415330379;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3557356535913699;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4930252128087158;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.48243342352027363;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.48243342352027363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11706080779360759;  // std dev = 1.781, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.3652315706441568;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.06857960589107052;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.15315597976430986;  // std dev = 1.584, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.2853736932648162;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.16452499091004158;  // std dev = 1.570, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.10517734741301925;  // std dev = 0.695, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.23088266070439345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.3070990571205701;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.0851804262889025;  // std dev = 0.544, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.107239925829167;  // std dev = 1.569, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1924425413229991;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27717292704994856;  // std dev = 1.207, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.12367652699061309;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2707151051752352;  // std dev = 0.314, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.1642885414014842;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.08803310799886743;  // std dev = 1.340, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.1140895772796853;  // std dev = 0.695, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.42104742056071315;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.11544726108602435;  // std dev = 1.081, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.14957817761116607;  // std dev = 0.827, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.11401794517531205;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.895673
   AUC PR    = 0.087983
   CLL	      = -0.355666
   Precision = 0.059533 at threshold = 0.5
   Recall    = 0.759615
   F1        = 0.110412


Total learning time: 1.333 seconds
Total inference time: 6.59 seconds
AUC ROC: 0.895673


Results scoring model
   AUC ROC   = 0.982222
   AUC PR    = 0.980804
   CLL	      = -0.283621
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.933333


Total scoring time: 0.623 seconds
Refined model CLL: -0.283621


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.895673
   AUC PR    = 0.087983
   CLL	      = -0.355666
   Precision = 0.059533 at threshold = 0.5
   Recall    = 0.759615
   F1        = 0.110412


Total learning time: 3.684 seconds
Total inference time: 6.59 seconds
AUC ROC: 0.895673
Total revision time: 3.684
Best scored revision CLL: -0.283621


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:14
{'AUC ROC': 0.895673, 'AUC PR': 0.087983, 'CLL': -0.355666, 'Precision': [0.059533, 0.5], 'Recall': 0.759615, 'F1': 0.110412, 'Learning time': 3.684, 'Inference time': 6.59, 'parameter_15': {'AUC ROC': 0.902984, 'AUC PR': 0.106141, 'CLL': -0.326435, 'Precision': [0.089247, 0.5], 'Recall': 0.798077, 'F1': 0.160542, 'Learning time': 1.117, 'Inference time': 7.572}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3788520179768205;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6392070123615109;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1555325621642444;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1555325621642444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.31037521490846526;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.49932275605826126;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.07286921623350553;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4758491322444214;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.15941293210296964;  // std dev = 2.241, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.06238779853138083;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.3606537447786813;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12925541513338556;  // std dev = 2.212, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05305165740679121;  // std dev = 0.713, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.28227968681792515;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.1773564828630575;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.06005175999164134;  // std dev = 1.335, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.11309337821313492;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.15988621232855382;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22873616935002739;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return -0.051187422604948754;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.08320641812858741;  // std dev = 0.984, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.12143860687328514;  // std dev = 1.710, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.03557734764193944;  // std dev = 0.691, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1908961928711499;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32837549785806935;  // std dev = 1.343, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return -0.23370808378563;  // std dev = 0.551, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02981440961578638;  // std dev = 0.688, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1631337793193206;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.04042464358793779;  // std dev = 1.911, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.024903222932387364;  // std dev = 0.685, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.4592273577781111;  // std dev = 0.098, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.17250334859967595;  // std dev = 1.251, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.176613241157966;  // std dev = 0.955, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12542743419582697;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6119904194621295;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.17633804666637765;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.934807
   AUC PR    = 0.111123
   CLL	      = -0.371237
   Precision = 0.088799 at threshold = 0.5
   Recall    = 0.846154
   F1        = 0.160731


Total learning time: 1.133 seconds
Total inference time: 7.177 seconds
AUC ROC: 0.934807


Results scoring model
   AUC ROC   = 0.965
   AUC PR    = 0.94375
   CLL	      = -0.324438
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.639 seconds
Parameter learned model CLL: -0.324438


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.708, 5, 7], 'false,true,false,true': [0.949, 1, 9], 'false,true,false,false': [0.0, 11, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.866, 3, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.708, 5, 7], 'false,true,false,true': [0.949, 1, 9], 'false,true,false,false': [5.27e-09, 11, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.708, 5, 7], 'false,true,false,true': [0.949, 1, 9], 'false,true,false,false': [7.45e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.724, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [2.241, 17, 15], 'false,false,false,true': [0.718, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.212, 17, 15], 'false,false,false,true': [0.713, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.708, 5, 7], 'false,false,true,false': [1.335, 12, 8], 'false,false,false,true': [0.669, 2, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.845, 3, 2], 'false,true,false': [0.984, 7, 4], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [1.71, 7, 9], 'false,false,false,false': [0.691, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.343, 2, 15], 'false,true,false': [0.551, 15, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.688, 3, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.911, 17, 15], 'false,false,false,true': [0.685, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.098, 2, 0], 'false,true,true,false': [1.251, 3, 7], 'false,true,false,true': [0.955, 1, 9], 'false,true,false,false': [0.016, 11, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.031, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24835646457268037], 'false': [0.24977043158861298, 0.18750000000000003], 'false,true': [0.2430555555555555, 0.2448979591836735], 'false,true,false': [0.08999999999999977, -1.0092936587501423e-17], 'false,false': [0.18750000000000003, nan], 'false,false,true': [nan, 0.18750000000000003], 'true': [0.0, 0.0]}, {'': [0.0, 0.2139270210148749], 'false': [0.21301184436152973, 0.18749999999999997], 'false,true': [0.24305555555555558, 0.18869872152596784], 'false,true,true': [nan, 0.24305555555555558], 'false,true,false': [0.09000000000000012, 2.523234146875356e-18], 'false,false': [0.2222222222222222, 0.0], 'false,false,true': [0.0, 0.0], 'false,false,false': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.1761365300993873], 'false': [0.17903545298177906, 0.1311052034641356], 'false,true': [0.24305555555555558, 0.13617067428644256], 'false,true,false': [0.09, 5.046468293750712e-18], 'false,false': [nan, 0.1311052034641356], 'false,false,false': [0.1311052034641356, nan], 'true': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.1533859592738615], 'false': [0.0, 0.15475287455611264], 'false,false': [0.15692518874379485, 0.12900647079280175], 'false,false,false': [0.12900647079280175, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.14807904382371956], 'false': [0.0, 0.15063733933294482], 'false,false': [0.1529175911230986, 0.12723353595246795], 'false,false,true': [nan, 0.15291759112309858], 'false,false,false': [0.12723353595246795, nan], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.14462069923783688], 'false': [0.0, 0.14771478390634024], 'false,false': [0.15007121501667178, 0.12574888343826982], 'false,false,true': [0.24305555555555544, 0.08912046144036409], 'false,false,false': [0.14903571370461607, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [9.004542637675028e-05, 0.1378893560869994], 'false': [0.10909709561217704, 0.15660697067087614], 'false,false': [0.0, 0.1712559925413816], 'false,false,false': [0.18277821892626078, 0.11926936233243092], 'false,true': [0.14294705832071625, 0.08806646629300523], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.0, 0.13835251324730669], 'false': [0.14062304209778925, 0.1182708562185224], 'false,true': [0.10122726918595248, 0.020219682915154], 'false,false': [0.1182708562185224, nan], 'false,false,true': [nan, 0.1182708562185224], 'false,true,true': [0.0, 0.10613178335998012], 'true': [0.0, 0.0]}, {'': [-4.625929269271485e-18, 0.1118240385057499], 'false': [0.0, 0.11451178192840786], 'false,false': [0.11411806504432348, 0.11744737077960105], 'false,false,false': [0.11744737077960105, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.11121834317419281], 'false': [0.11051981660726848, 0.11676945386317986], 'false,false': [0.11676945386317986, nan], 'false,false,true': [0.0, 0.0003271625237752697], 'false,true': [0.18659870189285585, 0.06617971267323097], 'false,true,true': [0.004806412793931181, 0.15644321214921114], 'false,true,false': [0.09116590392783387, 2.281736601935445e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, A).;true;true
5;false,false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(G, A), interaction(A, H).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.48767788391726297;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6392070123615109;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1555325621642444;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1555325621642444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.1888683221574974;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3912569620992536;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.49932275605826126;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.07286921623350553;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4758491322444214;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(G, G), phenotype(G, H) )
%   | | | then return 0.016475028052240256;  // std dev = 1.341, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3335949308844898;  // std dev = 1.208, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.1459728320518838;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09186490792751863;  // std dev = 0.718, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.3606537447786813;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(F, H) )
%   | | | then return 0.5581873699495468;  // std dev = 0.261, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0989904859087892;  // std dev = 1.638, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.12413747868466195;  // std dev = 0.648, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07869544886888699;  // std dev = 0.720, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.28227968681792515;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.133662248009343;  // std dev = 1.767, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.05887816747779636;  // std dev = 0.721, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.10554425555571394;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12509139847055661;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.22873616935002739;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( enzyme(A, H), phenotype(A, I) )
%   | | then return 0.28929313925789724;  // std dev = 0.526, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.05465723263026288;  // std dev = 0.711, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.1383518708359795;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return -0.005231540222429457;  // std dev = 0.927, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.14297290817886618;  // std dev = 1.387, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1908961928711499;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2936569593856602;  // std dev = 1.112, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.4046016101480927;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12909935438916345;  // std dev = 0.121, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.014991307525839527;  // std dev = 0.637, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.1631337793193206;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3306443941521446;  // std dev = 0.336, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15545499848169406;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return -0.12156327497691602;  // std dev = 0.475, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.05148424367856024;  // std dev = 1.415, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.04374225607649827;  // std dev = 1.004, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.18128503342676874;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.15270043095320446;  // std dev = 0.782, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.11198913904256753;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.47757785721643653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.15816193361822037;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.933861
   AUC PR    = 0.094875
   CLL	      = -0.442151
   Precision = 0.022934 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.044755


Total learning time: 1.897 seconds
Total inference time: 7.063 seconds
AUC ROC: 0.933861


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.99756
   CLL	      = -0.26586
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total scoring time: 0.631 seconds
Refined model CLL: -0.26586


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.933861
   AUC PR    = 0.094875
   CLL	      = -0.442151
   Precision = 0.022934 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.044755


Total learning time: 4.3 seconds
Total inference time: 7.063 seconds
AUC ROC: 0.933861
Total revision time: 4.3
Best scored revision CLL: -0.26586


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:33
{'AUC ROC': 0.933861, 'AUC PR': 0.094875, 'CLL': -0.442151, 'Precision': [0.022934, 0.5], 'Recall': 0.923077, 'F1': 0.044755, 'Learning time': 4.3, 'Inference time': 7.063, 'parameter_20': {'AUC ROC': 0.934807, 'AUC PR': 0.111123, 'CLL': -0.371237, 'Precision': [0.088799, 0.5], 'Recall': 0.846154, 'F1': 0.160731, 'Learning time': 1.133, 'Inference time': 7.177}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.41370449065506787;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3555557392714991;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6526478931012827;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8509220325135542;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1490779674864458;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1490779674864458;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2926148461096878;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.508738411682717;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.03690550856814997;  // std dev = 0.752, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46600206497885854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.17281485927000168;  // std dev = 2.602, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.03196115256863202;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.3538396218443459;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13934766717870223;  // std dev = 2.572, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.02758551877020708;  // std dev = 0.746, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.27767103224768686;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.16046467078300988;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.07309571755060945;  // std dev = 1.408, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.13458077954850003;  // std dev = 0.679, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14252472486501463;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2255319407275368;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return -0.19001349242923132;  // std dev = 0.967, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.12043376906161625;  // std dev = 1.099, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.19199147454459703;  // std dev = 1.832, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.017545975269178872;  // std dev = 0.718, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.18858258797518312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.31688494986164034;  // std dev = 1.556, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return -0.24772375649994993;  // std dev = 0.575, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015029772376739064;  // std dev = 0.717, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1614025614586705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.04510674517164656;  // std dev = 2.173, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.012853858062505163;  // std dev = 0.715, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.4314781639020216;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15733521908554285;  // std dev = 1.517, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1770174688562115;  // std dev = 0.977, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.12959156691353213;  // std dev = 0.046, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6489589891538038;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1485173822836307;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.931558
   AUC PR    = 0.114899
   CLL	      = -0.355295
   Precision = 0.089598 at threshold = 0.5
   Recall    = 0.836538
   F1        = 0.16186


Total learning time: 1.219 seconds
Total inference time: 6.901 seconds
AUC ROC: 0.931558


Results scoring model
   AUC ROC   = 0.9712
   AUC PR    = 0.951222
   CLL	      = -0.331558
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.62 seconds
Parameter learned model CLL: -0.331558


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [2.108, 8, 10], 'false,true,false,true': [0.957, 1, 11], 'false,true,false,false': [0.0, 12, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.894, 4, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.108, 8, 10], 'false,true,false,true': [0.957, 1, 11], 'false,true,false,false': [5.27e-09, 12, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [2.108, 8, 10], 'false,true,false,true': [0.957, 1, 11], 'false,true,false,false': [9.13e-09, 12, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.752, 4, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [2.602, 21, 20], 'false,false,false,true': [0.748, 4, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.572, 21, 20], 'false,false,false,true': [0.746, 4, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [2.108, 8, 10], 'false,false,true,false': [1.408, 13, 10], 'false,false,false,true': [0.679, 2, 1], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.967, 7, 2], 'false,true,false': [1.099, 7, 5], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [1.832, 7, 13], 'false,false,false,false': [0.718, 4, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.556, 3, 20], 'false,true,false': [0.575, 18, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.717, 4, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [2.173, 21, 20], 'false,false,false,true': [0.715, 4, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.111, 3, 0], 'false,true,true,false': [1.517, 5, 10], 'false,true,false,true': [0.977, 1, 11], 'false,true,false,false': [0.046, 12, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.035, 4, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541424], 'false': [0.25, 0.16000000000000003], 'false,true': [0.24691358024691354, 0.24826388888888892], 'false,true,false': [0.07638888888888877, -1.1564823173178714e-17], 'false,false': [0.16000000000000003, nan], 'false,false,true': [nan, 0.16000000000000003], 'true': [0.0, 0.0]}, {'': [0.0, 0.2162678958438329], 'false': [0.21620596425727098, 0.16], 'false,true': [0.24691358024691368, 0.1895514413889133], 'false,true,true': [nan, 0.24691358024691368], 'false,true,false': [0.07638888888888906, 2.3129646346357427e-18], 'false,false': [0.22222222222222224, 0.0], 'false,false,true': [0.0, 0.0], 'false,false,false': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.18114253997584515], 'false': [0.18492934673088837, 0.1129552601840417], 'false,true': [0.24691358024691368, 0.13462170745152544], 'false,true,false': [0.07638888888888884, 6.938893903907228e-18], 'false,false': [nan, 0.1129552601840417], 'false,false,false': [0.1129552601840417, nan], 'true': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.15983728550985565], 'false': [0.0, 0.16128710186556686], 'false,false': [0.16513627611036286, 0.11204060274623691], 'false,false,false': [0.11204060274623691, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.1548069855598733], 'false': [0.0, 0.15707946766073455], 'false,false': [0.1613105212834484, 0.11125174337856507], 'false,false,true': [nan, 0.16131052128344836], 'false,false,false': [0.11125174337856507, nan], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.1515409578307922], 'false': [0.0, 0.154178115935978], 'false,false': [0.1586594166573414, 0.11057394322982653], 'false,false,true': [0.2469135802469134, 0.08623972100461662], 'false,false,false': [0.15357492115253682, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [6.220654433693878e-05, 0.1457035377729803], 'false': [0.12559208140356928, 0.14815815346337644], 'false,false': [0.0, 0.15980542907897793], 'false,false,false': [0.16787795951084278, 0.10317032157755864], 'false,true': [0.10389477252228896, 0.10056041927860097], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.0, 0.13858321644990843], 'false': [0.1425096279165625, 0.10271577846175772], 'false,true': [0.10154898507986447, 0.018395332038895342], 'false,false': [0.10271577846175772, nan], 'false,false,true': [nan, 0.10271577846175772], 'false,true,true': [0.0, 0.10527826267480452], 'true': [0.0, 0.0]}, {'': [-4.625929269271485e-18, 0.11178283734600711], 'false': [0.0, 0.11390752849661015], 'false,false': [0.11520654669665684, 0.10232840104314367], 'false,false,false': [0.10232840104314367, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.11120359423942007], 'false': [0.11221635454565011, 0.1019986291566887], 'false,true': [0.17666729904833234, 0.06333844351969642], 'false,true,true': [0.0040786669530360475, 0.1534014921365149], 'false,false': [0.1019986291566887, nan], 'false,false,true': [0.0, 0.00030457384565744927], 'false,true,false': [0.0794954651616861, 0.0001768714698807313]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, A).;true;true
5;false,false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(G, A), interaction(A, H).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F), interaction(A, G) )
%   | | | then return 0.05236795315008045;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.46445963075686314;  // std dev = 1.621, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6526478931012827;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8509220325135542;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1490779674864458;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1490779674864458;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.14220708297382562;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.4456900615837244;  // std dev = 1.534, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.508738411682717;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.03690550856814997;  // std dev = 0.752, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.46600206497885854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.27408955786814604;  // std dev = 1.854, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return -0.068105151273395;  // std dev = 0.652, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.15480432541897501;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09737355017592411;  // std dev = 0.716, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.3538396218443459;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4811250217459219;  // std dev = 0.290, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.24069357347465017;  // std dev = 0.557, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.04452323863717749;  // std dev = 0.756, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.20738163497539822;  // std dev = 0.864, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.27767103224768686;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.11944931829175161;  // std dev = 1.740, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return -0.07070073583336374;  // std dev = 0.585, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.10300636017721461;  // std dev = 0.553, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11963192890756048;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2255319407275368;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3348230502129306;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11939921302990139;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.008127079785386487;  // std dev = 0.696, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.1112378810760845;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return -0.0649381428801628;  // std dev = 1.020, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.13995948517897816;  // std dev = 1.168, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.18858258797518312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24234972936704627;  // std dev = 1.017, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.10981361175705795;  // std dev = 0.111, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.2940412205267467;  // std dev = 0.429, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.010467169339426274;  // std dev = 0.565, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.1614025614586705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.1033163804229973;  // std dev = 1.250, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return -0.08442001381262505;  // std dev = 0.449, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.09050060556862087;  // std dev = 0.501, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10211189719265606;  // std dev = 0.593, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.14826323338061925;  // std dev = 0.615, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.008642100592631366;  // std dev = 0.994, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.15160337890453443;  // std dev = 0.708, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.08701969729594917;  // std dev = 0.109, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.47379774918524864;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.13004848051149287;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.936543
   AUC PR    = 0.132834
   CLL	      = -0.354198
   Precision = 0.029335 at threshold = 0.5
   Recall    = 0.865385
   F1        = 0.056747


Total learning time: 2.275 seconds
Total inference time: 7.604 seconds
AUC ROC: 0.936543


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.224819
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.64 seconds
Refined model CLL: -0.224819


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.936543
   AUC PR    = 0.132834
   CLL	      = -0.354198
   Precision = 0.029335 at threshold = 0.5
   Recall    = 0.865385
   F1        = 0.056747


Total learning time: 4.754 seconds
Total inference time: 7.604 seconds
AUC ROC: 0.936543
Total revision time: 4.754
Best scored revision CLL: -0.224819


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:53
{'AUC ROC': 0.936543, 'AUC PR': 0.132834, 'CLL': -0.354198, 'Precision': [0.029335, 0.5], 'Recall': 0.865385, 'F1': 0.056747, 'Learning time': 4.754, 'Inference time': 7.604, 'parameter_25': {'AUC ROC': 0.931558, 'AUC PR': 0.114899, 'CLL': -0.355295, 'Precision': [0.089598, 0.5], 'Recall': 0.836538, 'F1': 0.16186, 'Learning time': 1.219, 'Inference time': 6.901}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8195467402759845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1528800736093178;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.20596351281044725;  // std dev = 1.257, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.16637994993534067;  // std dev = 1.306, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5796628303218725;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0790113975402613;  // std dev = 1.210, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.10180229000515853;  // std dev = 1.210, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.11651063313534153;  // std dev = 0.343, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return -0.3084784319860214;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.051231406192802725;  // std dev = 0.509, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.3940700623192393;  // std dev = 0.682, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46352734172929533;  // std dev = 0.295, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.2508044352836062;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.045424761750908337;  // std dev = 0.891, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.21063525424079588;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.240112985178918;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.168273513782088;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.16396469507815636;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.775522
   AUC PR    = 0.095505
   CLL	      = -0.522201
   Precision = 0.024505 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.047542


Total learning time: 0.894 seconds
Total inference time: 2.119 seconds
AUC ROC: 0.775522


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.277309
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.521 seconds
Parameter learned model CLL: -0.277309


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.309, 4, 3], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.257, 4, 3], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,false': 'interaction(A, F), interaction(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.306, 5, 4], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.21, 5, 3], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(E, F), interaction(F, A)', 'false,false,false': 'phenotype(A, G), interaction(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.21, 4, 3], 'false,false,true,false': [0.343, 1, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), interaction(A, E)', 'false,true': 'interaction(D, E)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [7.45e-09, 3, 0], 'false,true,false': [0.509, 1, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.682, 1, 3], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.295, 0, 4], 'false,true,false': [0.089, 5, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.891, 5, 4], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 3, 0], 'false,true,true,false': [0.617, 1, 3], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999986], 'false': [0.2469135802469134, 0.0], 'false,true': [0.24489795918367335, 0.25], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [nan, 0.22657935081417196], 'false': [0.23054978390792819, 0.0], 'false,true': [0.2448979591836735, 0.178471628116294], 'false,true,true': [0.0, 0.2222222222222223], 'false,true,false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.19120821140866068], 'false': [0.20048578713298015, 0.0], 'false,true': [0.22587074556346173, 0.11145008534151415], 'false,true,false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.17620997878155298], 'false': [nan, 0.17620997878155295], 'false,false': [0.18948205508903304, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.17169755917112545], 'false': [nan, 0.1716975591711255], 'false,false': [0.18731276774952407, 0.0], 'false,false,true': [0.0, 0.18287665736862793], 'false,false,false': [0.0, nan]}, {'': [nan, 0.16019835391017323], 'false': [nan, 0.1601983539101732], 'false,false': [0.1757451270263991, 0.0], 'false,false,true': [0.20906728767847654, 0.058949303910411796], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.15875330192680853], 'false': [0.0828103473168869, 0.09855754613097034], 'false,false': [nan, 0.09855754613097034], 'false,false,false': [0.11640272443548094, 0.0], 'false,true': [1.850371707708594e-17, 0.12939116768263584]}, {'': [nan, 0.12401952380434163], 'false': [0.1365802100902801, 0.0], 'false,true': [0.02182590848860319, 0.0015970346381062538], 'false,true,true': [nan, 0.02182590848860319], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [nan, 0.08044231947156379], 'false': [nan, 0.0804423194715638], 'false,false': [0.08822861612442148, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.07954339469833278], 'false': [0.08744020066643106, 0.0], 'false,true': [0.10409304446623142, 0.027595556856665836], 'false,true,true': [-9.25185853854297e-18, 0.09508826695591707], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
0;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true;interaction(E, D), interaction(E, A).;true;true
2;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(E, A).;true;true
4;true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
6;true;interaction(D, E).;true;true
6;false;interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(D, A).;true;true
7;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
8;;proteinclass(A, B) :- interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(D, A).;true;true
9;true;interaction(D, E), interaction(E, A).;true;true
9;true,true;interaction(A, D), phenotype(A, F).;true;true
9;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.14638152203885876;  // std dev = 1.102, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.19290170118830596;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.7370846078843997;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return -0.026309561628363017;  // std dev = 0.621, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.3773274481122329;  // std dev = 0.572, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5340991321268763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then return -0.16120260934225014;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.2987877671669564;  // std dev = 0.528, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return -0.03215205241515716;  // std dev = 0.488, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.23600073821785092;  // std dev = 0.500, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(C, D) )
%   | then return -0.12367981236275573;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.11666575171661558;  // std dev = 0.414, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.1873452499979387;  // std dev = 0.486, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.30867292965604687;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1560126093069967;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.13012978995173916;  // std dev = 0.415, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.08576039640435923;  // std dev = 0.286, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, C), phenotype(A, E) )
%   | | then return -0.10197243230315349;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.15203502918417872;  // std dev = 0.361, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.16038550603001334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.21049838742124533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.782747
   AUC PR    = 0.060448
   CLL	      = -0.681929
   Precision = 0.021427 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.041882


Total learning time: 1.128 seconds
Total inference time: 1.799 seconds
AUC ROC: 0.782747


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.174188
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.501 seconds
Refined model CLL: -0.174188


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.782747
   AUC PR    = 0.060448
   CLL	      = -0.681929
   Precision = 0.021427 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.041882


Total learning time: 3.044 seconds
Total inference time: 1.799 seconds
AUC ROC: 0.782747
Total revision time: 3.044
Best scored revision CLL: -0.174188


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:00
{'AUC ROC': 0.782747, 'AUC PR': 0.060448, 'CLL': -0.681929, 'Precision': [0.021427, 0.5], 'Recall': 0.923913, 'F1': 0.041882, 'Learning time': 3.044, 'Inference time': 1.799, 'parameter_5': {'AUC ROC': 0.775522, 'AUC PR': 0.095505, 'CLL': -0.522201, 'Precision': [0.024505, 0.5], 'Recall': 0.793478, 'F1': 0.047542, 'Learning time': 0.894, 'Inference time': 2.119}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1420744691189683;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.25264661014710393;  // std dev = 1.625, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.14441725726105378;  // std dev = 1.723, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.596930938359907;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.029793052955529198;  // std dev = 1.304, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.1290632057788718;  // std dev = 1.465, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.012051652304412092;  // std dev = 0.449, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.033611441085649355;  // std dev = 0.755, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.12583316436839748;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.10269937658073369;  // std dev = 1.119, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4777811370809936;  // std dev = 0.344, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.23967491245753575;  // std dev = 0.305, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.034189846905615606;  // std dev = 1.232, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.04630904134993027;  // std dev = 0.587, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.12247568903304959;  // std dev = 0.977, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1965938205981782;  // std dev = 0.089, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.10210955479170514;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.875809
   AUC PR    = 0.129768
   CLL	      = -0.494569
   Precision = 0.027252 at threshold = 0.5
   Recall    = 0.891304
   F1        = 0.052886


Total learning time: 1.085 seconds
Total inference time: 2.382 seconds
AUC ROC: 0.875809


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.292098
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.531 seconds
Parameter learned model CLL: -0.292098


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [1.732, 6, 6], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [1.49e-08, 0, 3], 'false,true,true,false': [1.414, 6, 3], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [1.625, 6, 6], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.723, 10, 7], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.132, 0, 4], 'false,false,true,false': [1.304, 10, 3], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.465, 6, 6], 'false,false,true,false': [0.449, 4, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.755, 3, 2], 'false,true,false': [0.696, 2, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.119, 5, 3], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.344, 0, 7], 'false,true,false': [0.305, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.232, 10, 7], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.587, 3, 2], 'false,true,true,false': [0.977, 3, 4], 'false,true,false,true': [0.089, 0, 2], 'false,true,false,false': [0.002, 4, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2493074792243767], 'false': [0.2469135802469136, 0.0], 'false,true': [0.25, 0.22222222222222224], 'false,true,false': [0.0, 0.0], 'true': [0.0, nan], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.22351441554430254], 'false': [0.22471835162611795, 0.0], 'false,true': [0.25000000000000006, 0.15864144721448348], 'false,true,true': [7.401486830834377e-17, 0.22222222222222218], 'false,true,false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.1807076006462387], 'false': [0.18429264554794117, 0.0], 'false,true': [0.22014614910834676, 0.09906674252579038], 'false,true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.16324516509678108], 'false': [0.0, 0.16881302782827537], 'false,false': [0.17459978350444483, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.15752857306243767], 'false': [0.0, 0.1643447891958012], 'false,false': [0.17172182880048145, 0.0], 'false,false,true': [0.004375864563726073, 0.1307933744158712], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.12993711240652608], 'false': [0.0, 0.13583692608348633], 'false,false': [0.14226654160326374, 0.0], 'false,false,true': [0.17885530045083042, 0.04039700048308109], 'true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.13340210728045732], 'false': [0.12350453053370775, 0.14030879776493504], 'false,false': [nan, 0.14030879776493504], 'false,false,false': [0.15657389882327075, 0.0], 'false,true': [0.1139976714495752, 0.12126444760643079], 'true': [0.0, nan]}, {'': [0.0, 0.12404804432515017], 'false': [0.13024830188223027, 0.0], 'false,true': [0.02464999797107456, 0.009294120360733826], 'false,true,true': [0.0, 0.016870019711100564], 'true': [nan, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.08122894934197986], 'false': [0.0, 0.08508183923697342], 'false,false': [0.08930581700036003, 0.0], 'true': [0.0, nan], 'false,true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.08052944533754887], 'false': [0.08447605592291302, 0.0], 'false,true': [0.11515018767764261, 0.021133759936211447], 'false,true,true': [0.068919740387234, 0.13630181690453053], 'false,true,false': [0.003917106356377417, 8.512363586059279e-07], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,false;interaction(G, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7733921696315487;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14979764901044065;  // std dev = 1.382, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.030904808191032623;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4027397420105669;  // std dev = 1.109, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.021524805476682108;  // std dev = 0.911, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.2783329091972566;  // std dev = 1.176, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.2646017862676736;  // std dev = 1.024, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.018661558101393784;  // std dev = 1.063, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.03068745511958272;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.1852463660134519;  // std dev = 1.162, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.18092182796175035;  // std dev = 1.039, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.23975012827655248;  // std dev = 0.265, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.1336492210766322;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.31201610612122244;  // std dev = 0.574, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4059084472823044;  // std dev = 0.443, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.13291684200207804;  // std dev = 0.136, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.3839746451228161;  // std dev = 0.253, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.014881472549896647;  // std dev = 0.923, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.17798937394812694;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return -0.0010068351287718658;  // std dev = 0.935, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.14150575257216166;  // std dev = 0.516, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.1435112407964363;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.09839414216315256;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.815968
   AUC PR    = 0.064489
   CLL	      = -0.666537
   Precision = 0.024174 at threshold = 0.5
   Recall    = 0.978261
   F1        = 0.047182


Total learning time: 1.6 seconds
Total inference time: 2.223 seconds
AUC ROC: 0.815968


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990455
   CLL	      = -0.258217
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.545 seconds
Refined model CLL: -0.258217


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.815968
   AUC PR    = 0.064489
   CLL	      = -0.666537
   Precision = 0.024174 at threshold = 0.5
   Recall    = 0.978261
   F1        = 0.047182


Total learning time: 3.761 seconds
Total inference time: 2.223 seconds
AUC ROC: 0.815968
Total revision time: 3.761
Best scored revision CLL: -0.258217


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:09
{'AUC ROC': 0.815968, 'AUC PR': 0.064489, 'CLL': -0.666537, 'Precision': [0.024174, 0.5], 'Recall': 0.978261, 'F1': 0.047182, 'Learning time': 3.761, 'Inference time': 2.223, 'parameter_10': {'AUC ROC': 0.875809, 'AUC PR': 0.129768, 'CLL': -0.494569, 'Precision': [0.027252, 0.5], 'Recall': 0.891304, 'F1': 0.052886, 'Learning time': 1.085, 'Inference time': 2.382}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4998721578982151;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1667945087684516;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16932078898570713;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1420744691189683;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.13683012089717592;  // std dev = 1.069, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.24955912571786865;  // std dev = 1.560, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.1080157087400169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return 0.13943553735628997;  // std dev = 1.294, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.20132168491192792;  // std dev = 1.542, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.09804062358787222;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.37173178907761956;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.026645902547700846;  // std dev = 0.664, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15887586986704902;  // std dev = 1.530, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.08970614548200877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.05060489201104707;  // std dev = 0.991, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11657449792039093;  // std dev = 0.654, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.20048288534432088;  // std dev = 0.945, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -6.953096752513691E-4;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(G, F) )
%   | | then return 0.017179534785129045;  // std dev = 1.000, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.14619535991466773;  // std dev = 0.481, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1192384453804442;  // std dev = 0.345, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.0847125549416862;  // std dev = 1.508, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18655050751456048;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2790900613919981;  // std dev = 0.822, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.15908697058351257;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08044685193994332;  // std dev = 1.493, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.1070018016278857;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.159878506326109;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.04001608606165582;  // std dev = 1.062, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.049391198124681034;  // std dev = 1.500, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13585555588863962;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.006936968349837341;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2299446898505952;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12335207867369781;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3519681316513986;  // std dev = 0.831, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.32767098254549376;  // std dev = 0.249, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.902841
   AUC PR    = 0.405463
   CLL	      = -0.228417
   Precision = 0.394958 at threshold = 0.5
   Recall    = 0.51087
   F1        = 0.445498


Total learning time: 1.026 seconds
Total inference time: 2.373 seconds
AUC ROC: 0.902841


Results scoring model
   AUC ROC   = 0.982222
   AUC PR    = 0.982198
   CLL	      = -0.33192
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.733333
   F1        = 0.846154


Total scoring time: 0.542 seconds
Parameter learned model CLL: -0.33192


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.732, 6, 6], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [0.0, 3, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 4], 'false,false,true,false': [0.054, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.069, 4, 2], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.56, 6, 6], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,false': 'interaction(G, A), interaction(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [1.294, 8, 6], 'false,false,false,true': [1.542, 6, 6], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.817, 1, 4], 'false,false,true,false': [0.664, 7, 2], 'false,false,false,true': [1.53, 6, 6], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.991, 4, 2], 'false,false,true,false': [0.654, 4, 4], 'false,false,false,true': [0.945, 3, 4], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'false': 'interaction(A, F), interaction(G, A)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [1.0, 5, 2], 'false,true,false': [0.481, 2, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.345, 1, 1], 'false,false,false,false': [1.508, 7, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.822, 1, 6], 'false,true,false': [0.069, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.493, 6, 6], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.062, 8, 6], 'false,false,false,true': [1.5, 7, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.005, 0, 3], 'false,true,true,true': [0.926, 4, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.073, 0, 4], 'false,true,false,false': [0.011, 4, 0], 'false,false,true,true': [0.831, 1, 6], 'false,false,true,false': [0.249, 6, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24691358024691362], 'false': [0.24489795918367352, 0.24852071005917165], 'false,false': [0.25, 0.0], 'false,false,true': [nan, 0.25], 'false,true': [0.22222222222222224, 0.25], 'false,true,false': [0.0, 0.0], 'true': [1.4802973661668753e-16, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.22227390050883533], 'false': [0.2013909943293677, 0.2441550736059175], 'false,false': [0.2346831687413893, 0.2222222222222222], 'false,false,true': [0.0, 0.0009625582894765052], 'false,false,false': [nan, 0.2222222222222222], 'false,true': [0.2222222222222222, 0.178471628116294], 'false,true,true': [0.2222222222222222, -4.625929269271485e-18], 'false,true,false': [0.0, 0.0]}, {'': [3.700743415417188e-17, 0.17108800382079362], 'false': [0.14707391250202304, 0.1962461358000354], 'false,false': [nan, 0.1962461358000354], 'false,false,false': [0.20276461412407032, 0.0], 'false,true': [0.19047336157011777, 0.11145008534151415], 'false,true,false': [0.0, 0.0], 'true': [nan, 3.700743415417188e-17]}, {'': [-3.700743415417188e-17, 0.1535053475280314], 'false': [nan, 0.1535053475280314], 'false,false': [0.11955418911368407, 0.18928518831234895], 'false,false,false': [0.1981652777165578, 0.0], 'true': [nan, -3.700743415417188e-17]}, {'': [0.0, 0.14892127141965028], 'false': [nan, 0.14892127141965034], 'false,false': [0.1156299721539363, 0.18447172072780513], 'false,false,false': [0.1950910550175582, 0.0], 'false,false,true': [0.13343437071018496, 0.04905835919957313], 'true': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.1401536324249335], 'false': [nan, 0.1401536324249335], 'false,false': [0.10172952475114634, 0.18133970481225026], 'false,false,false': [0.12761785496242822, 0.22222222222222224], 'false,false,true': [0.1636573633148705, 0.05341850772671001], 'true': [nan, 0.0]}, {'': [0.0, 0.13141692850671594], 'false': [0.09882018378044484, 0.15959383929350324], 'false,false': [nan, 0.15959383929350324], 'false,false,false': [0.0594212629869252, 0.17484606659771876], 'false,true': [0.14274001285807153, 0.0386176461178042], 'true': [0.0, nan]}, {'': [1.9861844603933736e-05, 0.13387306124179937], 'false': [0.0965608711506389, 0.17403658988581355], 'false,false': [0.18583679306416534, 0.0], 'false,false,true': [nan, 0.18583679306416534], 'false,true': [0.09643899307663117, 0.0006831935492126859], 'false,true,true': [nan, 0.09643899307663115], 'true': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [1.1311823422362663e-05, 0.12510013815214258], 'false': [nan, 0.12510013815214258], 'false,false': [0.08055886093072552, 0.17302209346133998], 'false,false,false': [0.17302209346133998, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [6.834095862706206e-06, 0.12464350189620141], 'false': [0.07996500404203015, 0.17274655744516818], 'false,false': [0.17274655744516818, nan], 'false,false,true': [0.09875313978794742, 0.010351805315180465], 'false,true': [0.14285235733250082, 0.0318784084388043], 'false,true,true': [0.14285235733250082, nan], 'false,true,false': [0.0013158615808531587, 3.1651971901518194e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(I, A), interaction(J, I).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, F).;true;true
3;false,false;interaction(G, A), interaction(H, G).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(A, H).;true;true
4;false,false;interaction(J, A), interaction(K, J).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4998721578982151;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1667945087684516;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.747906431966103;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1530112186884315;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1665388245648817;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.13683012089717592;  // std dev = 1.069, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.548334745772167;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14023954527411253;  // std dev = 1.347, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.10959718382803246;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.19995406841240296;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, A), interaction(E, E) )
%   | | | then return 0.622825333458094;  // std dev = 0.251, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08543546598137343;  // std dev = 0.730, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.41231823653265237;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11771111617477868;  // std dev = 1.342, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.09935074164989556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.002197908269566016;  // std dev = 0.346, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.28423647448116557;  // std dev = 0.818, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.11655717153470231;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.31719158615263887;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09738975768661846;  // std dev = 1.338, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.0908078923786023;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return -0.17300295657775613;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.03192780532653566;  // std dev = 0.302, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.09532640586317488;  // std dev = 0.675, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.37156810623238234;  // std dev = 0.358, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.06000828850999126;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.21768258793291215;  // std dev = 0.708, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.11649312536173803;  // std dev = 0.807, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.14243708971452515;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.17057507810825073;  // std dev = 0.774, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.19110478834745637;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3507144742712367;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18287913728396488;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.12521287269785034;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2687260650422566;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.1371922450760095;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11202578646158055;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.16437313541101028;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05867680441919432;  // std dev = 1.176, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.07549951201316159;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15711656751440772;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, E) )
%   | | | then return 0.33056757765021333;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09586049139033394;  // std dev = 0.883, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.1098670582077912;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.21117663262301298;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, I) )
%   | | then return 0.00946771377300525;  // std dev = 0.333, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.32467543453118375;  // std dev = 0.501, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1351418706426422;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then return -0.023372281022801967;  // std dev = 0.614, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.18420531457958764;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09961150278937947;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.15909673601121757;  // std dev = 0.719, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.17816090931024264;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.26436478459314044;  // std dev = 0.458, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.881463
   AUC PR    = 0.285027
   CLL	      = -0.278389
   Precision = 0.034675 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.065612


Total learning time: 2.548 seconds
Total inference time: 2.494 seconds
AUC ROC: 0.881463


Results scoring model
   AUC ROC   = 0.991111
   AUC PR    = 0.991912
   CLL	      = -0.229059
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.572 seconds
Refined model CLL: -0.229059


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.881463
   AUC PR    = 0.285027
   CLL	      = -0.278389
   Precision = 0.034675 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.065612


Total learning time: 4.688 seconds
Total inference time: 2.494 seconds
AUC ROC: 0.881463
Total revision time: 4.688
Best scored revision CLL: -0.229059


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:19
{'AUC ROC': 0.881463, 'AUC PR': 0.285027, 'CLL': -0.278389, 'Precision': [0.034675, 0.5], 'Recall': 0.608696, 'F1': 0.065612, 'Learning time': 4.688, 'Inference time': 2.494, 'parameter_15': {'AUC ROC': 0.902841, 'AUC PR': 0.405463, 'CLL': -0.228417, 'Precision': [0.394958, 0.5], 'Recall': 0.51087, 'F1': 0.445498, 'Learning time': 1.026, 'Inference time': 2.373}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42064893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5147476894262668;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.15191897724039985;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7988867582070219;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16327894016068473;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24333120265146643;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.05644439498657702;  // std dev = 1.147, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.29163111356953975;  // std dev = 1.829, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.10859921083497975;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return 0.13348616979667205;  // std dev = 1.441, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.23174976942972922;  // std dev = 1.812, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.09852435800203588;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39457308678054337;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.010195524792690187;  // std dev = 0.890, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17986690727772944;  // std dev = 1.801, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.09011319708944532;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 1.6721086257355985E-4;  // std dev = 1.058, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1664468353841602;  // std dev = 0.735, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.17526650619627643;  // std dev = 1.010, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.050979863426181105;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(G, F) )
%   | | then return -0.01323443109201099;  // std dev = 1.065, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.16553989603200073;  // std dev = 0.514, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1851609740257294;  // std dev = 0.390, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08914451156554276;  // std dev = 1.803, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.1836327682636426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29440172356229294;  // std dev = 0.823, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.1535514568160905;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09097381552747072;  // std dev = 1.780, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.10546208794311386;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15768441016796708;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.04017953558673621;  // std dev = 1.148, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.050622412424309246;  // std dev = 1.794, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13528879646327197;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.022006762232225197;  // std dev = 0.958, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.142111659113637;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2194057019937916;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13531465029285528;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.354245102274411;  // std dev = 0.896, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.3545843951419984;  // std dev = 0.423, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.90304
   AUC PR    = 0.456184
   CLL	      = -0.249463
   Precision = 0.435374 at threshold = 0.5
   Recall    = 0.695652
   F1        = 0.535565


Total learning time: 1.029 seconds
Total inference time: 2.504 seconds
AUC ROC: 0.90304


Results scoring model
   AUC ROC   = 0.9875
   AUC PR    = 0.98699
   CLL	      = -0.324206
   Precision = 0.947368 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.923077


Total scoring time: 0.577 seconds
Parameter learned model CLL: -0.324206


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [1.247, 7, 2], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.984, 7, 9], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [5.27e-09, 6, 0], 'false,true,false,true': [2.11e-08, 0, 6], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 5], 'false,false,true,false': [0.076, 4, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.491, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.147, 7, 2], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.829, 7, 9], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,false': 'interaction(G, A), interaction(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [1.441, 11, 8], 'false,false,false,true': [1.812, 7, 9], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.817, 1, 4], 'false,false,true,false': [0.89, 10, 4], 'false,false,false,true': [1.801, 7, 9], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.058, 7, 2], 'false,false,true,false': [0.735, 4, 6], 'false,false,false,true': [1.01, 4, 5], 'false,false,false,false': [1.491, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'false': 'interaction(A, F), interaction(G, A)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [1.065, 8, 2], 'false,true,false': [0.514, 2, 5], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.39, 1, 2], 'false,false,false,false': [1.803, 9, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.823, 1, 8], 'false,true,false': [0.023, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.78, 7, 9], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.148, 11, 8], 'false,false,false,true': [1.794, 9, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.003, 0, 3], 'false,true,true,true': [0.958, 5, 2], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,true': [0.071, 0, 6], 'false,true,false,false': [0.018, 4, 0], 'false,false,true,true': [0.896, 1, 9], 'false,false,true,false': [0.423, 8, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.2483564645726808], 'false': [0.24376731301939059, 0.25], 'false,false': [0.24609374999999992, 0.0], 'false,false,true': [nan, 0.24609374999999992], 'false,true': [0.17283950617283952, 0.23999999999999994], 'false,true,false': [-1.4802973661668753e-16, 0.0], 'true': [1.4802973661668753e-16, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.21989197243275763], 'false': [0.19619123324146848, 0.24215788235529423], 'false,false': [0.22921960814800565, 0.24691358024691365], 'false,false,false': [nan, 0.24691358024691365], 'false,false,true': [0.0, 0.001431434380003347], 'false,true': [0.1728395061728396, 0.17133276299164218], 'false,true,true': [0.2222222222222223, 4.625929269271485e-18], 'false,true,false': [7.401486830834377e-17, 0.0]}, {'': [3.700743415417188e-17, 0.17059822057118437], 'false': [0.13893119527281517, 0.20160153984448934], 'false,false': [nan, 0.20160153984448934], 'false,false,false': [0.20900347537250086, 0.0], 'false,true': [0.14612756227886003, 0.10699208192785359], 'false,true,false': [-7.401486830834377e-17, 0.0], 'true': [nan, 3.700743415417188e-17]}, {'': [-3.700743415417188e-17, 0.15103896947234624], 'false': [nan, 0.15103896947234635], 'false,false': [0.10932086565556536, 0.1931283083032851], 'false,false,false': [0.2051492358133275, 0.0], 'true': [nan, -3.700743415417188e-17]}, {'': [0.0, 0.14575293675929163], 'false': [nan, 0.14575293675929163], 'false,false': [0.10548247257199633, 0.18749863911312378], 'false,false,false': [0.20283716269625196, 0.0], 'false,false,true': [0.13338880936503342, 0.056635368412149334], 'true': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.1380392874945387], 'false': [nan, 0.13803928749453856], 'false,false': [0.09415844628804645, 0.1840256005697504], 'false,false,false': [0.11341403610705646, 0.24691358024691365], 'false,false,true': [0.12425641578070636, 0.0539734199667915], 'true': [nan, 0.0]}, {'': [0.0, 0.13087905696609567], 'false': [0.09001216108255605, 0.1631543836837143], 'false,false': [nan, 0.1631543836837143], 'false,false,false': [0.050804754624829584, 0.18056229885114247], 'false,true': [0.1134375831319819, 0.03774711947661131], 'true': [0.0, nan]}, {'': [9.493962730945197e-06, 0.13153711646750077], 'false': [0.08567494733764941, 0.17989045344000168], 'false,false': [0.19808930854530132, 0.0], 'false,false,true': [nan, 0.19808930854530132], 'false,true': [0.07519966698201742, 5.225406298254021e-05], 'false,true,true': [nan, 0.0751996669820174], 'true': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [5.4242343997396025e-06, 0.12263752005239859], 'false': [nan, 0.12263752005239854], 'false,false': [0.06941054611335735, 0.17876554756250895], 'false,false,false': [0.17876554756250895, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [3.2858504916665385e-06, 0.12221946480058717], 'false': [0.06881164694214362, 0.1785801628817533], 'false,false': [0.1785801628817533, nan], 'false,false,true': [0.08027403071414099, 0.022329907864824527], 'false,true': [0.10666192481550223, 0.030738740803155522], 'false,true,true': [0.13115123687150582, 0.0], 'false,true,false': [0.0008452166484167745, 8.311003944590917e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(I, A), interaction(J, I).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, F).;true;true
3;false,false;interaction(G, A), interaction(H, G).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(A, H).;true;true
4;false,false;interaction(J, A), interaction(K, J).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,true;interaction(D, A), phenotype(A, F).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.49734587768095956;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14738271375704926;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8009351954957546;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15207199860571832;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.012032692016378577;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12628785535152995;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.27525852954939856;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.19313406349250142;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.5503175242888745;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.10968887183484476;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11311289314211552;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(E, A), interaction(E, E) )
%   | | | then return 0.5800608298755325;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11432161818686216;  // std dev = 0.927, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.42059752014821006;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1567680403461286;  // std dev = 1.287, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return -0.09942660472139767;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10233904171201813;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.47818793709420887;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08483985554412023;  // std dev = 0.877, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.10859771364444055;  // std dev = 1.421, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.3763860579236929;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09087162289575879;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), complex(F, G) )
%   | | | then return 0.4232936556214648;  // std dev = 0.286, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.21646347257221718;  // std dev = 0.424, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.13715064911559924;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( function(A, J), function(H, J) )
%   | | | then return -0.23787344794309032;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04117167180890715;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.16980106605367784;  // std dev = 0.508, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return -0.1758477833239763;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.015941587576261147;  // std dev = 0.262, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1048947008954992;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2933125514669807;  // std dev = 0.461, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.2179886448231345;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06537177633230523;  // std dev = 1.044, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.19912721310526815;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.10460143357244911;  // std dev = 0.322, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2459357922629147;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.06967911588030745;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14781342148291904;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.053911743559192;  // std dev = 0.904, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.12418850162547221;  // std dev = 0.757, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return -0.08560828327384168;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16925935715850426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, A) )
%   | then return -0.08668408020217266;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.21713046760494234;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.012661394616874024;  // std dev = 1.148, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.09622753410371945;  // std dev = 0.562, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1382620883330472;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.018222080446397733;  // std dev = 0.358, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.13344669287307065;  // std dev = 0.080, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.18942162081863176;  // std dev = 0.104, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11182811930712082;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.25757602099513077;  // std dev = 0.703, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.21574298085578478;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.004185546687067901;  // std dev = 0.435, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.868285
   AUC PR    = 0.274064
   CLL	      = -0.375127
   Precision = 0.031596 at threshold = 0.5
   Recall    = 0.652174
   F1        = 0.060271


Total learning time: 2.497 seconds
Total inference time: 2.623 seconds
AUC ROC: 0.868285


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.200347
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.595 seconds
Refined model CLL: -0.200347


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.868285
   AUC PR    = 0.274064
   CLL	      = -0.375127
   Precision = 0.031596 at threshold = 0.5
   Recall    = 0.652174
   F1        = 0.060271


Total learning time: 4.6979999999999995 seconds
Total inference time: 2.623 seconds
AUC ROC: 0.868285
Total revision time: 4.6979999999999995
Best scored revision CLL: -0.200347


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:30
{'AUC ROC': 0.868285, 'AUC PR': 0.274064, 'CLL': -0.375127, 'Precision': [0.031596, 0.5], 'Recall': 0.652174, 'F1': 0.060271, 'Learning time': 4.6979999999999995, 'Inference time': 2.623, 'parameter_20': {'AUC ROC': 0.90304, 'AUC PR': 0.456184, 'CLL': -0.249463, 'Precision': [0.435374, 0.5], 'Recall': 0.695652, 'F1': 0.535565, 'Learning time': 1.029, 'Inference time': 2.504}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4692600462106234;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5246930884258608;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14197357824080595;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7909630054789615;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16724081652471504;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28381404615216066;  // std dev = 1.560, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.002608813039569976;  // std dev = 1.201, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.31769596198410227;  // std dev = 1.890, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.1474622487058677;  // std dev = 0.626, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return 0.09936676916057331;  // std dev = 1.568, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.24937648152163805;  // std dev = 1.871, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.12611987335883235;  // std dev = 0.611, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.41612902649738726;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0010798381091718435;  // std dev = 1.014, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19145413075499917;  // std dev = 1.860, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.10659356537166909;  // std dev = 0.598, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.03275109973210614;  // std dev = 1.105, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.19286178463387726;  // std dev = 0.770, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.19736435009883993;  // std dev = 1.102, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.07134597864491012;  // std dev = 1.580, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(G, F) )
%   | | then return -0.010699462813190334;  // std dev = 1.097, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return 0.1718330328423398;  // std dev = 0.515, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.07354245173406894;  // std dev = 0.630, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.10614763316756107;  // std dev = 1.931, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18269123061054504;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2741890798437009;  // std dev = 0.932, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return -0.13729045568807116;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08722948153222523;  // std dev = 1.836, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.19381577158926158;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.5250708870682991;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15697491201850577;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.02871310354784785;  // std dev = 1.253, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.0598035152386814;  // std dev = 1.895, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13565428847138;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.0557017055484272;  // std dev = 0.977, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.13086372570100027;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.23776851200036742;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.13111692374265987;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.32358599839643826;  // std dev = 0.900, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.40501574982595406;  // std dev = 0.389, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.918291
   AUC PR    = 0.413937
   CLL	      = -0.297874
   Precision = 0.071356 at threshold = 0.5
   Recall    = 0.76087
   F1        = 0.130475


Total learning time: 1.124 seconds
Total inference time: 2.466 seconds
AUC ROC: 0.918291


Results scoring model
   AUC ROC   = 0.9792
   AUC PR    = 0.981524
   CLL	      = -0.301977
   Precision = 0.958333 at threshold = 0.5
   Recall    = 0.92
   F1        = 0.938776


Total scoring time: 0.597 seconds
Parameter learned model CLL: -0.301977


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 1], 'false,true,true': [1.309, 12, 2], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.068, 7, 11], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 4], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [0.0, 11, 0], 'false,true,false,true': [2.11e-08, 0, 7], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 7], 'false,false,true,false': [0.084, 4, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.56, 5, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [1.201, 12, 2], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.89, 7, 11], 'false,false,false,false': [0.626, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,false': 'interaction(G, A), interaction(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [1.568, 16, 9], 'false,false,false,true': [1.871, 7, 11], 'false,false,false,false': [0.611, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.818, 1, 4], 'false,false,true,false': [1.014, 15, 5], 'false,false,false,true': [1.86, 7, 11], 'false,false,false,false': [0.598, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.105, 12, 2], 'false,false,true,false': [0.77, 4, 7], 'false,false,false,true': [1.102, 4, 7], 'false,false,false,false': [1.58, 5, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'false': 'interaction(A, F), interaction(G, A)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [1.097, 10, 2], 'false,true,false': [0.515, 2, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.63, 4, 3], 'false,false,false,false': [1.931, 9, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.932, 2, 9], 'false,true,false': [0.028, 14, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.836, 7, 11], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [1.253, 16, 9], 'false,false,false,true': [1.895, 9, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.003, 0, 4], 'false,true,true,true': [0.977, 5, 2], 'false,true,true,false': [0.044, 7, 0], 'false,true,false,true': [0.099, 0, 7], 'false,true,false,false': [0.017, 4, 0], 'false,false,true,true': [0.9, 1, 12], 'false,false,true,false': [0.389, 8, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2481096408317579], 'false': [0.23040000000000005, 0.24489795918367308], 'false,false': [0.23765432098765396, 0.22222222222222224], 'false,false,true': [nan, 0.23765432098765396], 'false,true': [0.12244897959183677, 0.23140495867768587], 'false,true,false': [-2.5376526277146434e-16, 0.0], 'false,false,false': [0.0, 0.0], 'true': [1.4802973661668753e-16, 0.0]}, {'': [0.0, 0.21464871669915905], 'false': [0.18295048481534193, 0.2337696265800852], 'false,false': [0.21310076287481908, 0.24331100924830565], 'false,false,false': [nan, 0.24331100924830565], 'false,false,true': [-1.2688263138573217e-16, 0.001746920495100366], 'false,true': [0.12244897959183668, 0.1651968789175614], 'false,true,false': [6.344131569286608e-17, 0.0], 'false,true,true': [0.22222222222222213, -5.046468293750712e-18]}, {'': [0.0, 0.16328666566782393], 'false': [0.12756541056598278, 0.19236353512356766], 'false,false': [nan, 0.19236353512356766], 'false,false,false': [0.1984936909610777, 0.1307430139815108], 'false,true': [0.10303144250047043, 0.10316040957231065], 'false,true,false': [-6.344131569286608e-17, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.14281165671072002], 'false': [nan, 0.1428116567107201], 'false,false': [0.09830441224769405, 0.18626919414008938], 'false,false,false': [0.1944085200802319, 0.1244113601085491], 'true': [nan, 0.0]}, {'': [0.0, 0.13751590327147592], 'false': [nan, 0.13751590327147598], 'false,false': [0.09545186916369391, 0.18266227208522226], 'false,false,false': [0.19220312529544448, 0.11924459663202185], 'false,false,true': [0.13367278731686721, 0.0514434738690573], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.13002675246111622], 'false': [nan, 0.13002675246111609], 'false,false': [0.08512408035995475, 0.1807552029868363], 'false,false,false': [0.11047740035338466, 0.24974236067492311], 'false,false,true': [0.0872247025106585, 0.05394590404757342], 'true': [nan, 0.0]}, {'': [0.0, 0.12029086272908202], 'false': [0.08139826577220538, 0.14754076313340317], 'false,false': [nan, 0.14754076313340317], 'false,false,false': [0.0566397983904139, 0.17757531025032186], 'false,true': [0.10022988183258298, 0.0331599744994973], 'true': [0.0, nan]}, {'': [7.825258958420178e-06, 0.12280026074613415], 'false': [0.07650866005590143, 0.17714290887825637], 'false,false': [0.18728101425717078, 0.11484400622129602], 'false,false,true': [nan, 0.18728101425717078], 'false,false,false': [0.0, 0.0], 'false,true': [0.07899373590554987, 5.732086871423506e-05], 'false,true,true': [nan, 0.07899373590554991], 'true': [0.0, 0.0]}, {'': [4.4754543287138515e-06, 0.11240546586775317], 'false': [nan, 0.11240546586775318], 'false,false': [0.06275435553931125, 0.1709885970123472], 'false,false,false': [0.1709885970123472, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [2.7134604451382882e-06, 0.1120159037589663], 'false': [0.06227500773474162, 0.1709806798488948], 'false,false': [0.1709806798488948, nan], 'false,false,true': [0.06232514011452417, 0.018917998695083066], 'false,true': [0.07697252985011158, 0.03240262324684297], 'false,true,true': [0.1362648498824697, 0.00027687974911103086], 'false,true,false': [0.0013940194164101052, 7.356604798577221e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,false;phenotype(A, J), interaction(K, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,true;interaction(D, A), phenotype(A, F).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5063853964015644;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13811250461446803;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7959886038463948;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1583517513713782;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.1271965151898549;  // std dev = 1.105, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4917903431046246;  // std dev = 0.789, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.11016747220321534;  // std dev = 1.092, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.12005755622902987;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6973483772912278;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18711305465189026;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.5454736033819493;  // std dev = 0.708, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.11723606128289088;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), complex(F, G) )
%   | | then return 0.24509285875988499;  // std dev = 0.422, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.11813764241934532;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.37786339836744653;  // std dev = 1.172, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.04023284079152732;  // std dev = 0.464, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.09234538438885923;  // std dev = 0.801, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.25650144989754387;  // std dev = 0.939, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, A) )
%   | then return -0.200187691419054;  // std dev = 0.184, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.027218052744089404;  // std dev = 0.426, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.35572198544482764;  // std dev = 0.863, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.07449849243844976;  // std dev = 0.805, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.19361318468922076;  // std dev = 0.954, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1891857506211962;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.024078563263764258;  // std dev = 0.429, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2787915725076152;  // std dev = 0.824, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), interaction(I, I) )
%   | | | then return 0.16508433907200518;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.16703287654597768;  // std dev = 0.131, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.024920997535988695;  // std dev = 0.634, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.42284200381018533;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), complex(F, G) )
%   | | then return 0.17741513354954394;  // std dev = 0.403, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.0967970105437535;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.029476833751962916;  // std dev = 0.858, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.11291872039745636;  // std dev = 0.362, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.21786834558679058;  // std dev = 0.548, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.0655314256528387;  // std dev = 1.000, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18044089170139802;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.17331179163992147;  // std dev = 0.698, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.27611163711133097;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.1578697971613314;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09544961646963075;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.0691042674523558;  // std dev = 0.941, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.2641068065999467;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return -0.20622666603144862;  // std dev = 0.190, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.3530490677085246;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15231155193030865;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15825360494992102;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.404860642790843;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(E, H), phenotype(H, I) )
%   | | | then return -0.13186379214991573;  // std dev = 0.199, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.06306188386788095;  // std dev = 0.367, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then return -0.0935606715781193;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.15709362180835712;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.051670122545117485;  // std dev = 0.939, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13598491923930847;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.017814711426826727;  // std dev = 0.616, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.11941607454894052;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.18336056665014558;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11027780905530116;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, I), phenotype(H, J) )
%   | | | then return 0.16943723171842812;  // std dev = 0.601, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.008349128992361099;  // std dev = 0.664, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.038975823478093086;  // std dev = 0.422, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.857896
   AUC PR    = 0.172927
   CLL	      = -0.395891
   Precision = 0.02046 at threshold = 0.5
   Recall    = 0.695652
   F1        = 0.039752


Total learning time: 2.677 seconds
Total inference time: 2.439 seconds
AUC ROC: 0.857896


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.193951
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.61 seconds
Refined model CLL: -0.193951


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.857896
   AUC PR    = 0.172927
   CLL	      = -0.395891
   Precision = 0.02046 at threshold = 0.5
   Recall    = 0.695652
   F1        = 0.039752


Total learning time: 5.008 seconds
Total inference time: 2.439 seconds
AUC ROC: 0.857896
Total revision time: 5.008
Best scored revision CLL: -0.193951


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:40
{'AUC ROC': 0.857896, 'AUC PR': 0.172927, 'CLL': -0.395891, 'Precision': [0.02046, 0.5], 'Recall': 0.695652, 'F1': 0.039752, 'Learning time': 5.008, 'Inference time': 2.439, 'parameter_25': {'AUC ROC': 0.918291, 'AUC PR': 0.413937, 'CLL': -0.297874, 'Precision': [0.071356, 0.5], 'Recall': 0.76087, 'F1': 0.130475, 'Learning time': 1.124, 'Inference time': 2.466}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1888683221574974;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.08218697326900652;  // std dev = 1.138, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06890815004407463;  // std dev = 1.135, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.12674176910677568;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11624118702957428;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return -0.2991367011531362;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.17858915069528708;  // std dev = 0.967, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6621349977447415;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.2128489241336648;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.014665970277346467;  // std dev = 0.832, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.20607777600139773;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.12422206188044357;  // std dev = 0.752, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10299768334914708;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.936559
   AUC PR    = 0.348356
   CLL	      = -0.186028
   Precision = 0.258824 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.387097


Total learning time: 0.999 seconds
Total inference time: 2.881 seconds
AUC ROC: 0.936559


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.267732
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.502 seconds
Parameter learned model CLL: -0.267732


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.095, 3, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.138, 5, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.135, 5, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.095, 3, 2], 'false,false,true,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.967, 3, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.183, 5, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [0.832, 5, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.752, 2, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2343749999999999], 'false': [0.2343749999999999, nan], 'false,true': [0.24000000000000005, 0.22222222222222224], 'false,true,false': [0.0, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.2105596463280772], 'false': [0.2105596463280772, nan], 'false,true': [0.24000000000000005, 0.15864144721448356], 'false,true,true': [nan, 0.24000000000000005], 'false,true,false': [0.0, 0.0]}, {'': [0.0, 0.18859886343708798], 'false': [0.18859886343708798, nan], 'false,true': [0.23999999999999994, 0.09906674252579034], 'false,true,false': [0.0, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.17412026132704875], 'false': [0.0, 0.1849390923774567], 'false,false': [0.1849390923774567, nan], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'true,true': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.16805618980493492], 'false': [0.0, 0.18413857918476012], 'false,false': [0.18413857918476012, nan], 'false,false,true': [nan, 0.18413857918476012], 'true': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.16482460896359308], 'false': [0.0, 0.18347769734137948], 'false,false': [0.1834776973413795, nan], 'false,false,true': [0.24000000000000005, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.16062930579530857], 'false': [0.0, 0.15586932819137264], 'false,false': [0.0, 0.1868812805896059], 'false,false,false': [0.1868812805896059, nan], 'true': [0.0, 0.0], 'false,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.14302634284123014], 'false': [0.14302634284123014, nan], 'false,true': [0.052280521440384496, 0.00667263632990917], 'false,true,true': [0.0, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.08868061657128866], 'false': [0.0, 0.09896608819349557], 'false,false': [0.09896608819349557, nan], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'true,false': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.08789877749218236], 'false': [0.08789877749218236, nan], 'false,true': [0.1306173070125156, 0.0124824964785575], 'false,true,true': [0.0, 0.14145203718469035], 'false,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(F, E), interaction(F, A).;true;true
0;false,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, D), interaction(E, A).;true;true
1;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(F, E), interaction(F, A).;true;true
2;false,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, H), interaction(H, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, E), interaction(E, A).;true;true
9;false,true;interaction(A, D), phenotype(A, F).;true;true
9;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return 0.4091464191559607;  // std dev = 1.052, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.15269836449324467;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, F), interaction(E, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return 0.3385792800583928;  // std dev = 1.041, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1341650999732814;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6443111353124404;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.19223171800476951;  // std dev = 0.914, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.14230823438569204;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.48745619023151543;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.15133425904352477;  // std dev = 0.908, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.12630519643886906;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.3687362927946225;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.05302933612778008;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.18804879079429226;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.28774153013355674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then return -0.26531695566443253;  // std dev = 0.262, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.12635507924139897;  // std dev = 0.779, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.23252292575046585;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17431582402406764;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.20917624354908212;  // std dev = 0.232, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.19362232817710323;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return 0.11507618291653252;  // std dev = 0.731, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.1462638543189422;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(E, A) )
%   | then if ( interaction(A, D), phenotype(A, F) )
%   | | then return -0.364254142929254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.11100266582669215;  // std dev = 0.652, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1654073463389184;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.685148
   AUC PR    = 0.077059
   CLL	      = -0.274493
   Precision = 0.066975 at threshold = 0.5
   Recall    = 0.337209
   F1        = 0.111753


Total learning time: 9.869 seconds
Total inference time: 34.654 seconds
AUC ROC: 0.685148


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.247162
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.93 seconds
Refined model CLL: -0.247162


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.685148
   AUC PR    = 0.077059
   CLL	      = -0.274493
   Precision = 0.066975 at threshold = 0.5
   Recall    = 0.337209
   F1        = 0.111753


Total learning time: 12.299999999999999 seconds
Total inference time: 34.654 seconds
AUC ROC: 0.685148
Total revision time: 12.299999999999999
Best scored revision CLL: -0.247162


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:31
{'AUC ROC': 0.685148, 'AUC PR': 0.077059, 'CLL': -0.274493, 'Precision': [0.066975, 0.5], 'Recall': 0.337209, 'F1': 0.111753, 'Learning time': 12.299999999999999, 'Inference time': 34.654, 'parameter_5': {'AUC ROC': 0.936559, 'AUC PR': 0.348356, 'CLL': -0.186028, 'Precision': [0.258824, 0.5], 'Recall': 0.767442, 'F1': 0.387097, 'Learning time': 0.999, 'Inference time': 2.881}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08320549123154837;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1394693492601174;  // std dev = 1.354, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2448947584827767;  // std dev = 0.577, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.11310523977133544;  // std dev = 1.466, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1980800583301751;  // std dev = 0.563, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6277876975993255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05331405873691364;  // std dev = 1.347, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15707816053369625;  // std dev = 0.552, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.07216204284879775;  // std dev = 1.297, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.08037708772208137;  // std dev = 0.543, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.5082634854538068;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2624918796776245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return -0.1016291908188249;  // std dev = 0.623, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.1264392526395036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.187640879918608;  // std dev = 1.130, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08423478756997176;  // std dev = 0.423, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.512255459812209;  // std dev = 0.407, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.20621237514560173;  // std dev = 0.163, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06710405421776826;  // std dev = 0.419, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.031246383784523307;  // std dev = 1.117, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05337301746620844;  // std dev = 0.417, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.07796597979158938;  // std dev = 0.385, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.01947199492327522;  // std dev = 0.977, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.18622342022714156;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.117470327537197;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3362795166893775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.25146070383898617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.969181
   AUC PR    = 0.238884
   CLL	      = -0.219416
   Precision = 0.219931 at threshold = 0.5
   Recall    = 0.744186
   F1        = 0.339523


Total learning time: 0.967 seconds
Total inference time: 3.026 seconds
AUC ROC: 0.969181


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.273293
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.541 seconds
Parameter learned model CLL: -0.273293


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true': [1.414, 6, 3], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.225, 6, 2], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.354, 6, 3], 'false,true,false,true': [1.05e-08, 0, 3], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.577, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.466, 9, 5], 'false,false,false,true': [0.563, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.347, 9, 4], 'false,false,false,true': [0.552, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.297, 6, 3], 'false,false,true,false': [0.543, 3, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.623, 4, 1], 'false,true,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [1.13, 4, 4], 'false,false,false,false': [0.423, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.407, 0, 5], 'false,true,false': [0.163, 9, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.419, 1, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.117, 9, 5], 'false,false,false,true': [0.417, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.385, 1, 1], 'false,true,true,false': [0.977, 5, 2], 'false,true,false,true': [0.064, 0, 3], 'false,true,false,false': [0.025, 3, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.2422145328719724], 'false': [0.24000000000000007, 0.25], 'false,false': [0.25, nan], 'false,false,true': [nan, 0.25], 'false,true': [0.2222222222222221, 0.24999999999999992], 'false,true,false': [1.4802973661668753e-16, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.21449492154401942], 'false': [0.20880771394417336, 0.25000000000000006], 'false,false': [0.0, 0.0], 'false,true': [0.22222222222222238, 0.1784716281162939], 'false,true,true': [0.0, 0.1875], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.168826873668388], 'false': [0.1684891790209874, 0.1667085109942189], 'false,true': [0.20382198762479978, 0.11145008534151417], 'false,false': [nan, 0.1667085109942189], 'false,false,false': [0.1667085109942189, nan], 'false,true,false': [3.700743415417188e-17, 2.3129646346357427e-18], 'true': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.15048421187661587], 'false': [0.0, 0.15481238671178052], 'false,false': [0.15342252560185526, 0.15822328466578878], 'false,false,false': [0.15822328466578878, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.14566807838770646], 'false': [0.0, 0.15196338277323498], 'false,false': [0.15141709656752025, 0.15234418523640803], 'false,false,false': [0.15234418523640803, nan], 'false,false,true': [0.0, 0.13949171112369393], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.1356380227238964], 'false': [0.0, 0.14233235853689566], 'false,false': [0.141163503846141, 0.14851595821972152], 'false,false,false': [0.0, 0.0], 'false,false,true': [0.18682694355929488, 0.058925927886718944], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.12098579499751518], 'false': [0.06482326266679643, 0.12296043830196633], 'false,false': [0.0, 0.1472472470553751], 'false,false,false': [0.15954783185844218, 0.08949065189525506], 'false,true': [0.07768532533889808, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.12015812008880339], 'false': [0.12444376943767803, 0.08795535620326997], 'false,true': [0.04327762788301718, 0.0029347815961046444], 'false,false': [0.08795535620326997, nan], 'false,false,true': [nan, 0.08795535620326997], 'false,true,true': [0.0, 0.03321123181732344], 'true': [0.0, 0.0]}, {'': [-4.625929269271485e-18, 0.08451829904614497], 'false': [0.0, 0.08897144546900553], 'false,false': [0.08919494655319125, 0.08697854845138223], 'false,false,false': [0.08697854845138223, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.08377333711781401], 'false': [0.08341858989566049, 0.0863596417066824], 'false,false': [0.0863596417066824, nan], 'false,false,true': [0.0, 0.0], 'false,true': [0.1231316883658961, 0.02384676274459695], 'false,true,true': [0.07399687236382958, 0.1364098636090128], 'false,true,false': [0.0013632757037582433, 0.00021530356986081364]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, A).;true;true
5;false,false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,true;interaction(H, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08342147041787511;  // std dev = 1.187, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.27178600499638206;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.13488620052594952;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2448947584827767;  // std dev = 0.577, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.028286400889899532;  // std dev = 0.687, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.45132280619824616;  // std dev = 0.832, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.11258243713989832;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.038741469034530684;  // std dev = 0.469, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5824982689652355;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04254209501016507;  // std dev = 1.188, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.13913594830704828;  // std dev = 0.488, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.07140156888828401;  // std dev = 0.583, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1663421979636736;  // std dev = 1.008, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.4496107408115757;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.22964129485615203;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.05204228410577481;  // std dev = 0.586, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.10250186153774911;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.28558406587173;  // std dev = 0.819, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.03693267835933727;  // std dev = 0.447, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4247873774904387;  // std dev = 0.269, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.31658596214343654;  // std dev = 0.182, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10598954636349639;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.04776186402569457;  // std dev = 0.330, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), location(F, G) )
%   | | then if ( complex(F, H), interaction(I, F) )
%   | | | then return 0.0580391731348332;  // std dev = 0.720, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.16853860190183298;  // std dev = 0.253, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.14957693425740565;  // std dev = 0.423, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.13287814373026832;  // std dev = 0.592, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0462338187620463;  // std dev = 0.518, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17775758570024816;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08553660199927793;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.012828818036466544;  // std dev = 0.326, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.930295
   AUC PR    = 0.155978
   CLL	      = -0.285925
   Precision = 0.056111 at threshold = 0.5
   Recall    = 0.848837
   F1        = 0.105263


Total learning time: 1.531 seconds
Total inference time: 3.352 seconds
AUC ROC: 0.930295


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.212979
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.602 seconds
Refined model CLL: -0.212979


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.930295
   AUC PR    = 0.155978
   CLL	      = -0.285925
   Precision = 0.056111 at threshold = 0.5
   Recall    = 0.848837
   F1        = 0.105263


Total learning time: 3.6409999999999996 seconds
Total inference time: 3.352 seconds
AUC ROC: 0.930295
Total revision time: 3.6409999999999996
Best scored revision CLL: -0.212979


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:41
{'AUC ROC': 0.930295, 'AUC PR': 0.155978, 'CLL': -0.285925, 'Precision': [0.056111, 0.5], 'Recall': 0.848837, 'F1': 0.105263, 'Learning time': 3.6409999999999996, 'Inference time': 3.352, 'parameter_10': {'AUC ROC': 0.969181, 'AUC PR': 0.238884, 'CLL': -0.219416, 'Precision': [0.219931, 0.5], 'Recall': 0.744186, 'F1': 0.339523, 'Learning time': 0.967, 'Inference time': 3.026}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8414589649401938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.041458964940193785;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.191258864214365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0958505333639137;  // std dev = 1.413, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.24489475848277667;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.10299960448424643;  // std dev = 1.612, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1980800583301751;  // std dev = 0.796, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6522206480534812;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05689476590967315;  // std dev = 1.489, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15707816053369628;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.04282276976203728;  // std dev = 1.351, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.1034575007189922;  // std dev = 0.740, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.5082634854538068;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.2624918796776245;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return -0.11034337250176582;  // std dev = 0.641, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.1282791821301294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.17253113727267044;  // std dev = 1.245, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.08423478756997177;  // std dev = 0.598, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4713337257538912;  // std dev = 0.514, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1798723477252088;  // std dev = 0.127, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06710405421776827;  // std dev = 0.593, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.03033950544086711;  // std dev = 1.244, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05337301746620838;  // std dev = 0.590, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.016169460923542656;  // std dev = 0.455, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.02647876050510485;  // std dev = 1.033, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20213257984549377;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.124755209818778;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3362795166893775;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.25146070383898617;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.970163
   AUC PR    = 0.24725
   CLL	      = -0.210237
   Precision = 0.22069 at threshold = 0.5
   Recall    = 0.744186
   F1        = 0.340426


Total learning time: 1.003 seconds
Total inference time: 3.226 seconds
AUC ROC: 0.970163


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.24932
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 0.525 seconds
Parameter learned model CLL: -0.24932


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 1], 'false,true,true': [1.477, 8, 3], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.265, 8, 2], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.413, 8, 3], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.817, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.612, 13, 7], 'false,false,false,true': [0.796, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.489, 13, 6], 'false,false,false,true': [0.781, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.351, 8, 3], 'false,false,true,false': [0.74, 5, 4], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 3], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.641, 6, 1], 'false,true,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [1.245, 6, 6], 'false,false,false,false': [0.598, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.514, 0, 7], 'false,true,false': [0.127, 13, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.593, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.244, 13, 7], 'false,false,false,true': [0.59, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.455, 2, 1], 'false,true,true,false': [1.033, 6, 2], 'false,true,false,true': [0.076, 0, 5], 'false,true,false,false': [0.027, 5, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24000000000000005], 'false': [0.23582766439909303, 0.25], 'false,false': [0.25, nan], 'false,false,true': [nan, 0.25], 'false,true': [0.1983471074380164, 0.24999999999999992], 'false,true,false': [0.0, -2.7755575615628915e-18], 'true': [0.0, 0.0]}, {'': [0.0, 0.20721793206926975], 'false': [0.1972201774533765, 0.25], 'false,false': [0.0, 0.0], 'false,true': [0.19834710743801673, 0.17847162811629402], 'false,true,true': [0.0, 0.16], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.15547253502515504], 'false': [0.15205930878883744, 0.16670851099421893], 'false,false': [nan, 0.16670851099421893], 'false,false,false': [0.16670851099421893, nan], 'false,true': [0.1814557946867823, 0.11145008534151415], 'false,true,false': [-4.4408920985006264e-17, 0.0], 'true': [0.0, 3.700743415417188e-17]}, {'': [4.4408920985006264e-17, 0.13384889083396828], 'false': [0.0, 0.13585784320500702], 'false,false': [0.12987803946225934, 0.1582232846657888], 'false,false,false': [0.1582232846657888, nan], 'true': [0.0, -3.700743415417188e-17], 'false,true': [nan, 0.0], 'true,true': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [-2.2204460492503132e-17, 0.12911505654188293], 'false': [0.0, 0.13251789924330626], 'false,false': [0.12772621403715304, 0.15234418523640805], 'false,false,false': [0.15234418523640805, nan], 'false,false,true': [0.0, 0.1167280010573827], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.12091768437934927], 'false': [0.0, 0.12471311041728056], 'false,false': [0.11948829845785791, 0.1485159582197215], 'false,false,false': [0.0, 0.0], 'false,false,true': [0.16582406197679453, 0.060833584772357424], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.10588960445257713], 'false': [0.051454447028772436, 0.10771344742595886], 'false,false': [0.0, 0.12078689846946948], 'false,false,false': [0.12926991931816895, 0.08949065189525506], 'false,true': [0.05876487066021896, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.10313712890636408], 'false': [0.1060022315677954, 0.08795535620326997], 'false,true': [0.04255274332250894, 0.0012309940814916492], 'false,false': [0.08795535620326997, nan], 'false,false,true': [nan, 0.08795535620326997], 'false,true,true': [0.0, 0.037809763361021834], 'true': [0.0, 0.0]}, {'': [0.0, 0.07645228063283695], 'false': [0.0, 0.07907548184045905], 'false,false': [0.07740644473890414, 0.08697854845138228], 'false,false,false': [0.08697854845138228, nan], 'true': [-4.625929269271485e-18, 0.0], 'false,true': [nan, 0.0], 'true,false': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.07577305049544215], 'false': [0.07373506757575503, 0.0863596417066824], 'false,false': [0.0863596417066824, nan], 'false,false,true': [0.0, 0.0], 'false,true': [0.11577868016854626, 0.027368897668480757], 'false,true,true': [0.06896738057171509, 0.13330393161066822], 'false,true,false': [0.001160272635164833, 0.00014970918600009097]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, A).;true;true
5;false,false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,true;interaction(H, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8580264217591941;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03831230736977045;  // std dev = 1.220, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.808741135785635;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.191258864214365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.0031116165463112347;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.20627494633363458;  // std dev = 1.015, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.24489475848277667;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5258417574841133;  // std dev = 0.818, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.17515073238606937;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.15903438158839953;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08105088689459669;  // std dev = 0.742, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5520237359956244;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.052498777094085305;  // std dev = 1.321, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return 0.1450818427604894;  // std dev = 0.641, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.12547871897572288;  // std dev = 0.849, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.02917967838842164;  // std dev = 1.043, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.42978989391293865;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1974723539998062;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.17857757575104724;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03327766378584055;  // std dev = 0.431, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09475011124303614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.33596633496136885;  // std dev = 0.729, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.006188983848389123;  // std dev = 0.762, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4079648737801794;  // std dev = 0.317, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.1898258980612661;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.13317937573100821;  // std dev = 0.107, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.04531056472022716;  // std dev = 0.428, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(A, G), complex(F, H) )
%   | | | then return 0.020928832537335896;  // std dev = 0.327, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12790161996772678;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.22478622854821895;  // std dev = 0.607, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.015081323881726233;  // std dev = 0.621, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.03828846842135909;  // std dev = 0.766, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.14094644807563586;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.22280321908428533;  // std dev = 0.167, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10017475492425307;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.08297687994730728;  // std dev = 0.314, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.17318482012351302;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.956691
   AUC PR    = 0.312098
   CLL	      = -0.246222
   Precision = 0.056809 at threshold = 0.5
   Recall    = 0.848837
   F1        = 0.106492


Total learning time: 1.746 seconds
Total inference time: 3.546 seconds
AUC ROC: 0.956691


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.190328
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.556 seconds
Refined model CLL: -0.190328


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.956691
   AUC PR    = 0.312098
   CLL	      = -0.246222
   Precision = 0.056809 at threshold = 0.5
   Recall    = 0.848837
   F1        = 0.106492


Total learning time: 3.83 seconds
Total inference time: 3.546 seconds
AUC ROC: 0.956691
Total revision time: 3.83
Best scored revision CLL: -0.190328


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:52
{'AUC ROC': 0.956691, 'AUC PR': 0.312098, 'CLL': -0.246222, 'Precision': [0.056809, 0.5], 'Recall': 0.848837, 'F1': 0.106492, 'Learning time': 3.83, 'Inference time': 3.546, 'parameter_15': {'AUC ROC': 0.970163, 'AUC PR': 0.24725, 'CLL': -0.210237, 'Precision': [0.22069, 0.5], 'Recall': 0.744186, 'F1': 0.340426, 'Learning time': 1.003, 'Inference time': 3.226}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8491007369185988;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.002946890764752617;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.808741135785635;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.191258864214365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05284999451101088;  // std dev = 1.467, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.24489475848277656;  // std dev = 1.000, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.12033951989052935;  // std dev = 1.796, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19808005833017509;  // std dev = 0.974, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.24723815515128134;  // std dev = 0.597, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.08966481938330118;  // std dev = 1.656, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15707816053369628;  // std dev = 0.956, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.010051140195910106;  // std dev = 1.446, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.15752474946155062;  // std dev = 0.907, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.315574644170949;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2624918796776245;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return -0.0897507870582951;  // std dev = 0.748, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.09565542658355734;  // std dev = 0.334, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.13645032044498592;  // std dev = 1.415, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.0886220150466716;  // std dev = 0.841, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3662536535351078;  // std dev = 0.908, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.17561161402472833;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06942290474156101;  // std dev = 0.836, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.03930449300682142;  // std dev = 1.480, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05426420436818596;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.015205997404763624;  // std dev = 0.598, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.009332145088750604;  // std dev = 1.151, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21479446625672174;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.13959522844950997;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.37875715404667765;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2940375225356465;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.972046
   AUC PR    = 0.262296
   CLL	      = -0.199565
   Precision = 0.236162 at threshold = 0.5
   Recall    = 0.744186
   F1        = 0.358543


Total learning time: 1.116 seconds
Total inference time: 3.27 seconds
AUC ROC: 0.972046


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990465
   CLL	      = -0.264169
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.918919


Total scoring time: 0.593 seconds
Parameter learned model CLL: -0.264169


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 1], 'false,true,true': [1.535, 11, 3], 'false,true,false,true': [0.0, 0, 9], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 3, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.301, 11, 2], 'false,true,false,true': [2.98e-08, 0, 9], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [1.49e-08, 0, 3], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.467, 11, 3], 'false,true,false,true': [0.0, 0, 9], 'false,true,false,false': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.0, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.796, 17, 11], 'false,false,false,true': [0.974, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.597, 1, 1], 'false,false,true,false': [1.656, 16, 10], 'false,false,false,true': [0.956, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.446, 11, 3], 'false,false,true,false': [0.907, 6, 8], 'false,false,false,true': [0.667, 1, 3], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 3], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.748, 7, 1], 'false,true,false': [0.334, 1, 1], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [1.415, 9, 9], 'false,false,false,false': [0.841, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.908, 1, 11], 'false,true,false': [0.078, 16, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.836, 3, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.48, 17, 11], 'false,false,false,true': [0.832, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.598, 3, 1], 'false,true,true,false': [1.151, 8, 2], 'false,true,false,true': [0.086, 0, 9], 'false,true,false,false': [0.004, 6, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.101, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.244897959183673], 'false': [0.24256837098691986, 0.24999999999999992], 'false,false': [0.24999999999999992, nan], 'false,false,true': [nan, 0.24999999999999992], 'false,true': [0.1683673469387754, 0.23999999999999994], 'false,true,false': [-2.9605947323337506e-16, -6.938893903907228e-18], 'true': [0.0, 0.0]}, {'': [0.0, 0.2054979374212154], 'false': [0.19517114190107163, 0.24999999999999992], 'false,false': [0.1875, 0.0], 'false,true': [0.16836734693877542, 0.1713327629916421], 'false,false,true': [7.401486830834377e-17, 0.0], 'false,true,false': [9.868649107779169e-17, -2.3129646346357427e-18], 'false,true,true': [0.0, 0.13017751479289946], 'false,false,false': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.14810083459830087], 'false': [0.1434046288724856, 0.1667085109942189], 'false,false': [nan, 0.1667085109942189], 'false,false,false': [0.1667085109942189, nan], 'false,true': [0.15374554349062935, 0.1069920819278536], 'false,true,false': [-1.4802973661668753e-16, 0.0], 'true': [0.0, 3.700743415417188e-17]}, {'': [4.4408920985006264e-17, 0.12241175810387044], 'false': [0.0, 0.12371648051231417], 'false,false': [0.11525564922182499, 0.15822328466578875], 'false,false,false': [0.15822328466578875, nan], 'true': [0.0, -3.700743415417188e-17], 'false,true': [nan, 0.0], 'true,true': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [-2.2204460492503132e-17, 0.11765792970859863], 'false': [0.0, 0.11985987821930927], 'false,false': [0.11234241425427005, 0.15234418523640805], 'false,false,false': [0.15234418523640805, nan], 'false,false,true': [0.1781837199053051, 0.1055041729960276], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.11404876346160718], 'false': [0.0, 0.1166301328989626], 'false,false': [0.10952769560248547, 0.1485159582197215], 'false,false,false': [0.11138696866479114, 0.0], 'false,false,true': [0.14939973158193245, 0.05878142690812111], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.10282702184194245], 'false': [0.07262900297157342, 0.10506563779674931], 'false,false': [0.0, 0.11326187452802926], 'false,false,false': [0.11116160787076372, 0.11784701440187002], 'false,true': [0.06998220538428676, 0.05571582207511348], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.10162282959768629], 'false': [0.09856319082363257, 0.11634905836345089], 'false,false': [0.11634905836345089, nan], 'false,false,true': [nan, 0.11634905836345089], 'false,true': [0.06599415839196193, 0.0003775799670682409], 'false,true,true': [0.0, 0.06874133085386923], 'true': [0.0, 0.0]}, {'': [0.0, 0.08275550424144026], 'false': [0.0, 0.0848387322148474], 'false,false': [0.07824521870696473, 0.11542416183028735], 'false,false,false': [0.11542416183028735, nan], 'true': [-4.625929269271485e-18, 0.0], 'false,true': [nan, 0.0], 'true,false': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.08213128980036954], 'false': [0.07535508550892533, 0.11485600622902113], 'false,false': [0.11485600622902113, nan], 'false,false,true': [0.0, 0.0033856740392851545], 'false,true': [0.12033103444102533, 0.030635896361283017], 'false,true,true': [0.08936903067184168, 0.13254380153811823], 'false,true,false': [0.000820825433779013, 3.2693241533501838e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, A).;true;true
5;false,false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.003967945614481712;  // std dev = 1.291, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.808741135785635;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.191258864214365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.12717031121739236;  // std dev = 1.371, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.1386232680937923;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.24489475848277656;  // std dev = 1.000, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.2883247855681783;  // std dev = 0.614, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13791916876426846;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.37250223165335855;  // std dev = 1.241, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.03976294721823253;  // std dev = 0.916, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3798469416040369;  // std dev = 1.034, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.19749359955675017;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.14389572867299066;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07732886254546047;  // std dev = 0.829, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.11240599734445451;  // std dev = 1.248, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.0322476728021586;  // std dev = 0.847, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.2501858619196097;  // std dev = 0.553, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.18356957417250228;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then return -0.12812456528947905;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.09284439697761973;  // std dev = 0.542, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.19917754225027595;  // std dev = 1.119, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.02703199457390193;  // std dev = 0.854, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29849332786372984;  // std dev = 0.890, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.17658167386360812;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11472201223712648;  // std dev = 0.066, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.04685090660345301;  // std dev = 0.650, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.00828285809387689;  // std dev = 0.437, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.19769246452208253;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return -0.04561718352287404;  // std dev = 0.655, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.1111368041276022;  // std dev = 1.069, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.03310752937135368;  // std dev = 0.667, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.09584955102443808;  // std dev = 0.778, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21519316662543334;  // std dev = 0.214, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.10811997547673362;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.17046736699228987;  // std dev = 0.361, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.23491458465685694;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.959799
   AUC PR    = 0.318547
   CLL	      = -0.181814
   Precision = 0.207951 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.329298


Total learning time: 1.883 seconds
Total inference time: 3.511 seconds
AUC ROC: 0.959799


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.99756
   CLL	      = -0.21334
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.614 seconds
Refined model CLL: -0.21334


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.959799
   AUC PR    = 0.318547
   CLL	      = -0.181814
   Precision = 0.207951 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.329298


Total learning time: 4.206 seconds
Total inference time: 3.511 seconds
AUC ROC: 0.959799
Total revision time: 4.206
Best scored revision CLL: -0.21334


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:04
{'AUC ROC': 0.959799, 'AUC PR': 0.318547, 'CLL': -0.181814, 'Precision': [0.207951, 0.5], 'Recall': 0.790698, 'F1': 0.329298, 'Learning time': 4.206, 'Inference time': 3.511, 'parameter_20': {'AUC ROC': 0.972046, 'AUC PR': 0.262296, 'CLL': -0.199565, 'Precision': [0.236162, 0.5], 'Recall': 0.744186, 'F1': 0.358543, 'Learning time': 1.116, 'Inference time': 3.27}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8407840358908217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.02828403589082168;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6526478931012827;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.808741135785635;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.191258864214365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0989581593759874;  // std dev = 1.799, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.508738411682717;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.24489475848277656;  // std dev = 1.000, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14450282595850178;  // std dev = 0.455, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.13903961003021414;  // std dev = 2.271, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19808005833017509;  // std dev = 0.974, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.11562234369562292;  // std dev = 0.445, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4720586306945762;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07036226109796366;  // std dev = 1.962, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15707816053369628;  // std dev = 0.956, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.09204182405477353;  // std dev = 0.439, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.04496291715835438;  // std dev = 1.688, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.13578986303805038;  // std dev = 1.353, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.315574644170949;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2624918796776245;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38027788827831455;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.23421461552943737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return 0.06517863391632452;  // std dev = 1.273, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return -0.027658164123566004;  // std dev = 0.477, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.10463949286408691;  // std dev = 1.656, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.0886220150466716;  // std dev = 0.841, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.05034926452755091;  // std dev = 0.347, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.34652717875366257;  // std dev = 1.392, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return -0.1939647910644183;  // std dev = 0.181, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06942290474156101;  // std dev = 0.836, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04115247980710261;  // std dev = 0.345, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.04016701724708317;  // std dev = 1.917, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05426420436818596;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.05051884570800115;  // std dev = 0.526, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.010660874832065183;  // std dev = 1.419, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.19479295864521254;  // std dev = 0.962, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.12781337063676404;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.37875715404667765;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2940375225356465;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978842
   AUC PR    = 0.246593
   CLL	      = -0.205048
   Precision = 0.228261 at threshold = 0.5
   Recall    = 0.732558
   F1        = 0.348066


Total learning time: 1.127 seconds
Total inference time: 3.083 seconds
AUC ROC: 0.978842


Results scoring model
   AUC ROC   = 0.9704
   AUC PR    = 0.958013
   CLL	      = -0.312183
   Precision = 0.956522 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.916667


Total scoring time: 0.66 seconds
Parameter learned model CLL: -0.312183


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 1], 'false,true,true': [1.9, 13, 5], 'false,true,false,true': [0.957, 1, 11], 'false,true,false,false': [0.0, 8, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 3, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [2.11e-08, 0, 6], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.561, 13, 3], 'false,true,false,true': [0.957, 1, 11], 'false,true,false,false': [0.0, 8, 0], 'false,false,true,true': [1.49e-08, 0, 3], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 4], 'false,true,true': [1.799, 13, 5], 'false,true,false,true': [0.957, 1, 11], 'false,true,false,false': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.0, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.455, 1, 1], 'false,false,true': [2.271, 21, 15], 'false,false,false,true': [0.974, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true': [0.445, 1, 1], 'false,false,true,true': [0.785, 1, 3], 'false,false,true,false': [1.962, 20, 12], 'false,false,false,true': [0.956, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [0.439, 1, 1], 'false,false,true,true': [1.688, 12, 5], 'false,false,true,false': [1.353, 9, 10], 'false,false,false,true': [0.667, 1, 3], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 3], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 1, 0], 'false,true,true': [1.273, 8, 5], 'false,true,false': [0.477, 3, 1], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [1.656, 10, 9], 'false,false,false,false': [0.841, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.347, 1, 1], 'false,true,true,false': [1.392, 2, 15], 'false,true,false': [0.181, 19, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.836, 3, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.345, 1, 1], 'false,false,true': [1.917, 21, 15], 'false,false,false,true': [0.832, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 6], 'false,true,true,true': [0.526, 3, 1], 'false,true,true,false': [1.419, 10, 4], 'false,true,false,true': [0.962, 1, 11], 'false,true,false,false': [0.017, 8, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.101, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.24535123966942105], 'false': [0.24376731301939009, 0.24999999999999992], 'false,false': [0.24999999999999992, nan], 'false,false,true': [nan, 0.24999999999999992], 'false,true': [0.20061728395061712, 0.24749999999999997], 'false,true,false': [0.07638888888888877, -6.938893903907228e-18], 'true': [0.0, 0.0]}, {'': [7.401486830834377e-17, 0.21436005574529038], 'false': [0.20800819590697267, 0.24999999999999992], 'false,false': [0.1875, 0.0], 'false,true': [0.2006172839506174, 0.19113605040002343], 'false,true,true': [0.0, 0.15234375000000014], 'false,true,false': [0.07638888888888906, 0.0], 'false,false,true': [7.401486830834377e-17, 0.0], 'false,false,false': [nan, 0.0]}, {'': [-7.401486830834377e-17, 0.1652487041888053], 'false': [0.1645106136256954, 0.1667085109942189], 'false,false': [nan, 0.1667085109942189], 'false,false,false': [0.1667085109942189, nan], 'false,true': [0.17981508344446454, 0.13840350582013108], 'false,true,false': [0.07638888888888884, -1.734723475976807e-18], 'true': [0.0, 0.0]}, {'': [7.401486830834377e-17, 0.14392422114031658], 'false': [0.10336176069066849, 0.14585536561982185], 'false,false': [0.14329607798804733, 0.15822328466578875], 'false,false,false': [0.15822328466578875, nan], 'false,true': [nan, 0.10336176069066849], 'false,true,false': [nan, 0.10336176069066849], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [-3.700743415417188e-17, 0.14004844826334226], 'false': [0.09901007626281323, 0.1420013384994982], 'false,false': [0.14002453409282717, 0.15234418523640805], 'false,false,false': [0.15234418523640805, nan], 'false,false,true': [0.15397669855689425, 0.12035162760736356], 'true': [-2.2204460492503132e-17, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [9.25185853854297e-18, 0.13277616665187872], 'false': [0.09619506592373145, 0.1345169223243316], 'false,false': [0.13205529443108885, 0.1485159582197215], 'false,false,false': [0.11138696866479114, 0.0], 'false,false,true': [0.16764562964625654, 0.09631569696722496], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.04224666870342194, 0.12017327186601395], 'false': [0.11025051279581669, 0.12439215083877884], 'false,false': [0.0, 0.13804712232349903], 'false,false,false': [0.14436452946948294, 0.11784701440187002], 'false,true': [0.12461655025635188, 0.056970142583554276], 'true': [0.0, 0.09440025930898], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}, {'': [4.625929269271485e-18, 0.12293865128629365], 'false': [0.1239687206057711, 0.11634905836345089], 'false,true': [0.11651934119944603, 0.0017170385307527323], 'false,true,true': [0.060116513259547415, 0.1139211409763963], 'false,false': [0.11634905836345089, nan], 'false,false,true': [nan, 0.11634905836345089], 'true': [0.0, 0.0]}, {'': [-4.625929269271485e-18, 0.10200972435587934], 'false': [0.05954088974089817, 0.10403200173871738], 'false,false': [0.10210491829230421, 0.11542416183028735], 'false,false,false': [0.11542416183028735, nan], 'false,true': [nan, 0.05954088974089817], 'false,true,false': [nan, 0.05954088974089817], 'true': [-4.625929269271485e-18, -4.625929269271485e-18], 'true,false': [nan, -4.625929269271485e-18]}, {'': [0.0, 0.10138960983078903], 'false': [0.09925193395506257, 0.11485600622902113], 'false,false': [0.11485600622902113, nan], 'false,false,true': [0.0, 0.0033856740392851545], 'false,true': [0.12789355299070662, 0.0712398073838025], 'false,true,true': [0.06924424366477136, 0.14381873002232232], 'false,true,false': [0.07707827021850282, 3.7206916077427155e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(A, C).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, A).;true;true
5;false,false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;true,false;phenotype(A, F).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05814893509951218;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.03409121420491307;  // std dev = 1.571, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6526478931012827;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.808741135785635;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.191258864214365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return -0.019090404914208384;  // std dev = 1.003, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.27511692934794646;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.508738411682717;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.24489475848277656;  // std dev = 1.000, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(G, G) )
%   | | | then return 0.311012647093326;  // std dev = 0.915, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5472091107906311;  // std dev = 0.328, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.1806542394640167;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1367176973920244;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, I) )
%   | | then return -0.0455334360206098;  // std dev = 0.578, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18496824650436952;  // std dev = 1.054, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.01633393920159446;  // std dev = 1.011, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( location(E, F), complex(A, G) )
%   | | then if ( interaction(A, H), phenotype(E, I) )
%   | | | then return -0.13093688578524057;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.18106050299985105;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, J), complex(E, K) )
%   | | | then return 0.40558041865321354;  // std dev = 0.684, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.0839231758929564;  // std dev = 1.560, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then return 0.1389442923439032;  // std dev = 0.643, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3482389448419863;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.03151426512747729;  // std dev = 0.312, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return 0.029962567011407232;  // std dev = 1.089, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.14065870607258885;  // std dev = 1.586, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.2587138066770823;  // std dev = 0.523, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.23375276098818296;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.24591749323424505;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1936532662631937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( enzyme(A, I) )
%   | | then return 0.22819727638744292;  // std dev = 0.709, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.15019740494288186;  // std dev = 0.086, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.19162074021321532;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.21721882650639912;  // std dev = 0.985, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.024987557730051877;  // std dev = 1.119, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5638832773649664;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21280173366167374;  // std dev = 1.182, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.1224811945840039;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1658023583079684;  // std dev = 0.183, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.040679884411812;  // std dev = 0.643, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.14358814896310887;  // std dev = 0.713, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.26419730325881435;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.2067654683030053;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09547200998580514;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.05175504214813876;  // std dev = 0.618, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.1776704895819312;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.052800430847687624;  // std dev = 1.106, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F), enzyme(A, G) )
%   | | | then return 0.17304669735035413;  // std dev = 0.454, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04110242498793613;  // std dev = 0.980, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.17119018719261914;  // std dev = 0.907, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.10411169498455346;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.14199121036034051;  // std dev = 0.345, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.21561845610811198;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.973071
   AUC PR    = 0.257136
   CLL	      = -0.187579
   Precision = 0.22293 at threshold = 0.5
   Recall    = 0.813953
   F1        = 0.35


Total learning time: 2.75 seconds
Total inference time: 4.001 seconds
AUC ROC: 0.973071


Results scoring model
   AUC ROC   = 0.9888
   AUC PR    = 0.987421
   CLL	      = -0.235149
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.673 seconds
Refined model CLL: -0.235149


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.973071
   AUC PR    = 0.257136
   CLL	      = -0.187579
   Precision = 0.22293 at threshold = 0.5
   Recall    = 0.813953
   F1        = 0.35


Total learning time: 5.21 seconds
Total inference time: 4.001 seconds
AUC ROC: 0.973071
Total revision time: 5.21
Best scored revision CLL: -0.235149


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:17
{'AUC ROC': 0.973071, 'AUC PR': 0.257136, 'CLL': -0.187579, 'Precision': [0.22293, 0.5], 'Recall': 0.813953, 'F1': 0.35, 'Learning time': 5.21, 'Inference time': 4.001, 'parameter_25': {'AUC ROC': 0.978842, 'AUC PR': 0.246593, 'CLL': -0.205048, 'Precision': [0.228261, 0.5], 'Recall': 0.732558, 'F1': 0.348066, 'Learning time': 1.127, 'Inference time': 3.083}}


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1667945087684516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3332054912315484;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1394728586387067;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.1950379068813901;  // std dev = 0.680, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.11693261916339225;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.37097724851988145;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12507258814762284;  // std dev = 0.602, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.09663221004444812;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.3422914621231914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09492578089369547;  // std dev = 0.564, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return -0.1943052531481519;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.21550533467223734;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return 0.3212517825615021;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1483900626010629;  // std dev = 0.363, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.0075292450581346815;  // std dev = 0.340, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05789888927240781;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2646394400846697;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1520976853387932;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04655856296512189;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.06648949108128159;  // std dev = 0.460, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.03724852450900088;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21098630910127325;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2035940947485199;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14139024697503894;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.637623265220485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.27428984040501553;  // std dev = 0.125, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.78119
   AUC PR    = 0.036597
   CLL	      = -0.838496
   Precision = 0.011933 at threshold = 0.5
   Recall    = 0.816092
   F1        = 0.023522


Total learning time: 0.8 seconds
Total inference time: 6.505 seconds
AUC ROC: 0.78119


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.234291
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.468 seconds
Parameter learned model CLL: -0.234291


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.816, 2, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [1.05e-08, 0, 3], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.788, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,false': 'interaction(A, F), interaction(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.68, 3, 4], 'false,false,false,true': [0.786, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.602, 3, 3], 'false,false,false,true': [0.784, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(E, F), interaction(F, A)', 'false,false,false': 'phenotype(A, G), interaction(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.564, 3, 3], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), interaction(A, E)', 'false,true': 'interaction(D, E)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.363, 1, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.34, 2, 1], 'false,false,false,false': [0.758, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.036, 0, 4], 'false,true,false': [0.017, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.757, 2, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.46, 3, 4], 'false,false,false,true': [0.756, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.029, 0, 3], 'false,true,false,false': [0.016, 3, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.125, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999992], 'false': [0.24489795918367332, 0.22222222222222224], 'false,true': [0.0, 0.24999999999999992], 'false,true,false': [1.4802973661668753e-16, 0.0], 'false,false': [0.22222222222222224, nan], 'false,false,true': [nan, 0.22222222222222224]}, {'': [nan, 0.1966943379931224], 'false': [0.1748293499914717, 0.2222222222222222], 'false,false': [0.0, 0.25], 'false,false,false': [nan, 0.25], 'false,true': [0.0, 0.1784716281162939], 'false,true,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,true,true': [nan, 0.0]}, {'': [nan, 0.1420866742441399], 'false': [0.10917559380393224, 0.2070957776742145], 'false,false': [nan, 0.2070957776742145], 'false,false,false': [0.2070957776742145, nan], 'false,true': [0.0, 0.11145008534151417], 'false,true,false': [3.700743415417188e-17, 2.3129646346357427e-18]}, {'': [nan, 0.10923385109150581], 'false': [nan, 0.10923385109150577], 'false,false': [0.0659939026397656, 0.2058567589669084], 'false,false,false': [0.2058567589669084, nan]}, {'': [nan, 0.10376066198387972], 'false': [nan, 0.1037606619838797], 'false,false': [0.05923503868682044, 0.20482501581784854], 'false,false,false': [0.20482501581784854, nan], 'false,false,true': [0.0, 0.06046910199279585]}, {'': [nan, 0.09883631924022424], 'false': [nan, 0.09883631924022424], 'false,false': [0.052980020951413805, 0.2039877150865984], 'false,false,false': [0.0, 0.24999999999999997], 'false,false,true': [0.0, 0.05306862726472572]}, {'': [nan, 0.09171866154292249], 'false': [0.038477071445345366, 0.11613471911556479], 'false,false': [nan, 0.11613471911556479], 'false,false,false': [0.03846924035088887, 0.19165977749925292], 'false,true': [0.0, 0.04383246837020683]}, {'': [nan, 0.08754096454069389], 'false': [0.04275370156583013, 0.19095355021519692], 'false,false': [0.19095355021519692, nan], 'false,false,true': [nan, 0.19095355021519692], 'false,true': [0.00031934376300461753, 9.294147081021405e-05], 'false,true,true': [nan, 0.00031934376300461753]}, {'': [nan, 0.07842029780971828], 'false': [nan, 0.07842029780971828], 'false,false': [0.03017206308136202, 0.19040098828762597], 'false,false,false': [0.19040098828762597, nan]}, {'': [nan, 0.07788166221923676], 'false': [0.02962333022721007, 0.189969647798484], 'false,false': [0.189969647798484, nan], 'false,false,true': [0.0, 0.007759300960544224], 'false,true': [0.0, 0.02993792449688645], 'false,true,false': [0.0002863070723159768, 8.244390423830378e-05], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
0;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true;interaction(E, D), interaction(E, A).;true;true
2;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(E, A).;true;true
4;true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(E, A).;true;true
5;true;interaction(E, F), interaction(F, A).;true;true
5;false;phenotype(A, G), interaction(A, H).;true;true
6;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
6;true;interaction(D, E).;true;true
7;;proteinclass(A, B) :- interaction(D, A).;true;true
7;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
9;;proteinclass(A, B) :- interaction(D, A).;true;true
9;true;interaction(D, E), interaction(E, A).;true;true
9;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( phenotype(A, F), interaction(A, G) )
%   | then return -0.1667945087684516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.3332054912315484;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.1394728586387067;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return 0.36928473684815494;  // std dev = 0.664, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.02607209571617341;  // std dev = 0.511, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.33130835186784835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1314600995662195;  // std dev = 0.570, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0.07486912654451217;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3921278160968994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.08887004581137674;  // std dev = 0.492, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( phenotype(A, E), interaction(A, F) )
%   | then return -0.2329576177063334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.20708307084654057;  // std dev = 0.649, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(C, D) )
%   | then return 0.28442767651480827;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13641172881894045;  // std dev = 0.316, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.032292172062927484;  // std dev = 0.788, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2514123305989526;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12814562829404863;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.03741107140478194;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return 0.19584335030213235;  // std dev = 0.571, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08085043317432938;  // std dev = 0.403, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2624334735875139;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.1652300663665506;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.10655744911176727;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(F, G), recursion_proteinclass(F, B) )
%   | then return 0.5545460196455179;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.2648565153042749;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.716306
   AUC PR    = 0.051235
   CLL	      = -0.899898
   Precision = 0.013848 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.027304


Total learning time: 0.863 seconds
Total inference time: 4.125 seconds
AUC ROC: 0.716306


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.20419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.529 seconds
Refined model CLL: -0.20419


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.716306
   AUC PR    = 0.051235
   CLL	      = -0.899898
   Precision = 0.013848 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.027304


Total learning time: 2.66 seconds
Total inference time: 4.125 seconds
AUC ROC: 0.716306
Total revision time: 2.66
Best scored revision CLL: -0.20419


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:31
{'AUC ROC': 0.716306, 'AUC PR': 0.051235, 'CLL': -0.899898, 'Precision': [0.013848, 0.5], 'Recall': 0.965517, 'F1': 0.027304, 'Learning time': 2.66, 'Inference time': 4.125, 'parameter_5': {'AUC ROC': 0.78119, 'AUC PR': 0.036597, 'CLL': -0.838496, 'Precision': [0.011933, 0.5], 'Recall': 0.816092, 'F1': 0.023522, 'Learning time': 0.8, 'Inference time': 6.505}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1555325621642444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17780077116908896;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.08070041800128656;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.1816861284580154;  // std dev = 1.171, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06907822415118117;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.37409825794612594;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13301614610597043;  // std dev = 1.111, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05864522528628113;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.1369140850992121;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.11904865472871123;  // std dev = 0.847, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.16260665796493529;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.12011371180071569;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.31718479334701877;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.027776233461122103;  // std dev = 0.484, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.05686523016741574;  // std dev = 0.876, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03903804406635217;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3165647511860883;  // std dev = 0.301, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.19043571137057067;  // std dev = 0.236, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0325313187081412;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.05968178939606605;  // std dev = 0.885, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.02700066809187185;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.060104794935414235;  // std dev = 0.619, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2087124625624727;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.13773659021666795;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7478055719302932;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.21948772698377442;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.926487
   AUC PR    = 0.160491
   CLL	      = -0.374264
   Precision = 0.105548 at threshold = 0.5
   Recall    = 0.896552
   F1        = 0.188862


Total learning time: 0.912 seconds
Total inference time: 7.416 seconds
AUC ROC: 0.926487


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.245964
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.531 seconds
Parameter learned model CLL: -0.245964


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.866, 3, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false,true': [2.11e-08, 0, 7], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.854, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.171, 7, 8], 'false,false,false,true': [0.853, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.111, 7, 7], 'false,false,false,true': [0.853, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.847, 6, 7], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 0, 3], 'false,true,false': [0.484, 3, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.876, 4, 3], 'false,false,false,false': [0.843, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.301, 0, 8], 'false,true,false': [0.236, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.842, 3, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.885, 7, 8], 'false,false,false,true': [0.842, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.619, 1, 1], 'false,true,false,true': [0.057, 0, 7], 'false,true,false,false': [0.004, 6, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.08, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2493074792243767], 'false': [0.24888888888888885, 0.18750000000000003], 'false,true': [0.25, 0.24852071005917156], 'false,true,false': [-2.5376526277146434e-16, -6.938893903907228e-18], 'false,false': [0.18750000000000003, nan], 'false,false,true': [nan, 0.18750000000000003], 'true': [0.0, nan]}, {'': [0.0, 0.19618543368597796], 'false': [0.18714335557112344, 0.18749999999999997], 'false,false': [0.0, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222], 'false,true': [0.25000000000000006, 0.17741558297951104], 'false,true,true': [nan, 0.25000000000000006], 'false,true,false': [6.344131569286608e-17, -2.3129646346357427e-18], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.14519224551394774], 'false': [0.129361664400227, 0.1823457604581322], 'false,false': [nan, 0.1823457604581322], 'false,false,false': [0.1823457604581322, nan], 'false,true': [0.24999999999999997, 0.11079061738091352], 'false,true,false': [-6.344131569286608e-17, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.11265024130510908], 'false': [nan, 0.11265024130510908], 'false,false': [0.0914661038661302, 0.18207980398098206], 'false,false,false': [0.18207980398098206, nan], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.1074140908328239], 'false': [nan, 0.10741409083282387], 'false,false': [0.08584245530579114, 0.18184987085402674], 'false,false,false': [0.18184987085402674, nan], 'false,false,true': [0.0, 0.08809935361291751], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.10316468444900354], 'false': [nan, 0.1031646844490035], 'false,false': [0.08114300186295402, 0.18165369306924664], 'false,false,false': [0.0, 0.22222222222222224], 'false,false,true': [0.25, 0.05512244566925251], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.10018120049279554], 'false': [0.04893985461523219, 0.13433918743798867], 'false,false': [nan, 0.13433918743798867], 'false,false,false': [0.10953135422298597, 0.17755065375060938], 'false,true': [1.850371707708594e-17, 0.04689477443366076], 'true': [0.0, nan]}, {'': [0.0, 0.09593165504991366], 'false': [0.07374706309204382, 0.1773476301244941], 'false,false': [0.1773476301244941, nan], 'false,false,true': [nan, 0.1773476301244941], 'false,true': [0.011351895721007754, 0.00796277565104403], 'false,true,true': [nan, 0.011351895721007754], 'true': [0.0, nan]}, {'': [0.0, 0.07868882539024813], 'false': [nan, 0.07868882539024812], 'false,false': [0.05219986103620285, 0.17717923985762882], 'false,false,false': [0.17717923985762882, nan], 'true': [0.0, nan]}, {'': [0.0, 0.07817692087444131], 'false': [0.051648541197703124, 0.17704015359214803], 'false,false': [0.17704015359214803, nan], 'false,false,true': [0.0, 0.002139456591849054], 'false,true': [0.19174552688542354, 0.03007815786459776], 'false,true,true': [nan, 0.19174552688542354], 'false,true,false': [0.0004598266069615093, 2.9835727928968305e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(F, A).;true;true
4;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
5;false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,true;interaction(F, G).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then return -0.1555325621642444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.17780077116908896;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.08070041800128656;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.07144030839421248;  // std dev = 0.424, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4896695399548674;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(I, A), interaction(G, G) )
%   | | | then return 0.24447694627626124;  // std dev = 0.424, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1468604982067187;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.20736934766941478;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.3051996630362941;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.29958198909304484;  // std dev = 0.514, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.023771561086707232;  // std dev = 0.750, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.07574991505509873;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.2333949514051128;  // std dev = 0.412, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.20887830102689744;  // std dev = 0.471, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06642342549841719;  // std dev = 0.517, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then return -0.1373124258719712;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.13201020939979524;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return 0.2630139033630259;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.03564467303004411;  // std dev = 0.408, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( enzyme(A, F), phenotype(A, G) )
%   | | then return -0.13137257023529922;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.007623261926922161;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18344630791003466;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, D), enzyme(D, F) )
%   | | then return 0.008192961429074367;  // std dev = 0.354, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.21820135909432484;  // std dev = 0.662, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( phenotype(A, G), location(A, H) )
%   | | then return 0.16586503672563724;  // std dev = 0.438, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.043058213789482595;  // std dev = 0.359, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.18632005387369208;  // std dev = 0.204, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.20063777058761528;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.02554733165701043;  // std dev = 0.730, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then return 0.13697972531906674;  // std dev = 0.425, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.03717841432806215;  // std dev = 0.355, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.16132698410529311;  // std dev = 0.181, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.06741607934477781;  // std dev = 0.461, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.18747433314556133;  // std dev = 0.178, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1189410482816536;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.6436003866005839;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.18954584972440094;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.823094
   AUC PR    = 0.116156
   CLL	      = -0.517656
   Precision = 0.021007 at threshold = 0.5
   Recall    = 0.781609
   F1        = 0.040915


Total learning time: 1.6 seconds
Total inference time: 3.809 seconds
AUC ROC: 0.823094


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.203305
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.555 seconds
Refined model CLL: -0.203305


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.823094
   AUC PR    = 0.116156
   CLL	      = -0.517656
   Precision = 0.021007 at threshold = 0.5
   Recall    = 0.781609
   F1        = 0.040915


Total learning time: 3.5980000000000003 seconds
Total inference time: 3.809 seconds
AUC ROC: 0.823094
Total revision time: 3.5980000000000003
Best scored revision CLL: -0.203305


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:46
{'AUC ROC': 0.823094, 'AUC PR': 0.116156, 'CLL': -0.517656, 'Precision': [0.021007, 0.5], 'Recall': 0.781609, 'F1': 0.040915, 'Learning time': 3.5980000000000003, 'Inference time': 3.809, 'parameter_10': {'AUC ROC': 0.926487, 'AUC PR': 0.160491, 'CLL': -0.374264, 'Precision': [0.105548, 0.5], 'Recall': 0.896552, 'F1': 0.188862, 'Learning time': 0.912, 'Inference time': 7.416}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.17626634551589415;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4028816060294756;  // std dev = 1.061, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.17556954172964415;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6315726550568894;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.130056258267046;  // std dev = 1.462, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.14380856784914775;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4768657306330272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3862637042446171;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09451975913903365;  // std dev = 1.405, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1157164221014955;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3613593762444919;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.15748838815041455;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07318775709186517;  // std dev = 0.974, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.2170361020927348;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.19178840623679413;  // std dev = 1.005, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.10620806198623925;  // std dev = 0.683, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.017180422523401424;  // std dev = 0.519, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.08973880758179342;  // std dev = 1.079, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0940485684962326;  // std dev = 1.050, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38330267564002907;  // std dev = 0.350, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.18331556829869214;  // std dev = 0.339, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04303810678664223;  // std dev = 1.035, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22852383210012583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.03868507618165583;  // std dev = 1.139, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05960861208066187;  // std dev = 1.044, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.3698045037656024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.20849294962443218;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23709918254160373;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12307839926601165;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44603745130244365;  // std dev = 0.324, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3523993846022762;  // std dev = 0.170, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.931656
   AUC PR    = 0.18801
   CLL	      = -0.37656
   Precision = 0.081053 at threshold = 0.5
   Recall    = 0.885057
   F1        = 0.148505


Total learning time: 0.982 seconds
Total inference time: 6.307 seconds
AUC ROC: 0.931656


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.25111
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.636 seconds
Parameter learned model CLL: -0.25111


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [1.0, 2, 2], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.0, 2, 2], 'false,true,false,true': [2.11e-08, 0, 7], 'false,true,false,false': [5.27e-09, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.061, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true': [1.0, 2, 2], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.065, 3, 2], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.462, 12, 9], 'false,false,false,true': [1.062, 3, 2], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.405, 12, 8], 'false,false,false,true': [1.06, 3, 2], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.0, 2, 2], 'false,false,true,false': [0.974, 10, 7], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.005, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.683, 2, 3], 'false,true,false': [0.519, 4, 2], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.079, 6, 4], 'false,false,false,false': [1.05, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.35, 0, 9], 'false,true,false': [0.339, 12, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.035, 3, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.139, 12, 9], 'false,false,false,true': [1.044, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.704, 1, 2], 'false,true,false,true': [0.039, 0, 7], 'false,true,false,false': [0.013, 10, 0], 'false,false,true,true': [0.324, 0, 3], 'false,false,true,false': [0.17, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24691358024691357], 'false': [0.2448979591836735, 0.24999999999999992], 'false,false': [0.24000000000000005, 0.0], 'false,true': [0.25, 0.24221453287197234], 'false,true,false': [-2.5376526277146434e-16, -1.1102230246251566e-17], 'false,false,true': [nan, 0.24000000000000005], 'true': [1.4802973661668753e-16, nan], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.19961750384546684], 'false': [0.18874461546113339, 0.23413304269320487], 'false,false': [0.0, 0.22505759293531283], 'false,false,false': [nan, 0.22505759293531283], 'false,true': [0.25, 0.17291368814035396], 'false,true,true': [nan, 0.25], 'false,true,false': [6.344131569286608e-17, 2.7755575615628915e-18], 'false,false,true': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.15537878232963684], 'false': [0.13638757011845876, 0.21791714025934847], 'false,false': [nan, 0.21791714025934847], 'false,false,false': [0.22684409508386136, 0.0], 'false,true': [0.25, 0.10797932143814525], 'false,true,false': [-6.344131569286608e-17, 0.0], 'true': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.12522258372025583], 'false': [nan, 0.12522258372025577], 'false,false': [0.10181926564643036, 0.20340303984822672], 'false,false,false': [0.22559580220426406, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.11997462299610452], 'false': [nan, 0.11997462299610454], 'false,false': [0.09786352472446164, 0.19555315795915237], 'false,false,false': [0.2246070460642998, 0.0], 'false,false,true': [0.0, 0.09870362812707663], 'true': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.11578085555251366], 'false': [nan, 0.11578085555251369], 'false,false': [0.09385397936606832, 0.19160421171027628], 'false,false,false': [0.0, 0.20206880761718468], 'false,false,true': [0.25, 0.05576010180798033], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.10888405680527422], 'false': [0.06888917208253752, 0.13411322130762288], 'false,false': [0.0, 0.14167063818848086], 'false,false,false': [0.11633765387010712, 0.18388066994464144], 'false,true': [0.09329929597557093, 0.04494471099516503], 'true': [0.0, nan]}, {'': [0.0, 0.11076426427553032], 'false': [0.08995481367254518, 0.18343535338940764], 'false,false': [0.21438826501811103, 0.0], 'false,false,true': [nan, 0.21438826501811103], 'false,true': [0.0136446574596515, 0.009591901818986864], 'false,true,true': [nan, 0.013644657459651476], 'true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [-4.625929269271485e-18, 0.08854092517879027], 'false': [nan, 0.08854092517879025], 'false,false': [0.061792028241870765, 0.1818215577378286], 'false,false,false': [0.1818215577378286, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.08805202909610739], 'false': [0.06126230034163164, 0.181658811729544], 'false,false': [0.181658811729544, nan], 'false,false,true': [0.034934223064283176, 0.009632709930034511], 'false,true': [0.18646012622531033, 0.031518882576562324], 'false,true,true': [0.0, 0.16500651548439732], 'false,true,false': [0.0002125507849611138, 1.5948180243730013e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(G, A).;true;true
3;false,false;interaction(A, H), interaction(H, I).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(H, A).;true;true
4;false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
4;false,false;interaction(A, J), interaction(J, K).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(G, A).;true;true
5;false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then return -0.17626634551589415;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.4028816060294756;  // std dev = 1.061, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.17556954172964415;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6315726550568894;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.2877361057467734;  // std dev = 0.450, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10989206154333087;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, J), location(A, K) )
%   | | | then return 0.4320480173398883;  // std dev = 0.660, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06528036832355602;  // std dev = 0.543, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then return 0.14380856784914775;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4768657306330272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.3910547359103774;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.25877607737493163;  // std dev = 0.879, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.004726171674688371;  // std dev = 0.778, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.1157164221014955;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.3613593762444919;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.06996423502168816;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3612197323795663;  // std dev = 0.219, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.18202778139328765;  // std dev = 0.543, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.12043097205613851;  // std dev = 0.171, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then return -0.2170361020927348;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.19178840623679413;  // std dev = 1.005, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.2015668382427468;  // std dev = 0.234, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.25603022435237294;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.059470758216050176;  // std dev = 0.461, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.18034002953658892;  // std dev = 0.841, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0265485942599241;  // std dev = 1.030, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.33173751590513945;  // std dev = 0.190, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18496764764112542;  // std dev = 0.208, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, H), location(A, I) )
%   | | | then return 0.2616253028595469;  // std dev = 0.218, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11253336185830853;  // std dev = 0.160, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.04569667357887569;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.24064157678776854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( complex(A, G), complex(E, H) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.04951490425577672;  // std dev = 0.317, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1846636557390416;  // std dev = 0.561, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(E, I), phenotype(I, F) )
%   | | | then return -0.36278191420337924;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.025633395998938734;  // std dev = 0.292, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, J) )
%   | | then return 3.5451145666627604E-4;  // std dev = 0.444, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1534980330808053;  // std dev = 0.278, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.23372756398294325;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.15880579821115776;  // std dev = 0.489, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.18990617210609617;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.10342904106359985;  // std dev = 0.111, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.0701890799875486;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.851664
   AUC PR    = 0.08927
   CLL	      = -0.449371
   Precision = 0.026294 at threshold = 0.5
   Recall    = 0.735632
   F1        = 0.050774


Total learning time: 2.085 seconds
Total inference time: 4.587 seconds
AUC ROC: 0.851664


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.225111
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 0.548 seconds
Refined model CLL: -0.225111


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.851664
   AUC PR    = 0.08927
   CLL	      = -0.449371
   Precision = 0.026294 at threshold = 0.5
   Recall    = 0.735632
   F1        = 0.050774


Total learning time: 4.2509999999999994 seconds
Total inference time: 4.587 seconds
AUC ROC: 0.851664
Total revision time: 4.2509999999999994
Best scored revision CLL: -0.225111


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:02
{'AUC ROC': 0.851664, 'AUC PR': 0.08927, 'CLL': -0.449371, 'Precision': [0.026294, 0.5], 'Recall': 0.735632, 'F1': 0.050774, 'Learning time': 4.2509999999999994, 'Inference time': 4.587, 'parameter_15': {'AUC ROC': 0.931656, 'AUC PR': 0.18801, 'CLL': -0.37656, 'Precision': [0.081053, 0.5], 'Recall': 0.885057, 'F1': 0.148505, 'Learning time': 0.982, 'Inference time': 6.307}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.28162893957529533;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15085549202214277;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4028816060294756;  // std dev = 1.061, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.36017429619754776;  // std dev = 1.097, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.23831795405809839;  // std dev = 1.121, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2608824630732305;  // std dev = 0.524, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.12847767443922906;  // std dev = 1.655, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19183690153493024;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.21552802407829189;  // std dev = 0.500, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4630299119833435;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06423122384136513;  // std dev = 1.479, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15137725634178736;  // std dev = 1.108, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.17495916158611563;  // std dev = 0.482, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.20142293151203675;  // std dev = 1.051, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05438639091469613;  // std dev = 1.089, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.009275381226050353;  // std dev = 0.516, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2030734076583757;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.13312569433970745;  // std dev = 0.838, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return -4.7797318859732485E-5;  // std dev = 0.532, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.06692460017820429;  // std dev = 1.123, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.09375718550690991;  // std dev = 1.186, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3632373308494629;  // std dev = 0.288, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.17406702498356094;  // std dev = 0.441, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3908748623495397;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -9.168098242083866E-4;  // std dev = 1.042, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return -0.20475190573760182;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3990965792847391;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.035632677032694134;  // std dev = 1.247, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05425227829789689;  // std dev = 1.131, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.008934006801759783;  // std dev = 0.549, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15475995913665508;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23677729752745927;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11735557220843111;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.42285798804725916;  // std dev = 0.258, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3380692007811028;  // std dev = 0.230, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.96797
   AUC PR    = 0.216364
   CLL	      = -0.430796
   Precision = 0.076106 at threshold = 0.5
   Recall    = 0.988506
   F1        = 0.141331


Total learning time: 1.013 seconds
Total inference time: 6.702 seconds
AUC ROC: 0.96797


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.241522
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.596 seconds
Parameter learned model CLL: -0.241522


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [1.155, 2, 4], 'false,true,false,true': [0.0, 0, 9], 'false,true,false,false': [0.0, 14, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.0, 2, 2], 'false,true,false,true': [2.98e-08, 0, 9], 'false,true,false,false': [7.45e-09, 14, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.036, 2, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.061, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true': [1.097, 2, 4], 'false,true,false,true': [0.0, 0, 9], 'false,true,false,false': [1.18e-08, 14, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.121, 3, 3], 'false,false,false,false': [0.524, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.655, 16, 12], 'false,false,false,true': [1.113, 3, 3], 'false,false,false,false': [0.5, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.094, 0, 3], 'false,false,true,false': [1.479, 16, 9], 'false,false,false,true': [1.108, 3, 3], 'false,false,false,false': [0.482, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.051, 2, 4], 'false,false,true,false': [1.089, 14, 8], 'false,false,false,true': [0.516, 2, 1], 'false,false,false,false': [1.044, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [0.838, 3, 5], 'false,true,false': [0.532, 5, 2], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.123, 8, 5], 'false,false,false,false': [1.186, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.288, 0, 12], 'false,true,false': [0.441, 16, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.042, 3, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.247, 16, 12], 'false,false,false,true': [1.131, 4, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.549, 1, 2], 'false,true,true,false': [0.708, 1, 2], 'false,true,false,true': [0.123, 0, 9], 'false,true,false,false': [0.017, 14, 0], 'false,false,true,true': [0.258, 0, 4], 'false,false,true,false': [0.23, 4, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.2483564645726804], 'false': [0.24732461355529084, 0.24999999999999986], 'false,false': [0.24999999999999992, 0.25], 'false,false,false': [0.0, 0.0], 'false,false,true': [0.0, 0.24000000000000005], 'false,true': [0.22222222222222213, 0.23818525519848777], 'false,true,false': [-2.9605947323337506e-16, -1.1895246692412391e-17], 'true': [1.4802973661668753e-16, nan]}, {'': [0.0, 0.19735428973643737], 'false': [0.19053308908560693, 0.2202340546936985], 'false,false': [0.16875767465987257, 0.22505759293531283], 'false,false,false': [nan, 0.22505759293531283], 'false,true': [0.2222222222222222, 0.17003724115427626], 'false,true,true': [0.0, 0.25], 'false,true,false': [9.868649107779169e-17, 3.96508223080413e-18], 'false,false,true': [0.0, 0.0006457114752808982]}, {'': [3.700743415417188e-17, 0.1461522144267922], 'false': [0.13305241765630318, 0.1915757500682815], 'false,false': [nan, 0.1915757500682815], 'false,false,false': [0.20950330467997458, 0.13741121843288193], 'false,true': [0.2006669943840528, 0.10618306807584718], 'false,true,false': [-1.4802973661668753e-16, 9.912705577010326e-18], 'true': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.11709383180625242], 'false': [0.0, 0.11832268691421294], 'false,false': [0.09784364958061631, 0.1862659868965576], 'false,false,false': [0.20654866727979615, 0.12499699378131846], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.11182125173233158], 'false': [0.0, 0.11381833772081931], 'false,false': [0.09360357844022286, 0.1826011240160204], 'false,false,false': [0.20464254396123868, 0.11605978448915129], 'false,false,true': [0.0029178623487430646, 0.08744582219294023], 'true': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.10450549771242827], 'false': [0.0, 0.1067084354656973], 'false,false': [0.08539604339162735, 0.18020523310791037], 'false,false,false': [0.08891328400328564, 0.21807089951792918], 'false,false,true': [0.18396605251790177, 0.05388051128616612], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.10109288108800976], 'false': [0.07017494789220888, 0.1221129866001359], 'false,false': [0.0, 0.12712853960668163], 'false,false,false': [0.09695051626488012, 0.17572212090565725], 'false,true': [0.08787837576317188, 0.04048369682720421], 'true': [0.0, nan]}, {'': [0.0, 0.09918794717020032], 'false': [0.0783047512284099, 0.17477278729870113], 'false,false': [0.20237549553695958, 0.09115824821594407], 'false,false,true': [0.0, 0.21726714224690125], 'false,false,false': [0.0, 0.0], 'false,true': [0.008827387745630718, 0.012145304858145287], 'false,true,true': [0.0, 0.006897741102736925], 'true': [0.0, nan]}, {'': [-4.625929269271485e-18, 0.07702071481482382], 'false': [0.0, 0.07881523290253205], 'false,false': [0.05555938321646832, 0.15994105937498565], 'false,false,false': [0.15994105937498565, nan], 'false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.07652456209320134], 'false': [0.05357236371475055, 0.1596678757728669], 'false,false': [0.1596678757728669, nan], 'false,false,true': [0.016586722933358916, 0.013243935263258094], 'false,true': [0.13894539497999484, 0.030540616599557025], 'false,true,true': [0.10039564937373607, 0.16686253639906404], 'false,true,false': [0.0016776647146394571, 2.1858128527259863e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
7;false,false,false;phenotype(A, J), interaction(A, K).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.28162893957529533;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15085549202214277;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.4028816060294756;  // std dev = 1.061, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.36017429619754776;  // std dev = 1.097, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then return 0.3344834688354807;  // std dev = 0.990, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.09308510210588263;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(A, H), phenotype(F, H) )
%   | | | then return 0.12832375743144678;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30729573977657604;  // std dev = 1.053, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.26239280703660717;  // std dev = 0.867, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.03935384086270957;  // std dev = 0.900, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.0945018988351498;  // std dev = 0.839, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2480841797851668;  // std dev = 1.032, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return -0.1266546717944084;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.13040388009169093;  // std dev = 1.217, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4045813146685051;  // std dev = 0.289, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1727109677160005;  // std dev = 0.273, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, I), location(A, J) )
%   | | | then return 0.23743834465429275;  // std dev = 0.648, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.05633880130704999;  // std dev = 1.048, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.3012923301053113;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.029579398883395402;  // std dev = 0.557, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.09616141104046445;  // std dev = 0.292, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09613462254528167;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.14070643135332328;  // std dev = 0.762, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.025608630160193425;  // std dev = 1.206, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2818372110790401;  // std dev = 0.316, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.18646512886180314;  // std dev = 0.206, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12586296469774833;  // std dev = 0.262, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2931323535206176;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.02083973422502978;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return -0.12981640979292572;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5952144858030286;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.3461862841880494;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.0647694493533179;  // std dev = 1.049, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return -0.03601776381388151;  // std dev = 0.766, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.06991642631814148;  // std dev = 0.702, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17353754504201974;  // std dev = 0.097, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.09896582654621068;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.09968905705134519;  // std dev = 0.635, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.17926226127549852;  // std dev = 0.679, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.939623
   AUC PR    = 0.15055
   CLL	      = -0.462457
   Precision = 0.02737 at threshold = 0.5
   Recall    = 0.942529
   F1        = 0.053195


Total learning time: 1.803 seconds
Total inference time: 6.393 seconds
AUC ROC: 0.939623


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.212577
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.574 seconds
Refined model CLL: -0.212577


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.939623
   AUC PR    = 0.15055
   CLL	      = -0.462457
   Precision = 0.02737 at threshold = 0.5
   Recall    = 0.942529
   F1        = 0.053195


Total learning time: 3.9859999999999998 seconds
Total inference time: 6.393 seconds
AUC ROC: 0.939623
Total revision time: 3.9859999999999998
Best scored revision CLL: -0.212577


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:19
{'AUC ROC': 0.939623, 'AUC PR': 0.15055, 'CLL': -0.462457, 'Precision': [0.02737, 0.5], 'Recall': 0.942529, 'F1': 0.053195, 'Learning time': 3.9859999999999998, 'Inference time': 6.393, 'parameter_20': {'AUC ROC': 0.96797, 'AUC PR': 0.216364, 'CLL': -0.430796, 'Precision': [0.076106, 0.5], 'Recall': 0.988506, 'F1': 0.141331, 'Learning time': 1.013, 'Inference time': 6.702}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.42064893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7988867582070219;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21555342487368867;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8074222660269855;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1632614493676708;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.02040430651052797;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.29431011970609317;  // std dev = 1.886, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11823421470921515;  // std dev = 1.480, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.5335566810814125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.16376956597681086;  // std dev = 2.135, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.09993180281663937;  // std dev = 1.469, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.40152189358108104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5583372775813545;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.047902599173808215;  // std dev = 1.828, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08349332080628985;  // std dev = 1.459, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.30988654269078164;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.14712912072914885;  // std dev = 1.763, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.05228764153353608;  // std dev = 0.878, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.22622823626673;  // std dev = 0.994, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.06253891081437699;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.11661740723137691;  // std dev = 1.411, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else return 0.0528040716457596;  // std dev = 0.939, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08581445668936169;  // std dev = 1.013, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.06463392328314248;  // std dev = 1.412, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18511067706684656;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18408855576520167;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4216569665317243;  // std dev = 0.448, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.2513408581025515;  // std dev = 0.519, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0417600430586986;  // std dev = 1.399, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.19759428787687694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15487236301115767;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1730303179682725;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.04120608401084854;  // std dev = 1.599, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04351463519138698;  // std dev = 1.401, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13846674045955584;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.09030587762518076;  // std dev = 0.512, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.038831673255912996;  // std dev = 1.362, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.24260795850847225;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11393100954727282;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4479346139194447;  // std dev = 0.561, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22870881633828144;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.896281
   AUC PR    = 0.157256
   CLL	      = -0.303011
   Precision = 0.124248 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.211604


Total learning time: 1.093 seconds
Total inference time: 5.126 seconds
AUC ROC: 0.896281


Results scoring model
   AUC ROC   = 0.9888
   AUC PR    = 0.991109
   CLL	      = -0.298134
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.662 seconds
Parameter learned model CLL: -0.298134


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 1], 'false,true,true': [1.984, 7, 9], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.664, 9, 4], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [1.708, 7, 5], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.102, 0, 4], 'false,false,true,false': [3.73e-09, 3, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.926, 6, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.886, 7, 9], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.48, 9, 4], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [2.135, 16, 14], 'false,false,false,true': [1.469, 9, 4], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.124, 0, 5], 'false,false,true,false': [1.828, 16, 9], 'false,false,false,true': [1.459, 9, 4], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I), interaction(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.763, 7, 9], 'false,false,true,false': [0.878, 9, 5], 'false,false,false,true': [0.994, 3, 4], 'false,false,false,false': [0.926, 6, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), interaction(H, A)', 'false,true': 'interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [1.411, 6, 8], 'false,true,false': [0.939, 6, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.013, 4, 4], 'false,false,false,false': [1.412, 9, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.02, 0, 3], 'true,false': [0.01, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.448, 0, 14], 'false,true,false': [0.519, 16, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.399, 9, 4], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.011, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.599, 16, 14], 'false,false,false,true': [1.401, 9, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.016, 0, 5], 'false,true,true,true': [0.512, 1, 3], 'false,true,true,false': [1.362, 6, 6], 'false,true,false,true': [0.01, 0, 5], 'false,true,false,false': [0.008, 9, 0], 'false,false,true,true': [0.561, 0, 6], 'false,false,true,false': [0.037, 9, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24691358024691326], 'false': [0.2488888888888884, 0.24000000000000007], 'false,true': [0.24609374999999992, 0.22959183673469372], 'false,false': [0.2295918367346937, 0.0], 'false,true,false': [0.0, -9.25185853854297e-18], 'false,false,true': [0.0, 0.21301775147928975], 'true': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.21909681022522506], 'false': [0.2162629663077891, 0.22282659531886267], 'false,false': [0.23222277235929908, 0.16701681449634984], 'false,false,true': [0.0025783336291844705, 4.625929269271485e-18], 'false,true': [0.24609375000000006, 0.16390251561700478], 'false,true,true': [0.0, 0.2430555555555556], 'false,false,false': [0.0, 0.12244897959183668], 'false,true,false': [0.0, 0.0]}, {'': [-4.4408920985006264e-17, 0.17165015465843306], 'false': [0.1734145528244551, 0.16701339121103453], 'false,true': [0.22239657179343542, 0.10235211919118647], 'false,false': [0.0, 0.16787433172982516], 'false,false,false': [0.16846683107192537, 0.0], 'false,true,false': [-4.4408920985006264e-17, -1.5419764230904951e-18], 'false,false,true': [0.0, nan], 'true': [0.0, 3.700743415417188e-17]}, {'': [4.4408920985006264e-17, 0.1530113349607829], 'false': [0.0, 0.15490227072989346], 'false,false': [0.1519176688184967, 0.16007812878949815], 'false,false,false': [0.1658949322292675, 0.0], 'true': [-3.700743415417188e-17, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true,true': [-3.700743415417188e-17, nan]}, {'': [-2.2204460492503132e-17, 0.14815708878290793], 'false': [0.0, 0.15065013880311462], 'false,false': [0.14803636428335515, 0.1554945332339019], 'false,false,false': [0.16379465896673978, 0.0], 'false,false,true': [0.0030867478790149506, 0.13360236074405424], 'true': [-2.2204460492503132e-17, nan], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [0.0, 0.13585891017758386], 'false': [0.0, 0.13838486720898452], 'false,false': [0.1315880042960321, 0.15264817240060277], 'false,false,false': [0.14115413259268803, 0.12244897959183675], 'false,false,true': [0.1943517357209654, 0.05506074223080682], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.1287775817041638], 'false': [0.1207077013334852, 0.13741776888993215], 'false,false': [nan, 0.13741776888993215], 'false,false,false': [0.12829378639918096, 0.1424683404447716], 'false,true': [0.1422433287095182, 0.08818240695787752], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [9.687877004878609e-05, 0.12991145009081648], 'false': [0.12841005881640846, 0.13291262399996617], 'false,false': [0.1409820564754071, 0.0], 'false,false,true': [0.0, 0.15051854748135754], 'false,true': [0.014346096183182278, 0.016850525871329847], 'false,true,true': [nan, 0.014346096183182309], 'true': [0.00012845414039653705, 4.8888875353987615e-05], 'false,false,false': [0.0, nan]}, {'': [7.610219462769185e-05, 0.10073125729049479], 'false': [0.0, 0.10274777389371556], 'false,false': [0.08523294562508389, 0.14027591506741924], 'false,false,false': [0.14027591506741924, nan], 'true': [2.9185477639696172e-05, 0.0], 'false,true': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [5.0053106232478275e-05, 0.10022513699247594], 'false': [0.08484965282291321, 0.13093215181603587], 'false,false': [0.13093215181603587, nan], 'false,false,true': [0.05239623519170267, 0.0001508968812143537], 'false,true': [0.13286116252590768, 0.0291971826594571], 'false,true,true': [0.06561981165078477, 0.15461254772208635], 'false,true,false': [1.9376673153648216e-05, 7.062108978840422e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
1;false,false,false;interaction(K, A), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, A), phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,false;interaction(J, A), interaction(K, J).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, I).;true;true
3;false,false,false;interaction(J, A), interaction(K, J).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;true,false;phenotype(C, E), phenotype(A, F).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(A, H).;true;true
4;false,false,false;interaction(J, A), interaction(K, J).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(E, C).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.790294712353063;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21411317549947717;  // std dev = 1.615, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8074222660269855;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1632614493676708;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.02040430651052797;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.47478766691930896;  // std dev = 1.176, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.056312912194162505;  // std dev = 1.067, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11823421470921515;  // std dev = 1.480, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.5335566810814125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.2637667934229417;  // std dev = 1.706, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return -0.016869775435111253;  // std dev = 0.686, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09993180281663937;  // std dev = 1.469, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.40152189358108104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(C, E), phenotype(A, F) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.2967185002562613;  // std dev = 0.922, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.0520386169277424;  // std dev = 1.554, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08349332080628985;  // std dev = 1.459, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.30988654269078164;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, F), interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.04571352352316896;  // std dev = 0.800, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.4069718236621831;  // std dev = 1.007, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.001948493118605067;  // std dev = 1.414, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.14759129794681947;  // std dev = 1.057, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( complex(F, G), interaction(F, H) )
%   | | then if ( phenotype(F, I), interaction(H, J) )
%   | | | then return 0.03752611768886605;  // std dev = 1.386, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.380427460480757;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(K, F), enzyme(K, L) )
%   | | | then return -0.1233266762416372;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.13441617744280776;  // std dev = 0.515, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(M, A), enzyme(M, N) )
%   | | then return 0.21486262878805507;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.21170917227203562;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12646654243243302;  // std dev = 0.410, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18593271250879292;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16533695986821562;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.3058729987837444;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.006579271130719988;  // std dev = 0.681, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.04973117654921484;  // std dev = 1.227, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.02602599080474392;  // std dev = 0.724, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0348164599568001;  // std dev = 1.312, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.27169926104595177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.14769316140471336;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17510861448595605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(A, H), complex(F, I) )
%   | | | then return 0.27092514521554384;  // std dev = 0.659, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.06913524018900116;  // std dev = 0.565, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, J), location(A, K) )
%   | | | then return 0.10018181897103444;  // std dev = 1.017, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.030240316742930044;  // std dev = 1.467, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13429516516889986;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.1371962840908041;  // std dev = 0.860, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.10414072056486938;  // std dev = 1.111, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.2645062257816056;  // std dev = 0.215, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10468104085976274;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.2560488608613872;  // std dev = 0.907, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.07779215758261149;  // std dev = 0.349, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.2065428950335801;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.799395
   AUC PR    = 0.074674
   CLL	      = -0.404672
   Precision = 0.022582 at threshold = 0.5
   Recall    = 0.528736
   F1        = 0.043315


Total learning time: 2.734 seconds
Total inference time: 15.65 seconds
AUC ROC: 0.799395


Results scoring model
   AUC ROC   = 0.9888
   AUC PR    = 0.988499
   CLL	      = -0.29735
   Precision = 0.958333 at threshold = 0.5
   Recall    = 0.92
   F1        = 0.938776


Total scoring time: 0.659 seconds
Refined model CLL: -0.29735


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.799395
   AUC PR    = 0.074674
   CLL	      = -0.404672
   Precision = 0.022582 at threshold = 0.5
   Recall    = 0.528736
   F1        = 0.043315


Total learning time: 5.148 seconds
Total inference time: 15.65 seconds
AUC ROC: 0.799395
Total revision time: 5.148
Best scored revision CLL: -0.29735


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:46
{'AUC ROC': 0.799395, 'AUC PR': 0.074674, 'CLL': -0.404672, 'Precision': [0.022582, 0.5], 'Recall': 0.528736, 'F1': 0.043315, 'Learning time': 5.148, 'Inference time': 15.65, 'parameter_25': {'AUC ROC': 0.896281, 'AUC PR': 0.157256, 'CLL': -0.303011, 'Precision': [0.124248, 0.5], 'Recall': 0.712644, 'F1': 0.211604, 'Learning time': 1.093, 'Inference time': 5.126}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14207446911896834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.25264661014710416;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.11592245392980635;  // std dev = 1.065, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5657522075645661;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.029078719147193906;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.1398554300890748;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.008969252621042496;  // std dev = 0.432, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return 0.03666695708761661;  // std dev = 0.502, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.6818471061050826;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.05743068085013642;  // std dev = 0.520, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4323740242371943;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.19284902989762012;  // std dev = 0.225, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.020708266612485024;  // std dev = 0.718, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.28951367071425854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.14003691271109267;  // std dev = 0.511, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2926370451985938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09490074119536146;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.845194
   AUC PR    = 0.049271
   CLL	      = -0.344946
   Precision = 0.041589 at threshold = 0.5
   Recall    = 0.644231
   F1        = 0.078134


Total learning time: 0.888 seconds
Total inference time: 6.176 seconds
AUC ROC: 0.845194


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.218174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.506 seconds
Parameter learned model CLL: -0.218174


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.0, 2, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.816, 2, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.938, 2, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,false': 'interaction(A, F), interaction(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.065, 5, 3], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.926, 5, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(E, F), interaction(F, A)', 'false,false,false': 'phenotype(A, G), interaction(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.88, 2, 2], 'false,false,true,false': [0.432, 3, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), interaction(A, E)', 'false,true': 'interaction(D, E)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.502, 1, 1], 'false,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.52, 4, 1], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.108, 0, 3], 'false,true,false': [0.225, 5, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.718, 5, 3], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.511, 1, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999992], 'false': [0.2343749999999999, 0.0], 'false,true': [0.25, 0.18750000000000003], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.20711598086356925], 'false': [0.2043542341935261, 0.0], 'false,true': [0.25, 0.13385372108722052], 'false,true,true': [0.0, 0.22222222222222224], 'false,true,false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.1551609635192621], 'false': [0.16167204318020614, 0.0], 'false,true': [0.22014614910834665, 0.0835875640061356], 'false,true,false': [0.0, 2.3129646346357427e-18], 'false,false': [nan, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [nan, 0.12790268890070428], 'false': [nan, 0.1279026889007043], 'false,false': [0.1416869191593791, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [nan, 0.11910280993948978], 'false': [nan, 0.11910280993948978], 'false,false': [0.1387940669572207, 0.0], 'false,false,true': [0.0, 0.12261948666199331], 'false,false,false': [0.0, 0.0]}, {'': [nan, 0.10480761088649697], 'false': [nan, 0.10480761088649697], 'false,false': [0.12447468523071105, 0.0], 'false,false,true': [0.19381885344693592, 0.04656492128838956], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.10154498926943645], 'false': [0.17643306769777836, 0.053188811816167816], 'false,true': [0.1258971266512677, 0.0], 'false,false': [nan, 0.053188811816167816], 'false,false,false': [0.05406729676692594, 0.0]}, {'': [nan, 0.0824678560147499], 'false': [0.09941348096106785, 0.0], 'false,true': [0.0038694056968200754, 0.010150975836492071], 'false,true,true': [nan, 0.0038694056968200754], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.054390420411068695], 'false': [nan, 0.05439042041106869], 'false,false': [0.06450134603027854, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.053539167424577885], 'false': [0.06420062267456372, 0.0], 'false,true': [0.0997712690414694, 0.02815978797808629], 'false,true,true': [0.0, 0.08689993279169428], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
0;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
0;false;interaction(A, G), interaction(G, H).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true;interaction(E, D), interaction(E, A).;true;true
2;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
2;false;interaction(A, H), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(E, A).;true;true
3;false;interaction(A, F), interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(E, A).;true;true
4;true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false;interaction(A, G), interaction(G, H).;true;true
5;;proteinclass(A, B) :- interaction(E, A).;true;true
6;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
6;true;interaction(D, E).;true;true
6;false;interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(D, A).;true;true
7;false;interaction(A, G), interaction(G, H).;true;true
8;;proteinclass(A, B) :- interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(D, A).;true;true
9;true;interaction(D, E), interaction(E, A).;true;true
9;true,true;interaction(A, D), phenotype(A, F).;true;true
9;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.14207446911896834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.25264661014710416;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return 0.35814387960674904;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.02941040147635921;  // std dev = 0.518, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5055796282144285;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.09894318800684644;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.12550109085001526;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D) )
%   | then return -0.0904653927467934;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15433398503940654;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(C, D) )
%   | then return -0.026662561847658944;  // std dev = 0.527, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.6008842943420496;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return -0.04049208635152459;  // std dev = 0.487, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return -0.08088378049060324;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.09571957816625946;  // std dev = 0.482, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D) )
%   | then return -0.08760750699760146;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.09784703308330703;  // std dev = 0.790, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, C), phenotype(A, E) )
%   | | then return -0.39679188652385017;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1504548618233984;  // std dev = 0.567, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.32377260199542846;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.08085317062305424;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.875205
   AUC PR    = 0.036269
   CLL	      = -0.438069
   Precision = 0.040021 at threshold = 0.5
   Recall    = 0.740385
   F1        = 0.075937


Total learning time: 0.845 seconds
Total inference time: 4.456 seconds
AUC ROC: 0.875205


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.242008
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.479 seconds
Refined model CLL: -0.242008


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.845194
   AUC PR    = 0.049271
   CLL	      = -0.344946
   Precision = 0.041589 at threshold = 0.5
   Recall    = 0.644231
   F1        = 0.078134


Total learning time: 2.718 seconds
Total inference time: 6.176 seconds
AUC ROC: 0.845194
Total revision time: 2.718
Best scored revision CLL: -0.218174


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:00
{'AUC ROC': 0.845194, 'AUC PR': 0.049271, 'CLL': -0.344946, 'Precision': [0.041589, 0.5], 'Recall': 0.644231, 'F1': 0.078134, 'Learning time': 2.718, 'Inference time': 6.176, 'parameter_5': {'AUC ROC': 0.845194, 'AUC PR': 0.049271, 'CLL': -0.344946, 'Precision': [0.041589, 0.5], 'Recall': 0.644231, 'F1': 0.078134, 'Learning time': 0.888, 'Inference time': 6.176}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8171873642307679;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.10290164994505359;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2151942775953587;  // std dev = 1.395, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.11932647108504303;  // std dev = 1.541, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6379452373697663;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.025487686983000225;  // std dev = 1.114, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.10489416227023536;  // std dev = 1.228, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.03390454464199911;  // std dev = 0.604, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return 0.059056438726325426;  // std dev = 0.713, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.5642210886172361;  // std dev = 0.241, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.11087176051651215;  // std dev = 0.571, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.20013626911207694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4157351612174906;  // std dev = 0.245, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1855878594608367;  // std dev = 0.253, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.170006786729492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.021084538486996998;  // std dev = 0.988, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14734403041939548;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.2523676056185303;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.10660540392006436;  // std dev = 0.771, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25053914257520543;  // std dev = 0.088, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.091843221817373;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.921519
   AUC PR    = 0.055174
   CLL	      = -0.324276
   Precision = 0.044177 at threshold = 0.5
   Recall    = 0.740385
   F1        = 0.083378


Total learning time: 0.985 seconds
Total inference time: 6.546 seconds
AUC ROC: 0.921519


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.217718
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.519 seconds
Parameter learned model CLL: -0.217718


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [1.491, 5, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.195, 5, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [1.395, 5, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.541, 10, 6], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.128, 0, 3], 'false,false,true,false': [1.114, 10, 3], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.228, 5, 4], 'false,false,true,false': [0.604, 5, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), interaction(A, E)', 'false,true': 'interaction(D, E)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.713, 3, 3], 'false,true,false': [0.241, 0, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.571, 7, 1], 'false,false,false,false': [0.0, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.245, 0, 6], 'false,true,false': [0.253, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.988, 10, 6], 'false,false,false,true': [0.0, 0, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.771, 3, 4], 'false,true,false,true': [0.088, 0, 2], 'false,true,false,false': [0.013, 5, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2493074792243768], 'false': [0.23437500000000006, 1.4802973661668753e-16], 'false,true': [0.2469135802469134, 0.20408163265306123], 'false,true,false': [0.0, -2.7755575615628915e-18], 'false,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.2112036149022413], 'false': [0.2078508961328279, 0.0], 'false,true': [0.24691358024691354, 0.145691124992893], 'false,true,true': [0.0, 0.2040816326530612], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.1610908483960059], 'false': [0.16603251267687413, 3.700743415417188e-17], 'false,true': [0.21622615788628222, 0.09097966150327687], 'false,true,false': [0.0, 0.0], 'false,false': [nan, 3.700743415417188e-17], 'false,false,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.13673680039113323], 'false': [nan, 0.13673680039113326], 'false,false': [0.148335652400844, -3.700743415417188e-17], 'true': [0.0, nan], 'true,true': [0.0, nan], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.12915761144722201], 'false': [nan, 0.12915761144722201], 'false,false': [0.14560658360980624, 0.0], 'false,false,true': [0.005485473939261576, 0.095415365843897], 'true': [nan, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.10402479726802107], 'false': [nan, 0.10402479726802107], 'false,false': [0.1183374322270781, 0.0], 'false,false,true': [0.16763313844235894, 0.05212250525302768], 'true': [nan, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [nan, 0.09694465306238784], 'false': [0.11963254134261499, 0.05006029020575453], 'false,true': [0.08467652667447029, 0.01941702167930015], 'false,false': [nan, 0.05006029020575453], 'false,false,false': [0.04079564603956354, 0.0]}, {'': [0.0, 0.08040008210590727], 'false': [0.09250342240683519, 0.0], 'false,true': [0.010000555030078054, 0.0064091271337489595], 'false,true,true': [nan, 0.010000555030078129], 'true': [0.0, nan], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.0537165172793233], 'false': [nan, 0.053716517279323306], 'false,false': [0.061051389041939734, -4.625929269271485e-18], 'true': [0.0, nan], 'false,false,false': [-4.625929269271485e-18, nan]}, {'': [0.0, 0.05293531507436493], 'false': [0.06072517146297057, -2.3129646346357427e-18], 'false,true': [0.08827530259503696, 0.025058965166522094], 'false,true,true': [0.0, 0.08486090171614687], 'false,true,false': [0.003886628229286704, 3.4847527972708955e-05], 'false,false': [-2.3129646346357427e-18, nan], 'false,false,true': [-2.3129646346357427e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
3;false,false;interaction(A, H), interaction(H, I).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(F, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(F, A).;true;true
5;false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
6;false;interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.10716883467371531;  // std dev = 1.133, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.38217197119572305;  // std dev = 1.082, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.13768143055510323;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.010195452426779595;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5400214988014791;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.10673105533966613;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.017911697220040622;  // std dev = 0.462, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.008322461192693965;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.411169859637291;  // std dev = 0.191, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.09698160500809147;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.015445925289467768;  // std dev = 0.460, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.006799628715147367;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.319686747977152;  // std dev = 0.175, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.08881973124269633;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.013307053833111988;  // std dev = 0.458, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( phenotype(A, E) )
%   | then return 0.03750393506483381;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.2565060293596531;  // std dev = 0.155, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return -0.08189370150688124;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.011455041840745923;  // std dev = 0.456, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20360873897391574;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(A, F) )
%   | | then return 0.17464297210721963;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.02488853032095873;  // std dev = 0.500, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.03304659867424273;  // std dev = 0.471, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17257320254927355;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(A, F) )
%   | | then return 0.14393251821249237;  // std dev = 0.708, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.16536486073756582;  // std dev = 0.192, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03797897362133002;  // std dev = 0.594, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1493037469341233;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.337153980032846;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.1301000252861289;  // std dev = 0.670, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25196042702275706;  // std dev = 0.213, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.08057798254319411;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.793674
   AUC PR    = 0.024948
   CLL	      = -0.41291
   Precision = 0.025116 at threshold = 0.5
   Recall    = 0.730769
   F1        = 0.048562


Total learning time: 1.552 seconds
Total inference time: 6.032 seconds
AUC ROC: 0.793674


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.199185
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.518 seconds
Refined model CLL: -0.199185


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.793674
   AUC PR    = 0.024948
   CLL	      = -0.41291
   Precision = 0.025116 at threshold = 0.5
   Recall    = 0.730769
   F1        = 0.048562


Total learning time: 3.574 seconds
Total inference time: 6.032 seconds
AUC ROC: 0.793674
Total revision time: 3.574
Best scored revision CLL: -0.199185


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:17
{'AUC ROC': 0.793674, 'AUC PR': 0.024948, 'CLL': -0.41291, 'Precision': [0.025116, 0.5], 'Recall': 0.730769, 'F1': 0.048562, 'Learning time': 3.574, 'Inference time': 6.032, 'parameter_10': {'AUC ROC': 0.921519, 'AUC PR': 0.055174, 'CLL': -0.324276, 'Precision': [0.044177, 0.5], 'Recall': 0.740385, 'F1': 0.083378, 'Learning time': 0.985, 'Inference time': 6.546}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8156735149828546;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.14900684831618782;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2230570309960225;  // std dev = 1.572, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22152502927633905;  // std dev = 0.472, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.12416651480652455;  // std dev = 1.799, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18192146118801372;  // std dev = 0.450, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6300322632109192;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02385095769652142;  // std dev = 1.482, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14780505065941799;  // std dev = 0.434, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.11219878015414882;  // std dev = 1.440, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.050054583036941325;  // std dev = 0.813, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.037563733574612984;  // std dev = 0.308, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3096197112628898;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return 0.04765322928322515;  // std dev = 0.734, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2428494598349896;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.014643157584660421;  // std dev = 1.121, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.16195581597703862;  // std dev = 0.406, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.2019679582000583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4484528444704614;  // std dev = 0.388, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.20606879226469751;  // std dev = 0.347, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19046395263049667;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return -0.21139708846615968;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3099293927105454;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.17136164013497934;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.029427510957909676;  // std dev = 1.321, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11162604983157738;  // std dev = 0.334, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14119317266248732;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.2720961378014669;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.10650444478586592;  // std dev = 1.070, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25384493073926834;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10826005096620833;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.16808710737805493;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1952429655117694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.94103
   AUC PR    = 0.065974
   CLL	      = -0.330394
   Precision = 0.045793 at threshold = 0.5
   Recall    = 0.769231
   F1        = 0.08644


Total learning time: 1.003 seconds
Total inference time: 6.585 seconds
AUC ROC: 0.94103


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.245192
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 0.554 seconds
Parameter learned model CLL: -0.245192


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.651, 6, 5], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 8, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.11e-08, 0, 3], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.414, 6, 3], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 8, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.572, 6, 5], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.05e-08, 0, 3], 'false,false,false,false': [0.472, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.799, 14, 9], 'false,false,false,true': [0.0, 0, 3], 'false,false,false,false': [0.45, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.122, 0, 3], 'false,false,true,false': [1.482, 14, 6], 'false,false,false,true': [0.0, 0, 3], 'false,false,false,false': [0.434, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.44, 6, 5], 'false,false,true,false': [0.813, 8, 4], 'false,false,false,true': [0.308, 1, 1], 'false,false,false,false': [0.133, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), interaction(A, E)', 'false,true': 'interaction(D, E)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.734, 3, 3], 'false,true,false': [0.868, 2, 3], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.121, 9, 4], 'false,false,false,false': [0.406, 1, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.388, 0, 9], 'false,true,false': [0.347, 14, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.035, 0, 3], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.321, 14, 9], 'false,false,false,true': [0.334, 1, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.01, 0, 2], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [1.07, 4, 5], 'false,true,false,true': [0.036, 0, 4], 'false,true,false,false': [0.022, 8, 0], 'false,false,true,true': [0.075, 0, 4], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24872448979591835], 'false': [0.23818525519848777, 0.15999999999999986], 'false,true': [0.24793388429752045, 0.2222222222222221], 'false,true,false': [0.0, -6.938893903907228e-18], 'false,false': [1.4802973661668753e-16, 0.25], 'false,false,false': [0.0, 0.0], 'false,false,true': [nan, 1.4802973661668753e-16], 'true': [nan, 0.0]}, {'': [0.0, 0.20538633344413443], 'false': [0.2045907642707027, 0.11422184199442817], 'false,true': [0.2479338842975206, 0.1586414472144836], 'false,true,true': [0.0, 0.22222222222222215], 'false,true,false': [0.0, 0.0], 'false,false': [0.178471628116294, 0.0], 'false,false,true': [0.0, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.15577785306094988], 'false': [0.16228400458260722, 0.0713280546185691], 'false,true': [0.2246082972878727, 0.09906674252579038], 'false,true,false': [0.0, -1.734723475976807e-18], 'false,false': [nan, 0.0713280546185691], 'false,false,false': [3.700743415417188e-17, 0.11145008534151415], 'true': [nan, 0.0]}, {'': [0.0, 0.13105266706415405], 'false': [nan, 0.131052667064154], 'false,false': [0.1407575612676369, 0.05384471677122771], 'false,false,false': [-3.700743415417188e-17, 0.1013096028846786], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.12445600709876915], 'false': [nan, 0.12445600709876921], 'false,false': [0.13780868588195955, 0.044887352305998864], 'false,false,true': [0.004927066140817393, 0.10981191469246052], 'false,false,false': [0.0, 0.09428032459930981], 'true': [nan, 0.0]}, {'': [0.0, 0.10780871361052276], 'false': [nan, 0.10780871361052267], 'false,false': [0.11987732169111288, 0.04026228669035366], 'false,false,true': [0.188529996687074, 0.055098706701825186], 'false,false,false': [0.04735346318697323, 0.005929053694237629], 'true': [nan, 0.0]}, {'': [nan, 0.09849622259460541], 'false': [0.12692973334214633, 0.08009677911949344], 'false,true': [0.08973182153015043, 0.15078455383202277], 'false,false': [0.0, 0.08329523674319683], 'false,false,false': [0.09661109745274735, 0.033001040498688614]}, {'': [0.0001546473862884326, 0.10029919784587464], 'false': [0.11384320758123613, 0.032209517923312565], 'false,true': [0.016760573862006564, 0.00861924791545091], 'false,false': [0.00041091899548692984, 0.06794532499402137], 'false,false,false': [0.0, 0.0], 'false,true,true': [nan, 0.016760573862006564], 'false,false,true': [nan, 0.00041091899548692984], 'true': [0.0, 0.0]}, {'': [8.665545203441483e-05, 0.06724842808384743], 'false': [nan, 0.06724842808384744], 'false,false': [0.07581557723483696, 0.022289477873645065], 'false,false,false': [0.022289477873645065, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [5.1640646250482314e-05, 0.06662824819137754], 'false': [0.0753816169777062, 0.0222318740466382], 'false,true': [0.1253346520745447, 0.02928698416440505], 'false,true,true': [0.0, 0.12712526950082312], 'false,true,false': [0.0003297974741073295, 5.890491757937384e-05], 'false,false': [0.0222318740466382, nan], 'false,false,true': [0.0013880941850727344, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(G, A).;true;true
3;false,false;interaction(A, H), interaction(H, I).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(F, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;phenotype(A, J), interaction(A, K).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7974484051691343;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15167908635429928;  // std dev = 1.405, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.1662101071830533;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3674626727509583;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.22152502927633905;  // std dev = 0.472, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.1227685862896634;  // std dev = 0.368, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18192146118801372;  // std dev = 0.450, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.49767103274636965;  // std dev = 0.269, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14841643277105274;  // std dev = 0.197, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.31824300355169927;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15410542148648446;  // std dev = 1.086, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14780505065941799;  // std dev = 0.434, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.3875884132885459;  // std dev = 0.268, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.0992791392571193;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.15669107775518049;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then return 0.03841028601075654;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.37048432227948325;  // std dev = 0.215, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12990191402875415;  // std dev = 0.527, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( phenotype(A, E) )
%   | then return -0.0027303561881438184;  // std dev = 0.839, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.24748285399341047;  // std dev = 0.571, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( function(A, H), function(G, H) )
%   | | | then return -0.13642593293856883;  // std dev = 0.203, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.20760926411181926;  // std dev = 0.779, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.14915436718242636;  // std dev = 0.407, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.21021065653910043;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then return -0.04476679432675509;  // std dev = 0.806, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.010619589659231987;  // std dev = 0.650, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.1568641425248306;  // std dev = 0.888, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.18145133950291517;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return -0.2249607237764657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.29974497131204303;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.17742863716093782;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return 0.03402823661894947;  // std dev = 0.956, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(H, E), interaction(E, H) )
%   | | | then return 0.06786931875398684;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24476256978380356;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.047973936087131554;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.06667927575663052;  // std dev = 0.300, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.05819465824198784;  // std dev = 0.461, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14350140125636907;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.33904237871463405;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.13008192691529005;  // std dev = 1.129, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.200577270938335;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09267235456183961;  // std dev = 0.123, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.08903242738011086;  // std dev = 0.324, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.947752
   AUC PR    = 0.061193
   CLL	      = -0.339721
   Precision = 0.048269 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.091542


Total learning time: 1.82 seconds
Total inference time: 9.314 seconds
AUC ROC: 0.947752


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.251757
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 0.578 seconds
Refined model CLL: -0.251757


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.94103
   AUC PR    = 0.065974
   CLL	      = -0.330394
   Precision = 0.045793 at threshold = 0.5
   Recall    = 0.769231
   F1        = 0.08644


Total learning time: 3.9549999999999996 seconds
Total inference time: 6.585 seconds
AUC ROC: 0.94103
Total revision time: 3.9549999999999996
Best scored revision CLL: -0.245192


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:37
{'AUC ROC': 0.94103, 'AUC PR': 0.065974, 'CLL': -0.330394, 'Precision': [0.045793, 0.5], 'Recall': 0.769231, 'F1': 0.08644, 'Learning time': 3.9549999999999996, 'Inference time': 6.585, 'parameter_15': {'AUC ROC': 0.94103, 'AUC PR': 0.065974, 'CLL': -0.330394, 'Precision': [0.045793, 0.5], 'Recall': 0.769231, 'F1': 0.08644, 'Learning time': 1.003, 'Inference time': 6.585}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8195467402759844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09227401300325712;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7580193346218546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5503101501396747;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.20434618835905047;  // std dev = 1.732, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.43393428719886273;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.24216860493095232;  // std dev = 0.501, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.12784101876795345;  // std dev = 2.004, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.3289516345029122;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19922700008042699;  // std dev = 0.478, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6291007017428573;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.025522693415925595;  // std dev = 1.624, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.24708560243971522;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16157306365758722;  // std dev = 0.461, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.0961905780661388;  // std dev = 1.563, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.0699859255791622;  // std dev = 0.963, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.08028996689520125;  // std dev = 0.379, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.20698169893436108;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.04064437249078967;  // std dev = 0.890, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.19549120401979117;  // std dev = 1.019, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.032576274776350514;  // std dev = 1.173, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.13159003637577973;  // std dev = 0.987, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.19009824089194782;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43441074076402425;  // std dev = 0.456, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.20137576611451585;  // std dev = 0.344, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.115828354798633;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return -0.2222768334106353;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3658645274944672;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.16256392004144038;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.0324710517835908;  // std dev = 1.474, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07947854700425837;  // std dev = 0.953, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13909945762373008;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.2506092694049261;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.0784785636563121;  // std dev = 1.218, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2481301456454006;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11167402082631295;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.27351194593208017;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.46007552040007216;  // std dev = 0.370, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.95746
   AUC PR    = 0.113211
   CLL	      = -0.294043
   Precision = 0.073213 at threshold = 0.5
   Recall    = 0.817308
   F1        = 0.134387


Total learning time: 1.027 seconds
Total inference time: 6.871 seconds
AUC ROC: 0.95746


Results scoring model
   AUC ROC   = 0.9925
   AUC PR    = 0.992289
   CLL	      = -0.270711
   Precision = 0.947368 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.923077


Total scoring time: 0.574 seconds
Parameter learned model CLL: -0.270711


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.852, 8, 6], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.894, 1, 4], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [1.477, 8, 3], 'false,true,false,true': [2.11e-08, 0, 6], 'false,true,false,false': [5.27e-09, 10, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.886, 1, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.732, 8, 6], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.885, 1, 4], 'false,false,false,false': [0.501, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [2.004, 18, 12], 'false,false,false,true': [0.884, 1, 4], 'false,false,false,false': [0.478, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.137, 0, 4], 'false,false,true,false': [1.624, 18, 8], 'false,false,false,true': [0.884, 1, 4], 'false,false,false,false': [0.461, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.563, 8, 6], 'false,false,true,false': [0.963, 10, 6], 'false,false,false,true': [0.379, 1, 1], 'false,false,false,false': [0.907, 1, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.89, 5, 4], 'false,true,false': [1.019, 3, 4], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.173, 10, 5], 'false,false,false,false': [0.987, 2, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.018, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.456, 0, 12], 'false,true,false': [0.344, 18, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.891, 1, 4], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.016, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.474, 18, 12], 'false,false,false,true': [0.953, 2, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.016, 0, 3], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [1.218, 6, 6], 'false,true,false,true': [0.035, 0, 6], 'false,true,false,false': [0.016, 10, 0], 'false,false,true,true': [0.014, 0, 5], 'false,false,true,false': [0.37, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24835646457268037], 'false': [0.23999999999999952, 0.20408163265306106], 'false,true': [0.24489795918367352, 0.23437500000000003], 'false,true,false': [-1.4802973661668753e-16, -1.1102230246251566e-17], 'false,false': [0.15999999999999986, 0.25], 'false,false,false': [0.0, 0.0], 'false,false,true': [nan, 0.15999999999999986], 'true': [0.0, 0.0]}, {'': [0.0, 0.21038498010600334], 'false': [0.20432220205574628, 0.17918038002627573], 'false,true': [0.24489795918367324, 0.16731715135902558], 'false,true,true': [0.0, 0.1983471074380165], 'false,false': [0.19512714796360467, 0.15715405230864907], 'false,false,true': [0.0, 0.0], 'false,true,false': [7.401486830834377e-17, 2.7755575615628915e-18], 'false,false,false': [nan, 0.15715405230864907]}, {'': [3.700743415417188e-17, 0.16323731908272351], 'false': [0.15676436299216126, 0.1551713702734127], 'false,true': [0.2141697686234368, 0.10448445500766955], 'false,false': [nan, 0.1551713702734127], 'false,false,false': [0.15646919796539965, 0.12565960326081868], 'false,true,false': [-7.401486830834377e-17, 0.0], 'true': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.14059289657287813], 'false': [nan, 0.14059289657287807], 'false,false': [0.13383976417578758, 0.14771497418518484], 'false,false,false': [0.15628257131790993, 0.11427563794190973], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.13516136053020192], 'false': [nan, 0.1351613605302019], 'false,false': [0.13063576979453273, 0.1435231687788588], 'false,false,false': [0.15634168802368067, 0.10625373188897196], 'false,false,true': [0.0047249718734911905, 0.10143247349759778], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.11912860198914703], 'false': [nan, 0.11912860198914701], 'false,false': [0.1124779896011414, 0.1412708044714232], 'false,false,false': [0.07187566649211878, 0.16444291824397858], 'false,false,true': [0.1744342834401085, 0.0579457800464622], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.11166053245598632], 'false': [0.1202735752221257, 0.10507720634114426], 'false,true': [0.08798679440408724, 0.1482977836151576], 'false,false': [0.0, 0.1089307557564423], 'false,false,false': [0.09168129730374433, 0.139209523067177], 'true': [0.0, nan]}, {'': [0.00015026251097954857, 0.11404312142814584], 'false': [0.10787343746133987, 0.13843252844383966], 'false,false': [0.15866050295968023, 0.08647756510182651], 'false,false,true': [nan, 0.15866050295968023], 'false,true': [0.01731103642590866, 0.006558578553434379], 'false,false,false': [0.0, 0.0], 'false,true,true': [nan, 0.0173110364259087], 'true': [0.00016904532485199214, 0.0]}, {'': [0.00010952082210244814, 0.0835648326357733], 'false': [nan, 0.08356483263577333], 'false,false': [0.07239621861322748, 0.12963866891983675], 'false,false,false': [0.12963866891983675, nan], 'true': [0.00013213669426766564, 0.0], 'true,false': [nan, 0.0]}, {'': [8.321378872255351e-05, 0.08300010921255283], 'false': [0.07191806658671639, 0.1293947523475519], 'false,false': [0.1293947523475519, nan], 'false,false,true': [4.164642079506065e-05, 0.06838425233613915], 'false,true': [0.11929400954002724, 0.03043263462652113], 'false,true,true': [0.0, 0.12370508705351631], 'false,true,false': [0.00019933753245495364, 2.547355405914664e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;phenotype(A, J), interaction(A, K).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10408531909695552;  // std dev = 1.492, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7580193346218546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.5503101501396747;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.30585744588292996;  // std dev = 1.317, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.00810390922534936;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return 0.36972194354513543;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3917069572252257;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( phenotype(E, G), interaction(E, H) )
%   | | then if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.5590193445977398;  // std dev = 0.372, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1637219663165818;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.03175613871039442;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then return 0.028118231288218408;  // std dev = 0.605, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.055704301131658765;  // std dev = 0.525, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.23097355963325272;  // std dev = 0.948, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( phenotype(E, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2111776831920265;  // std dev = 0.761, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.13457107311622693;  // std dev = 0.141, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1523970605320118;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.1316733268726194;  // std dev = 0.816, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.19452617353538637;  // std dev = 1.127, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.3674597775165742;  // std dev = 0.600, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( complex(A, E), phenotype(A, F) )
%   | then return -0.13459232307445324;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.396380401490572;  // std dev = 0.268, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12899148651010192;  // std dev = 0.134, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.1028819348262524;  // std dev = 0.815, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2347007321343376;  // std dev = 1.197, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3391419595819337;  // std dev = 0.216, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19512968483263649;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.15463674918820677;  // std dev = 0.538, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.17618628776340725;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.051600156429934735;  // std dev = 0.383, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.1266276886268303;  // std dev = 1.268, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18118470869460884;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then return -0.08999020382708675;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.007645435520282967;  // std dev = 0.682, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.10230825136641235;  // std dev = 1.150, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.14577981171817317;  // std dev = 0.775, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return -0.2161956972856247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3232829340311024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15584068681565943;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5272160874731396;  // std dev = 0.163, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15754283917246864;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.330259889927329;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( function(A, K), function(I, K) )
%   | | | then return -0.057876609595630825;  // std dev = 0.239, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.10389611881543188;  // std dev = 0.365, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.05610474910476719;  // std dev = 0.471, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16652482559761314;  // std dev = 0.799, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13561687424799126;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.21597407692779275;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.06090208491646942;  // std dev = 0.915, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20181166988685564;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09256487432021063;  // std dev = 0.154, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.17928027640578273;  // std dev = 0.413, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.6185562540480971;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.970457
   AUC PR    = 0.146719
   CLL	      = -0.22976
   Precision = 0.066009 at threshold = 0.5
   Recall    = 0.836538
   F1        = 0.122363


Total learning time: 2.664 seconds
Total inference time: 31.957 seconds
AUC ROC: 0.970457


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.21148
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.666 seconds
Refined model CLL: -0.21148


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.970457
   AUC PR    = 0.146719
   CLL	      = -0.22976
   Precision = 0.066009 at threshold = 0.5
   Recall    = 0.836538
   F1        = 0.122363


Total learning time: 4.931000000000001 seconds
Total inference time: 31.957 seconds
AUC ROC: 0.970457
Total revision time: 4.931000000000001
Best scored revision CLL: -0.21148


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:21
{'AUC ROC': 0.970457, 'AUC PR': 0.146719, 'CLL': -0.22976, 'Precision': [0.066009, 0.5], 'Recall': 0.836538, 'F1': 0.122363, 'Learning time': 4.931000000000001, 'Inference time': 31.957, 'parameter_20': {'AUC ROC': 0.95746, 'AUC PR': 0.113211, 'CLL': -0.294043, 'Precision': [0.073213, 0.5], 'Recall': 0.817308, 'F1': 0.134387, 'Learning time': 1.027, 'Inference time': 6.871}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8127785970153351;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18777859701533478;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7580193346218546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44159326834311474;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.23657498637831265;  // std dev = 2.094, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.4535553284553086;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11663404826231231;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.14779262012564517;  // std dev = 2.391, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.3456069918605272;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.09688798193198367;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6030403568616985;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06621938993843313;  // std dev = 2.130, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2597621318105577;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07960986027613286;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11950879081914467;  // std dev = 1.982, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.0729068499577374;  // std dev = 1.072, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.09616607638817246;  // std dev = 0.341, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16411017266269692;  // std dev = 1.118, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.07967376942549306;  // std dev = 1.115, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.16919912306738333;  // std dev = 1.095, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.035771726083428934;  // std dev = 1.579, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.11408575298349159;  // std dev = 1.169, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.1869763517219053;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3979343472885936;  // std dev = 0.962, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.22818130076765414;  // std dev = 0.475, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13517917731819112;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return -0.1730860193074132;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.10561812871629786;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.16021337856993945;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.039661834732198566;  // std dev = 1.880, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06745543395879652;  // std dev = 1.156, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13788372855806785;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.3059466337975153;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.08147934831987869;  // std dev = 1.623, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23888049009097767;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11764194658332704;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3441077034490858;  // std dev = 0.249, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.4310756826936519;  // std dev = 0.382, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.961099
   AUC PR    = 0.129084
   CLL	      = -0.328656
   Precision = 0.070774 at threshold = 0.5
   Recall    = 0.817308
   F1        = 0.130268


Total learning time: 1.065 seconds
Total inference time: 6.773 seconds
AUC ROC: 0.961099


Results scoring model
   AUC ROC   = 0.988
   AUC PR    = 0.987267
   CLL	      = -0.313509
   Precision = 0.952381 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.869565


Total scoring time: 0.658 seconds
Parameter learned model CLL: -0.313509


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [2.176, 10, 9], 'false,true,false,true': [0.0, 0, 8], 'false,true,false,false': [0.0, 12, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.894, 1, 4], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [1.936, 10, 6], 'false,true,false,true': [2.98e-08, 0, 8], 'false,true,false,false': [5.27e-09, 12, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.141, 2, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [2.094, 10, 9], 'false,true,false,true': [0.0, 0, 8], 'false,true,false,false': [9.13e-09, 12, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.88, 1, 4], 'false,false,false,false': [0.761, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [2.391, 22, 17], 'false,false,false,true': [0.879, 1, 4], 'false,false,false,false': [0.757, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.124, 0, 4], 'false,false,true,false': [2.13, 22, 13], 'false,false,false,true': [0.88, 1, 4], 'false,false,false,false': [0.755, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.982, 10, 9], 'false,false,true,false': [1.072, 12, 8], 'false,false,false,true': [0.341, 1, 1], 'false,false,false,false': [1.118, 2, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [1.115, 5, 5], 'false,true,false': [1.095, 4, 6], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.579, 13, 7], 'false,false,false,false': [1.169, 3, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.014, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.962, 1, 17], 'false,true,false': [0.475, 21, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.884, 1, 4], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.012, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.88, 22, 17], 'false,false,false,true': [1.156, 3, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.012, 0, 3], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [1.623, 8, 9], 'false,true,false,true': [0.034, 0, 8], 'false,true,false,false': [0.018, 12, 0], 'false,false,true,true': [0.249, 0, 5], 'false,false,true,false': [0.382, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541377], 'false': [0.24589086127547616, 0.23437499999999983], 'false,true': [0.2493074792243767, 0.24000000000000005], 'false,true,false': [-2.220446049250313e-16, -1.1564823173178714e-17], 'false,false': [0.15999999999999986, 0.22222222222222224], 'false,false,false': [0.0, 0.25], 'false,false,true': [nan, 0.15999999999999986], 'true': [0.0, 0.0]}, {'': [0.0, 0.21504555315699164], 'false': [0.2106863358935005, 0.21459446547430064], 'false,false': [0.19512714796360467, 0.21715817789586842], 'false,false,false': [nan, 0.21715817789586842], 'false,true': [0.24930747922437685, 0.17133276299164218], 'false,true,true': [-2.220446049250313e-16, 0.23437500000000008], 'false,false,true': [0.0, 0.0], 'false,true,false': [1.1102230246251565e-16, 2.3129646346357427e-18]}, {'': [3.700743415417188e-17, 0.17599040988240555], 'false': [0.1689342504140987, 0.19580079260525013], 'false,false': [nan, 0.19580079260525013], 'false,false,false': [0.15498729794351326, 0.19287581555384023], 'false,true': [0.23070359756097067, 0.10699208192785362], 'false,true,false': [-1.1102230246251565e-16, 6.938893903907228e-18], 'true': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.15433326704967074], 'false': [nan, 0.15433326704967074], 'false,false': [0.14661955790169232, 0.1828683538617307], 'false,false,false': [0.15469013815547222, 0.19116883051809797], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.1494541526143848], 'false': [nan, 0.1494541526143847], 'false,false': [0.1432557144302552, 0.1754971691291274], 'false,false,false': [0.15475220692636302, 0.18978783054685153], 'false,false,true': [0.0038228061755644638, 0.12963431414728915], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.13805574651542754], 'false': [nan, 0.1380557465154277], 'false,false': [0.13070864437334032, 0.17167088759062055], 'false,false,false': [0.05817327136758623, 0.20834932627699146], 'false,false,true': [0.20666895523575704, 0.05748832143996903], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.13148646155916835], 'false': [0.12417179983815285, 0.13500922463136114], 'false,false': [0.0, 0.139038370244617], 'false,false,false': [0.12462746224903672, 0.1706848639412078], 'false,true': [0.12440682949973843, 0.11992937570421444], 'true': [0.0, nan]}, {'': [8.676579075510282e-05, 0.13440692210900373], 'false': [0.12695066194342536, 0.17008405735008947], 'false,false': [0.15615379882392336, 0.18392800047236058], 'false,false,false': [0.0, 0.24999999999999994], 'false,false,true': [nan, 0.15615379882392336], 'false,true': [0.0514117776462545, 0.0107655979441037], 'false,true,true': [nan, 0.05141177764625447], 'true': [9.761151459949241e-05, 0.0]}, {'': [6.336705498219408e-05, 0.10378246777238306], 'false': [nan, 0.10378246777238309], 'false,false': [0.09067102750638589, 0.1670597415763368], 'false,false,false': [0.1670597415763368, nan], 'true': [7.645267042483139e-05, 0.0], 'true,false': [nan, 0.0]}, {'': [4.823757185826635e-05, 0.10329973409752206], 'false': [0.09019646322604183, 0.1668197580150139], 'false,false': [0.1668197580150139, nan], 'false,false,true': [0.012415775220561276, 0.04859142799427607], 'false,true': [0.15282246132580662, 0.03058121102077116], 'false,true,true': [0.0, 0.1550016910945785], 'false,true,false': [0.00014693033648943699, 2.7432336085509806e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;phenotype(A, J), interaction(A, K).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7927941835770488;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19052554413270478;  // std dev = 1.930, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7580193346218546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.44159326834311474;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.009752945440634202;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.29508134999811664;  // std dev = 1.812, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.4535553284553086;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.11663404826231231;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, G), interaction(E, E) )
%   | | then return 0.40479061784029363;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.34610476750798314;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07074845376823685;  // std dev = 0.779, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6112639247184923;  // std dev = 0.290, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19521994401828027;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, M), enzyme(A, N) )
%   | | | then return -0.17283499042133985;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.30483216406663843;  // std dev = 1.403, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( function(A, G), function(E, G) )
%   | | then if ( interaction(A, H), function(H, G) )
%   | | | then return 0.1115901661696687;  // std dev = 1.063, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.13650439328527936;  // std dev = 0.199, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.3375697010296478;  // std dev = 0.683, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.04916068050606447;  // std dev = 1.066, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return -0.04291252051748595;  // std dev = 0.396, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.30689311583453194;  // std dev = 1.170, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(D, F), interaction(F, F) )
%   | | then if ( location(A, G), location(F, G) )
%   | | | then return 0.006866398961677495;  // std dev = 1.148, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3996051467811824;  // std dev = 0.233, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.08417981087351681;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.15195741377737754;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.41650991900689643;  // std dev = 0.186, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18822648560575997;  // std dev = 0.196, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.05541627322547386;  // std dev = 0.841, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.26742490686768217;  // std dev = 1.047, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.11336207906771305;  // std dev = 0.411, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.07271678817324725;  // std dev = 0.782, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.2543283672711572;  // std dev = 0.624, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.02319341329148943;  // std dev = 0.320, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.0428298250252508;  // std dev = 0.588, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.10665818106987711;  // std dev = 1.500, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.2031314286067234;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return -0.08096519038855134;  // std dev = 0.301, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.174084538584957;  // std dev = 1.023, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.007068137249843919;  // std dev = 0.273, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.15354015741622826;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return -0.08336617085704964;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.13269370087759608;  // std dev = 0.483, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.17233495452682107;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.3171561393112054;  // std dev = 0.574, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1401659700735173;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, H), location(F, E) )
%   | | | then return -0.10905841948244129;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.26216813269076644;  // std dev = 0.370, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then return -0.016091799447176102;  // std dev = 0.356, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.15948799573248337;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13200710295866483;  // std dev = 0.414, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1441344648990749;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.14757573003785002;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.05121520107013284;  // std dev = 1.326, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17524735593646384;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.08918092044781194;  // std dev = 0.116, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.20461642169270297;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2361498048566598;  // std dev = 0.368, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.948574
   AUC PR    = 0.142278
   CLL	      = -0.304851
   Precision = 0.058305 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.10893


Total learning time: 5.024 seconds
Total inference time: 20.837 seconds
AUC ROC: 0.948574


Results scoring model
   AUC ROC   = 0.9952
   AUC PR    = 0.995095
   CLL	      = -0.248046
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 0.693 seconds
Refined model CLL: -0.248046


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.948574
   AUC PR    = 0.142278
   CLL	      = -0.304851
   Precision = 0.058305 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.10893


Total learning time: 7.4399999999999995 seconds
Total inference time: 20.837 seconds
AUC ROC: 0.948574
Total revision time: 7.4399999999999995
Best scored revision CLL: -0.248046


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:57
{'AUC ROC': 0.948574, 'AUC PR': 0.142278, 'CLL': -0.304851, 'Precision': [0.058305, 0.5], 'Recall': 0.826923, 'F1': 0.10893, 'Learning time': 7.4399999999999995, 'Inference time': 20.837, 'parameter_25': {'AUC ROC': 0.961099, 'AUC PR': 0.129084, 'CLL': -0.328656, 'Precision': [0.070774, 0.5], 'Recall': 0.817308, 'F1': 0.130268, 'Learning time': 1.065, 'Inference time': 6.773}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.17626634551589415;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1776086421281296;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.11859980858475325;  // std dev = 0.987, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6039399567963517;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.06999884921041745;  // std dev = 0.511, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.07166566899475171;  // std dev = 0.699, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06450181542576161;  // std dev = 0.418, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.12114510360912234;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3902904337817543;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return -0.13980441346623562;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3723468412531732;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16012878119956422;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.021529872205663884;  // std dev = 0.604, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.31675638926688343;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.05542266636917136;  // std dev = 0.431, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.22613614932034354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08747099414389806;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.929166
   AUC PR    = 0.432726
   CLL	      = -0.14277
   Precision = 0.484615 at threshold = 0.5
   Recall    = 0.684783
   F1        = 0.567568


Total learning time: 0.844 seconds
Total inference time: 2.279 seconds
AUC ROC: 0.929166


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188648
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.509 seconds
Parameter learned model CLL: -0.188648


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [3.73e-09, 3, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.903, 3, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.987, 5, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.511, 5, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.699, 3, 2], 'false,false,true,false': [0.418, 2, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.632, 2, 2], 'false,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.067, 3, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.086, 0, 3], 'false,true,false': [0.116, 5, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.604, 5, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.431, 3, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2343749999999999], 'false': [0.2343749999999999, nan], 'false,true': [0.24000000000000005, 0.2222222222222222], 'false,true,false': [0.0, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.21055964632807717], 'false': [0.21055964632807717, nan], 'false,true': [0.24000000000000005, 0.1586414472144835], 'false,true,true': [0.0, 4.625929269271485e-18], 'false,true,false': [0.0, 0.0]}, {'': [0.0, 0.14013569407208443], 'false': [0.14013569407208443, nan], 'false,true': [0.16307534517054595, 0.09906674252579036], 'false,true,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.12181533511390615], 'false': [nan, 0.12181533511390617], 'false,false': [0.12181533511390615, nan], 'true': [nan, 0.0]}, {'': [0.0, 0.11775528911107229], 'false': [nan, 0.11775528911107229], 'false,false': [0.11775528911107229, nan], 'false,false,true': [0.0, 0.04345867358763897], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0829506778371092], 'false': [nan, 0.0829506778371092], 'false,false': [0.0829506778371092, nan], 'false,false,true': [0.09776806740733525, 0.058222953054675446], 'true': [nan, 0.0]}, {'': [0.0, 0.0808855085067589], 'false': [0.09135818613133968, 0.0015025730587077586], 'false,true': [0.09970989091342759, 0.0], 'false,false': [nan, 0.0015025730587077586], 'false,false,false': [0.0015025730587077586, nan], 'true': [0.0, nan]}, {'': [0.0, 0.06905790981389529], 'false': [0.06905790981389529, nan], 'false,true': [0.002453467372446505, 0.0026967170888532676], 'false,true,true': [nan, 0.002453467372446505], 'true': [nan, 0.0]}, {'': [0.0, 0.04558711874141755], 'false': [nan, 0.045587118741417555], 'false,false': [0.04558711874141755, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0452503028307284], 'false': [0.0452503028307284, nan], 'false,true': [0.05928580217078907, 0.02185543120706698], 'false,true,true': [0.0, 0.04640380282265723], 'false,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(F, E), interaction(F, A).;true;true
0;false,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, D), interaction(E, A).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(F, E), interaction(F, A).;true;true
2;false,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,true;interaction(F, G).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, E), interaction(E, A).;true;true
9;false,true;interaction(A, D), phenotype(A, F).;true;true
9;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.015375036594832933;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.6090308916485301;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12714114378515878;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then return 0.4625826449902011;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.11368739609887528;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), recursion_proteinclass(D, B) )
%   | then return 0.24006007894293852;  // std dev = 0.418, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.10272521288149856;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then return 0.3027918896958491;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1003197252539739;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return 0.05680641676193876;  // std dev = 0.285, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.33448047324450514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.09575424495334289;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.0976704875920866;  // std dev = 0.327, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.09562200254910386;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then return 0.199050396837432;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08684776916325357;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(E, A) )
%   | then if ( interaction(A, D), phenotype(A, F) )
%   | | then return 0.036231471423643156;  // std dev = 0.159, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.051090669416553755;  // std dev = 0.261, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return -0.07905321418887336;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09064471540310366;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.663895
   AUC PR    = 0.0682
   CLL	      = -0.392223
   Precision = 0.009266 at threshold = 0.5
   Recall    = 0.293478
   F1        = 0.017964


Total learning time: 9.035 seconds
Total inference time: 38.478 seconds
AUC ROC: 0.663895


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.906 seconds
Refined model CLL: -0.120436


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.663895
   AUC PR    = 0.0682
   CLL	      = -0.392223
   Precision = 0.009266 at threshold = 0.5
   Recall    = 0.293478
   F1        = 0.017964


Total learning time: 11.294 seconds
Total inference time: 38.478 seconds
AUC ROC: 0.663895
Total revision time: 11.294
Best scored revision CLL: -0.120436


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:09:50
{'AUC ROC': 0.663895, 'AUC PR': 0.0682, 'CLL': -0.392223, 'Precision': [0.009266, 0.5], 'Recall': 0.293478, 'F1': 0.017964, 'Learning time': 11.294, 'Inference time': 38.478, 'parameter_5': {'AUC ROC': 0.929166, 'AUC PR': 0.432726, 'CLL': -0.14277, 'Precision': [0.484615, 0.5], 'Recall': 0.684783, 'F1': 0.567568, 'Learning time': 0.844, 'Inference time': 2.279}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8195467402759845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.019546740275984503;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48767788391726297;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.20239758862822368;  // std dev = 1.185, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3912569620992536;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.15890668045393727;  // std dev = 1.794, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5823501815927823;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0715171338590049;  // std dev = 1.640, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.08428701228624247;  // std dev = 1.072, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.10982305350330525;  // std dev = 1.332, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.002749542900656143;  // std dev = 0.757, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.15974547454433288;  // std dev = 1.079, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.06579553488365818;  // std dev = 1.042, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28559693207825576;  // std dev = 1.304, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.21420578558793912;  // std dev = 0.179, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.03985598055652323;  // std dev = 1.560, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.0496923632895539;  // std dev = 0.411, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.04529726488688657;  // std dev = 0.819, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.11010831064181711;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.13009394744635505;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.931868
   AUC PR    = 0.43052
   CLL	      = -0.165031
   Precision = 0.468254 at threshold = 0.5
   Recall    = 0.641304
   F1        = 0.541284


Total learning time: 0.956 seconds
Total inference time: 2.255 seconds
AUC ROC: 0.931868


Results scoring model
   AUC ROC   = 0.925
   AUC PR    = 0.916867
   CLL	      = -0.39825
   Precision = 0.818182 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.857143


Total scoring time: 0.505 seconds
Parameter learned model CLL: -0.39825


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [1.309, 4, 3], 'false,true,false,true': [1.195, 2, 5], 'false,true,false,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.894, 4, 1], 'false,true,false,true': [1.195, 2, 5], 'false,true,false,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.185, 4, 3], 'false,true,false,true': [1.195, 2, 5], 'false,true,false,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [1.794, 10, 8], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [1.64, 10, 6], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.072, 4, 3], 'false,false,true,false': [1.332, 6, 5], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.757, 3, 2], 'false,true,false': [1.079, 3, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.042, 4, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.304, 2, 8], 'false,true,false': [0.179, 8, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.56, 10, 8], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.411, 1, 1], 'false,true,true,false': [0.819, 3, 2], 'false,true,false,true': [1.198, 2, 5], 'false,true,false,false': [0.011, 4, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2469135802469136], 'false': [0.2469135802469136, nan], 'false,true': [0.24489795918367335, 0.2479338842975206], 'false,true,false': [0.20408163265306106, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.22782900533620612], 'false': [0.22782900533620612, nan], 'false,true': [0.2448979591836735, 0.21685970318288536], 'false,true,true': [0.0, 0.16000000000000006], 'false,true,false': [0.20408163265306115, 0.0]}, {'': [0.0, 0.1932261646649875], 'false': [0.1932261646649875, nan], 'false,true': [0.20055237010844676, 0.18855121295693847], 'false,true,false': [0.20408163265306115, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.178822284514588], 'false': [nan, 0.17882228451458804], 'false,false': [0.178822284514588, nan], 'true': [nan, 0.0]}, {'': [0.0, 0.17521952308107955], 'false': [nan, 0.17521952308107958], 'false,false': [0.17521952308107955, nan], 'false,false,true': [0.0, 0.16812747428210564], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.16260640902885093], 'false': [nan, 0.16260640902885093], 'false,false': [0.16260640902885093, nan], 'false,false,true': [0.16428639435788495, 0.1612837371332028], 'true': [nan, 0.0]}, {'': [0.0, 0.16070448523545117], 'false': [0.16401350995495242, 0.1551927853036746], 'false,true': [0.11452216416847996, 0.19405278785913427], 'false,false': [nan, 0.1551927853036746], 'false,false,false': [0.1551927853036746, nan], 'true': [0.0, nan]}, {'': [0.0, 0.15796594693107346], 'false': [0.15796594693107346, nan], 'false,true': [0.1701049957039042, 0.0040128267503049195], 'false,true,true': [nan, 0.1701049957039042], 'true': [nan, 0.0]}, {'': [0.0, 0.13528376210323256], 'false': [nan, 0.13528376210323256], 'false,false': [0.13528376210323256, nan], 'true': [0.0, nan]}, {'': [0.0, 0.13467967323221752], 'false': [0.13467967323221752, nan], 'false,true': [0.11985592475859633, 0.14389285257400858], 'false,true,false': [0.2051204334825996, 2.823384446541677e-05], 'false,true,true': [0.08439365100977632, 0.13403531514670458]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(F, E), interaction(F, A).;true;true
0;false,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, D), interaction(E, A).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(F, E), interaction(F, A).;true;true
2;false,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, E), interaction(E, A).;true;true
9;false,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7703870267639547;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.267173375300647;  // std dev = 1.740, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(D, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.6226202850320098;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1871451594576764;  // std dev = 1.677, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return 0.4059683307170334;  // std dev = 0.786, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.0052384557582080965;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2061365223502922;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), recursion_proteinclass(D, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.2188947138080293;  // std dev = 0.607, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.3693338531127164;  // std dev = 0.572, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4747019277600535;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then return -0.1750076202544308;  // std dev = 0.202, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.2752980722399465;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.09558024693374602;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(A, F), interaction(A, G) )
%   | | then return 0.34089079768990826;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.2400253811256744;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0271878800080229;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then return -0.0557120843166927;  // std dev = 0.674, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.2904346941903061;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.042614333015115614;  // std dev = 0.790, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.18215390840832427;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then return -0.04648978317391714;  // std dev = 0.677, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.04621947361867936;  // std dev = 0.507, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.024693944549957148;  // std dev = 0.823, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2501379981436839;  // std dev = 0.685, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.0801578889263634;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return 0.17834842163914688;  // std dev = 0.648, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.11585974791615904;  // std dev = 0.454, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06869841643079809;  // std dev = 1.087, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.07551610793585814;  // std dev = 0.699, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.2174921211108789;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.117821390746494;  // std dev = 0.782, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | then return 0.21958837455782254;  // std dev = 0.578, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.35467045174919576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.683171
   AUC PR    = 0.092567
   CLL	      = -0.42782
   Precision = 0.017799 at threshold = 0.5
   Recall    = 0.413043
   F1        = 0.034127


Total learning time: 37.426 seconds
Total inference time: 59.248 seconds
AUC ROC: 0.683171


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.324706
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 1.421 seconds
Refined model CLL: -0.324706


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.683171
   AUC PR    = 0.092567
   CLL	      = -0.42782
   Precision = 0.017799 at threshold = 0.5
   Recall    = 0.413043
   F1        = 0.034127


Total learning time: 40.308 seconds
Total inference time: 59.248 seconds
AUC ROC: 0.683171
Total revision time: 40.308
Best scored revision CLL: -0.324706


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:11:32
{'AUC ROC': 0.683171, 'AUC PR': 0.092567, 'CLL': -0.42782, 'Precision': [0.017799, 0.5], 'Recall': 0.413043, 'F1': 0.034127, 'Learning time': 40.308, 'Inference time': 59.248, 'parameter_10': {'AUC ROC': 0.931868, 'AUC PR': 0.43052, 'CLL': -0.165031, 'Precision': [0.468254, 0.5], 'Recall': 0.641304, 'F1': 0.541284, 'Learning time': 0.956, 'Inference time': 2.255}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.023937365911308742;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5580193346218546;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1360975141288159;  // std dev = 1.277, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.44194861002444086;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.1509160794101197;  // std dev = 1.986, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6197055551866921;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07972889470813643;  // std dev = 1.819, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.04382738519064146;  // std dev = 1.148, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.12689029835487764;  // std dev = 1.486, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 3.644911565421072E-4;  // std dev = 0.790, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.11120393828303785;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09441901742339784;  // std dev = 1.164, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.0654904804507219;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2984068423602707;  // std dev = 1.384, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return -0.19282589602544653;  // std dev = 0.142, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19910828337487896;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08366249539491133;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.039623910656002265;  // std dev = 1.705, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04588864047980613;  // std dev = 0.174, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.08624258577676736;  // std dev = 0.407, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.002570051158490671;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.14190751758756742;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.1335825835836588;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.1628908856368162;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08081180605999386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.885457
   AUC PR    = 0.136514
   CLL	      = -0.358531
   Precision = 0.02763 at threshold = 0.5
   Recall    = 0.902174
   F1        = 0.053618


Total learning time: 1.045 seconds
Total inference time: 2.504 seconds
AUC ROC: 0.885457


Results scoring model
   AUC ROC   = 0.933333
   AUC PR    = 0.913925
   CLL	      = -0.338603
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.903226


Total scoring time: 0.607 seconds
Parameter learned model CLL: -0.338603


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true': [1.414, 6, 3], 'false,true,false,true': [1.265, 2, 8], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.926, 6, 1], 'false,true,false,true': [1.265, 2, 8], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.277, 6, 3], 'false,true,false,true': [1.265, 2, 8], 'false,true,false,false': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [1.986, 14, 11], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [1.819, 14, 9], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.148, 6, 3], 'false,false,true,false': [1.486, 8, 8], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.79, 4, 2], 'false,true,false': [1.211, 5, 4], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.164, 5, 5], 'false,false,false,false': [0.204, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.384, 2, 11], 'false,true,false': [0.142, 12, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.705, 14, 11], 'false,false,false,true': [0.174, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.407, 1, 1], 'false,true,true,false': [0.908, 5, 2], 'false,true,false,true': [1.266, 2, 8], 'false,true,false,false': [0.002, 6, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.2469135802469131], 'false': [0.24639999999999954, 0.25], 'false,false': [0.0, 0.0], 'false,true': [0.2222222222222221, 0.25], 'false,true,false': [0.15999999999999986, -6.938893903907228e-18], 'true': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.2154626509653723], 'false': [0.2182787899847009, 0.178471628116294], 'false,true': [0.22222222222222238, 0.20948195373304385], 'false,true,true': [0.0, 0.12244897959183673], 'false,true,false': [0.1600000000000001, -2.3129646346357427e-18], 'false,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.17267320681795778], 'false': [0.17753286534362303, 0.11145008534151415], 'false,true': [0.1812182618218645, 0.172002268085395], 'false,true,false': [0.15999999999999998, 0.0], 'false,false': [nan, 0.11145008534151415], 'false,false,false': [0.0, 0.0], 'true': [nan, 3.700743415417188e-17]}, {'': [-3.700743415417188e-17, 0.15102673507496517], 'false': [nan, 0.15102673507496522], 'false,false': [0.15771569794454615, 0.06736877561142735], 'false,false,false': [0.0, 0.0], 'true': [nan, -3.700743415417188e-17]}, {'': [0.0, 0.14551999061137577], 'false': [nan, 0.14551999061137577], 'false,false': [0.15373765750949733, 0.04272553559876201], 'false,false,true': [0.0, 0.143780165957919], 'false,false,false': [0.0, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.1342025686788629], 'false': [nan, 0.13420256867886288], 'false,false': [0.14261126067432014, 0.028960720834012167], 'false,false,true': [0.14644967538772888, 0.13796835128242907], 'false,false,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.12692635109588551], 'false': [0.14231877193680967, 0.10861823580069893], 'false,true': [0.10394004678969203, 0.16299043548583192], 'false,false': [0.0, 0.11655910509015359], 'false,false,false': [0.1355688423702201, 0.02081303514700473], 'true': [0.0, nan]}, {'': [0.0, 0.12898272538964659], 'false': [0.13770038426889136, 0.01998982833151842], 'false,true': [0.14743603212770257, 0.0016724387256421326], 'false,true,true': [nan, 0.14743603212770245], 'false,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [-4.625929269271485e-18, 0.10875199823801512], 'false': [nan, 0.10875199823801512], 'false,false': [0.1162319011296945, 0.015216872425573506], 'false,false,false': [0.015216872425573506, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.10812978460639634], 'false': [0.11558671830864382, 0.014847750485067613], 'false,true': [0.11130694614269918, 0.11788466036872271], 'false,true,false': [0.16015440703254785, 8.351935980750272e-07], 'false,true,true': [0.08300188517148194, 0.11783830796475725], 'false,false': [0.014847750485067613, nan], 'false,false,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(F, A).;true;true
3;false,false;interaction(A, G), interaction(G, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(F, A).;true;true
4;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(F, A).;true;true
5;false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7927941835770488;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.017628000483202736;  // std dev = 0.880, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5580193346218546;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.46479588587413706;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.13968374472894135;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.44194861002444086;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.1914303600863896;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1993668252445012;  // std dev = 1.309, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.1768978784756295;  // std dev = 0.370, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.47405629996044785;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.07046821247949948;  // std dev = 1.325, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.10605446127141788;  // std dev = 1.089, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.17404651932894563;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1411736227360841;  // std dev = 1.248, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.1890933503970627;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06323791895556774;  // std dev = 0.696, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( complex(A, F) )
%   | | then return 0.28076598773018835;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.14590586787916163;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03222230949637431;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.13212943194790772;  // std dev = 1.093, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.0049117107445658574;  // std dev = 0.267, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.19384452266233096;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.40908324555779324;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.13593480516019954;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1629117669697862;  // std dev = 0.152, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.21057303861292365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.0784210437355629;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.3697895375739256;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08164203948179877;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, I), interaction(I, I) )
%   | | | then return -0.16113829260873996;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11079550403294076;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, K), complex(K, L) )
%   | | | then return 0.3203278742225519;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.055751516418285095;  // std dev = 0.816, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.009819022354364071;  // std dev = 0.234, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1485651759277505;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07106314471006474;  // std dev = 0.510, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.1184049292326073;  // std dev = 1.208, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.10733689533371212;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.1791335570939312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.07227639798149842;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.892923
   AUC PR    = 0.09672
   CLL	      = -0.423066
   Precision = 0.028355 at threshold = 0.5
   Recall    = 0.934783
   F1        = 0.05504


Total learning time: 1.992 seconds
Total inference time: 3.505 seconds
AUC ROC: 0.892923


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.98092
   CLL	      = -0.262902
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.583 seconds
Refined model CLL: -0.262902


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.892923
   AUC PR    = 0.09672
   CLL	      = -0.423066
   Precision = 0.028355 at threshold = 0.5
   Recall    = 0.934783
   F1        = 0.05504


Total learning time: 4.227 seconds
Total inference time: 3.505 seconds
AUC ROC: 0.892923
Total revision time: 4.227
Best scored revision CLL: -0.262902


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:11:43
{'AUC ROC': 0.892923, 'AUC PR': 0.09672, 'CLL': -0.423066, 'Precision': [0.028355, 0.5], 'Recall': 0.934783, 'F1': 0.05504, 'Learning time': 4.227, 'Inference time': 3.505, 'parameter_15': {'AUC ROC': 0.885457, 'AUC PR': 0.136514, 'CLL': -0.358531, 'Precision': [0.02763, 0.5], 'Recall': 0.902174, 'F1': 0.053618, 'Learning time': 1.045, 'Inference time': 2.504}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8367385506323292;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.01855673245051102;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6045267906174346;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11960841973477011;  // std dev = 1.550, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4749335700127619;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.15768099990786574;  // std dev = 2.289, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5721073423336086;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08701653305960101;  // std dev = 2.106, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.04052177511053448;  // std dev = 1.452, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.13828266638160644;  // std dev = 1.604, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.052950084780639256;  // std dev = 0.865, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.09493973293850236;  // std dev = 1.378, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.15612518745692427;  // std dev = 1.338, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.0654904804507219;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3135368911145428;  // std dev = 1.496, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else return -0.19621827011130713;  // std dev = 0.163, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19910828337487896;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08366249539491133;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.04413476784696437;  // std dev = 1.935, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04588864047980613;  // std dev = 0.174, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.10333042704188823;  // std dev = 0.422, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.008516472752920544;  // std dev = 1.190, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.14775526487604135;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.13726151387945698;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.1628908856368162;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08081180605999386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.928918
   AUC PR    = 0.271134
   CLL	      = -0.363264
   Precision = 0.027639 at threshold = 0.5
   Recall    = 0.902174
   F1        = 0.053635


Total learning time: 1.073 seconds
Total inference time: 2.452 seconds
AUC ROC: 0.928918


Results scoring model
   AUC ROC   = 0.95375
   AUC PR    = 0.939228
   CLL	      = -0.33097
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.9


Total scoring time: 0.565 seconds
Parameter learned model CLL: -0.33097


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true': [1.664, 9, 4], 'false,true,false,true': [1.309, 2, 12], 'false,true,false,false': [0.0, 8, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.279, 9, 2], 'false,true,false,true': [1.309, 2, 12], 'false,true,false,false': [0.0, 8, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.55, 9, 4], 'false,true,false,true': [1.309, 2, 12], 'false,true,false,false': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [2.289, 19, 16], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.135, 0, 3], 'false,false,true,false': [2.106, 19, 13], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.452, 9, 4], 'false,false,true,false': [1.604, 10, 12], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.865, 6, 2], 'false,true,false': [1.378, 8, 7], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.338, 5, 7], 'false,false,false,false': [0.204, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.496, 2, 16], 'false,true,false': [0.163, 17, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.935, 19, 16], 'false,false,false,true': [0.174, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.422, 1, 1], 'false,true,true,false': [1.19, 8, 3], 'false,true,false,true': [1.302, 2, 12], 'false,true,false,false': [0.009, 8, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24835646457268032], 'false': [0.24816326530612198, 0.25], 'false,false': [0.0, 0.0], 'false,true': [0.21301775147928975, 0.24793388429752036], 'false,true,false': [0.1224489795918365, -6.938893903907228e-18], 'true': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.21255491041579652], 'false': [0.21445312587906404, 0.178471628116294], 'false,true': [0.2130177514792899, 0.20122812789181002], 'false,true,true': [0.0, 0.14876033057851235], 'false,true,false': [0.12244897959183675, 0.0], 'false,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.1692223003819535], 'false': [0.17251471645831054, 0.11145008534151415], 'false,true': [0.18490829599369057, 0.15772497087013324], 'false,true,false': [0.1224489795918368, -1.734723475976807e-18], 'false,false': [nan, 0.11145008534151415], 'false,false,false': [0.0, 0.0], 'true': [nan, 3.700743415417188e-17]}, {'': [-3.700743415417188e-17, 0.1453086915230011], 'false': [nan, 0.14530869152300097], 'false,false': [0.1497623968373388, 0.06736877561142735], 'false,false,false': [0.0, 0.0], 'true': [nan, -3.700743415417188e-17]}, {'': [0.0, 0.14018427844273917], 'false': [nan, 0.140184278442739], 'false,false': [0.14574185023874592, 0.04272553559876201], 'false,false,true': [0.006065631366302522, 0.13866680205157064], 'false,false,false': [0.0, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.13019822472556747], 'false': [nan, 0.1301982247255674], 'false,false': [0.13596764422338015, 0.028960720834012167], 'false,false,true': [0.1621196987203804, 0.11696434335493867], 'false,false,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.1239945367109432], 'false': [0.1200975844166763, 0.12340869186345954], 'false,false': [0.0, 0.13192806894943215], 'false,false,false': [0.1492737198049653, 0.02081303514700473], 'false,true': [0.0935775064301054, 0.1266341831625572], 'true': [0.0, nan]}, {'': [0.0, 0.12371843537503166], 'false': [0.1296421332175931, 0.01998982833151842], 'false,true': [0.12438993919611047, 0.0015659701390016484], 'false,true,true': [nan, 0.12438993919611037], 'false,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [-4.625929269271485e-18, 0.10202242388867826], 'false': [nan, 0.10202242388867826], 'false,false': [0.1069825748411299, 0.015216872425573506], 'false,false,false': [0.015216872425573506, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.10137680530162956], 'false': [0.10632011322414685, 0.014847750485067613], 'false,true': [0.12374635844178147, 0.09585883725785833], 'false,true,true': [0.08919184848038629, 0.12864596801228662], 'false,true,false': [0.12108972496464791, 1.0061115965177142e-05], 'false,false': [0.014847750485067613, nan], 'false,false,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(F, A).;true;true
3;false,false;interaction(A, G), interaction(G, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(F, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(F, A).;true;true
5;false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7974484051691343;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.02132492678866573;  // std dev = 1.218, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6045267906174346;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14735666687172808;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.23015753144663645;  // std dev = 1.317, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4749335700127619;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( enzyme(E, G), enzyme(F, H) )
%   | | | then return -0.14165277717564187;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.17157915521551462;  // std dev = 1.376, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.09937309993175099;  // std dev = 0.492, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26243383341023974;  // std dev = 1.450, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13066876512734923;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.17441162860740408;  // std dev = 1.975, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.02258135057055136;  // std dev = 0.478, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( phenotype(E, G), location(E, H) )
%   | | | then return 0.10765038315756432;  // std dev = 1.317, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.12438450217127184;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.3992302753282788;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09836459827889064;  // std dev = 1.266, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), interaction(H, I) )
%   | | | then return 0.04828397994040786;  // std dev = 1.281, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.23283351664389568;  // std dev = 0.629, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1225747734301299;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.13273152950243094;  // std dev = 1.259, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.017378877283166328;  // std dev = 0.288, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.4220403180185728;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23430146389959663;  // std dev = 1.349, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.12331651384538413;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.20871481188034108;  // std dev = 0.281, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.2126529591733285;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.07752474929202083;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return -0.10862283634782013;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.031081382714475737;  // std dev = 0.362, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.36218164129532865;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02793095211913334;  // std dev = 1.087, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.015807272507931514;  // std dev = 1.011, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05055639139108692;  // std dev = 0.637, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.1244742736193109;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.0966154826603938;  // std dev = 0.859, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.14603548021440224;  // std dev = 1.291, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.12592007690114404;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.17514527724839468;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.07405154849894724;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.895673
   AUC PR    = 0.101883
   CLL	      = -0.437391
   Precision = 0.028486 at threshold = 0.5
   Recall    = 0.934783
   F1        = 0.055288


Total learning time: 3.803 seconds
Total inference time: 3.427 seconds
AUC ROC: 0.895673


Results scoring model
   AUC ROC   = 0.96625
   AUC PR    = 0.960071
   CLL	      = -0.281055
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.613 seconds
Refined model CLL: -0.281055


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.895673
   AUC PR    = 0.101883
   CLL	      = -0.437391
   Precision = 0.028486 at threshold = 0.5
   Recall    = 0.934783
   F1        = 0.055288


Total learning time: 6.054 seconds
Total inference time: 3.427 seconds
AUC ROC: 0.895673
Total revision time: 6.054
Best scored revision CLL: -0.281055


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:11:55
{'AUC ROC': 0.895673, 'AUC PR': 0.101883, 'CLL': -0.437391, 'Precision': [0.028486, 0.5], 'Recall': 0.934783, 'F1': 0.055288, 'Learning time': 6.054, 'Inference time': 3.427, 'parameter_20': {'AUC ROC': 0.928918, 'AUC PR': 0.271134, 'CLL': -0.363264, 'Precision': [0.027639, 0.5], 'Recall': 0.902174, 'F1': 0.053635, 'Learning time': 1.073, 'Inference time': 2.452}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.724815601766179;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.835629401698648;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.023129401698648022;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6122482608191132;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.12540090371052184;  // std dev = 1.888, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48037714466292364;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.1518276857429333;  // std dev = 2.559, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5836137734886595;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07703043727238662;  // std dev = 2.332, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.04633345749708353;  // std dev = 1.765, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.13925990298522398;  // std dev = 1.648, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return -0.05353754109589229;  // std dev = 1.010, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.09430163046631218;  // std dev = 1.374, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1648177590997402;  // std dev = 1.600, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.0654904804507219;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3414522773719278;  // std dev = 1.558, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else return -0.20176635166834747;  // std dev = 0.205, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19910828337487896;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08366249539491133;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.042056621297707285;  // std dev = 2.126, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04588864047980613;  // std dev = 0.174, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -1.8886242028792743E-4;  // std dev = 0.478, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.024970901036665306;  // std dev = 1.439, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.15238532063176405;  // std dev = 1.315, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.13280568760017755;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.14844895782241369;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.08081180605999386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.949683
   AUC PR    = 0.314928
   CLL	      = -0.363331
   Precision = 0.027769 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.053898


Total learning time: 1.252 seconds
Total inference time: 2.525 seconds
AUC ROC: 0.949683


Results scoring model
   AUC ROC   = 0.9608
   AUC PR    = 0.948056
   CLL	      = -0.324819
   Precision = 0.916667 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.897959


Total scoring time: 0.617 seconds
Parameter learned model CLL: -0.324819


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 2], 'false,true,true': [2.026, 13, 6], 'false,true,false,true': [1.317, 2, 13], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [1.561, 13, 3], 'false,true,false,true': [1.317, 2, 13], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [1.888, 13, 6], 'false,true,false,true': [1.317, 2, 13], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [2.559, 24, 19], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.145, 0, 4], 'false,false,true,false': [2.332, 24, 15], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.765, 13, 6], 'false,false,true,false': [1.648, 11, 13], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [1.01, 9, 3], 'false,true,false': [1.374, 8, 7], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [1.6, 7, 9], 'false,false,false,false': [0.204, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.558, 2, 19], 'false,true,false': [0.205, 22, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.126, 24, 19], 'false,false,false,true': [0.174, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 4], 'false,true,true,true': [0.478, 2, 1], 'false,true,true,false': [1.439, 11, 5], 'false,true,false,true': [1.315, 2, 13], 'false,true,false,false': [0.02, 9, 0], 'false,false,true,true': [0.02, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2481096408317576], 'false': [0.24661979448350413, 0.22222222222222224], 'false,true': [0.21606648199445994, 0.24826388888888853], 'false,true,false': [0.11555555555555533, -9.25185853854297e-18], 'false,false': [0.0, 0.0], 'true': [0.0, 0.0], 'false,false,true': [0.0, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.21369403694728206], 'false': [0.21533629107535282, 0.1586414472144835], 'false,true': [0.21606648199445963, 0.19976694419434593], 'false,true,true': [0.0, 0.15234375000000008], 'false,true,false': [0.11555555555555573, 0.0], 'false,false': [0.0, 0.178471628116294], 'false,false,false': [0.0, 0.0], 'false,false,true': [0.0, nan]}, {'': [0.0, 0.1697379187336148], 'false': [0.1735090957064204, 0.09906674252579038], 'false,true': [0.18762054337766446, 0.15455478754317922], 'false,true,false': [0.11555555555555544, -1.5419764230904951e-18], 'false,false': [0.0, 0.11145008534151415], 'false,false,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,false,true': [0.0, nan]}, {'': [0.0, 0.14681763596873038], 'false': [0.0, 0.14854885272453314], 'false,false': [0.15232299966713045, 0.06736877561142735], 'false,false,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.14161719643025572], 'false': [0.0, 0.14392050082334823], 'false,false': [0.14862266986082198, 0.04272553559876201], 'false,false,true': [0.005277746115193105, 0.1394524643421903], 'false,false,false': [0.0, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.13055368352198843], 'false': [0.0, 0.13291520075009944], 'false,false': [0.13774254222611082, 0.028960720834012167], 'false,false,true': [0.16394412691036053, 0.11318401261890575], 'false,false,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.12498694850251908], 'false': [0.11307633415183473, 0.13124036040886433], 'false,false': [0.0, 0.1455092878271817], 'false,false,false': [0.1600001073806683, 0.02081303514700473], 'false,true': [0.0849738929385393, 0.12584432238993826], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.0, 0.12373836131018077], 'false': [0.13114524321345933, 0.016493231615129136], 'false,true': [0.11555158711117068, 0.0019180954246131058], 'false,true,true': [nan, 0.11555158711117071], 'false,false': [0.0001211296766508857, 0.0], 'false,false,true': [0.0, 0.0], 'true': [0.0, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.09918478838639307], 'false': [0.0, 0.10112337325857988], 'false,false': [0.1051183718214033, 0.015216872425573506], 'false,false,false': [0.015216872425573506, nan], 'true': [0.0, 0.0], 'false,true': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [0.0, 0.09850888531639092], 'false': [0.10446583486042935, 0.01181915682065206], 'false,true': [0.12103177025587518, 0.0910871984092928], 'false,true,true': [0.0761791263023376, 0.12934169146602506], 'false,true,false': [0.11521273636101056, 4.4274004543601616e-05], 'false,false': [0.01181915682065206, nan], 'false,false,true': [0.00020856927899641498, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,false;interaction(A, K), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false,false;interaction(A, J), interaction(J, K).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,false;interaction(A, J), interaction(J, K).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
5;false,false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(G, A), interaction(A, H).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.724815601766179;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.808741135785635;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.026114789096955235;  // std dev = 1.541, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6122482608191132;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.011576172530592576;  // std dev = 1.042, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.3060004840886747;  // std dev = 1.351, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.48037714466292364;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.17780972692025396;  // std dev = 2.007, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.10766999408702456;  // std dev = 1.472, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.035283336884143666;  // std dev = 0.778, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.17073876226101656;  // std dev = 2.263, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.02988981434585277;  // std dev = 0.783, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.13687275983837124;  // std dev = 2.235, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( complex(H, J) )
%   | | | then return -0.1686227664906313;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.03311745945364143;  // std dev = 0.476, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.025914833110865614;  // std dev = 0.747, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1931313582152584;  // std dev = 1.315, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.17874053805972917;  // std dev = 1.507, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return -0.08932186744414188;  // std dev = 0.392, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.3698043651645839;  // std dev = 1.152, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.24434682745613576;  // std dev = 0.969, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.16770311906774663;  // std dev = 0.213, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.26810053541948525;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22494734951305173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.072533624117232;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13179096804614057;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.1427752809129552;  // std dev = 0.860, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.029478913338920346;  // std dev = 1.819, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.07843023716234791;  // std dev = 0.746, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.08235725684537751;  // std dev = 1.084, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.15302360574922375;  // std dev = 1.345, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.12820286403744086;  // std dev = 0.081, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.15066031388850848;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.06969000075054672;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.897268
   AUC PR    = 0.129364
   CLL	      = -0.412719
   Precision = 0.028155 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.054645


Total learning time: 1.865 seconds
Total inference time: 3.583 seconds
AUC ROC: 0.897268


Results scoring model
   AUC ROC   = 0.952
   AUC PR    = 0.931906
   CLL	      = -0.304211
   Precision = 0.923077 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.941176


Total scoring time: 0.637 seconds
Refined model CLL: -0.304211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.897268
   AUC PR    = 0.129364
   CLL	      = -0.412719
   Precision = 0.028155 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.054645


Total learning time: 4.371 seconds
Total inference time: 3.583 seconds
AUC ROC: 0.897268
Total revision time: 4.371
Best scored revision CLL: -0.304211


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:12:06
{'AUC ROC': 0.897268, 'AUC PR': 0.129364, 'CLL': -0.412719, 'Precision': [0.028155, 0.5], 'Recall': 0.923913, 'F1': 0.054645, 'Learning time': 4.371, 'Inference time': 3.583, 'parameter_25': {'AUC ROC': 0.949683, 'AUC PR': 0.314928, 'CLL': -0.363331, 'Precision': [0.027769, 0.5], 'Recall': 0.913043, 'F1': 0.053898, 'Learning time': 1.252, 'Inference time': 2.525}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1555325621642444;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.07286921623350553;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then return 0.14432214306942004;  // std dev = 0.942, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6525330570457104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05326943000058533;  // std dev = 0.724, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return -0.0048200348646699614;  // std dev = 0.576, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17378747736910927;  // std dev = 0.538, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return 0.06890301246131911;  // std dev = 0.640, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.09499635979437145;  // std dev = 0.334, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0801478723772066;  // std dev = 0.355, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2474340351167792;  // std dev = 0.499, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.16621212332790014;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then return 0.045202427020698016;  // std dev = 0.704, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.19560217553797565;  // std dev = 0.046, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.12075380724684376;  // std dev = 0.404, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2238690647731198;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1361983234655822;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.892054
   AUC PR    = 0.222752
   CLL	      = -0.174704
   Precision = 0.247126 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.330769


Total learning time: 0.857 seconds
Total inference time: 2.757 seconds
AUC ROC: 0.892054


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.504 seconds
Parameter learned model CLL: -0.213748


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 3, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.724, 3, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, A), interaction(D, E)', 'false,true,false': 'interaction(F, A), interaction(F, D)', 'false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [0.942, 5, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.724, 5, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(E, F), interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.576, 3, 1], 'false,false,true,false': [0.538, 2, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.64, 3, 2], 'false,true,false': [0.334, 1, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.355, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.499, 1, 4], 'false,true,false': [0.03, 4, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [0.704, 5, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.046, 2, 0], 'false,true,true,false': [0.404, 1, 1], 'false,true,false,true': [0.104, 0, 4], 'false,true,false,false': [0.002, 2, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999983], 'false': [0.24999999999999983, nan], 'false,true': [0.18750000000000003, 0.22222222222222213], 'false,true,false': [0.0, 0.0]}, {'': [nan, 0.1984810215844281], 'false': [0.1984810215844281, nan], 'false,true': [0.18749999999999997, 0.1586414472144836], 'false,true,true': [0.0, -4.625929269271485e-18], 'false,true,false': [0.0, 0.0]}, {'': [nan, 0.1280981758940138], 'false': [0.1280981758940138, nan], 'false,true': [0.1311052034641356, 0.09906674252579038], 'false,true,false': [0.0, 0.0]}, {'': [nan, 0.09549015183089826], 'false': [0.0, 0.09863681235257565], 'false,false': [0.09863681235257564, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [nan, 0.08798290175806385], 'false': [0.0, 0.09372440340019703], 'false,false': [0.09372440340019704, nan], 'false,false,true': [0.0, 0.06553807663641292]}, {'': [nan, 0.07163348155624241], 'false': [0.0, 0.07700819041126922], 'false,false': [0.07700819041126922, nan], 'false,false,true': [0.08307855165099343, 0.05797383767445001]}, {'': [0.0, 0.07192371786731348], 'false': [0.07451335539122421, 0.06284881670889364], 'false,true': [0.08187442060505862, 0.055624361803035836], 'false,false': [nan, 0.06284881670889364], 'false,false,false': [0.06284881670889364, nan], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}, {'': [nan, 0.06421896201360099], 'false': [0.06421896201360099, nan], 'false,true': [0.04226069163602033, 0.00023099521525888483], 'false,true,true': [0.0, 0.04988826843597651]}, {'': [nan, 0.05054973297975496], 'false': [0.0, 0.055009854037783204], 'false,false': [0.055009854037783204, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [nan, 0.04968483966353933], 'false': [0.04968483966353933, nan], 'false,true': [0.06632548759045241, 0.03060810036861758], 'false,true,true': [0.0010431919873928747, 0.08156722927163747], 'false,true,false': [0.0026947979594655613, 2.355804894840774e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(E, D), interaction(E, A).;true;true
0;false;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(E, D), interaction(E, A).;true;true
1;true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(E, D), interaction(E, A).;true;true
2;false;interaction(D, F), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(D, E), recursion_proteinclass(E, B).;true;true
7;true;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(D, E), interaction(E, A).;true;true
9;true;interaction(A, D), phenotype(A, F).;true;true
9;false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, D), interaction(C, A) )
%   then if ( complex(A, E) )
%   | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, D), interaction(C, A) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7816289395752953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.1764787282510645;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.46924177232878206;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, D), interaction(C, A) )
%   then if ( enzyme(A, E) )
%   | then return 0.0871290432028365;  // std dev = 1.054, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.48774379777861193;  // std dev = 0.726, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5788852301534569;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then return -0.040071289220641564;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.40074829128075234;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4351949828674454;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, E), recursion_proteinclass(D, B) )
%   | then return 0.36785285967338144;  // std dev = 0.680, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.08011211409849485;  // std dev = 0.754, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33272600950636744;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then return -0.05494247623121699;  // std dev = 0.745, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.27424677282625887;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.26335417887157275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then return -0.045108754493048374;  // std dev = 0.747, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.21107738392011416;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, D), recursion_proteinclass(D, B) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.21552097925626257;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.29094923253609106;  // std dev = 0.662, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.24715588791261014;  // std dev = 0.230, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18131217844544256;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.08843746325937518;  // std dev = 0.341, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.1342530816057414;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, D), interaction(D, A) )
%   then if ( interaction(A, C), phenotype(A, E) )
%   | then return -0.16491306684659335;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, F) )
%   | | then return 3.609682887852905E-4;  // std dev = 0.661, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2887705007701089;  // std dev = 0.285, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.74888
   AUC PR    = 0.069321
   CLL	      = -0.649741
   Precision = 0.015279 at threshold = 0.5
   Recall    = 0.674419
   F1        = 0.029882


Total learning time: 17.253 seconds
Total inference time: 45.362 seconds
AUC ROC: 0.74888


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.29552
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.867 seconds
Refined model CLL: -0.29552


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.892054
   AUC PR    = 0.222752
   CLL	      = -0.174704
   Precision = 0.247126 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.330769


Total learning time: 19.481 seconds
Total inference time: 2.757 seconds
AUC ROC: 0.892054
Total revision time: 19.481
Best scored revision CLL: -0.213748


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:13:15
{'AUC ROC': 0.892054, 'AUC PR': 0.222752, 'CLL': -0.174704, 'Precision': [0.247126, 0.5], 'Recall': 0.5, 'F1': 0.330769, 'Learning time': 19.481, 'Inference time': 2.757, 'parameter_5': {'AUC ROC': 0.892054, 'AUC PR': 0.222752, 'CLL': -0.174704, 'Precision': [0.247126, 0.5], 'Recall': 0.5, 'F1': 0.330769, 'Learning time': 0.857, 'Inference time': 2.757}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03320549123154841;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.13789447933011537;  // std dev = 1.076, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then return 0.14388585160993983;  // std dev = 1.401, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.620938106273597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08992050912266283;  // std dev = 1.274, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.052337418083463184;  // std dev = 1.004, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11848261728475142;  // std dev = 0.843, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return -0.011509632272496786;  // std dev = 0.715, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.1772037615124674;  // std dev = 0.387, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10783447904056996;  // std dev = 0.972, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.31390999826786614;  // std dev = 0.713, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.1825378882106325;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then return 0.04612538866839763;  // std dev = 1.122, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.2618691471157211;  // std dev = 0.067, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.14650987725644612;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21313662045429216;  // std dev = 0.132, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1343418614102498;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.881746
   AUC PR    = 0.218443
   CLL	      = -0.198646
   Precision = 0.248588 at threshold = 0.5
   Recall    = 0.511628
   F1        = 0.334601


Total learning time: 0.937 seconds
Total inference time: 2.5 seconds
AUC ROC: 0.881746


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.241739
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.536 seconds
Parameter learned model CLL: -0.241739


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 8], 'false,true,false,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.894, 4, 1], 'false,true,false,true': [2.98e-08, 0, 8], 'false,true,false,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.076, 4, 2], 'false,true,false,true': [0.0, 0, 8], 'false,true,false,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, A), interaction(D, E)', 'false,true,false': 'interaction(F, A), interaction(F, D)', 'false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.401, 10, 8], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.274, 10, 7], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(E, F), interaction(F, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 2], 'false,false,true,true': [1.004, 4, 2], 'false,false,true,false': [0.843, 6, 6], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.715, 4, 2], 'false,true,false': [0.387, 1, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.972, 5, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.713, 1, 8], 'false,true,false': [0.136, 9, 0], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true': [1.122, 10, 8], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.067, 2, 0], 'false,true,true,false': [0.771, 2, 2], 'false,true,false,true': [0.132, 0, 8], 'false,true,false,false': [0.016, 6, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [nan, 0.25], 'false': [0.25, nan], 'false,true': [0.22222222222222224, 0.24489795918367346], 'false,true,false': [-2.220446049250313e-16, -6.938893903907228e-18]}, {'': [nan, 0.19669433799312225], 'false': [0.19669433799312225, nan], 'false,true': [0.2222222222222222, 0.17482934999147154], 'false,true,true': [0.0, 0.15999999999999998], 'false,true,false': [1.1102230246251565e-16, -2.3129646346357427e-18]}, {'': [nan, 0.13798221086269988], 'false': [0.13798221086269988, nan], 'false,true': [0.19312579027086207, 0.10917559380393224], 'false,true,false': [-1.1102230246251565e-16, 0.0]}, {'': [nan, 0.10491059580960896], 'false': [0.0, 0.10908011507538709], 'false,false': [0.10908011507538712, nan], 'false,true': [nan, 0.0], 'false,true,false': [0.0, 0.0]}, {'': [nan, 0.09815440295877371], 'false': [0.0, 0.10500866681225031], 'false,false': [0.10500866681225034, nan], 'false,false,true': [0.0, 0.09552010896386251]}, {'': [nan, 0.08909251967918932], 'false': [0.0, 0.09647191247375517], 'false,false': [0.09647191247375517, nan], 'false,false,true': [0.16792025123128387, 0.059289347302531444]}, {'': [0.0, 0.09389341285983015], 'false': [0.08131452430989478, 0.10487958454893476], 'false,false': [nan, 0.10487958454893476], 'false,false,false': [0.10487958454893476, nan], 'false,true': [0.0851745815894565, 0.0498525797548788], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [nan, 0.08289003291548605], 'false': [0.08289003291548605, nan], 'false,true': [0.048953590917673394, 0.002058457838300387], 'false,true,true': [0.0, 0.05642890596347562]}, {'': [nan, 0.063993750145826], 'false': [0.0, 0.06996741702643676], 'false,false': [0.06996741702643677, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [nan, 0.0632624740324432], 'false': [0.0632624740324432, nan], 'false,true': [0.13689266762474148, 0.030837255462189597], 'false,true,true': [0.0022627913398781674, 0.14861646325145214], 'false,true,false': [0.002188515763880204, 4.054914057154598e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(E, D), interaction(E, A).;true;true
0;false;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(E, D), interaction(E, A).;true;true
1;true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(E, D), interaction(E, A).;true;true
2;false;interaction(D, F), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
3;true;interaction(F, A), interaction(F, D).;true;true
4;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
7;;proteinclass(A, B) :- interaction(D, E), recursion_proteinclass(E, B).;true;true
7;true;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(D, E), interaction(E, A).;true;true
9;true;interaction(A, D), phenotype(A, F).;true;true
9;false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, D), interaction(C, A) )
%   then if ( enzyme(A, E), complex(A, F) )
%   | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, D), interaction(C, A) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7816289395752953;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then return 6.61021459012238E-4;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.795891501510272;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23803219224897754;  // std dev = 1.365, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, D), interaction(C, A) )
%   then if ( enzyme(A, E), complex(A, F) )
%   | then return 0.043917503900833134;  // std dev = 0.770, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then return 0.07506214746021063;  // std dev = 0.565, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.6690339208972281;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25363702239975855;  // std dev = 1.459, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5596935490674544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.6206534108210198;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.29820056257077676;  // std dev = 0.860, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5567703547670259;  // std dev = 0.167, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18607960009817134;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07104574305641868;  // std dev = 0.965, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4443458980323682;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, E), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.4403700145715345;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20181219182374235;  // std dev = 0.931, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then return -0.18497864520881052;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.03722381654811476;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3391858119664389;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.21728315987404795;  // std dev = 0.764, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.34508326996163985;  // std dev = 0.155, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15606833104679177;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07499855033449275;  // std dev = 0.951, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.24912080831239614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2866188470640981;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, F), enzyme(A, G) )
%   | then return -0.034145891004072455;  // std dev = 0.480, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.2700735834595278;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.15225936429503464;  // std dev = 0.303, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.061672480515902794;  // std dev = 0.949, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, D), recursion_proteinclass(D, B) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.2186096197870676;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.37251832179983974;  // std dev = 0.233, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.31106982606273664;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04575218745060554;  // std dev = 0.464, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( complex(A, I) )
%   | then return -0.1640355847101201;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.21042058097770378;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18359329723917778;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then return -0.122353263730066;  // std dev = 0.439, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.22159895902325227;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1274373775868458;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.07458141207497221;  // std dev = 0.956, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, D), interaction(D, A) )
%   then if ( interaction(A, C), phenotype(A, E) )
%   | then return -0.13026965566275728;  // std dev = 0.337, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( complex(A, F) )
%   | | then return 0.33592819417959235;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.12417244434254943;  // std dev = 0.263, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06604777676317078;  // std dev = 0.457, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | then return 0.006402666336168011;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.830493
   AUC PR    = 0.199157
   CLL	      = -0.314815
   Precision = 0.042502 at threshold = 0.5
   Recall    = 0.616279
   F1        = 0.07952


Total learning time: 54.984 seconds
Total inference time: 74.244 seconds
AUC ROC: 0.830493


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.256728
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 1.54 seconds
Refined model CLL: -0.256728


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.881746
   AUC PR    = 0.218443
   CLL	      = -0.198646
   Precision = 0.248588 at threshold = 0.5
   Recall    = 0.511628
   F1        = 0.334601


Total learning time: 57.997 seconds
Total inference time: 2.5 seconds
AUC ROC: 0.881746
Total revision time: 57.997
Best scored revision CLL: -0.241739


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:15:30
{'AUC ROC': 0.881746, 'AUC PR': 0.218443, 'CLL': -0.198646, 'Precision': [0.248588, 0.5], 'Recall': 0.511628, 'F1': 0.334601, 'Learning time': 57.997, 'Inference time': 2.5, 'parameter_10': {'AUC ROC': 0.881746, 'AUC PR': 0.218443, 'CLL': -0.198646, 'Precision': [0.248588, 0.5], 'Recall': 0.511628, 'F1': 0.334601, 'Learning time': 0.937, 'Inference time': 2.5}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5063853964015644;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1602812702651022;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.18432648501714544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.8156735149828546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3142870391434106;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.102705653327171;  // std dev = 1.103, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6618685162759873;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1793108226645413;  // std dev = 1.512, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.25538906855760934;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5024408753838709;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.14108254640329457;  // std dev = 1.306, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14714100525574403;  // std dev = 1.508, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.20519805972940375;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.37926306819042155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.37884006204326676;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.045599580878559906;  // std dev = 0.851, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11854526313307515;  // std dev = 1.505, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.1608259058244932;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.29485071298023346;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.024674456314845723;  // std dev = 1.026, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1616964369514049;  // std dev = 0.645, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return -0.22677092128052928;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.16427750886428388;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2374355018045392;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.05924116596139052;  // std dev = 1.085, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.11230085686376842;  // std dev = 0.509, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return 0.33595619298231616;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07407351947939961;  // std dev = 1.634, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.20010669929237201;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.18442260271970862;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.404871568921409;  // std dev = 0.356, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.2007705718788104;  // std dev = 0.212, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06864946940657846;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06655271964632092;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.16089153406961115;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1647764209972955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18650586227885657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03905447681401025;  // std dev = 0.987, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.042113374941490006;  // std dev = 1.631, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1413422668386586;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.21378516657950988;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2749367019736328;  // std dev = 0.551, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2180560415345657;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12833191066752198;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.512330521049193;  // std dev = 0.389, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.3606951849874731;  // std dev = 0.241, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.970863
   AUC PR    = 0.257826
   CLL	      = -0.237597
   Precision = 0.301136 at threshold = 0.5
   Recall    = 0.616279
   F1        = 0.40458


Total learning time: 1.002 seconds
Total inference time: 2.834 seconds
AUC ROC: 0.970863


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.310287
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.555 seconds
Parameter learned model CLL: -0.310287


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.195, 5, 2], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.651, 6, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [0.0, 4, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.581, 5, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.103, 5, 2], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.512, 6, 4], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.306, 8, 6], 'false,false,false,true': [1.508, 6, 4], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.816, 1, 2], 'false,false,true,false': [0.851, 7, 4], 'false,false,false,true': [1.505, 6, 4], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.026, 5, 2], 'false,false,true,false': [0.645, 3, 4], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [1.582, 5, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), interaction(H, A)', 'false,true': 'interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [1.085, 6, 4], 'false,true,false': [0.509, 2, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.634, 7, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.01, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.356, 0, 6], 'false,true,false': [0.212, 8, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.478, 6, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.013, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [0.987, 8, 6], 'false,false,false,true': [1.631, 7, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.012, 0, 3], 'false,true,true,true': [0.161, 4, 0], 'false,true,true,false': [0.551, 1, 2], 'false,true,false,true': [0.035, 0, 4], 'false,true,false,false': [0.005, 3, 0], 'false,false,true,true': [0.389, 0, 6], 'false,false,true,false': [0.241, 7, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24691358024691362], 'false': [0.24489795918367352, 0.24852071005917165], 'false,false': [0.24793388429752045, 0.25], 'false,false,false': [nan, 0.25], 'false,false,true': [nan, 0.24793388429752045], 'false,true': [0.20408163265306126, 0.2448979591836735], 'false,true,false': [0.0, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.22513235625418526], 'false': [0.20290368110066298, 0.24844492612423014], 'false,false': [0.0, 0.24805561818395405], 'false,false,false': [0.0, 0.25000768926101335], 'false,true': [0.20408163265306117, 0.17482934999147165], 'false,true,true': [0.2222222222222223, 0.0], 'false,true,false': [0.0, 0.0], 'false,false,true': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.18842015146341531], 'false': [0.14836509008515902, 0.230634117608919], 'false,false': [0.0, 0.23287014112564142], 'false,false,false': [0.2284795194344087, 0.25000000000000006], 'false,true': [0.17369162887546685, 0.10917559380393224], 'false,true,false': [0.0, 2.3129646346357427e-18], 'true': [nan, 3.700743415417188e-17], 'false,false,true': [nan, 0.0]}, {'': [-3.700743415417188e-17, 0.17064880417120265], 'false': [0.0, 0.17256836372637072], 'false,false': [0.12186640604525126, 0.2315873360660199], 'false,false,false': [0.2273430330168643, 0.25], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.1660870316647154], 'false': [0.0, 0.17000405706170932], 'false,false': [0.11801819243608669, 0.23061455790949895], 'false,false,false': [0.22643952736699885, 0.25], 'false,false,true': [0.22222222222222224, 0.06580265052384703], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0, 0.16041144518895425], 'false': [0.0, 0.16511538232594958], 'false,false': [0.10955955701332386, 0.229911657776363], 'false,false,false': [0.0, 0.2504075102118484], 'false,false,true': [0.15023923514299567, 0.05949236729486924], 'true': [nan, 0.0]}, {'': [0.0001915149618457873, 0.14937921428412185], 'false': [0.09640582557593613, 0.21034219515871858], 'false,false': [nan, 0.21034219515871858], 'false,false,false': [0.0, 0.22259513183109625], 'false,true': [0.1177808604521666, 0.0517788686243714], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [9.044585057550736e-05, 0.1523471496203705], 'false': [0.10211252658505507, 0.20639881738398744], 'false,false': [0.19847065327261282, 0.25], 'false,false,false': [nan, 0.25], 'false,false,true': [nan, 0.19847065327261282], 'false,true': [0.021161874349645282, 0.005624486027438383], 'false,true,true': [nan, 0.021161874349645244], 'true': [0.0, 5.367181409638572e-05]}, {'': [5.847999003216753e-05, 0.13533638520557775], 'false': [0.0, 0.139751721132068], 'false,false': [0.06953276441494259, 0.2216687989940261], 'false,false,false': [0.2216687989940261, nan], 'true': [8.268920290128642e-05, 0.0], 'false,true': [nan, 0.0], 'true,false': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [4.5999929537611506e-05, 0.13472200150158728], 'false': [0.0689214118078616, 0.20553634659001083], 'false,false': [0.20553634659001083, nan], 'false,false,true': [0.025236713908791675, 0.008306327318589728], 'false,true': [0.10554479280999789, 0.029564690878971765], 'false,true,true': [0.006480510833637508, 0.10114532222491161], 'false,true,false': [0.00031028434854060705, 7.930006733815794e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,false;interaction(K, A), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(A, F).;true;true
5;false,false,false;phenotype(A, H), interaction(I, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(E, C).;true;true
6;false;interaction(A, G), interaction(H, A).;true;true
6;false,false;interaction(A, J).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(A, I) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4792710802073998;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1486762440024697;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then return -0.1490779674864458;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2964062059891747;  // std dev = 1.426, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.1505429934083132;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.42272610429179797;  // std dev = 0.652, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7000180106933265;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.38368179695827087;  // std dev = 0.944, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.018027597910134644;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.5367748759862898;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, F), interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3702337228453775;  // std dev = 0.698, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1509892004550639;  // std dev = 0.150, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.352764985282558;  // std dev = 0.819, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.08263344238987709;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4038595175094104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, F), interaction(G, A) )
%   | | then if ( interaction(G, G) )
%   | | | then return -0.15789458946523763;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06632705014569899;  // std dev = 0.931, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.27659437289200334;  // std dev = 0.771, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.06796845376528825;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.31146723087582484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.0014954981172789331;  // std dev = 0.845, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.369411441319799;  // std dev = 0.228, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return -0.14449498407029132;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.1324971997152754;  // std dev = 1.123, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.24885356132503023;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( enzyme(A, H) )
%   | | then return -0.0038927635805599326;  // std dev = 0.511, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.0022289300648950816;  // std dev = 0.468, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.27795530008406494;  // std dev = 0.521, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, J) )
%   | | then return 0.20886845841137225;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.18234878829880097;  // std dev = 0.681, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.048401285645432;  // std dev = 0.840, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.20938848850274006;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1722360832475796;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( enzyme(E, G), complex(E, H) )
%   | | then return 0.05278230934626075;  // std dev = 0.422, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.025361723977783156;  // std dev = 0.426, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.20073542567903166;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then return -0.053572366154132876;  // std dev = 0.463, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1538713311614649;  // std dev = 0.302, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.1650997808570367;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.14472621594248947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.18131539245500716;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.27085844815201854;  // std dev = 0.156, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18813157551119614;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.10595376935175174;  // std dev = 0.955, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.24239315384220794;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.138305376059772;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.14715133924095675;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.20340753734448538;  // std dev = 0.459, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.21131618477052797;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12276923014143704;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.09940777642358456;  // std dev = 0.522, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.01580526412562213;  // std dev = 0.304, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.831351
   AUC PR    = 0.156284
   CLL	      = -0.317061
   Precision = 0.036723 at threshold = 0.5
   Recall    = 0.604651
   F1        = 0.069241


Total learning time: 2.044 seconds
Total inference time: 2.369 seconds
AUC ROC: 0.831351


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.233595
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.578 seconds
Refined model CLL: -0.233595


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.831351
   AUC PR    = 0.156284
   CLL	      = -0.317061
   Precision = 0.036723 at threshold = 0.5
   Recall    = 0.604651
   F1        = 0.069241


Total learning time: 4.179 seconds
Total inference time: 2.369 seconds
AUC ROC: 0.831351
Total revision time: 4.179
Best scored revision CLL: -0.233595


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:15:40
{'AUC ROC': 0.831351, 'AUC PR': 0.156284, 'CLL': -0.317061, 'Precision': [0.036723, 0.5], 'Recall': 0.604651, 'F1': 0.069241, 'Learning time': 4.179, 'Inference time': 2.369, 'parameter_15': {'AUC ROC': 0.970863, 'AUC PR': 0.257826, 'CLL': -0.237597, 'Precision': [0.301136, 0.5], 'Recall': 0.616279, 'F1': 0.40458, 'Learning time': 1.002, 'Inference time': 2.834}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.587786654782979;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.16221334521702105;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8195467402759844;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.18045325972401555;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.8195467402759844;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3173856193779145;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.11180762928743213;  // std dev = 1.308, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6667968129566362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1683079194387475;  // std dev = 1.657, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.2548160710040044;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5067336136464742;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.1227230272933337;  // std dev = 1.498, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.138872335563457;  // std dev = 1.649, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.2046727348915076;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.38229993658267336;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4441373599628857;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.004634617216336004;  // std dev = 0.912, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11266270496248798;  // std dev = 1.642, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.16037743385592387;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.29690131101730877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.03333805051745858;  // std dev = 1.178, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.13653943175470296;  // std dev = 0.708, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return -0.061264143492996116;  // std dev = 0.704, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17257063258980282;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23884925998463313;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.058312971472247864;  // std dev = 1.231, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.08090416051689932;  // std dev = 0.567, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.35505648259605993;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0723935748338596;  // std dev = 1.766, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18481610222335734;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18361824806234095;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4293164864045111;  // std dev = 0.328, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.19063890875570905;  // std dev = 0.263, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06566920738077915;  // std dev = 1.621, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06454656419624227;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15864491689777035;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15763511580011888;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18792996104703585;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.029867123918326372;  // std dev = 1.100, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04218443482305322;  // std dev = 1.760, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13821641513608082;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.2087573652507481;  // std dev = 0.203, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.20781739988803474;  // std dev = 0.680, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.23221604300971035;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1184877261378865;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.42689341464294905;  // std dev = 0.816, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.34545044083551135;  // std dev = 0.239, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977659
   AUC PR    = 0.298141
   CLL	      = -0.236109
   Precision = 0.349515 at threshold = 0.5
   Recall    = 0.837209
   F1        = 0.493151


Total learning time: 1.079 seconds
Total inference time: 2.816 seconds
AUC ROC: 0.977659


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.302745
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.607 seconds
Parameter learned model CLL: -0.302745


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [1.449, 7, 3], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.852, 8, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [2.11e-08, 0, 6], 'false,true,true,true': [0.866, 1, 3], 'false,true,true,false': [5.27e-09, 6, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 4, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.581, 5, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 5], 'false,true,true': [1.308, 7, 3], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.657, 8, 5], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.498, 11, 7], 'false,false,false,true': [1.649, 8, 5], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.866, 1, 3], 'false,false,true,false': [0.912, 10, 4], 'false,false,false,true': [1.642, 8, 5], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I), interaction(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.178, 7, 3], 'false,false,true,false': [0.708, 4, 4], 'false,false,false,true': [0.704, 4, 1], 'false,false,false,false': [1.583, 5, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), interaction(H, A)', 'false,true': 'interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [1.231, 8, 5], 'false,true,false': [0.567, 3, 3], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.766, 9, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.019, 0, 3], 'true,false': [0.016, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.328, 0, 7], 'false,true,false': [0.263, 11, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.621, 8, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.017, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.014, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.1, 11, 7], 'false,false,false,true': [1.76, 9, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.02, 0, 6], 'false,true,true,true': [0.203, 5, 0], 'false,true,true,false': [0.68, 2, 3], 'false,true,false,true': [0.042, 0, 4], 'false,true,false,false': [0.002, 4, 0], 'false,false,true,true': [0.816, 1, 7], 'false,false,true,false': [0.239, 8, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.24221453287197234], 'false': [0.23765432098765438, 0.24609375000000003], 'false,false': [0.24489795918367352, 0.25], 'false,false,false': [nan, 0.25], 'false,false,true': [nan, 0.24489795918367352], 'false,true': [0.20999999999999988, 0.25], 'false,true,false': [0.0, 0.0], 'true': [1.4802973661668753e-16, 1.4802973661668753e-16]}, {'': [7.401486830834377e-17, 0.22336124755979347], 'false': [0.20224750648537293, 0.24593768317388204], 'false,false': [0.16, 0.2481298587485283], 'false,false,false': [0.0, 0.2500186817741443], 'false,true': [0.20999999999999996, 0.17847162811629394], 'false,true,true': [0.18749999999999994, 4.625929269271485e-18], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.0, 0.0]}, {'': [-7.401486830834377e-17, 0.18115332858995692], 'false': [0.14758264675608093, 0.21761233118402937], 'false,false': [0.0, 0.21729952873739217], 'false,false,false': [0.2112708656330516, 0.25], 'false,true': [0.17113851461647858, 0.11145008534151418], 'false,true,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'true': [0.0, -4.4408920985006264e-17]}, {'': [7.401486830834377e-17, 0.1650283338770068], 'false': [0.0, 0.16594413544303716], 'false,false': [0.12469067840657222, 0.2151094798585515], 'false,false,false': [0.20916441518886708, 0.25], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'true,true': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [-3.700743415417188e-17, 0.1605371068472648], 'false': [0.0, 0.1632195145241156], 'false,false': [0.12124030675942422, 0.21344202681365096], 'false,false,false': [0.20751416386607044, 0.24999999999999994], 'false,false,true': [0.1875, 0.05938393008204768], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [9.25185853854297e-18, 0.15192428286290693], 'false': [0.0, 0.15522249332890883], 'false,false': [0.10761570278438999, 0.21222093943635167], 'false,false,false': [0.09900832650718508, 0.25060101173237076], 'false,false,true': [0.13882890704919137, 0.06268223907045767], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.00015868461614813867, 0.14043679757206812], 'false': [0.09675619453413624, 0.18872747399664894], 'false,false': [0.0, 0.19968014455937716], 'false,false,false': [0.0, 0.20799850923263258], 'false,true': [0.11652876808109433, 0.053566423584576195], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.00010248423414388474, 0.1455865273329592], 'false': [0.10113388704223024, 0.1954754514853549], 'false,false': [0.18768607272801202, 0.25], 'false,false,false': [nan, 0.25], 'false,false,true': [nan, 0.18768607272801202], 'false,true': [0.01532950428307202, 0.006269295853126986], 'false,true,true': [nan, 0.01532950428307202], 'true': [0.00011918458659598379, 8.506645439623299e-05]}, {'': [8.053665580746532e-05, 0.12744662356113956], 'false': [0.0, 0.1306249574739208], 'false,false': [0.06722361951156133, 0.2066238087662483], 'false,false,false': [0.2066238087662483, nan], 'true': [9.303627595388479e-05, 6.75271865326436e-05], 'true,false': [nan, 6.75271865326436e-05], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [6.452980660432799e-05, 0.12681011750046467], 'false': [0.06669228711099996, 0.19431202186420732], 'false,false': [0.19431202186420732, nan], 'false,false,true': [0.08320618552961262, 0.007160342651135382], 'false,true': [0.09381045521268427, 0.03096835268519739], 'false,true,true': [0.0082726104681981, 0.09258103248195444], 'false,true,false': [0.0004387466609017468, 1.3918623275894354e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
1;false,false,false;interaction(K, A), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, A), phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(E, C).;true;true
6;false;interaction(A, G), interaction(H, A).;true;true
6;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
6;false,false,false;interaction(A, J).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5632344780506887;  // std dev = 0.795, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.15269836449324467;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8509220325135542;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1490779674864458;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2956124129267015;  // std dev = 1.513, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.1279484288810216;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3379331822417465;  // std dev = 0.952, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6846689160841062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.31951577707487716;  // std dev = 1.170, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04834990906103765;  // std dev = 1.149, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.5226453282837168;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( phenotype(G, F) )
%   | | | then return -0.0667282601099647;  // std dev = 0.524, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.19315764508694855;  // std dev = 0.813, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.3142942994025567;  // std dev = 1.201, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.08611235705429926;  // std dev = 1.242, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.39364837295869715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.30795421860259786;  // std dev = 0.782, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.18754570789972336;  // std dev = 1.304, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.0326496026288592;  // std dev = 1.170, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.30456555980034716;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.25538231477608775;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.03254182299965313;  // std dev = 1.105, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.10731109892436924;  // std dev = 1.375, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2441212527368546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), interaction(J, H) )
%   | | | then return 0.04172261258065371;  // std dev = 0.932, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.1775004808691567;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.24764449426648824;  // std dev = 0.505, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.2804682974468957;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07230252941256902;  // std dev = 1.519, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18570617394209787;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17527850071912346;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.30240216777276985;  // std dev = 0.604, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14344669148258918;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08581452781671868;  // std dev = 0.339, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.42011667122106017;  // std dev = 0.211, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.34273866632023503;  // std dev = 0.255, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.25324021319490003;  // std dev = 0.764, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.16461733881911705;  // std dev = 0.410, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15971605712126405;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15091552583104464;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.22975062389614143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return -0.13455583109761562;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04207020524303652;  // std dev = 0.773, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.12040206680124109;  // std dev = 1.107, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.0034521482717236006;  // std dev = 0.785, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1360101829817273;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.16291978954115488;  // std dev = 0.147, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09972268096264085;  // std dev = 0.693, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2304190971173573;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11951683659581439;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then return -0.023276992159125338;  // std dev = 0.860, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.21475483141175486;  // std dev = 0.471, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.018519818321809378;  // std dev = 0.728, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.885609
   AUC PR    = 0.204039
   CLL	      = -0.277291
   Precision = 0.127907 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.213178


Total learning time: 2.45 seconds
Total inference time: 2.789 seconds
AUC ROC: 0.885609


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.99756
   CLL	      = -0.262252
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.561 seconds
Refined model CLL: -0.262252


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.885609
   AUC PR    = 0.204039
   CLL	      = -0.277291
   Precision = 0.127907 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.213178


Total learning time: 4.697 seconds
Total inference time: 2.789 seconds
AUC ROC: 0.885609
Total revision time: 4.697
Best scored revision CLL: -0.262252


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:15:51
{'AUC ROC': 0.885609, 'AUC PR': 0.204039, 'CLL': -0.277291, 'Precision': [0.127907, 0.5], 'Recall': 0.639535, 'F1': 0.213178, 'Learning time': 4.697, 'Inference time': 2.789, 'parameter_20': {'AUC ROC': 0.977659, 'AUC PR': 0.298141, 'CLL': -0.236109, 'Precision': [0.349515, 0.5], 'Recall': 0.837209, 'F1': 0.493151, 'Learning time': 1.079, 'Inference time': 2.816}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5914589649401938;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.15854103505980624;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8163559447484886;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1836440552515114;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7679146784797215;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3089144436399473;  // std dev = 1.862, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.09223549278726419;  // std dev = 1.332, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.5433747970953569;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6734732465182282;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19052433920481104;  // std dev = 2.003, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.39104206332297897;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46064491838321847;  // std dev = 0.073, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then return 0.10127742281981163;  // std dev = 1.538, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.155714704648785;  // std dev = 1.990, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.30663527323090317;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3512479929282034;  // std dev = 0.067, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.45768185977705256;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.007906677653753788;  // std dev = 0.930, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12493602098543077;  // std dev = 1.980, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.233414028841795;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2765744166629561;  // std dev = 0.059, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.025893248037381557;  // std dev = 1.196, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.11419748946365917;  // std dev = 0.753, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.06239639757785224;  // std dev = 1.070, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.13607673775687418;  // std dev = 1.844, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22516155836718188;  // std dev = 0.051, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.05245537464309667;  // std dev = 1.254, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.05909010990431946;  // std dev = 0.602, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.36805801503738433;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08461958572441544;  // std dev = 2.133, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18512935547151263;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18477462483873197;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4443660036976554;  // std dev = 0.330, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.17448903482646247;  // std dev = 0.261, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.15668973526835017;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06491007652976348;  // std dev = 1.970, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12041979629643144;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15884586598688866;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.158546879147066;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.13708003047262785;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20947782477621169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.022273320863970828;  // std dev = 1.128, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.048587504152035034;  // std dev = 2.125, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13865014641949425;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.1899074957131989;  // std dev = 0.205, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.22111261351935702;  // std dev = 0.683, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2428420370793453;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11226419047893957;  // std dev = 0.000724, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3053625571460433;  // std dev = 1.333, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.38463101619131823;  // std dev = 0.276, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.972649
   AUC PR    = 0.265704
   CLL	      = -0.251209
   Precision = 0.331551 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.454212


Total learning time: 1.161 seconds
Total inference time: 2.735 seconds
AUC ROC: 0.972649


Results scoring model
   AUC ROC   = 0.988
   AUC PR    = 0.987618
   CLL	      = -0.329147
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.601 seconds
Parameter learned model CLL: -0.329147


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [1.477, 8, 3], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.225, 11, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [2.11e-08, 0, 6], 'false,true,true,true': [0.866, 1, 3], 'false,true,true,false': [5.27e-09, 7, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.0, 5, 0], 'false,false,false,true': [0.069, 0, 2], 'false,false,false,false': [1.862, 7, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 5], 'false,true,true': [1.332, 8, 3], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.003, 11, 8], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.073, 0, 2], 'false,false,true': [1.538, 13, 7], 'false,false,false,true': [1.99, 11, 8], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.067, 0, 2], 'false,false,true,true': [0.866, 1, 3], 'false,false,true,false': [0.93, 12, 4], 'false,false,false,true': [1.98, 11, 8], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I), interaction(J, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false,true': [0.059, 0, 2], 'false,false,true,true': [1.196, 8, 3], 'false,false,true,false': [0.753, 5, 4], 'false,false,false,true': [1.07, 5, 3], 'false,false,false,false': [1.844, 7, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), interaction(H, A)', 'false,true': 'interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.051, 0, 2], 'false,true,true': [1.254, 9, 5], 'false,true,false': [0.602, 4, 3], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [2.133, 12, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.02, 0, 3], 'true,false': [0.019, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.33, 0, 7], 'false,true,false': [0.261, 13, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.97, 11, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.017, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.017, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.128, 13, 7], 'false,false,false,true': [2.125, 12, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.022, 0, 6], 'false,true,true,true': [0.205, 6, 0], 'false,true,true,false': [0.683, 2, 3], 'false,true,false,true': [0.047, 0, 4], 'false,true,false,false': [0.000724, 5, 0], 'false,false,true,true': [1.333, 3, 12], 'false,false,true,false': [0.276, 9, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.24535123966942127], 'false': [0.2275000000000001, 0.24999999999999956], 'false,false': [0.2494331065759637, 0.22222222222222224], 'false,false,true': [0.0, 0.2475], 'false,true': [0.1983471074380164, 0.24691358024691365], 'false,true,false': [0.0, -2.7755575615628915e-18], 'false,false,false': [nan, 0.22222222222222224], 'true': [1.4802973661668753e-16, 1.4802973661668753e-16]}, {'': [7.401486830834377e-17, 0.22571095586786386], 'false': [0.19298187328114938, 0.24498792260278482], 'false,false': [0.23437500000000003, 0.240093804135929], 'false,false,false': [0.002346556277721623, 0.24772254473923053], 'false,false,true': [-1.4802973661668753e-16, 0.0], 'false,true': [0.19834710743801673, 0.1762682746827594], 'false,true,true': [0.1875000000000001, 3.96508223080413e-18], 'false,true,false': [0.0, 0.0]}, {'': [-7.401486830834377e-17, 0.18243852117134993], 'false': [0.1403869739104632, 0.21129210018429415], 'false,false': [0.004231401635558907, 0.21740461107989206], 'false,false,false': [0.21116111413379404, 0.22222222222222224], 'false,true': [0.1613633184821006, 0.11007415836198932], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.0, 0.0], 'true': [0.0, -4.4408920985006264e-17]}, {'': [7.401486830834377e-17, 0.16614613199685915], 'false': [0.002700692779083441, 0.16927258788728852], 'false,false': [0.11828279736204941, 0.21294713138367022], 'false,false,false': [0.20837668635364637, 0.22222222222222224], 'false,true': [nan, 0.002700692779083441], 'false,true,false': [nan, 0.002700692779083441], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [-3.700743415417188e-17, 0.16066657467079548], 'false': [0.002267716016071855, 0.16564588437786723], 'false,false': [0.11546201802743643, 0.20985227058279216], 'false,false,false': [0.20629446420732336, 0.22222222222222224], 'false,false,true': [0.18749999999999997, 0.05409798529690414], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [9.25185853854297e-18, 0.15229977269566428], 'false': [0.001744023819565399, 0.15786121489981916], 'false,false': [0.1018620964106588, 0.20786205293449242], 'false,false,false': [0.14318325013541205, 0.24284726244553695], 'false,false,true': [0.13008541128794174, 0.0630782323032399], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0005861655887930472, 0.14659361321610456], 'false': [0.09215523243749908, 0.19319735350155334], 'false,false': [0.0, 0.20106694005995815], 'false,false,false': [0.0, 0.20671341846060676], 'false,true': [0.11230858353800818, 0.05181918376182323], 'true': [0.0, 0.001323046949386418], 'true,false': [nan, 0.001323046949386418]}, {'': [0.00012351189736864906, 0.14755915559874114], 'false': [0.09597498641617515, 0.19003393786101186], 'false,false': [0.1851087085367428, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222], 'false,false,true': [0.0, 0.19396302464176224], 'false,true': [0.015570096179428823, 0.00522638176554425], 'false,true,true': [nan, 0.015570096179428696], 'true': [0.00012905360649987743, 0.00011790727132648023]}, {'': [9.712735759443795e-05, 0.13257573976211912], 'false': [0.001310360155006015, 0.1379705687743374], 'false,false': [0.06359249530654407, 0.2052572676557384], 'false,false,false': [0.2052572676557384, nan], 'false,true': [0.0, 0.0], 'true': [0.00010127070112368741, 9.293931749999873e-05], 'true,false': [nan, 9.293931749999873e-05], 'false,true,false': [nan, 0.0]}, {'': [7.786082595667941e-05, 0.13191467736413365], 'false': [0.06316184203058299, 0.1888572464841801], 'false,false': [0.1888572464841801, nan], 'false,false,true': [0.11854134143238952, 0.008493464541209658], 'false,true': [0.08809560637249099, 0.031385971834666446], 'false,true,true': [0.007035296567246783, 0.09322023439685194], 'false,true,false': [0.0005625095702572191, 1.0482367097663925e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
1;false,false,false;interaction(K, A), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, A), phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(I, A), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(E, C).;true;true
6;false;interaction(A, G), interaction(H, A).;true;true
6;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
6;false,false,false;interaction(A, J).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
8;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5632344780506887;  // std dev = 0.795, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1488049750696942;  // std dev = 0.098, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8163559447484886;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1836440552515114;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7679146784797215;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3089144436399473;  // std dev = 1.862, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.12521215177207523;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.33769981617057604;  // std dev = 0.952, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.5433747970953569;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6734732465182282;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return -0.15769291111394992;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.27716670358958934;  // std dev = 2.072, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), interaction(G, E) )
%   | | then if ( interaction(G, G) )
%   | | | then return -0.11073203138527606;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.3624065103202573;  // std dev = 0.700, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.13618462987164134;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then return 0.09635552709814027;  // std dev = 0.764, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.27553524413138325;  // std dev = 1.509, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.2015354266990664;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4032133504444471;  // std dev = 0.084, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2910928686228417;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0514226949681419;  // std dev = 0.635, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(A, I), location(I, J) )
%   | | | then return 0.42931009247754953;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11773258861757684;  // std dev = 2.131, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.31222203934104487;  // std dev = 0.074, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, F), interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, H) )
%   | | | then return -0.077751332839384;  // std dev = 0.946, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.22321049372244356;  // std dev = 0.801, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.06916152223224689;  // std dev = 1.774, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.3603701579235416;  // std dev = 0.553, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2500776654805685;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( location(A, J), complex(H, K) )
%   | | | then return 0.012062076614258795;  // std dev = 0.847, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.10005377355015987;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.20937511319434465;  // std dev = 0.424, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.26808844070337046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08135288907594102;  // std dev = 2.054, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.187319435918084;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1771150860170829;  // std dev = 4.55e-05, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( phenotype(A, G), interaction(F, A) )
%   | | | then return -0.1021874791374748;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.048437086736884065;  // std dev = 0.806, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.16983862888832058;  // std dev = 0.409, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.16652105124844807;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.054767129006185654;  // std dev = 1.908, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.1788714989781508;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.16092691513493454;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15231933048129542;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.14467300833568708;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.23661060578048942;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.015023675830194724;  // std dev = 0.396, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.311371718605432;  // std dev = 0.176, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1307191831296376;  // std dev = 1.461, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.03824549073715687;  // std dev = 1.470, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13703019644683437;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.12355639574921351;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.09932357797645876;  // std dev = 0.712, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2116976357336516;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12142937332263255;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then return -0.09060497527385761;  // std dev = 0.623, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07517434069974921;  // std dev = 1.701, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.10989292719442734;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.862386
   AUC PR    = 0.1828
   CLL	      = -0.357255
   Precision = 0.059416 at threshold = 0.5
   Recall    = 0.686047
   F1        = 0.109361


Total learning time: 3.051 seconds
Total inference time: 3.272 seconds
AUC ROC: 0.862386


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.980424
   CLL	      = -0.337524
   Precision = 0.954545 at threshold = 0.5
   Recall    = 0.84
   F1        = 0.893617


Total scoring time: 0.624 seconds
Refined model CLL: -0.337524


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.972649
   AUC PR    = 0.265704
   CLL	      = -0.251209
   Precision = 0.331551 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.454212


Total learning time: 5.437 seconds
Total inference time: 2.735 seconds
AUC ROC: 0.972649
Total revision time: 5.437
Best scored revision CLL: -0.329147


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:16:03
{'AUC ROC': 0.972649, 'AUC PR': 0.265704, 'CLL': -0.251209, 'Precision': [0.331551, 0.5], 'Recall': 0.72093, 'F1': 0.454212, 'Learning time': 5.437, 'Inference time': 2.735, 'parameter_25': {'AUC ROC': 0.972649, 'AUC PR': 0.265704, 'CLL': -0.251209, 'Precision': [0.331551, 0.5], 'Recall': 0.72093, 'F1': 0.454212, 'Learning time': 1.161, 'Inference time': 2.735}}


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.12911918768822866;  // std dev = 0.774, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1084367290903619;  // std dev = 0.746, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return -0.12542213909464167;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.11784450419189596;  // std dev = 0.688, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return -0.12561372403252902;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.13892927411086753;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.1766179075322308;  // std dev = 0.547, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2962942790011289;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.13418826486676966;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.03962793516370346;  // std dev = 0.536, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09215076337940452;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23130993570045055;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13149412262641355;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.89896
   AUC PR    = 0.091192
   CLL	      = -0.181389
   Precision = 0.101877 at threshold = 0.5
   Recall    = 0.436782
   F1        = 0.165217


Total learning time: 0.853 seconds
Total inference time: 6.229 seconds
AUC ROC: 0.89896


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.157134
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.494 seconds
Parameter learned model CLL: -0.157134


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,false': 'phenotype(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,false': 'interaction(A, F), interaction(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.774, 5, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.746, 5, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(E, F), interaction(F, A)', 'false,false,false': 'phenotype(A, G), interaction(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.688, 4, 4], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), interaction(A, E)', 'false,true': 'interaction(D, E)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.019, 2, 0], 'false,true,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.547, 2, 4], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 4], 'false,true,false': [0.053, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.536, 5, 4], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.035, 4, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999986], 'false': [0.2469135802469134, 0.0], 'false,true': [0.0, 0.24999999999999986], 'false,true,false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.17847162811629408], 'false': [0.17626827468275957, 0.0], 'false,true': [0.0, 0.17847162811629405], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.0], 'false,false,true': [0.0, nan]}, {'': [nan, 0.11145008534151417], 'false': [0.1100741583619893, 0.0], 'false,true': [0.0, 0.11145008534151415], 'false,true,false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.06736877561142737], 'false': [nan, 0.06736877561142736], 'false,false': [0.06653706233227395, 0.0], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.05971962060997214], 'false': [nan, 0.059719620609972116], 'false,false': [0.06184906143592592, 0.0], 'false,false,true': [nan, 0.06184906143592592], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.05503445401936703], 'false': [nan, 0.05503445401936702], 'false,false': [0.058448058998419344, 0.0], 'false,false,true': [0.0, 0.05917865973589958], 'false,false,false': [0.0, nan]}, {'': [nan, 0.05037669156177503], 'false': [0.00015760344345665486, 0.042807346571153086], 'false,false': [nan, 0.042807346571153086], 'false,false,false': [0.04978501192145122, 0.0], 'false,true': [0.00017730387388873933, 0.0]}, {'': [nan, 0.0427605801570395], 'false': [0.046072735062046816, 0.0], 'false,true': [0.0, 0.0005686028561388168], 'false,false': [nan, 0.0], 'false,true,true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.029840524798274155], 'false': [nan, 0.02984052479827415], 'false,false': [0.03187661746271922, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.02914032361714361], 'false': [0.031380467590727684, 0.0], 'false,true': [0.0, 0.03306072985085495], 'false,true,false': [0.0, 0.00030806733248858395], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.0], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
0;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true;interaction(E, D), interaction(E, A).;true;true
2;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(E, A).;true;true
5;;proteinclass(A, B) :- interaction(E, A).;true;true
5;true;interaction(E, F), interaction(F, A).;true;true
6;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
6;true;interaction(D, E).;true;true
6;false;interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(D, A).;true;true
7;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
8;;proteinclass(A, B) :- interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(D, A).;true;true
9;true;interaction(D, E), interaction(E, A).;true;true
9;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.24447694627626118;  // std dev = 0.599, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D) )
%   | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19761619591113222;  // std dev = 0.561, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( complex(A, E) )
%   | | then return 0.005374703681282382;  // std dev = 0.380, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.15515458558995132;  // std dev = 0.439, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(C, D) )
%   | then return -0.08842825575202157;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09807975677295139;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then return 0.14370410897998181;  // std dev = 0.510, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2620185257712203;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11841408042706307;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D) )
%   | then return 0.12570139923760668;  // std dev = 0.234, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.00876009826147847;  // std dev = 0.383, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return -0.07308590402670861;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.20490797434619223;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.11633577629312011;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.782347
   AUC PR    = 0.027018
   CLL	      = -0.267461
   Precision = 0.048246 at threshold = 0.5
   Recall    = 0.505747
   F1        = 0.088088


Total learning time: 0.924 seconds
Total inference time: 2.894 seconds
AUC ROC: 0.782347


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140691
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.483 seconds
Refined model CLL: -0.140691


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.782347
   AUC PR    = 0.027018
   CLL	      = -0.267461
   Precision = 0.048246 at threshold = 0.5
   Recall    = 0.505747
   F1        = 0.088088


Total learning time: 2.754 seconds
Total inference time: 2.894 seconds
AUC ROC: 0.782347
Total revision time: 2.754
Best scored revision CLL: -0.140691


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:16:15
{'AUC ROC': 0.782347, 'AUC PR': 0.027018, 'CLL': -0.267461, 'Precision': [0.048246, 0.5], 'Recall': 0.505747, 'F1': 0.088088, 'Learning time': 2.754, 'Inference time': 2.894, 'parameter_5': {'AUC ROC': 0.89896, 'AUC PR': 0.091192, 'CLL': -0.181389, 'Precision': [0.101877, 0.5], 'Recall': 0.436782, 'F1': 0.165217, 'Learning time': 0.853, 'Inference time': 6.229}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.13839204853816223;  // std dev = 1.310, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11553787074669265;  // std dev = 1.283, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.029336038192906762;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11505644428947244;  // std dev = 0.907, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return -0.18315637752317637;  // std dev = 0.060, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.016749806545827917;  // std dev = 0.385, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return 0.13451892017433073;  // std dev = 1.097, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36139888233168954;  // std dev = 0.416, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1731099054568856;  // std dev = 0.134, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(E, A) )
%   | | then return 0.04561446268787911;  // std dev = 1.023, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.009032855976457657;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2268435427557324;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.13258798029394556;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.863362
   AUC PR    = 0.103364
   CLL	      = -0.281215
   Precision = 0.045254 at threshold = 0.5
   Recall    = 0.471264
   F1        = 0.082578


Total learning time: 0.861 seconds
Total inference time: 5.912 seconds
AUC ROC: 0.863362


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.220536
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.52 seconds
Parameter learned model CLL: -0.220536


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.866, 3, 1], 'false,true,false,true': [2.11e-08, 0, 7], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,false': 'interaction(A, F), interaction(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.31, 10, 8], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.283, 10, 8], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(E, F), interaction(F, A)', 'false,false,false': 'phenotype(A, G), interaction(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.866, 3, 1], 'false,false,true,false': [0.907, 7, 7], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), interaction(A, E)', 'false,true': 'interaction(D, E)', 'false,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.06, 2, 0], 'false,true,false': [0.385, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.097, 6, 7], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.416, 0, 8], 'false,true,false': [0.134, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.023, 10, 8], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.76, 3, 1], 'false,true,false,true': [0.02, 0, 7], 'false,true,false,false': [0.032, 7, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [nan, 0.25000000000000006], 'false': [0.2469135802469136, 0.0], 'false,true': [0.18750000000000003, 0.25000000000000006], 'false,true,false': [-2.5376526277146434e-16, -7.93016446160826e-18], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.1884793403268427], 'false': [0.18756871979070086, 0.0], 'false,true': [0.18749999999999997, 0.17847162811629394], 'false,true,true': [nan, 0.18749999999999997], 'false,true,false': [6.344131569286608e-17, -1.982541115402065e-18], 'false,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [nan, 0.1305436752187225], 'false': [0.13173155971607287, 0.0], 'false,true': [0.18749999999999994, 0.11145008534151415], 'false,true,false': [-6.344131569286608e-17, -1.982541115402065e-18], 'false,false': [nan, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [nan, 0.09287591844456433], 'false': [nan, 0.0928759184445643], 'false,false': [0.09540458177370986, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [nan, 0.08605781839662907], 'false': [nan, 0.08605781839662907], 'false,false': [0.09141016215874578, 0.0], 'false,false,true': [nan, 0.09141016215874577], 'false,false,false': [0.0, 0.0]}, {'': [nan, 0.08201468592796253], 'false': [nan, 0.08201468592796253], 'false,false': [0.08859408617196743, 0.0], 'false,false,true': [0.18750000000000003, 0.0587023674227035], 'false,false,false': [0.0, 0.0]}, {'': [nan, 0.07878924457375883], 'false': [0.04001329183701282, 0.08092315178928142], 'false,false': [nan, 0.08092315178928142], 'false,false,false': [0.09261808393690397, 0.0], 'false,true': [0.00181423677939712, 0.0494943355704777]}, {'': [nan, 0.07418293144910645], 'false': [0.0811565460345391, 0.0], 'false,true': [0.021628237115365073, 0.0018015735151173662], 'false,true,true': [nan, 0.02162823711536513], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.0533325565375512], 'false': [nan, 0.05333255653755119], 'false,false': [0.058110725416833625, 0.0], 'false,false,false': [0.0, nan]}, {'': [nan, 0.05259738609820237], 'false': [0.057532477254527974, 0.0], 'false,true': [0.1443767850212846, 0.03239732381923287], 'false,true,true': [nan, 0.1443767850212846], 'false,true,false': [5.463121702924718e-05, 0.00014450654053090633], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
0;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
0;false;interaction(A, G), interaction(G, H).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true;interaction(E, D), interaction(E, A).;true;true
2;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
2;false;interaction(A, H), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(E, A).;true;true
3;false;interaction(A, F), interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(E, A).;true;true
4;false;interaction(A, G), interaction(G, H).;true;true
5;;proteinclass(A, B) :- interaction(E, A).;true;true
5;false;phenotype(A, G), interaction(A, H).;true;true
6;;proteinclass(A, B) :- interaction(D, A), interaction(A, E).;true;true
6;true;interaction(D, E).;true;true
6;false;interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(D, A).;true;true
7;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
7;false;interaction(A, G), interaction(G, H).;true;true
8;;proteinclass(A, B) :- interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(D, A).;true;true
9;true;interaction(D, E), interaction(E, A).;true;true
9;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( phenotype(A, G), interaction(A, H) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D) )
%   | then return 0.3154680075203152;  // std dev = 0.320, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( complex(A, E) )
%   | | then return -0.13299418859334122;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.15795862733523683;  // std dev = 0.636, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( function(A, F), function(D, F) )
%   | | then if ( interaction(G, D), enzyme(G, H) )
%   | | | then return -0.17564347909285735;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15893797906391308;  // std dev = 0.592, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.4678124502576229;  // std dev = 0.349, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12131545656621787;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return -0.12309365467845984;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.27428623247288586;  // std dev = 0.626, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.11004949293501487;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13745766411423696;  // std dev = 0.446, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( phenotype(A, H), interaction(A, I) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(C, D) )
%   | then return -0.18403093974916312;  // std dev = 0.092, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.020576664936973823;  // std dev = 0.287, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.24302803666326414;  // std dev = 0.508, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.12527987558143125;  // std dev = 0.403, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.12596991338225277;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.2402325008314598;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3089845281598437;  // std dev = 0.301, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return -0.09613432133598557;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1339154670106637;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F) )
%   | | then return -0.10101036959680834;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( function(A, G), function(D, G) )
%   | | | then return 0.08198573726723359;  // std dev = 0.405, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.24458174218781623;  // std dev = 0.273, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09318953005873253;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.0052595566961473016;  // std dev = 0.484, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.1522061143837507;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17754022691597604;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.08190002924694047;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0956195721106759;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.838907
   AUC PR    = 0.03598
   CLL	      = -0.302893
   Precision = 0.048246 at threshold = 0.5
   Recall    = 0.505747
   F1        = 0.088088


Total learning time: 1.544 seconds
Total inference time: 5.353 seconds
AUC ROC: 0.838907


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.145187
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.528 seconds
Refined model CLL: -0.145187


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.838907
   AUC PR    = 0.03598
   CLL	      = -0.302893
   Precision = 0.048246 at threshold = 0.5
   Recall    = 0.505747
   F1        = 0.088088


Total learning time: 3.453 seconds
Total inference time: 5.353 seconds
AUC ROC: 0.838907
Total revision time: 3.453
Best scored revision CLL: -0.145187


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:16:30
{'AUC ROC': 0.838907, 'AUC PR': 0.03598, 'CLL': -0.302893, 'Precision': [0.048246, 0.5], 'Recall': 0.505747, 'F1': 0.088088, 'Learning time': 3.453, 'Inference time': 5.353, 'parameter_10': {'AUC ROC': 0.863362, 'AUC PR': 0.103364, 'CLL': -0.281215, 'Precision': [0.045254, 0.5], 'Recall': 0.471264, 'F1': 0.082578, 'Learning time': 0.861, 'Inference time': 5.912}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.202334239218108;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.17149281961528945;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then return 0.1531348863064996;  // std dev = 1.758, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.20613740734453978;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.38080715605670623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11636112355054178;  // std dev = 1.709, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.16162857548414666;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.09076041354443973;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.10918813137888767;  // std dev = 1.012, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12455597792081965;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.08404715332183794;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.03553548027022401;  // std dev = 0.487, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09875295123265013;  // std dev = 1.422, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.13320457812238307;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39774628629074416;  // std dev = 0.560, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.21284905996485756;  // std dev = 0.309, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.062464708167409205;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.18852988315036345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.04897380643923709;  // std dev = 1.401, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.08514574367919849;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.034149064427843476;  // std dev = 1.180, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21055392783999705;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1314215604788585;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3380186214236583;  // std dev = 0.266, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.47413297166662705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.904258
   AUC PR    = 0.120647
   CLL	      = -0.30004
   Precision = 0.104592 at threshold = 0.5
   Recall    = 0.471264
   F1        = 0.17119


Total learning time: 0.896 seconds
Total inference time: 6.004 seconds
AUC ROC: 0.904258


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.282537
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.563 seconds
Parameter learned model CLL: -0.282537


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.369, 5, 3], 'false,true,false,true': [0.0, 0, 10], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.369, 5, 3], 'false,true,false,true': [2.98e-08, 0, 10], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [1.369, 5, 3], 'false,true,false,true': [0.0, 0, 10], 'false,true,false,false': [0.0, 9, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, A), interaction(D, E)', 'false,true,false': 'interaction(F, A), interaction(F, D)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.758, 14, 12], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.709, 14, 11], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(E, F), interaction(F, A)', 'false,false,false': 'phenotype(A, G), interaction(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.369, 5, 3], 'false,false,true,false': [1.012, 9, 9], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.759, 2, 1], 'false,true,false': [0.487, 3, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.422, 9, 9], 'false,false,false,false': [0.713, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.56, 0, 12], 'false,true,false': [0.309, 14, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.401, 14, 12], 'false,false,false,true': [0.713, 1, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.18, 5, 3], 'false,true,false,true': [0.087, 0, 10], 'false,true,false,false': [0.01, 9, 0], 'false,false,true,true': [0.266, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999958], 'false': [0.24965706447187883, 0.22222222222222224], 'false,true': [0.2343749999999999, 0.2493074792243767], 'false,true,false': [-8.881784197001253e-17, -9.25185853854297e-18], 'false,false': [0.25, 0.0], 'false,false,true': [nan, 0.25], 'false,false,false': [0.0, nan]}, {'': [nan, 0.20053373511856254], 'false': [0.19753776067973958, 0.20415577842167218], 'false,false': [0.0, 0.25000000000000006], 'false,false,false': [nan, 0.25000000000000006], 'false,true': [0.23437500000000008, 0.17797724687497452], 'false,true,true': [nan, 0.23437499999999997], 'false,true,false': [8.881784197001253e-17, 0.0], 'false,false,true': [0.0, nan]}, {'': [nan, 0.15408905372978626], 'false': [0.14860792676552895, 0.1865274521703096], 'false,false': [nan, 0.1865274521703096], 'false,false,false': [0.24999999999999997, 0.0], 'false,true': [0.23437499999999992, 0.1111413593433382], 'false,true,false': [-1.7763568394002506e-16, -1.5419764230904951e-18]}, {'': [nan, 0.12403263715849032], 'false': [0.0, 0.12619942450253152], 'false,false': [0.11880766026692936, 0.17659553069431252], 'false,false,false': [0.25, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [nan, 0.11868086427297435], 'false': [0.0, 0.12163169215963265], 'false,false': [0.11498307253103777, 0.17229055273936464], 'false,false,false': [0.24999999999999997, 0.0], 'false,false,true': [0.0, 0.11689271450503888]}, {'': [nan, 0.1147898074469457], 'false': [0.0, 0.11804749625878784], 'false,false': [0.11156874605364155, 0.1704579130201714], 'false,false,false': [0.0, 0.24999999999999997], 'false,false,true': [0.23437500000000003, 0.05688370234889149]}, {'': [0.0, 0.11609999313791598], 'false': [0.10226493264725188, 0.12068229147940256], 'false,false': [nan, 0.12068229147940256], 'false,false,false': [0.11236030448173079, 0.16959685809799083], 'false,true': [0.19215616710542813, 0.04744767356399613], 'true': [0.0, nan]}, {'': [nan, 0.11141382684853342], 'false': [0.1047828824156812, 0.17019831740966287], 'false,false': [0.25000000000000006, 0.0], 'false,false,true': [nan, 0.25000000000000006], 'false,true': [0.027548504786015695, 0.006832502731799734], 'false,true,true': [0.0, 0.0260991112731714], 'false,false,false': [0.0, nan]}, {'': [nan, 0.08278037387677631], 'false': [0.0, 0.0853013486539127], 'false,false': [0.07544255075167619, 0.16957120742262966], 'false,false,false': [0.16957120742262966, nan], 'false,true': [0.0, nan]}, {'': [nan, 0.08219807228810598], 'false': [0.07237822557722681, 0.17010028490992035], 'false,false': [0.17010028490992035, nan], 'false,false,true': [0.03528702397851774, 0.0], 'false,true': [0.17391629516747037, 0.02956377351048138], 'false,true,true': [nan, 0.17391629516747037], 'false,true,false': [0.0007653908344878724, 1.0800372797119416e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
0;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
0;false;interaction(A, G), interaction(G, H).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true;interaction(E, D), interaction(E, A).;true;true
2;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
2;false;interaction(A, H), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
3;false;interaction(G, A).;true;true
3;false,false;interaction(A, H), interaction(H, I).;true;true
4;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, G), interaction(G, H).;true;true
5;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A).;true;true
5;false,false;phenotype(A, G), interaction(A, H).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(D, A).;true;true
7;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
7;true,true;interaction(A, F), recursion_proteinclass(F, B).;true;true
7;false;interaction(A, G), interaction(G, H).;true;true
8;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(D, A).;true;true
9;true;interaction(D, E), interaction(E, A).;true;true
9;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( phenotype(A, G), interaction(A, H) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.41257245288266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(F, E), interaction(F, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10604763597062224;  // std dev = 0.569, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.14434183194104222;  // std dev = 1.148, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.20613740734453978;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.33984521881958574;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.22467496997381858;  // std dev = 1.010, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.024029397518982275;  // std dev = 0.865, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.16162857548414666;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then return -0.1278679180862929;  // std dev = 0.562, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.25549423278423045;  // std dev = 0.660, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04351207918876367;  // std dev = 0.830, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.12455597792081965;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then return 0.3883891909742936;  // std dev = 0.253, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), phenotype(H, I) )
%   | | | then return 0.1268618721368003;  // std dev = 1.085, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.035559445939850054;  // std dev = 0.364, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.2103853363323441;  // std dev = 0.239, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0263247045916623;  // std dev = 0.365, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.26056623205085433;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.35565977690324957;  // std dev = 0.180, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return -0.23789080774019047;  // std dev = 0.354, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12849112181996294;  // std dev = 0.091, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then return 0.07172669090984626;  // std dev = 0.604, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.20542748335120986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(F, G) )
%   | | | then return 0.3136478408579989;  // std dev = 0.220, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19372894479269415;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.26437435124354874;  // std dev = 0.249, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then return -0.09724547849114537;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.162930911757321;  // std dev = 0.471, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.09835087489492104;  // std dev = 0.387, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.046071812468012695;  // std dev = 0.379, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.01772701774706102;  // std dev = 0.537, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.17727091015159757;  // std dev = 0.102, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.10284937443808863;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | then return 0.08096596680007967;  // std dev = 0.549, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.890668
   AUC PR    = 0.21584
   CLL	      = -0.36096
   Precision = 0.029765 at threshold = 0.5
   Recall    = 0.770115
   F1        = 0.057314


Total learning time: 1.679 seconds
Total inference time: 6.921 seconds
AUC ROC: 0.890668


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.186266
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.58 seconds
Refined model CLL: -0.186266


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.890668
   AUC PR    = 0.21584
   CLL	      = -0.36096
   Precision = 0.029765 at threshold = 0.5
   Recall    = 0.770115
   F1        = 0.057314


Total learning time: 3.718 seconds
Total inference time: 6.921 seconds
AUC ROC: 0.890668
Total revision time: 3.718
Best scored revision CLL: -0.186266


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:16:48
{'AUC ROC': 0.890668, 'AUC PR': 0.21584, 'CLL': -0.36096, 'Precision': [0.029765, 0.5], 'Recall': 0.770115, 'F1': 0.057314, 'Learning time': 3.718, 'Inference time': 6.921, 'parameter_15': {'AUC ROC': 0.904258, 'AUC PR': 0.120647, 'CLL': -0.30004, 'Precision': [0.104592, 0.5], 'Recall': 0.471264, 'F1': 0.17119, 'Learning time': 0.896, 'Inference time': 6.004}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13778665478297894;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11817988627418433;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.14879613771247974;  // std dev = 1.953, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.20613740734453978;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.38183073062369743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11589629675681706;  // std dev = 1.900, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.16162857548414666;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.05420976983124406;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.12055708020842432;  // std dev = 1.197, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12455597792081965;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.05149782215723051;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.08565661950462267;  // std dev = 0.647, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1218539465925161;  // std dev = 1.465, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.13320457812238307;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38066426004535847;  // std dev = 0.676, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.19436464299481404;  // std dev = 0.242, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.062464708167409205;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.18852988315036345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.04960285050152386;  // std dev = 1.557, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08514574367919849;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.22041631616545118;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.052230173293866616;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21182437575187207;  // std dev = 0.089, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.13506812398662713;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3380186214236583;  // std dev = 0.266, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.47413297166662705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.960384
   AUC PR    = 0.168381
   CLL	      = -0.265102
   Precision = 0.118182 at threshold = 0.5
   Recall    = 0.597701
   F1        = 0.197343


Total learning time: 1.027 seconds
Total inference time: 6.589 seconds
AUC ROC: 0.960384


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.99756
   CLL	      = -0.261783
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.918919


Total scoring time: 0.577 seconds
Parameter learned model CLL: -0.261783


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [1.449, 7, 3], 'false,true,false,true': [0.0, 0, 14], 'false,true,false,false': [0.0, 12, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.449, 7, 3], 'false,true,false,true': [5.16e-08, 0, 14], 'false,true,false,false': [5.27e-09, 12, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [1.449, 7, 3], 'false,true,false,true': [0.0, 0, 14], 'false,true,false,false': [9.13e-09, 12, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.953, 19, 16], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.9, 19, 15], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.449, 7, 3], 'false,false,true,false': [1.197, 12, 13], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.88, 5, 1], 'false,true,false': [0.647, 4, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.465, 10, 11], 'false,false,false,false': [0.713, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.676, 0, 16], 'false,true,false': [0.242, 19, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.557, 19, 16], 'false,false,false,true': [0.713, 1, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.246, 6, 3], 'false,true,false,true': [0.089, 0, 14], 'false,true,false,false': [0.024, 12, 0], 'false,false,true,true': [0.266, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24983563445101864], 'false': [0.2492283950617279, 0.22222222222222224], 'false,true': [0.20999999999999988, 0.24852071005917128], 'false,true,false': [-2.5376526277146434e-16, -1.1564823173178714e-17], 'false,false': [0.25, 0.0], 'false,false,true': [nan, 0.25], 'true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.19667214603512206], 'false': [0.19384116317511133, 0.20415577842167218], 'false,false': [0.0, 0.25000000000000006], 'false,false,false': [nan, 0.25000000000000006], 'false,true': [0.20999999999999996, 0.17741558297951104], 'false,true,true': [nan, 0.21000000000000002], 'false,true,false': [1.9032394707859825e-16, 2.3129646346357427e-18], 'false,false,true': [0.0, nan]}, {'': [0.0, 0.14662441061416112], 'false': [0.14168855855667223, 0.1865274521703096], 'false,false': [nan, 0.1865274521703096], 'false,false,false': [0.24999999999999997, 0.0], 'false,true': [0.20999999999999988, 0.11079061738091339], 'false,true,false': [-2.5376526277146434e-16, 6.938893903907228e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.11423177773156383], 'false': [0.0, 0.11552278923557031], 'false,false': [0.10899854818409824, 0.17659553069431252], 'false,false,false': [0.25, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.10908690272770481], 'false': [0.0, 0.11103177058772484], 'false,false': [0.10512492622382624, 0.17229055273936464], 'false,false,false': [0.24999999999999997, 0.0], 'false,false,true': [0.0, 0.10619623230104178], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.10539075462036832], 'false': [0.0, 0.10760010788659642], 'false,false': [0.10186323373180559, 0.1704579130201714], 'false,false,false': [0.0, 0.24999999999999997], 'false,false,true': [0.2099999999999999, 0.057350822769017755], 'true': [nan, 0.0]}, {'': [0.0, 0.10515407966340247], 'false': [0.0898767421244793, 0.11064237708846335], 'false,false': [nan, 0.11064237708846335], 'false,false,false': [0.1022042037683007, 0.16959685809799083], 'false,true': [0.12914422003038037, 0.05236413046609288], 'true': [0.0, nan]}, {'': [0.0, 0.10032795467285537], 'false': [0.09442183631251207, 0.17019831740966287], 'false,false': [0.25000000000000006, 0.0], 'false,false,true': [nan, 0.25000000000000006], 'false,true': [0.029178259382170623, 0.003088973529968041], 'false,true,true': [0.0, 0.02856426330838785], 'true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.0755223675123672], 'false': [0.0, 0.0772516672066321], 'false,false': [0.06923882976569612, 0.16957120742262966], 'false,false,false': [0.16957120742262966, nan], 'true': [0.0, nan], 'false,true': [0.0, nan]}, {'': [0.0, 0.07493406916803254], 'false': [0.06696281245205729, 0.17010028490992035], 'false,false': [0.17010028490992035, nan], 'false,false,true': [0.03528702397851774, 0.0], 'false,true': [0.16194036532882805, 0.03023414838592858], 'false,true,true': [0.0, 0.1725001284328044], 'false,true,false': [0.0005690710887999598, 4.7955646134546316e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
4;false,false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
5;false,false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.21604269967259007;  // std dev = 1.250, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.09783236914058137;  // std dev = 1.257, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.20613740734453978;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.39393026482373783;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10807218884004031;  // std dev = 1.730, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.16162857548414666;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.18146527116239772;  // std dev = 0.595, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.12188482414699524;  // std dev = 1.526, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12455597792081965;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then return 0.3846354491753905;  // std dev = 0.243, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return -0.2623276875653983;  // std dev = 0.311, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.06762705289951351;  // std dev = 0.441, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.17796987287483457;  // std dev = 1.208, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3280955485254492;  // std dev = 0.371, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.23308320234921598;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.13430576405516473;  // std dev = 0.072, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.0781011047562167;  // std dev = 0.597, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.18177669118033213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), complex(A, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20892382235125007;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10760987705674255;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return -0.020495285601195345;  // std dev = 0.735, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13413611993661445;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.26866861747739346;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.051151484396801;  // std dev = 0.778, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.19765542122636828;  // std dev = 0.130, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.13103353506160018;  // std dev = 0.094, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.06447197780827148;  // std dev = 0.601, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.881628
   AUC PR    = 0.060745
   CLL	      = -0.346441
   Precision = 0.056131 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.104418


Total learning time: 1.559 seconds
Total inference time: 6.358 seconds
AUC ROC: 0.881628


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.202376
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.596 seconds
Refined model CLL: -0.202376


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.881628
   AUC PR    = 0.060745
   CLL	      = -0.346441
   Precision = 0.056131 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.104418


Total learning time: 3.759 seconds
Total inference time: 6.358 seconds
AUC ROC: 0.881628
Total revision time: 3.759
Best scored revision CLL: -0.202376


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:17:05
{'AUC ROC': 0.881628, 'AUC PR': 0.060745, 'CLL': -0.346441, 'Precision': [0.056131, 0.5], 'Recall': 0.747126, 'F1': 0.104418, 'Learning time': 3.759, 'Inference time': 6.358, 'parameter_20': {'AUC ROC': 0.960384, 'AUC PR': 0.168381, 'CLL': -0.265102, 'Precision': [0.118182, 0.5], 'Recall': 0.597701, 'F1': 0.197343, 'Learning time': 1.027, 'Inference time': 6.589}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12543301544918353;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5038043068642056;  // std dev = 1.418, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.19357195423383122;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2794228011236229;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.10782354562777509;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.19948221447782002;  // std dev = 2.214, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3866674512642628;  // std dev = 1.053, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return 0.1476771969494558;  // std dev = 1.527, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.16267446335103325;  // std dev = 2.208, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.3041140567941346;  // std dev = 1.038, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3820948758511292;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10887636437936639;  // std dev = 1.480, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.13003416417539274;  // std dev = 2.204, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.23274908177241346;  // std dev = 1.030, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.04819468570208665;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.12862128609905063;  // std dev = 0.857, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.11690124966208738;  // std dev = 1.640, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.12075727481686546;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(G, F) )
%   | | then return -0.06951111004034906;  // std dev = 0.583, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.15434847598882087;  // std dev = 0.944, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.20406990416809062;  // std dev = 0.810, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09179525882823851;  // std dev = 2.431, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18531643752758187;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19930437517985355;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3861637734977724;  // std dev = 0.539, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.19895554877461175;  // std dev = 0.174, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05497677376061435;  // std dev = 2.196, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.1837997396540309;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0065859041584018785;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.16947214938417526;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15895134386132814;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.046650250401977233;  // std dev = 1.200, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.05394484631419438;  // std dev = 2.424, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14427137080957333;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.2075185476615739;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05498043724517177;  // std dev = 0.986, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.21059043634715907;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.13538766721218679;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5165847155700503;  // std dev = 0.375, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.4002306786037682;  // std dev = 0.255, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.976889
   AUC PR    = 0.273367
   CLL	      = -0.281112
   Precision = 0.19174 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.305164


Total learning time: 1.031 seconds
Total inference time: 4.829 seconds
AUC ROC: 0.976889


Results scoring model
   AUC ROC   = 0.9936
   AUC PR    = 0.993842
   CLL	      = -0.353065
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.92
   F1        = 0.958333


Total scoring time: 0.615 seconds
Parameter learned model CLL: -0.353065


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true': [1.195, 5, 2], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.268, 12, 9], 'false,false,false,true': [0.866, 1, 3], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.195, 5, 2], 'false,true,false,true': [2.11e-08, 0, 7], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [1.418, 3, 7], 'false,false,true,false': [0.045, 4, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.797, 7, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.195, 5, 2], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.214, 12, 9], 'false,false,false,false': [1.053, 2, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,false': 'interaction(G, A), interaction(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [1.527, 11, 9], 'false,false,false,true': [2.208, 12, 9], 'false,false,false,false': [1.038, 2, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.48, 11, 8], 'false,false,false,true': [2.204, 12, 9], 'false,false,false,false': [1.03, 2, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.195, 5, 2], 'false,false,true,false': [0.857, 6, 7], 'false,false,false,true': [1.64, 7, 7], 'false,false,false,false': [1.799, 7, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'false': 'interaction(A, F), interaction(G, A)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.583, 5, 2], 'false,true,false': [0.944, 4, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.81, 2, 3], 'false,false,false,false': [2.431, 14, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.031, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.539, 0, 9], 'false,true,false': [0.174, 11, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.196, 12, 9], 'false,false,false,true': [0.717, 1, 3], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.028, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.2, 11, 9], 'false,false,false,true': [2.424, 14, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.026, 0, 3], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.986, 4, 2], 'false,true,false,true': [0.059, 0, 7], 'false,true,false,false': [0.031, 6, 0], 'false,false,true,true': [0.375, 0, 13], 'false,false,true,false': [0.255, 14, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541394], 'false': [0.2475, 0.24965706447187883], 'false,false': [0.2448979591836735, 0.22222222222222213], 'false,true': [0.20408163265306126, 0.2485207100591715], 'false,true,false': [-2.5376526277146434e-16, -6.938893903907228e-18], 'false,false,true': [nan, 0.2448979591836735], 'false,false,false': [0.18750000000000006, 0.25], 'true': [0.0, 0.0]}, {'': [0.0, 0.22498987022651235], 'false': [0.19622360209091852, 0.2457955401733763], 'false,false': [0.2430655627964867, 0.248408032751267], 'false,false,false': [nan, 0.248408032751267], 'false,false,true': [0.20113279644228918, 0.0005163004369255972], 'false,true': [0.20408163265306117, 0.17741558297951118], 'false,true,true': [nan, 0.20408163265306117], 'false,true,false': [6.344131569286608e-17, -2.3129646346357427e-18]}, {'': [3.700743415417188e-17, 0.19473582255267036], 'false': [0.14786216713367856, 0.22868272972584894], 'false,false': [nan, 0.22868272972584894], 'false,false,false': [0.2334326449692084, 0.18480600525235938], 'false,true': [0.2040816326530612, 0.1107906173809135], 'false,true,false': [-6.344131569286608e-17, 0.0], 'true': [nan, 3.700743415417188e-17]}, {'': [-3.700743415417188e-17, 0.17884415489152722], 'false': [nan, 0.17884415489152727], 'false,false': [0.11665825168462825, 0.22399051632249517], 'false,false,false': [0.2322593211234718, 0.17949013172424946], 'true': [nan, -3.700743415417188e-17]}, {'': [0.0, 0.17534874397760436], 'false': [nan, 0.17534874397760436], 'false,false': [0.11312857953988047, 0.22104649993301176], 'false,false,false': [0.23135267164049947, 0.176769067836945], 'false,false,true': [0.0, 0.11535029755459505], 'true': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.17277767996001517], 'false': [nan, 0.17277767996001508], 'false,false': [0.10960779083346243, 0.21942790389260333], 'false,false,false': [0.19202101463756258, 0.24893530558247895], 'false,false,true': [0.20408163265306117, 0.056473307304914705], 'true': [nan, 0.0]}, {'': [0.0, 0.16493555119669906], 'false': [0.08456803875834973, 0.20685894284921708], 'false,false': [nan, 0.20685894284921708], 'false,false,false': [0.1311326041653334, 0.21891271452894598], 'false,true': [0.04861900065946473, 0.08909755367462455], 'true': [0.0, nan]}, {'': [0.0003722737467136278, 0.1684638250228888], 'false': [0.10075658287868927, 0.2186013527556943], 'false,false': [0.22970195627638873, 0.17596511984870547], 'false,false,true': [nan, 0.22970195627638873], 'false,false,false': [0.12847943194270095, 0.24999999999999997], 'false,true': [0.03222203518536252, 0.002766224135261584], 'false,true,true': [nan, 0.03222203518536252], 'true': [0.0, 0.000493189820149155]}, {'': [0.00028018596498743015, 0.15563762363225755], 'false': [nan, 0.1556376236322575], 'false,false': [0.07200952484411861, 0.21756172044148403], 'false,false,false': [0.21756172044148403, nan], 'true': [0.00038338316453128546, 0.0], 'true,false': [nan, 0.0]}, {'': [0.00021748190424431685, 0.15532581971492246], 'false': [0.07141465763234847, 0.21748055024715368], 'false,false': [0.21748055024715368, nan], 'false,false,true': [0.010834089374760287, 0.004657065520394259], 'false,true': [0.14743241372489324, 0.030090926954547625], 'false,true,true': [0.0, 0.16216080881088898], 'false,true,false': [0.0004954705175767968, 0.00016465661837387438]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(A, H).;true;true
4;false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,true;interaction(D, A), phenotype(A, F).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.506488914084454;  // std dev = 1.394, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.17039631491603122;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4342050072147991;  // std dev = 1.367, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return -0.12490703562747418;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.5239509867593223;  // std dev = 0.931, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.21678520440995144;  // std dev = 1.713, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then return 0.5386974359198816;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, F), interaction(G, A) )
%   | | then if ( complex(G, H), phenotype(A, I) )
%   | | | then return -0.20045581049908345;  // std dev = 0.223, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.05191547417329612;  // std dev = 0.848, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.24470370529056795;  // std dev = 1.895, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return 0.10627632702862273;  // std dev = 0.568, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.35946372449120334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.4192781845790167;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.020387342509786417;  // std dev = 0.982, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), interaction(J, J) )
%   | | | then return -0.21825245264279788;  // std dev = 0.186, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.14609489598283443;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3546759937274736;  // std dev = 0.997, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.18452613412394053;  // std dev = 1.264, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(A, G), complex(E, H) )
%   | | | then return -0.042432936691971006;  // std dev = 0.298, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23325441372132433;  // std dev = 1.007, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.36557504315977346;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.256208810513368;  // std dev = 1.150, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.21188848572867677;  // std dev = 0.295, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.05417324406856738;  // std dev = 0.728, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.10358615096088795;  // std dev = 0.593, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.26286735694170454;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.05353889002683402;  // std dev = 0.820, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.18684660355894037;  // std dev = 0.153, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( complex(I, J), interaction(H, K) )
%   | | | then return -0.12741889051382063;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1044817665395115;  // std dev = 0.565, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.33470259416695985;  // std dev = 0.591, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.08363176265239293;  // std dev = 1.367, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.2187701851251984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17329270179836015;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(F, G) )
%   | | then if ( enzyme(E, H), complex(E, I) )
%   | | | then return -0.12019737677083595;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.12278415311811056;  // std dev = 1.383, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else return -0.20821681594097818;  // std dev = 0.253, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return 0.041278002888371926;  // std dev = 0.628, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.0643487572931324;  // std dev = 0.632, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.39658245659541286;  // std dev = 0.267, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.1498542316182943;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18367903569405164;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.2865770909886357;  // std dev = 0.272, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, F), complex(H, I) )
%   | | | then return -0.11827484088202472;  // std dev = 0.213, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.24396520716328732;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( enzyme(K, L) )
%   | | | then return 0.24701736608731953;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08478092888771127;  // std dev = 0.360, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.18749305124215038;  // std dev = 0.821, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.06486738165830751;  // std dev = 1.203, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14040544592508677;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.11441972357149065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.04123102735121431;  // std dev = 0.484, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.22318591424387124;  // std dev = 0.187, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.10296698632077687;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, I), phenotype(I, J) )
%   | | | then return 0.11035048008511765;  // std dev = 0.889, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.11187611635981884;  // std dev = 0.908, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return 0.13622557922270628;  // std dev = 0.686, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.790219
   AUC PR    = 0.10347
   CLL	      = -0.506047
   Precision = 0.0191 at threshold = 0.5
   Recall    = 0.678161
   F1        = 0.037154


Total learning time: 2.74 seconds
Total inference time: 4.967 seconds
AUC ROC: 0.790219


Results scoring model
   AUC ROC   = 0.9912
   AUC PR    = 0.990502
   CLL	      = -0.250591
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.533 seconds
Refined model CLL: -0.250591


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.790219
   AUC PR    = 0.10347
   CLL	      = -0.506047
   Precision = 0.0191 at threshold = 0.5
   Recall    = 0.678161
   F1        = 0.037154


Total learning time: 4.9190000000000005 seconds
Total inference time: 4.967 seconds
AUC ROC: 0.790219
Total revision time: 4.9190000000000005
Best scored revision CLL: -0.250591


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:17:20
{'AUC ROC': 0.790219, 'AUC PR': 0.10347, 'CLL': -0.506047, 'Precision': [0.0191, 0.5], 'Recall': 0.678161, 'F1': 0.037154, 'Learning time': 4.9190000000000005, 'Inference time': 4.967, 'parameter_25': {'AUC ROC': 0.976889, 'AUC PR': 0.273367, 'CLL': -0.281112, 'Precision': [0.19174, 0.5], 'Recall': 0.747126, 'F1': 0.305164, 'Learning time': 1.031, 'Inference time': 4.829}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47540780245230163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2524563035587763;  // std dev = 0.947, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then return 0.10604763597062224;  // std dev = 0.569, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2032351382430256;  // std dev = 0.940, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08977250217353569;  // std dev = 0.552, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.15985785754612764;  // std dev = 0.935, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return -0.12091519461743452;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.12493976810961377;  // std dev = 0.492, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return -0.26550283255844637;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.25350101250772344;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1348368963616487;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(K, A) )
%   | | | then return 0.11020337577261897;  // std dev = 0.464, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08898945595027405;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3177888455383615;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.12928867617578796;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06844287224133866;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then return 0.032007646467817355;  // std dev = 0.404, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0525039319998736;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10989786383285799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20945081143481495;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12316453638409526;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4718938323914442;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.39145749971824356;  // std dev = 0.193, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.943766
   AUC PR    = 0.091217
   CLL	      = -0.171995
   Precision = 0.089744 at threshold = 0.5
   Recall    = 0.471154
   F1        = 0.150769


Total learning time: 0.87 seconds
Total inference time: 6.488 seconds
AUC ROC: 0.943766


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.258707
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.559 seconds
Parameter learned model CLL: -0.258707


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [0.0, 2, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,false': 'interaction(D, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [1.05e-08, 0, 3], 'false,true,false,false': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.947, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, A), interaction(D, E)', 'false,true,false': 'interaction(F, A), interaction(F, D)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [0.569, 3, 2], 'false,false,false,true': [0.94, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.552, 3, 2], 'false,false,false,true': [0.935, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,false': 'interaction(E, A)', 'false,false,true': 'interaction(E, F), interaction(F, A)', 'false,false,false': 'phenotype(A, G), interaction(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.492, 2, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.464, 2, 2], 'false,false,false,false': [0.89, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.023, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.887, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [0.404, 3, 2], 'false,false,false,true': [0.886, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.092, 0, 3], 'false,true,false,false': [0.019, 2, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.193, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [nan, 0.24999999999999994], 'false': [0.24999999999999992, 0.25], 'false,false': [0.25, nan], 'false,false,true': [nan, 0.25], 'false,true': [0.0, 0.23999999999999994], 'false,true,false': [1.4802973661668753e-16, 0.0]}, {'': [nan, 0.20711598086356928], 'false': [0.1784716281162939, 0.25], 'false,false': [0.0, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,true': [0.0, 0.17133276299164224], 'false,true,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,true,true': [nan, 0.0]}, {'': [nan, 0.15682506151956288], 'false': [0.11145008534151417, 0.22431347954939473], 'false,false': [nan, 0.22431347954939473], 'false,false,false': [0.22431347954939473, nan], 'false,true': [0.0, 0.10699208192785359], 'false,true,false': [3.700743415417188e-17, 0.0]}, {'': [nan, 0.12935705362486333], 'false': [0.0, 0.13653309966530391], 'false,false': [0.06467402458697027, 0.2211094931810274], 'false,false,false': [0.2211094931810274, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [nan, 0.12263469942886396], 'false': [0.0, 0.13226916081952175], 'false,false': [0.06088245820860472, 0.21877367406222217], 'false,false,false': [0.21877367406222217, nan], 'false,false,true': [nan, 0.06088245820860472]}, {'': [nan, 0.1186430715577208], 'false': [0.0, 0.1293267552518581], 'false,false': [0.05802687618961756, 0.21717260251544207], 'false,false,false': [0.0, 0.2222222222222222], 'false,false,true': [0.0, 0.06044466269751829]}, {'': [0.0, 0.11742374405041284], 'false': [0.0, 0.12599515895894875], 'false,false': [nan, 0.12599515895894875], 'false,false,false': [0.05388282895230222, 0.19788247376848084], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [nan, 0.10414102810830836], 'false': [0.04232497099180569, 0.1968617763042187], 'false,false': [0.1968617763042187, nan], 'false,false,true': [nan, 0.1968617763042187], 'false,true': [0.004398741495006696, 0.00017915529564587843], 'false,true,true': [0.0, 0.0]}, {'': [nan, 0.09602966016886995], 'false': [0.0, 0.10545356924728075], 'false,false': [0.032699126460346846, 0.19616323510838615], 'false,false,false': [0.19616323510838615, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [nan, 0.09533534137154705], 'false': [0.028428143957331134, 0.19568030988199153], 'false,false': [0.19568030988199153, nan], 'false,false,true': [0.0, 0.01867285843619687], 'false,true': [0.0, 0.028329000253424597], 'false,true,false': [0.002845882077987675, 0.00017389575376322054], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(D, A).;true;true
0;true;interaction(E, D), interaction(E, A).;true;true
0;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
1;;proteinclass(A, B) :- interaction(D, A).;true;true
1;true;interaction(E, D), interaction(E, A).;true;true
1;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(D, A).;true;true
2;true;interaction(E, D), interaction(E, A).;true;true
2;true,false;interaction(D, F), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
4;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
5;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,false;phenotype(A, G), interaction(A, H).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
7;;proteinclass(A, B) :- interaction(D, A).;true;true
7;true;interaction(D, E), recursion_proteinclass(E, B).;true;true
7;true,true;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(D, A).;true;true
9;true;interaction(D, E), interaction(E, A).;true;true
9;true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( phenotype(A, F), interaction(A, G) )
%   | then return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.47540780245230163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.2524563035587763;  // std dev = 0.947, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, D) )
%   | then return 0.4146200800191372;  // std dev = 0.631, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.06306031745026705;  // std dev = 0.569, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, D) )
%   | then return 0.33093794685872485;  // std dev = 0.588, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.0529939301770706;  // std dev = 0.572, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return -0.1924678013536217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.12919853893700425;  // std dev = 0.462, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then return -0.18291704628139593;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2268598065641325;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then return -0.10280236663790586;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( complex(A, F) )
%   | | then return 0.23432294628412245;  // std dev = 0.490, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.04981080821131001;  // std dev = 0.567, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3088410230600601;  // std dev = 0.166, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.13035175941368748;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.06637869192783767;  // std dev = 0.640, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, D) )
%   | then return 0.17408568052973616;  // std dev = 0.444, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.06682730203591261;  // std dev = 0.520, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return -0.2061214406694238;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.2099624607537466;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08019808159815944;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(F, G), recursion_proteinclass(F, B) )
%   | then return 0.3244889147202643;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.2464084755172094;  // std dev = 0.135, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.798307
   AUC PR    = 0.06275
   CLL	      = -0.178667
   Precision = 0.071831 at threshold = 0.5
   Recall    = 0.490385
   F1        = 0.125307


Total learning time: 1.028 seconds
Total inference time: 5.047 seconds
AUC ROC: 0.798307


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.203094
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.547 seconds
Refined model CLL: -0.203094


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.798307
   AUC PR    = 0.06275
   CLL	      = -0.178667
   Precision = 0.071831 at threshold = 0.5
   Recall    = 0.490385
   F1        = 0.125307


Total learning time: 3.004 seconds
Total inference time: 5.047 seconds
AUC ROC: 0.798307
Total revision time: 3.004
Best scored revision CLL: -0.203094


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:17:35
{'AUC ROC': 0.798307, 'AUC PR': 0.06275, 'CLL': -0.178667, 'Precision': [0.071831, 0.5], 'Recall': 0.490385, 'F1': 0.125307, 'Learning time': 3.004, 'Inference time': 5.047, 'parameter_5': {'AUC ROC': 0.943766, 'AUC PR': 0.091217, 'CLL': -0.171995, 'Precision': [0.089744, 0.5], 'Recall': 0.471154, 'F1': 0.150769, 'Learning time': 0.87, 'Inference time': 6.488}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2072058164229512;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5427941835770488;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.3167736570994425;  // std dev = 1.026, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08534959966911282;  // std dev = 1.121, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.24947309223397457;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07252564377633867;  // std dev = 1.110, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1918859431328496;  // std dev = 1.010, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.045411019014309655;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0692965688095808;  // std dev = 0.680, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return -0.028399010017369664;  // std dev = 0.401, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2602296195494195;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return -0.1681827574467352;  // std dev = 0.062, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.0023380611024543044;  // std dev = 0.422, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.161083181552163;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12271152277400503;  // std dev = 0.987, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.44451232622257963;  // std dev = 0.365, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16099102214467798;  // std dev = 0.143, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06574291654242939;  // std dev = 0.974, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.23766450073830558;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.023943838490940946;  // std dev = 0.895, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07463235992486623;  // std dev = 0.983, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.16552577783127476;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07738081112227037;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21610960794872078;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11025976967410016;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3327046403414092;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.49136566816333693;  // std dev = 0.180, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.941821
   AUC PR    = 0.102846
   CLL	      = -0.232609
   Precision = 0.096012 at threshold = 0.5
   Recall    = 0.625
   F1        = 0.166453


Total learning time: 1.058 seconds
Total inference time: 7.132 seconds
AUC ROC: 0.941821


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990455
   CLL	      = -0.271062
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.573 seconds
Parameter learned model CLL: -0.271062


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 2, 3], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.866, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.026, 2, 3], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.121, 8, 4], 'false,false,false,true': [1.016, 2, 3], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.11, 8, 4], 'false,false,false,true': [1.01, 2, 3], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.866, 3, 1], 'false,false,true,false': [0.68, 5, 3], 'false,false,false,true': [0.401, 1, 1], 'false,false,false,false': [0.866, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.062, 2, 0], 'false,true,false': [0.422, 3, 1], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.914, 3, 3], 'false,false,false,false': [0.987, 2, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.365, 0, 4], 'false,true,false': [0.143, 8, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.974, 2, 3], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [0.895, 8, 4], 'false,false,false,true': [0.983, 2, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.719, 2, 1], 'false,true,false,true': [0.098, 0, 4], 'false,true,false,false': [0.023, 5, 0], 'false,false,true,true': [0.17, 0, 4], 'false,false,true,false': [0.18, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24930747922437652], 'false': [0.2366863905325442, 0.22222222222222213], 'false,true': [0.18750000000000003, 0.24691358024691365], 'false,true,false': [0.0, -2.7755575615628915e-18], 'false,false': [0.23999999999999994, 0.0], 'false,false,true': [nan, 0.23999999999999994], 'true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.20731103994953687], 'false': [0.18488210747925687, 0.21482212755845045], 'false,false': [0.2146835981953826, 0.1875], 'false,false,true': [0.0, 0.0], 'false,false,false': [nan, 0.1875], 'false,true': [0.18749999999999997, 0.1762682746827594], 'false,true,true': [nan, 0.18749999999999997], 'false,true,false': [0.0, 0.0]}, {'': [0.0, 0.16001738616679836], 'false': [0.13614771854214203, 0.18333567779215554], 'false,false': [nan, 0.18333567779215554], 'false,false,false': [0.21051506093398542, 0.0], 'false,true': [0.18749999999999994, 0.11007415836198932], 'false,true,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.13306963647711423], 'false': [0.0, 0.1366787814034357], 'false,false': [0.10472469046496428, 0.17597761021981875], 'false,false,false': [0.20646686444275372, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.1254479116957497], 'false': [0.0, 0.13028573904075658], 'false,false': [0.10271696467341533, 0.17220098752669008], 'false,false,false': [0.20387516610728623, 0.0], 'false,false,true': [nan, 0.10271696467341533], 'true': [nan, 0.0]}, {'': [0.0, 0.12116763870107555], 'false': [0.0, 0.1265583817840207], 'false,false': [0.10116442637934753, 0.1703167708324718], 'false,false,false': [0.08041265529368025, 0.1875], 'false,false,true': [0.18750000000000003, 0.057806466406013834], 'true': [nan, 0.0]}, {'': [0.0, 0.1162321149510928], 'false': [0.03649770583298902, 0.13979558770882078], 'false,false': [0.0, 0.15109098702325793], 'false,false,false': [0.1391358919313296, 0.16230989001649257], 'false,true': [0.0019267922785880694, 0.04461500817501391], 'true': [nan, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.11206759022574786], 'false': [0.08836360484662535, 0.16215687498739756], 'false,false': [0.1896620781328071, 0.0], 'false,false,true': [nan, 0.1896620781328071], 'false,true': [0.03812521431928719, 0.002560182742748475], 'false,true,true': [0.0, 0.03335427283506867], 'true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.0941735886371181], 'false': [0.0, 0.0987463772670972], 'false,false': [0.0668065760902607, 0.16091309548399857], 'false,false,false': [0.16091309548399857, nan], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'true,false': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.09361815972209497], 'false': [0.06222005894331928, 0.16107976721277903], 'false,false': [0.16107976721277903, nan], 'false,false,true': [0.0071979305591439585, 0.01611552494731086], 'false,true': [0.1402792300482125, 0.027425854688078188], 'false,true,true': [0.0, 0.17228807065835502], 'false,true,false': [0.0024019209043700807, 0.0001041258706413431]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,true;interaction(H, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2072058164229512;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.5427941835770488;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.3167736570994425;  // std dev = 1.026, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.01240345348772459;  // std dev = 0.697, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.378608759139625;  // std dev = 0.653, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.24947309223397457;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.12428102340854012;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.21006567881710422;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1918859431328496;  // std dev = 1.010, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.19435406855582604;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.03692533484839042;  // std dev = 1.071, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.3126480246663066;  // std dev = 0.602, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return -0.1145492533946342;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.022923934188295258;  // std dev = 0.288, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return 0.40079628255266586;  // std dev = 0.245, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04588869960103478;  // std dev = 1.130, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3626080629072572;  // std dev = 0.322, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.13216741455234812;  // std dev = 0.114, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.09064112949308571;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.14372885356772447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( complex(A, G), complex(F, H) )
%   | | | then return 0.21708760291523524;  // std dev = 0.400, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10949367244546807;  // std dev = 0.757, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.007778423076929547;  // std dev = 0.421, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.28329120930880286;  // std dev = 0.330, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.13280305755802538;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.048836373424298994;  // std dev = 0.529, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1791254055241442;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09259539411679496;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.07049097848184362;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.915707
   AUC PR    = 0.118975
   CLL	      = -0.256912
   Precision = 0.06038 at threshold = 0.5
   Recall    = 0.701923
   F1        = 0.111196


Total learning time: 1.149 seconds
Total inference time: 5.529 seconds
AUC ROC: 0.915707


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.995455
   CLL	      = -0.252598
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.502 seconds
Refined model CLL: -0.252598


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.915707
   AUC PR    = 0.118975
   CLL	      = -0.256912
   Precision = 0.06038 at threshold = 0.5
   Recall    = 0.701923
   F1        = 0.111196


Total learning time: 3.282 seconds
Total inference time: 5.529 seconds
AUC ROC: 0.915707
Total revision time: 3.282
Best scored revision CLL: -0.252598


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:17:52
{'AUC ROC': 0.915707, 'AUC PR': 0.118975, 'CLL': -0.256912, 'Precision': [0.06038, 0.5], 'Recall': 0.701923, 'F1': 0.111196, 'Learning time': 3.282, 'Inference time': 5.529, 'parameter_10': {'AUC ROC': 0.941821, 'AUC PR': 0.102846, 'CLL': -0.232609, 'Precision': [0.096012, 0.5], 'Recall': 0.625, 'F1': 0.166453, 'Learning time': 1.058, 'Inference time': 7.132}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050922032513554226;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7554192504913506;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.22660783036845136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5233921696315487;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04434629760466851;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.388410358036802;  // std dev = 1.091, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.5464734257988051;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07186022455713394;  // std dev = 1.294, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2998284010835303;  // std dev = 1.077, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.41094949303461425;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4001478729843967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04265330695144468;  // std dev = 1.232, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.22727814540592733;  // std dev = 1.070, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.31626474948033956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.02230886165149764;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06113972450579584;  // std dev = 0.875, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.16637782119382663;  // std dev = 0.628, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19735985952691384;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return -0.14988110507524455;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.004787056545143557;  // std dev = 0.428, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.12768364116190725;  // std dev = 1.060, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.13940079273528647;  // std dev = 1.071, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4136842142717267;  // std dev = 0.430, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.13985049489227502;  // std dev = 0.111, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09502690499307977;  // std dev = 1.069, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.1989237631854428;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then return 0.01952455455800604;  // std dev = 1.024, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08537310727974545;  // std dev = 1.074, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.1443071611780663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05311134702106801;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.22893423563418866;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10960665597692947;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.26200821576322414;  // std dev = 0.201, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.5806802912407825;  // std dev = 0.133, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.951934
   AUC PR    = 0.1044
   CLL	      = -0.219703
   Precision = 0.073613 at threshold = 0.5
   Recall    = 0.625
   F1        = 0.131712


Total learning time: 1.096 seconds
Total inference time: 7.031 seconds
AUC ROC: 0.951934


Results scoring model
   AUC ROC   = 0.991111
   AUC PR    = 0.991912
   CLL	      = -0.241114
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.933333


Total scoring time: 0.591 seconds
Parameter learned model CLL: -0.241114


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.894, 4, 1], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 2, 5], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.894, 4, 1], 'false,true,false,true': [2.11e-08, 0, 6], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.044, 0, 3], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.866, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.894, 4, 1], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.091, 2, 5], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true': [1.294, 13, 6], 'false,false,false,true': [1.077, 2, 5], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.232, 13, 5], 'false,false,false,true': [1.07, 2, 5], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 2], 'false,false,true,true': [0.894, 4, 1], 'false,false,true,false': [0.875, 9, 5], 'false,false,false,true': [0.628, 1, 3], 'false,false,false,false': [0.866, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.062, 4, 0], 'false,true,false': [0.428, 3, 1], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.06, 6, 5], 'false,false,false,false': [1.071, 2, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.43, 0, 6], 'false,true,false': [0.111, 13, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.069, 2, 5], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true': [1.024, 13, 6], 'false,false,false,true': [1.074, 2, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.772, 3, 1], 'false,true,false,true': [0.122, 0, 6], 'false,true,false,false': [0.031, 9, 0], 'false,false,true,true': [0.201, 0, 7], 'false,false,true,false': [0.133, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24970273483947686], 'false': [0.2275000000000001, 0.17283950617283939], 'false,true': [0.16000000000000003, 0.23999999999999985], 'false,true,false': [-1.4802973661668753e-16, -9.25185853854297e-18], 'false,false': [0.20408163265306106, 0.0], 'false,false,true': [nan, 0.20408163265306106], 'true': [nan, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.20056452509028552], 'false': [0.1733960855285681, 0.1680166814106196], 'false,true': [0.16, 0.17133276299164224], 'false,true,false': [7.401486830834377e-17, 0.0], 'false,false': [0.18130526139775965, 0.15615165659063734], 'false,false,true': [0.0006460516448401066, 0.0], 'false,true,true': [nan, 0.16], 'false,false,false': [0.0, 0.1875]}, {'': [0.0, 0.14591958700336397], 'false': [0.12252977410372243, 0.13691171002925895], 'false,false': [0.0, 0.15161819504050664], 'false,false,false': [0.17015494551535845, 0.0], 'false,true': [0.15999999999999998, 0.10699208192785359], 'false,true,false': [-7.401486830834377e-17, -1.5419764230904951e-18], 'true': [nan, 0.0], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.1142702701682278], 'false': [0.0, 0.11755739550312502], 'false,false': [0.0880923240570609, 0.1463734798925896], 'false,false,false': [0.1657404898855523, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.10505643529087785], 'false': [0.0, 0.1098884686021573], 'false,false': [0.08623681192461569, 0.14403159170752852], 'false,false,false': [0.16361770641694554, 0.0], 'false,false,true': [0.0, 0.0843013056707914], 'true': [nan, 0.0]}, {'': [0.0, 0.0987808123472642], 'false': [0.0, 0.1042100262738075], 'false,false': [0.08267970556133816, 0.14327790756197226], 'false,false,false': [0.09857587177430803, 0.1875], 'false,false,true': [0.15999999999999998, 0.05466851576670084], 'true': [nan, 0.0]}, {'': [0.0, 0.09865546128293028], 'false': [0.0293701075385863, 0.11388678149533157], 'false,false': [0.0, 0.11958328950449433], 'false,false,false': [0.10219026661943788, 0.1434192113371875], 'false,true': [0.0009667875931533045, 0.045812307374504056], 'true': [nan, 0.0], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.09184789660146007], 'false': [0.07369307163393926, 0.12845280979397689], 'false,false': [0.16319827519711502, 0.00011910737914885838], 'false,false,true': [nan, 0.16319827519711502], 'false,true': [0.03322164491700679, 0.0009412811434126994], 'false,true,true': [0.0, 0.030762336077765167], 'false,false,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.07760842936502711], 'false': [0.0, 0.08246550187292519], 'false,false': [0.0551871007564154, 0.14420042282036166], 'false,false,false': [0.14420042282036166, nan], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'true,false': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.07707039772650345], 'false': [0.05278681234482482, 0.12917053342219162], 'false,false': [0.12917053342219162, nan], 'false,false,true': [0.005757421802395603, 0.008797819774089721], 'false,true': [0.12533927676064255, 0.028565556921802782], 'false,true,true': [0.0, 0.14887928247488885], 'false,true,false': [0.0024902284956187424, 0.00010513508878514593]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
1;false,false,false;interaction(A, K), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false,false;interaction(A, J), interaction(J, K).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
4;false,false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;phenotype(A, F).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,true;interaction(H, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;phenotype(A, J), interaction(A, K).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.050922032513554226;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7492293200691814;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5141072739982948;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.04434629760466851;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.38500805943236666;  // std dev = 1.030, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.5480070934378327;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.036735962373029556;  // std dev = 1.088, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.14796279262269363;  // std dev = 0.662, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.2987981155732475;  // std dev = 1.009, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.41207710011670295;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.38202744944577804;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04252043186457101;  // std dev = 1.228, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.22811785427225661;  // std dev = 0.999, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.3170282850172298;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( phenotype(A, G), interaction(H, E) )
%   | | | then return -0.07737932699141656;  // std dev = 0.509, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.16754412398496904;  // std dev = 0.521, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10075943518105018;  // std dev = 1.078, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.48403332399681903;  // std dev = 0.429, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(E, F) )
%   | | then return -0.15195902412118775;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.016874431481877766;  // std dev = 0.329, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.0617433373607465;  // std dev = 0.738, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.21882439636157408;  // std dev = 1.143, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38213673613194304;  // std dev = 0.372, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return -0.10785554033602947;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13663242016058239;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.05655280439438267;  // std dev = 0.561, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1317357074828932;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.1433981185143176;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.14884381934516128;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.004491775209061762;  // std dev = 1.043, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.1410735432983404;  // std dev = 0.724, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.11371290369101755;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.04357959196776107;  // std dev = 0.625, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20354085757900875;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10500192400540527;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( complex(A, H) )
%   | | then return 0.2145727397256695;  // std dev = 0.171, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07370883267832287;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.943513
   AUC PR    = 0.106716
   CLL	      = -0.250175
   Precision = 0.058577 at threshold = 0.5
   Recall    = 0.673077
   F1        = 0.107775


Total learning time: 1.252 seconds
Total inference time: 5.677 seconds
AUC ROC: 0.943513


Results scoring model
   AUC ROC   = 0.993333
   AUC PR    = 0.993472
   CLL	      = -0.232775
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.933333


Total scoring time: 0.535 seconds
Refined model CLL: -0.232775


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.943513
   AUC PR    = 0.106716
   CLL	      = -0.250175
   Precision = 0.058577 at threshold = 0.5
   Recall    = 0.673077
   F1        = 0.107775


Total learning time: 3.474 seconds
Total inference time: 5.677 seconds
AUC ROC: 0.943513
Total revision time: 3.474
Best scored revision CLL: -0.232775


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:18:08
{'AUC ROC': 0.943513, 'AUC PR': 0.106716, 'CLL': -0.250175, 'Precision': [0.058577, 0.5], 'Recall': 0.673077, 'F1': 0.107775, 'Learning time': 3.474, 'Inference time': 5.677, 'parameter_15': {'AUC ROC': 0.951934, 'AUC PR': 0.1044, 'CLL': -0.219703, 'Precision': [0.073613, 0.5], 'Recall': 0.625, 'F1': 0.131712, 'Learning time': 1.096, 'Inference time': 7.031}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16653882456488173;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7744639907355253;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2072058164229512;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29279418357704884;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1420942428155648;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3182820108209932;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.5417493347875939;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then return 0.10907100572527807;  // std dev = 1.621, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2509674545901361;  // std dev = 1.433, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.4074873676530909;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.39125027217520825;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07984610527001854;  // std dev = 1.567, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.19318875956078801;  // std dev = 1.426, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.3139213857947746;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.08564278258880154;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07337960502721311;  // std dev = 1.062, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.2583623241500531;  // std dev = 0.662, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.071168123237199;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return -0.19607636771901216;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.007265168784390194;  // std dev = 0.419, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1370622930795342;  // std dev = 1.357, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.12016833635642091;  // std dev = 1.411, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3982657260189021;  // std dev = 0.496, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.16536744776182877;  // std dev = 0.232, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08246768472026257;  // std dev = 1.409, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.186289660946252;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then return 0.03304702978056548;  // std dev = 1.259, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07131638856491482;  // std dev = 1.413, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.20526260886142858;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09789805473492603;  // std dev = 0.940, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.22370611826175996;  // std dev = 0.111, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11936290047310917;  // std dev = 0.043, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.33972574390873145;  // std dev = 0.377, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.4951570849988241;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.951418
   AUC PR    = 0.109172
   CLL	      = -0.26367
   Precision = 0.089286 at threshold = 0.5
   Recall    = 0.625
   F1        = 0.15625


Total learning time: 1.07 seconds
Total inference time: 7.014 seconds
AUC ROC: 0.951418


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.269721
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.593 seconds
Parameter learned model CLL: -0.269721


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 9], 'false,true,false,false': [0.0, 12, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.549, 4, 6], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.155, 4, 2], 'false,true,false,true': [2.98e-08, 0, 9], 'false,true,false,false': [5.27e-09, 12, 0], 'false,false,true,true': [0.063, 0, 4], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 9], 'false,true,false,false': [9.13e-09, 12, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.445, 4, 6], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true': [1.621, 16, 10], 'false,false,false,true': [1.433, 4, 6], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 2], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.567, 16, 9], 'false,false,false,true': [1.426, 4, 6], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 2], 'false,false,true,true': [1.155, 4, 2], 'false,false,true,false': [1.062, 12, 8], 'false,false,false,true': [0.662, 1, 4], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.136, 4, 0], 'false,true,false': [0.419, 3, 1], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.357, 9, 9], 'false,false,false,false': [1.411, 4, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.496, 0, 10], 'false,true,false': [0.232, 16, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.409, 4, 6], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true': [1.259, 16, 10], 'false,false,false,true': [1.413, 4, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.94, 3, 2], 'false,true,false,true': [0.111, 0, 9], 'false,true,false,false': [0.043, 12, 0], 'false,false,true,true': [0.377, 0, 8], 'false,false,true,false': [0.067, 4, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24983563445101867], 'false': [0.2414266117969817, 0.2222222222222221], 'false,true': [0.22222222222222224, 0.24489795918367352], 'false,true,false': [-2.9605947323337506e-16, -1.1564823173178714e-17], 'false,false': [0.23999999999999994, 0.0], 'false,false,true': [nan, 0.23999999999999994], 'true': [nan, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [0.0, 0.20591002185872143], 'false': [0.18621102272387197, 0.21482212755845073], 'false,false': [0.15499448797290732, 0.2365781833650153], 'false,false,false': [0.0, 0.25], 'false,true': [0.2222222222222222, 0.17482934999147157], 'false,true,true': [nan, 0.2222222222222222], 'false,true,false': [9.868649107779169e-17, 2.3129646346357427e-18], 'false,false,true': [0.0010079879088220611, 0.0]}, {'': [0.0, 0.15655001600829105], 'false': [0.13447118082356416, 0.18126636552388345], 'false,false': [0.0, 0.19382938499085425], 'false,false,false': [0.20867253759168572, 0.0], 'false,true': [0.22222222222222224, 0.10917559380393227], 'false,true,false': [-1.4802973661668753e-16, 6.938893903907228e-18], 'true': [nan, 0.0], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.12874096960222423], 'false': [0.0, 0.13217901345918312], 'false,false': [0.10106177017991405, 0.18860035514940787], 'false,false,false': [0.20523325582932728, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.12220048860512474], 'false': [0.0, 0.12684611002733712], 'false,false': [0.09805778897569165, 0.18602273113627998], 'false,false,false': [0.20329987997378476, 0.0], 'false,false,true': [0.0, 0.0982503868744918], 'true': [nan, 0.0]}, {'': [0.0, 0.11772318022599346], 'false': [0.0, 0.12285192012626248], 'false,false': [0.09470183712318211, 0.18488591620635517], 'false,false,false': [0.0876353780964894, 0.25000000000000006], 'false,false,true': [0.2222222222222222, 0.05641101724179924], 'true': [nan, 0.0]}, {'': [0.0, 0.11718902029243901], 'false': [0.033142438703100525, 0.1279789066046204], 'false,false': [0.0, 0.1321833936904942], 'false,false,false': [0.10224108581588379, 0.1810027490740104], 'false,true': [0.004612464963513613, 0.043847578021122734], 'true': [nan, 0.0], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.10989447603115138], 'false': [0.08405714438496643, 0.16675221357379533], 'false,false': [0.19845748408630798, 2.1128562409940266e-05], 'false,false,true': [nan, 0.19845748408630798], 'false,true': [0.026380282048351897, 0.0033530922150621333], 'false,true,true': [0.0, 0.024571416840900695], 'false,false,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.09267138200280466], 'false': [0.0, 0.09707894827707064], 'false,false': [0.06096309348131811, 0.1814145570743411], 'false,false,false': [0.1814145570743411, nan], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'true,false': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.09218410641717523], 'false': [0.058603735634109456, 0.1671421078234152], 'false,false': [0.1671421078234152, nan], 'false,false,true': [0.017801765609915185, 0.0011365669139601353], 'false,true': [0.16015980585377013, 0.02950143308214432], 'false,true,true': [0.0, 0.17687403569916046], 'false,true,false': [0.0013776838607259473, 0.00015295144861982254]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
1;false,false,false;interaction(A, K), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false,false;interaction(A, J), interaction(J, K).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
4;false,false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;phenotype(A, F).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;phenotype(A, J), interaction(A, K).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.16653882456488173;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.747906431966103;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1667945087684516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2952947982246837;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.1420942428155648;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.31192507952538767;  // std dev = 1.327, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.548334745772167;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.13376435775584564;  // std dev = 0.135, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.19853666595516573;  // std dev = 1.430, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.24779853007673572;  // std dev = 1.303, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.4123182365326524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.37016117136594484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07638325923596678;  // std dev = 1.511, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.19282204209218307;  // std dev = 1.288, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.31719158615263887;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4292312994652049;  // std dev = 0.147, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19850553136287485;  // std dev = 0.317, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.06884785934588242;  // std dev = 1.140, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.29720209122499264;  // std dev = 0.985, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.12243345487239052;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.0335637436062045;  // std dev = 0.279, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.03753152167217055;  // std dev = 1.019, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.15895925569999692;  // std dev = 1.378, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3656367071061778;  // std dev = 0.504, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.19384948274454067;  // std dev = 0.154, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10949174052037781;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.3008195811954708;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08850328833617103;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.17652636629120966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.335251070587274;  // std dev = 0.283, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13684687679994;  // std dev = 0.192, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.03129691237929707;  // std dev = 1.108, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.16525644827826402;  // std dev = 0.621, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.11827152585987573;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09618014341988676;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17647492506788465;  // std dev = 0.064, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.10329489076456509;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.18292909969611992;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35819309683836176;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.3470980341642883;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.969764
   AUC PR    = 0.138734
   CLL	      = -0.260698
   Precision = 0.072381 at threshold = 0.5
   Recall    = 0.730769
   F1        = 0.131716


Total learning time: 2.851 seconds
Total inference time: 8.477 seconds
AUC ROC: 0.969764


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.211143
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.648 seconds
Refined model CLL: -0.211143


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969764
   AUC PR    = 0.138734
   CLL	      = -0.260698
   Precision = 0.072381 at threshold = 0.5
   Recall    = 0.730769
   F1        = 0.131716


Total learning time: 5.162 seconds
Total inference time: 8.477 seconds
AUC ROC: 0.969764
Total revision time: 5.162
Best scored revision CLL: -0.211143


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:18:30
{'AUC ROC': 0.969764, 'AUC PR': 0.138734, 'CLL': -0.260698, 'Precision': [0.072381, 0.5], 'Recall': 0.730769, 'F1': 0.131716, 'Learning time': 5.162, 'Inference time': 8.477, 'parameter_20': {'AUC ROC': 0.951418, 'AUC PR': 0.109172, 'CLL': -0.26367, 'Precision': [0.089286, 0.5], 'Recall': 0.625, 'F1': 0.15625, 'Learning time': 1.07, 'Inference time': 7.014}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3819584589090361;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11418623766746651;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8056495294875434;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19443880212097353;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43361686313547326;  // std dev = 1.578, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.09835299714676603;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6484862589809379;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2619391965309695;  // std dev = 2.067, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.2454618875427197;  // std dev = 0.578, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4909774176820494;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.12246133139779246;  // std dev = 1.738, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.20976302004145506;  // std dev = 2.042, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.19859256711858803;  // std dev = 0.563, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.37120013424454934;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10239755464604854;  // std dev = 1.722, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16433188956471678;  // std dev = 2.024, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.15751507311246943;  // std dev = 0.552, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.28940577258094735;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.0468477371132467;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.12000480929513398;  // std dev = 0.845, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.04843843091559271;  // std dev = 1.313, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.21185144214008575;  // std dev = 1.572, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(G, C), interaction(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23367455747809174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( interaction(I, H) )
%   | | then return -0.17075712445915983;  // std dev = 0.411, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.06228597486271289;  // std dev = 0.583, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.23829697817821652;  // std dev = 1.289, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.09606914432210831;  // std dev = 2.067, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.20539288087596738;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43891126582031287;  // std dev = 0.599, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.19422806920590313;  // std dev = 0.134, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.39276116171516406;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.062306877346304745;  // std dev = 1.967, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.09074639379328622;  // std dev = 0.540, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.20407421589442565;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15896525478062257;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18487538397023595;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03659999889136404;  // std dev = 1.348, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05480234701511345;  // std dev = 2.049, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15021118471034303;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.18045570100742891;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.07318034038388108;  // std dev = 1.153, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.20899615128861812;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1406024518351285;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4222587283307232;  // std dev = 0.328, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.39725294415803136;  // std dev = 0.306, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.90255
   AUC PR    = 0.117829
   CLL	      = -0.320382
   Precision = 0.138796 at threshold = 0.5
   Recall    = 0.798077
   F1        = 0.236467


Total learning time: 1.103 seconds
Total inference time: 5.733 seconds
AUC ROC: 0.90255


Results scoring model
   AUC ROC   = 0.9808
   AUC PR    = 0.982524
   CLL	      = -0.325236
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.93617


Total scoring time: 0.597 seconds
Parameter learned model CLL: -0.325236


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.477, 8, 3], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.289, 10, 11], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.477, 8, 3], 'false,true,false,true': [2.11e-08, 0, 6], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.003, 0, 6], 'false,false,true,false': [0.003, 7, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.578, 4, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.477, 8, 3], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.067, 10, 11], 'false,false,false,false': [0.578, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,false': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.738, 14, 9], 'false,false,false,true': [2.042, 10, 11], 'false,false,false,false': [0.563, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.722, 14, 9], 'false,false,false,true': [2.024, 10, 11], 'false,false,false,false': [0.552, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.477, 8, 3], 'false,false,true,false': [0.845, 6, 6], 'false,false,false,true': [1.313, 7, 5], 'false,false,false,false': [1.572, 4, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(G, C), interaction(C, G)', 'false': 'interaction(A, H), interaction(I, A)', 'false,true': 'interaction(I, H)', 'false,false': 'interaction(A, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.411, 6, 1], 'false,true,false': [0.583, 3, 3], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.289, 5, 7], 'false,false,false,false': [2.067, 11, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.045, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.599, 0, 9], 'false,true,false': [0.134, 14, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.967, 10, 11], 'false,false,false,true': [0.54, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.014, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.348, 14, 9], 'false,false,false,true': [2.049, 11, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.03, 0, 3], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [1.153, 6, 3], 'false,true,false,true': [0.034, 0, 6], 'false,true,false,false': [0.024, 6, 0], 'false,false,true,true': [0.328, 0, 13], 'false,false,true,false': [0.306, 11, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.248981439565414], 'false': [0.23818525519848777, 0.24826388888888848], 'false,false': [0.24793388429752028, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.2494331065759633], 'false,true': [0.1983471074380164, 0.24999999999999992], 'false,true,false': [-1.4802973661668753e-16, -6.938893903907228e-18], 'true': [0.0, 0.0]}, {'': [0.0, 0.22579074323376444], 'false': [0.19631802832347423, 0.2452658457736272], 'false,false': [0.24856640623366902, 0.22635321484675258], 'false,false,true': [1.911605900462021e-06, 1.6853341816399795e-06], 'false,false,false': [nan, 0.22635321484675258], 'false,true': [0.19834710743801673, 0.1784716281162939], 'false,true,true': [nan, 0.19834710743801667], 'false,true,false': [7.401486830834377e-17, -2.3129646346357427e-18]}, {'': [3.700743415417188e-17, 0.18106753276872767], 'false': [0.15679519824184238, 0.1979625759863718], 'false,false': [0.0, 0.20029762863165795], 'false,false,false': [0.20346264703905123, 0.16681704248701276], 'false,true': [0.19834710743801665, 0.11145008534151417], 'false,true,false': [-7.401486830834377e-17, 0.0], 'true': [nan, 3.700743415417188e-17], 'false,false,true': [nan, 0.0]}, {'': [-3.700743415417188e-17, 0.16374908043101752], 'false': [0.0, 0.16505664693995273], 'false,false': [0.13138519523287218, 0.19500163442078652], 'false,false,false': [0.19848626502520034, 0.15829908440537419], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true': [nan, -3.700743415417188e-17]}, {'': [0.0, 0.15889349046518478], 'false': [0.0, 0.16114117014112367], 'false,false': [0.12898692952683355, 0.19141401675646258], 'false,false,false': [0.19512633873657936, 0.15239220776013152], 'false,false,true': [nan, 0.12898692952683355], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0, 0.15596808381982558], 'false': [0.0, 0.15864147296513068], 'false,false': [0.1272697709289096, 0.18914889995577044], 'false,false,false': [0.14374517336218026, 0.22474781428180443], 'false,false,true': [0.19834710743801656, 0.05955591408632314], 'true': [nan, 0.0]}, {'': [0.0, 0.14699565341054874], 'false': [0.05266460652756973, 0.16937799777599832], 'false,false': [0.0, 0.17410027963556987], 'false,false,false': [0.13852204670605084, 0.18572726221288588], 'false,true': [0.024131923921668085, 0.05670938215823884], 'true': [nan, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.0006649145783885572, 0.1456284506959847], 'false': [0.11185138299856591, 0.1776941545457834], 'false,false': [0.18058037720771983, 0.14578064476834152], 'false,false,true': [0.0, 0.18421580487732458], 'false,false,false': [0.14578064476834152, nan], 'false,true': [0.03983092390939712, 0.0012898687725429855], 'false,true,true': [nan, 0.03983092390939727], 'true': [0.0006649145783885572, nan]}, {'': [0.0005168300351705383, 0.12841423307410293], 'false': [0.0, 0.1307937306448344], 'false,false': [0.07897081005240605, 0.18245098849865365], 'false,false,false': [0.18245098849865365, nan], 'true': [0.0, 9.697226183361107e-05], 'true,false': [nan, 9.697226183361107e-05], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.00030947423708876004, 0.12782283341808337], 'false': [0.07836236712183124, 0.17509930044932942], 'false,false': [0.17509930044932942, nan], 'false,false,true': [0.00825646643738515, 0.008494196962005394], 'false,true': [0.13033122104969197, 0.030699923034031313], 'false,true,true': [0.0, 0.14759712525398944], 'false,true,false': [0.00019417846865782407, 9.607594636737206e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, H), interaction(I, A).;true;true
6;false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,true;interaction(D, A), phenotype(A, F).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3819584589090361;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.2570624760852285;  // std dev = 1.169, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.15231548833711311;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8056495294875434;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19443880212097353;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.5070943802255008;  // std dev = 1.177, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.30503120822792507;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.13640642466433256;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.486827905414407;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6484862589809379;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.21243201296526382;  // std dev = 1.935, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.4870313925617632;  // std dev = 0.758, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.4909774176820494;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(F, E) )
%   | | | then return -0.1252065030461799;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10695921707982119;  // std dev = 0.567, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.31348014656442125;  // std dev = 1.657, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.11417987090979176;  // std dev = 1.598, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.37120013424454934;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, H) )
%   | | | then return -0.183271039107217;  // std dev = 0.198, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.11901892525875758;  // std dev = 1.212, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.47030827029889677;  // std dev = 0.155, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16017208336510372;  // std dev = 1.893, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.28940577258094735;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(G, E), complex(G, H) )
%   | | | then return -0.11861932467777991;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2045975790122204;  // std dev = 0.367, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.06971777361121334;  // std dev = 1.261, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.1733340062984715;  // std dev = 1.821, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.23367455747809174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return -0.04874113014670983;  // std dev = 0.288, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.0036738781145043975;  // std dev = 0.261, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09312444529609043;  // std dev = 0.432, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.17381013609245682;  // std dev = 1.534, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.03864250015128761;  // std dev = 1.542, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20180505002900626;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.28635498870639875;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30640998273923226;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.10745574226682747;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.21575265903782176;  // std dev = 0.219, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.3546934223729369;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07449291076894331;  // std dev = 1.905, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else return 0.09209835002453554;  // std dev = 0.488, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.18551045082848938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.16418542356437094;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.18304603921223894;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, H) )
%   | | | then return 0.041704483545093575;  // std dev = 0.864, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.095658107851063;  // std dev = 0.855, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.10063231070941338;  // std dev = 0.526, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09900647606828765;  // std dev = 1.644, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14830357690397966;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.0724510531273586;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.010734110855728134;  // std dev = 0.659, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.19852692619399645;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13663301558620722;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then return -0.08832442722357098;  // std dev = 0.976, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.05243704128778348;  // std dev = 1.517, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.42344850706191667;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.813074
   AUC PR    = 0.096543
   CLL	      = -0.357163
   Precision = 0.019834 at threshold = 0.5
   Recall    = 0.644231
   F1        = 0.038484


Total learning time: 2.023 seconds
Total inference time: 4.206 seconds
AUC ROC: 0.813074


Results scoring model
   AUC ROC   = 0.9928
   AUC PR    = 0.992407
   CLL	      = -0.321257
   Precision = 0.925926 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961538


Total scoring time: 0.587 seconds
Refined model CLL: -0.321257


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.813074
   AUC PR    = 0.096543
   CLL	      = -0.357163
   Precision = 0.019834 at threshold = 0.5
   Recall    = 0.644231
   F1        = 0.038484


Total learning time: 4.31 seconds
Total inference time: 4.206 seconds
AUC ROC: 0.813074
Total revision time: 4.31
Best scored revision CLL: -0.321257


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:18:45
{'AUC ROC': 0.813074, 'AUC PR': 0.096543, 'CLL': -0.357163, 'Precision': [0.019834, 0.5], 'Recall': 0.644231, 'F1': 0.038484, 'Learning time': 4.31, 'Inference time': 4.206, 'parameter_25': {'AUC ROC': 0.90255, 'AUC PR': 0.117829, 'CLL': -0.320382, 'Precision': [0.138796, 0.5], 'Recall': 0.798077, 'F1': 0.236467, 'Learning time': 1.103, 'Inference time': 5.733}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return -0.1490779674864458;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.10092203251355424;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04390133348909386;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return -0.13622225705341978;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.10705457911288746;  // std dev = 0.945, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.12097281686223753;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09070579167106224;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.10868706702674034;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.05206759885390732;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12461029684762537;  // std dev = 0.348, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.05558027945524554;  // std dev = 0.218, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.18256067649998511;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7936714411203036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0677271282950475;  // std dev = 0.388, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20069331884005037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2480091467501738;  // std dev = 0.611, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.14369816525097018;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1704190830279062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return -0.09103788098196022;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.028413938750753983;  // std dev = 0.729, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14083313966033822;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.12277977250874957;  // std dev = 0.055, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.04623810120607492;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2690378379087376;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10385688166084146;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.913365
   AUC PR    = 0.2766
   CLL	      = -0.440814
   Precision = 0.027 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.052393


Total learning time: 0.92 seconds
Total inference time: 2.538 seconds
AUC ROC: 0.913365


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.230018
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.539 seconds
Parameter learned model CLL: -0.230018


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.894, 4, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.888, 4, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.945, 4, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.94, 4, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.866, 3, 1], 'false,false,true,false': [0.348, 1, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.218, 1, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.058, 3, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.388, 1, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.611, 1, 2], 'false,true,false': [0.069, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.729, 4, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.01, 0, 2], 'false,true,true,true': [0.055, 2, 0], 'false,true,true,false': [0.644, 2, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.23437500000000006], 'false': [0.20408163265306126, 0.0], 'false,true': [0.16000000000000003, 0.25], 'false,true,false': [0.0, 0.0], 'true': [0.0, nan], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.19457669548680337], 'false': [0.17763708698395414, 0.0], 'false,true': [0.16, 0.178471628116294], 'false,true,false': [0.0, 0.0], 'false,true,true': [0.0, 0.18750000000000003], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}, {'': [0.0, 0.15524962148047355], 'false': [0.15089579511932663, 0.0], 'false,true': [0.15765974265756028, 0.11145008534151415], 'false,true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.13093943124388674], 'false': [0.0, 0.13930382216482928], 'false,false': [0.14875186959985412, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.12271464228850312], 'false': [0.0, 0.13277053587384277], 'false,false': [0.14734141772496193, 0.0], 'false,false,true': [nan, 0.14734141772496193], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.117999406989484], 'false': [0.0, 0.12931788910991562], 'false,false': [0.14629748401330434, 0.0], 'false,false,true': [0.1875, 0.06038415668510788], 'true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.02377068182620233, 0.11256008280934772], 'false': [0.17954033350048496, 0.0425964317712685], 'false,true': [0.0011298244656315765, 0.0], 'false,false': [0.0, 0.05455383261286556], 'false,false,false': [0.07510651967282109, 0.0], 'true': [0.02377068182620233, nan]}, {'': [0.00013920249144468155, 0.08262771692780257], 'false': [0.09150860683877102, 0.0], 'false,true': [0.12424989945564198, 0.0011949438296199773], 'false,true,true': [nan, 0.12424989945564202], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [7.810339411895226e-05, 0.07013417164185849], 'false': [0.0, 0.07779990497575288], 'false,false': [0.08855828025592843, 0.0], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0], 'false,true,false': [0.0, nan]}, {'': [4.659577298559217e-05, 0.06893098632315763], 'false': [0.07680404601817474, 0.0], 'false,true': [0.09053273634284201, 0.03476261797071875], 'false,true,true': [0.0015210026822663914, 0.13844707546252694], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,true;interaction(F, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return -0.1490779674864458;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.10092203251355424;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.04390133348909386;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.13622225705341978;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then return 0.10705457911288746;  // std dev = 0.945, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.12097281686223753;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then return 0.09070579167106224;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.10868706702674034;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then return 0.07624849818514669;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.05558027945524554;  // std dev = 0.218, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return -0.18336952307583085;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7896835226917427;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.07121395018310342;  // std dev = 0.398, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20069331884005037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.24817779735446002;  // std dev = 0.613, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.14419271023594282;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1704190830279062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.09099696566773187;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then return 0.027894456617270632;  // std dev = 0.731, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14083313966033822;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.1242898056293954;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.041796446481013515;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.27802412028804013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09927815013418316;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.79351
   AUC PR    = 0.027129
   CLL	      = -0.640316
   Precision = 0.02665 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.051788


Total learning time: 0.77 seconds
Total inference time: 1.949 seconds
AUC ROC: 0.79351


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.230782
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.513 seconds
Refined model CLL: -0.230782


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.913365
   AUC PR    = 0.2766
   CLL	      = -0.440814
   Precision = 0.027 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.052393


Total learning time: 2.742 seconds
Total inference time: 2.538 seconds
AUC ROC: 0.913365
Total revision time: 2.742
Best scored revision CLL: -0.230018


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:18:52
{'AUC ROC': 0.913365, 'AUC PR': 0.2766, 'CLL': -0.440814, 'Precision': [0.027, 0.5], 'Recall': 0.880435, 'F1': 0.052393, 'Learning time': 2.742, 'Inference time': 2.538, 'parameter_5': {'AUC ROC': 0.913365, 'AUC PR': 0.2766, 'CLL': -0.440814, 'Precision': [0.027, 0.5], 'Recall': 0.880435, 'F1': 0.052393, 'Learning time': 0.92, 'Inference time': 2.538}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return -0.16221334521702105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.17111998811631224;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11771592992590182;  // std dev = 1.440, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return -0.15625665432064192;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.139956729332778;  // std dev = 1.552, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.13674347913372278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7708396533743559;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0695121204696345;  // std dev = 1.385, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.12138829318315267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.0750476418847863;  // std dev = 1.349, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.12262127813753544;  // std dev = 0.600, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.05036624862477709;  // std dev = 0.225, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.01419156795171899;  // std dev = 0.705, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.202895676098732;  // std dev = 0.736, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.057250820221006436;  // std dev = 1.012, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20153103569633724;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38771378434128384;  // std dev = 0.840, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.20871034932282678;  // std dev = 0.181, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.17103868331805572;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return -0.09456902903613143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.04247444397673687;  // std dev = 1.272, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14106985517893578;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.1548310857652997;  // std dev = 0.096, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.056022932116424395;  // std dev = 1.156, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23151110333675703;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13245580419246897;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.879683
   AUC PR    = 0.177796
   CLL	      = -0.519356
   Precision = 0.026955 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.052309


Total learning time: 0.974 seconds
Total inference time: 2.407 seconds
AUC ROC: 0.879683


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.995455
   CLL	      = -0.297342
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.538 seconds
Parameter learned model CLL: -0.297342


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [1.449, 7, 3], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.414, 6, 3], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.44, 7, 3], 'false,true,false,true': [1.05e-08, 0, 3], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.552, 9, 6], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.385, 9, 5], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 1, 0], 'false,false,true,true': [1.349, 6, 3], 'false,false,true,false': [0.6, 3, 3], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.225, 1, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.705, 3, 1], 'false,true,false': [0.736, 2, 2], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.012, 4, 3], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.84, 1, 6], 'false,true,false': [0.181, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [1.272, 9, 6], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.01, 0, 2], 'false,true,true,true': [0.096, 2, 0], 'false,true,true,false': [1.156, 5, 3], 'false,true,false,true': [0.021, 0, 3], 'false,true,false,false': [0.02, 3, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24691358024691368], 'false': [0.23437500000000006, 0.0], 'false,true': [0.20999999999999988, 0.24999999999999992], 'false,true,false': [1.4802973661668753e-16, 0.0], 'true': [0.0, nan], 'false,false': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [0.0, 0.20834874471815606], 'false': [0.20411908022871117, 0.0], 'false,true': [0.20999999999999996, 0.1784716281162939], 'false,true,true': [0.0, 0.2222222222222222], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.17035100385093976], 'false': [0.17398051169969853, 0.0], 'false,true': [0.2074576440991283, 0.11145008534151417], 'false,true,false': [3.700743415417188e-17, 2.3129646346357427e-18], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.14697485925468293], 'false': [0.0, 0.149611906431046], 'false,false': [0.16049688913236484, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.14017133303066298], 'false': [0.0, 0.1441520419831581], 'false,false': [0.15845495222094552, 0.0], 'false,false,true': [0.0, 0.13698247586652193], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.12702590677625367], 'false': [0.0, 0.13144514749141537], 'false,false': [0.14591803231882963, 0.0], 'false,false,true': [0.20227645828035337, 0.060022442856758555], 'true': [nan, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [0.02540563975488535, 0.12254961527056657], 'false': [0.14168744314819642, 0.10720609210524741], 'false,true': [0.12437596979117041, 0.1354354807405124], 'false,false': [0.0, 0.11771089332156487], 'false,false,false': [0.1461740542059345, 0.0], 'true': [0.02540563975488535, nan]}, {'': [0.00014926166122045115, 0.1204119492125919], 'false': [0.13373090522926137, 0.0], 'false,true': [0.10087834593956531, 0.00365463138048293], 'false,true,true': [nan, 0.10087834593956531], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [8.367515749769724e-05, 0.09226773921898777], 'false': [0.0, 0.09644498085481834], 'false,false': [0.10787380061314407, 0.0], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0], 'false,true,false': [0.0, nan]}, {'': [4.9883499395046715e-05, 0.0912480535930496], 'false': [0.10138725604025553, 0.0], 'false,true': [0.1417888532109573, 0.033255796505184315], 'false,true,true': [0.004631483122605466, 0.167186312361672], 'false,true,false': [0.0001451250679171586, 0.0001305130542574052], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
5;false,false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,false;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2867203636709408;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.16510421165278982;  // std dev = 1.390, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.013616164249165183;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3091970550806256;  // std dev = 0.970, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.11096597674159961;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.2207624082267226;  // std dev = 1.325, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.03801089266934735;  // std dev = 0.526, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.10048223616886207;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7578685477036984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06302718628454766;  // std dev = 1.304, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.09175767545821756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.17781785498864983;  // std dev = 1.121, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.04656355995483246;  // std dev = 0.720, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, G), interaction(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.06268293666814208;  // std dev = 0.208, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( complex(A, F) )
%   | | then return 0.030228188770958578;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.18372844452526751;  // std dev = 0.631, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.02606110548137525;  // std dev = 0.945, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1995563642570376;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, H), location(F, I) )
%   | | | then return 0.16081268561156678;  // std dev = 0.593, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2507235055600196;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.16450644631152836;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3233881323372715;  // std dev = 0.732, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( recursion_proteinclass(L, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.16957733088643345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.10334278841397683;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.09999394607161441;  // std dev = 1.077, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.0716775790046397;  // std dev = 0.452, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14051128149515812;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.10949006779131658;  // std dev = 0.749, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10655750499658896;  // std dev = 0.717, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25187925581315646;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12374703364486393;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.869448
   AUC PR    = 0.04863
   CLL	      = -0.536531
   Precision = 0.02665 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.051788


Total learning time: 1.485 seconds
Total inference time: 2.12 seconds
AUC ROC: 0.869448


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.272572
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.538 seconds
Refined model CLL: -0.272572


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.869448
   AUC PR    = 0.04863
   CLL	      = -0.536531
   Precision = 0.02665 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.051788


Total learning time: 3.535 seconds
Total inference time: 2.12 seconds
AUC ROC: 0.869448
Total revision time: 3.535
Best scored revision CLL: -0.272572


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:19:01
{'AUC ROC': 0.869448, 'AUC PR': 0.04863, 'CLL': -0.536531, 'Precision': [0.02665, 0.5], 'Recall': 0.913043, 'F1': 0.051788, 'Learning time': 3.535, 'Inference time': 2.12, 'parameter_10': {'AUC ROC': 0.879683, 'AUC PR': 0.177796, 'CLL': -0.519356, 'Precision': [0.026955, 0.5], 'Recall': 0.880435, 'F1': 0.052309, 'Learning time': 0.974, 'Inference time': 2.407}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return -0.15302344955482045;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09697655044517954;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0671955068833595;  // std dev = 1.515, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return -0.14222765222378983;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.13784237308973193;  // std dev = 1.770, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.1257426495735064;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8036188070459127;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08505697347285378;  // std dev = 1.604, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.11255744503502021;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.027935972450447693;  // std dev = 1.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.1610316308384563;  // std dev = 0.834, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.1059068160083728;  // std dev = 0.254, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.07193800734943712;  // std dev = 0.774, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.13722247350230182;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1399559394204891;  // std dev = 1.122, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19274161705326487;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31857022653952866;  // std dev = 1.045, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.18659641436126348;  // std dev = 0.159, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.16451166715609356;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return -0.0946507377730632;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.04502174409948969;  // std dev = 1.469, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14008789385009104;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.17863946727608468;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.04164747497626781;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.22792291304997395;  // std dev = 0.000446, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1324046100678824;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.879387
   AUC PR    = 0.1937
   CLL	      = -0.520049
   Precision = 0.026955 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.052309


Total learning time: 1.075 seconds
Total inference time: 2.541 seconds
AUC ROC: 0.879387


Results scoring model
   AUC ROC   = 0.993333
   AUC PR    = 0.993472
   CLL	      = -0.272441
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.592 seconds
Parameter learned model CLL: -0.272441


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [1.519, 10, 3], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.5, 9, 3], 'false,true,false,true': [2.11e-08, 0, 7], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.515, 10, 3], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.77, 14, 10], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.604, 14, 9], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 1, 0], 'false,false,true,true': [1.433, 9, 3], 'false,false,true,false': [0.834, 5, 7], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.254, 1, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.774, 6, 1], 'false,true,false': [0.831, 3, 2], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.122, 5, 7], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.045, 2, 10], 'false,true,false': [0.159, 13, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [1.469, 14, 10], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.007, 0, 3], 'false,true,true,true': [0.128, 3, 0], 'false,true,true,false': [1.266, 7, 3], 'false,true,false,true': [0.000446, 0, 7], 'false,true,false,false': [0.026, 5, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24691358024691357], 'false': [0.24000000000000005, 0.0], 'false,true': [0.17751479289940816, 0.2430555555555555], 'false,true,false': [-2.5376526277146434e-16, -2.7755575615628915e-18], 'true': [1.4802973661668753e-16, nan], 'false,false': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [0.0, 0.1993120399608999], 'false': [0.19653928676714286, 0.0], 'false,true': [0.17751479289940827, 0.17351408289084133], 'false,true,true': [0.0, 0.1875], 'false,true,false': [6.344131569286608e-17, 0.0], 'false,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.15360035840052802], 'false': [0.1547722771338338, 0.0], 'false,true': [0.17645778368593035, 0.10835424963758322], 'false,true,false': [-6.344131569286608e-17, 0.0], 'true': [nan, 3.700743415417188e-17], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [-3.700743415417188e-17, 0.12460541636022077], 'false': [0.0, 0.12602932408722006], 'false,false': [0.13051515343034242, 0.0], 'false,true': [0.0, nan], 'false,false,false': [0.0, nan], 'true': [nan, -3.700743415417188e-17]}, {'': [0.0, 0.11885455819189542], 'false': [0.0, 0.12098792282401895], 'false,false': [0.1278149745088346, 0.0], 'false,false,true': [0.0, 0.11185835111907169], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.1092639633923534], 'false': [0.0, 0.11168356456133842], 'false,false': [0.11900431480963569, 0.0], 'false,false,true': [0.171192616315296, 0.057958786163106533], 'true': [nan, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [0.02157001870549585, 0.10427702289410287], 'false': [0.11812864772549046, 0.0846451328882823], 'false,true': [0.08559320892509951, 0.13815853310846155], 'false,false': [0.0, 0.09045257113316664], 'false,false,false': [0.10483195851788157, 0.0], 'true': [0.02157001870549585, nan]}, {'': [5.4393279591373e-05, 0.10136216041436989], 'false': [0.10838279450236551, 0.0], 'false,true': [0.0909951490679277, 0.0019401279116236791], 'false,true,true': [nan, 0.09099514906792762], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [3.077362891769816e-05, 0.0814904308507838], 'false': [0.0, 0.08381387056140835], 'false,false': [0.0899057402484455, 0.0], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0], 'false,true,false': [0.0, nan]}, {'': [1.848845253295493e-05, 0.08066655214515529], 'false': [0.08635753919702445, 0.0], 'false,true': [0.13325989918454328, 0.03161308350065117], 'false,true,true': [0.005476715011560389, 0.16039646899177096], 'false,true,false': [2.836226665430581e-08, 0.00013373840991071916], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
5;false,false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.19148226843284555;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09354295879156342;  // std dev = 1.480, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.24220076974714416;  // std dev = 1.056, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.04416994326766818;  // std dev = 0.925, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.1388236436808456;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( location(A, F), enzyme(A, G) )
%   | | | then return 0.37866202012089395;  // std dev = 0.629, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08859732540847123;  // std dev = 1.520, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.12304359295706588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8131405724541837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08268591546544603;  // std dev = 1.518, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.11037050251432255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.025976096379567083;  // std dev = 0.878, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.19408615042562316;  // std dev = 1.239, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.10650838647974344;  // std dev = 0.253, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.15928622535884754;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.16039098273660177;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19568121252299325;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10857477089721777;  // std dev = 1.081, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1926480346287388;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.5177824853101948;  // std dev = 0.330, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22415086143664936;  // std dev = 0.763, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.13477318976515684;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.26696131246352395;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1644418573279105;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.09747526213236318;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.17941105941329408;  // std dev = 0.464, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.013142649380690836;  // std dev = 1.187, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14005207323901225;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.062428236783776146;  // std dev = 0.834, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.12142855389091818;  // std dev = 0.635, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23614041346741396;  // std dev = 0.129, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12689882338495945;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.909829
   AUC PR    = 0.100111
   CLL	      = -0.509239
   Precision = 0.02695 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.052372


Total learning time: 2.012 seconds
Total inference time: 2.271 seconds
AUC ROC: 0.909829


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.23399
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 0.57 seconds
Refined model CLL: -0.23399


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.909829
   AUC PR    = 0.100111
   CLL	      = -0.509239
   Precision = 0.02695 at threshold = 0.5
   Recall    = 0.923913
   F1        = 0.052372


Total learning time: 4.249 seconds
Total inference time: 2.271 seconds
AUC ROC: 0.909829
Total revision time: 4.249
Best scored revision CLL: -0.23399


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:19:11
{'AUC ROC': 0.909829, 'AUC PR': 0.100111, 'CLL': -0.509239, 'Precision': [0.02695, 0.5], 'Recall': 0.923913, 'F1': 0.052372, 'Learning time': 4.249, 'Inference time': 2.271, 'parameter_15': {'AUC ROC': 0.879387, 'AUC PR': 0.1937, 'CLL': -0.520049, 'Precision': [0.026955, 0.5], 'Recall': 0.880435, 'F1': 0.052309, 'Learning time': 1.075, 'Inference time': 2.541}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3360807217799291;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1217950074942148;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.12694891747911252;  // std dev = 1.848, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return -0.23752054739390008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.15324962397470884;  // std dev = 2.139, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.19720715607960473;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7601107871948081;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06580340764517315;  // std dev = 1.774, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.16783503567413982;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.062116588275351665;  // std dev = 1.656, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.13385522082956022;  // std dev = 1.064, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.09127809414619574;  // std dev = 0.290, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.016607989735383476;  // std dev = 1.067, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0.1614992978955411;  // std dev = 0.964, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.11895229522871005;  // std dev = 1.259, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1950279692475655;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3384164866013747;  // std dev = 1.089, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return -0.1993737046067459;  // std dev = 0.234, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.16621512791143278;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return -0.13273616810378272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.04748543175190893;  // std dev = 1.686, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14096105646394355;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.22064302895376076;  // std dev = 0.146, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07819001522193235;  // std dev = 1.374, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2348831033059254;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.13197175655913598;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.879425
   AUC PR    = 0.193706
   CLL	      = -0.523813
   Precision = 0.026955 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.052309


Total learning time: 1.098 seconds
Total inference time: 2.555 seconds
AUC ROC: 0.879425


Results scoring model
   AUC ROC   = 0.99875
   AUC PR    = 0.99881
   CLL	      = -0.269021
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.677 seconds
Parameter learned model CLL: -0.269021


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [1.854, 11, 5], 'false,true,false,true': [0.0, 0, 10], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [1.69, 10, 4], 'false,true,false,true': [2.98e-08, 0, 10], 'false,true,false,false': [0.0, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.848, 11, 5], 'false,true,false,true': [0.0, 0, 10], 'false,true,false,false': [0.0, 9, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.139, 19, 15], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.032, 0, 3], 'false,false,true,false': [1.774, 19, 12], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 1, 0], 'false,false,true,true': [1.656, 10, 5], 'false,false,true,false': [1.064, 9, 10], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.29, 1, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [1.067, 8, 3], 'false,true,false': [0.964, 4, 3], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.259, 7, 9], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.089, 2, 15], 'false,true,false': [0.234, 18, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [1.686, 19, 15], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.009, 0, 3], 'false,true,true,true': [0.146, 4, 0], 'false,true,true,false': [1.374, 7, 5], 'false,true,false,true': [0.026, 0, 10], 'false,true,false,false': [0.027, 9, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24835646457268032], 'false': [0.244897959183673, 0.0], 'false,true': [0.2148437499999998, 0.2493074792243767], 'false,true,false': [-8.881784197001253e-17, -9.25185853854297e-18], 'true': [1.4802973661668753e-16, nan], 'false,false': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [0.0, 0.20283165358445276], 'false': [0.20205892708991047, 0.0], 'false,true': [0.2148437499999999, 0.17797724687497452], 'false,true,true': [0.25, 0.2040816326530611], 'false,true,false': [8.881784197001253e-17, 0.0], 'false,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.1592030672261485], 'false': [0.16099854265433194, 0.0], 'false,true': [0.2133764959490768, 0.1111413593433382], 'false,true,false': [-1.7763568394002506e-16, -1.5419764230904951e-18], 'true': [nan, 3.700743415417188e-17], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [-3.700743415417188e-17, 0.13158446728484957], 'false': [0.0, 0.1307965935147079], 'false,false': [0.1346107640773946, 0.0], 'false,true': [0.0, nan], 'false,false,false': [0.0, nan], 'true': [nan, -3.700743415417188e-17]}, {'': [0.0, 0.12560237038910183], 'false': [0.0, 0.12605765397071508], 'false,false': [0.13138954439307732, 0.0], 'false,false,true': [0.0003508577159994826, 0.10153576021132552], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.10912779824470192], 'false': [0.0, 0.11006226188559855], 'false,false': [0.11523658340836496, 0.0], 'false,false,true': [0.182877645231176, 0.059565260685691845], 'true': [nan, 0.0], 'false,false,false': [0.0, 0.0]}, {'': [0.028074841415092703, 0.10456252879143037], 'false': [0.12241572896851374, 0.08448590951975007], 'false,true': [0.10351430523924714, 0.13273217375848947], 'false,false': [0.0, 0.08883667320003392], 'false,false,false': [0.09902507686395867, 0.0], 'true': [0.028074841415092703, nan]}, {'': [7.145281560830737e-05, 0.10254138957883586], 'false': [0.10768282372022368, 0.0], 'false,true': [0.06973466237980451, 0.0030452988489400898], 'false,true,true': [nan, 0.06973466237980451], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [4.0327802333988326e-05, 0.07830529654738196], 'false': [0.0, 0.07954471986941397], 'false,false': [0.08360830235398391, 0.0], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0], 'false,true,false': [0.0, nan]}, {'': [2.4179241974904564e-05, 0.07738060185211637], 'false': [0.08126997881082221, 0.0], 'false,true': [0.13604634884212574, 0.03362434439882062], 'false,true,true': [0.005355980916798356, 0.15728450774440692], 'false,true,false': [6.558839129049421e-05, 7.896254405736121e-05], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
5;false,false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,false;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.011995088945666036;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.14331750143463115;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2738072931959831;  // std dev = 1.523, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.1266042812998829;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2309686046423642;  // std dev = 1.504, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.11325388000650542;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.105482179660726;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16809280438563215;  // std dev = 1.896, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.10236850053719942;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6289238459737264;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06786160671339221;  // std dev = 1.647, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return -0.09333743605087962;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.19555146963301914;  // std dev = 0.844, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.05133532063197696;  // std dev = 1.525, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.11126085417793082;  // std dev = 0.241, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.05069413780937996;  // std dev = 0.441, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.35803687239731824;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.011920551157815446;  // std dev = 0.604, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09843922699385081;  // std dev = 1.189, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1919099401705423;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.2694925742654073;  // std dev = 0.453, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07564424994649192;  // std dev = 0.695, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.3567508867391629;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05984350800521783;  // std dev = 1.212, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1638910222478852;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.12066656475288635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( location(A, G), enzyme(A, H) )
%   | | | then return 0.10894730684772178;  // std dev = 0.673, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.020929795899562977;  // std dev = 1.440, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13976932671570208;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.2879821633196786;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10726822332110283;  // std dev = 1.054, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2971265414337424;  // std dev = 0.167, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1365146097978064;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.886736
   AUC PR    = 0.047342
   CLL	      = -0.543338
   Precision = 0.025379 at threshold = 0.5
   Recall    = 0.945652
   F1        = 0.049432


Total learning time: 1.843 seconds
Total inference time: 2.364 seconds
AUC ROC: 0.886736


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.243365
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.631 seconds
Refined model CLL: -0.243365


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.886736
   AUC PR    = 0.047342
   CLL	      = -0.543338
   Precision = 0.025379 at threshold = 0.5
   Recall    = 0.945652
   F1        = 0.049432


Total learning time: 4.2490000000000006 seconds
Total inference time: 2.364 seconds
AUC ROC: 0.886736
Total revision time: 4.2490000000000006
Best scored revision CLL: -0.243365


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:19:20
{'AUC ROC': 0.886736, 'AUC PR': 0.047342, 'CLL': -0.543338, 'Precision': [0.025379, 0.5], 'Recall': 0.945652, 'F1': 0.049432, 'Learning time': 4.2490000000000006, 'Inference time': 2.364, 'parameter_20': {'AUC ROC': 0.879425, 'AUC PR': 0.193706, 'CLL': -0.523813, 'Precision': [0.026955, 0.5], 'Recall': 0.880435, 'F1': 0.052309, 'Learning time': 1.098, 'Inference time': 2.555}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10814893509951236;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.17780077116908885;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07976155548281433;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08159519516427502;  // std dev = 1.935, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return -0.19271643964354132;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.14289564464501175;  // std dev = 2.306, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.1644928861897617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.542140610275441;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07450083125794967;  // std dev = 1.906, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return -0.14311387095632375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.030364481845729093;  // std dev = 1.831, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.15316524838408788;  // std dev = 1.163, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.1425174957820899;  // std dev = 0.301, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.02760224944374239;  // std dev = 1.200, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.19689347564746928;  // std dev = 1.040, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.10905550387145968;  // std dev = 1.379, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18377167575965614;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18710926476684553;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32026493457118255;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else return -0.18738450525646488;  // std dev = 0.178, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.16052277978419083;  // std dev = 0.000450, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15188200311087496;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return -0.12157007366199388;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.046167344536883224;  // std dev = 1.911, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1387075899084284;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.19171475906807678;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.050727311911510926;  // std dev = 1.601, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2348098012289524;  // std dev = 0.034, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.13504889976572892;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.889293
   AUC PR    = 0.200629
   CLL	      = -0.5197
   Precision = 0.026955 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.052309


Total learning time: 1.283 seconds
Total inference time: 2.592 seconds
AUC ROC: 0.889293


Results scoring model
   AUC ROC   = 0.9912
   AUC PR    = 0.990742
   CLL	      = -0.272652
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.639 seconds
Parameter learned model CLL: -0.272652


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [1.936, 15, 5], 'false,true,false,true': [0.0, 0, 13], 'false,true,false,false': [0.0, 10, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.816, 2, 1], 'false,true,true,false': [1.749, 13, 4], 'false,true,false,true': [4.21e-08, 0, 13], 'false,true,false,false': [5.27e-09, 10, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.935, 15, 5], 'false,true,false,true': [0.0, 0, 13], 'false,true,false,false': [0.0, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.306, 24, 18], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.875, 1, 3], 'false,false,true,false': [1.906, 23, 15], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 1, 0], 'false,false,true,true': [1.831, 14, 5], 'false,false,true,false': [1.163, 10, 13], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.301, 1, 4], 'true,false': [0.0, 0, 0], 'false,true,true': [1.2, 11, 3], 'false,true,false': [1.04, 4, 4], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.379, 9, 11], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.008, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.345, 3, 18], 'false,true,false': [0.178, 22, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.00045, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [1.911, 24, 18], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.006, 0, 5], 'false,true,true,true': [0.121, 5, 0], 'false,true,true,false': [1.601, 10, 5], 'false,true,false,true': [0.034, 0, 13], 'false,true,false,false': [0.037, 10, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2469135802469131], 'false': [0.24337479718766852, 0.0], 'false,true': [0.18749999999999983, 0.24574669187145523], 'false,true,false': [-2.7328566760003855e-16, -1.1102230246251566e-17], 'true': [0.0, nan], 'false,false': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [0.0, 0.19886171927769947], 'false': [0.19756189971219593, 0.0], 'false,true': [0.1875000000000001, 0.1754352488099675], 'false,true,true': [0.22222222222222218, 0.17993079584775099], 'false,true,false': [1.3664283380001927e-16, 2.7755575615628915e-18], 'false,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.15317770656369278], 'false': [0.15403110686024368, 0.0], 'false,true': [0.1871741201389955, 0.10955395912587389], 'false,true,false': [-2.7328566760003855e-16, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan], 'true': [0.0, 3.700743415417188e-17]}, {'': [4.4408920985006264e-17, 0.12395157632985077], 'false': [0.0, 0.12407599244047846], 'false,false': [0.12655641791004002, 0.0], 'true': [0.0, -3.700743415417188e-17], 'false,true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [-2.2204460492503132e-17, 0.11889526982994614], 'false': [0.0, 0.11969361233582712], 'false,false': [0.12354456454507765, 0.0], 'false,false,true': [0.19159909129572683, 0.09555360034841258], 'false,false,false': [0.0, nan], 'true': [-2.2204460492503132e-17, nan], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [0.0, 0.11038315205778358], 'false': [0.0, 0.11152633654149367], 'false,false': [0.11570870238264004, 0.0], 'false,false,true': [0.17638390035502496, 0.05876379520599841], 'true': [0.0, 0.0], 'false,false,false': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.018084988662145064, 0.10573221324545512], 'false': [0.12629072950391787, 0.08379640482967642], 'false,true': [0.10286318518675379, 0.13521726714171842], 'false,false': [0.0, 0.08724094369622216], 'false,false,false': [0.09504313484279231, 0.0], 'true': [0.018084988662145064, nan]}, {'': [1.6040880548512383e-05, 0.10301646955909002], 'false': [0.10720410911417579, 0.0], 'false,true': [0.08615961563995944, 0.0014346619379956647], 'false,true,true': [nan, 0.08615961563995937], 'true': [2.2279000761825835e-05, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [1.198653976545172e-05, 0.08227810048411531], 'false': [0.0, 0.08348617999154975], 'false,false': [0.086945414497467, 0.0], 'true': [5.057040319139672e-08, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0], 'false,true,false': [0.0, nan]}, {'': [7.2516313666171065e-06, 0.0814785268253275], 'false': [0.08483243581277086, 0.0], 'false,true': [0.13984179133889207, 0.03372534270718328], 'false,true,true': [0.0029277455750056857, 0.17078526714830303], 'false,true,false': [8.635380421535725e-05, 0.00013685597151331385], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;true,false;phenotype(C, E), phenotype(A, F).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(G, A).;true;true
5;false,false,false;phenotype(A, I), interaction(A, J).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(I, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.00851773156715447;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( location(A, F), enzyme(A, G) )
%   | | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.007484033389160127;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.06165615861083242;  // std dev = 0.976, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.24268114128437995;  // std dev = 1.387, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.13265812095690238;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.06288114113499733;  // std dev = 1.272, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.1832512823225761;  // std dev = 1.743, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(C, E), phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.118124051237455;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.029765961365601938;  // std dev = 1.479, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.18305470845897903;  // std dev = 1.470, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.10636316962783991;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( location(A, G) )
%   | | | then return 0.10561532294300643;  // std dev = 1.889, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.019405230963673085;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1484724946749876;  // std dev = 0.274, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return -0.20862614561696635;  // std dev = 0.264, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10976668771028707;  // std dev = 1.284, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.3297485032415947;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1025753134799702;  // std dev = 1.185, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18316896609065383;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18620520026334209;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.42226103806167314;  // std dev = 0.331, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.266039952495164;  // std dev = 1.064, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return -0.1527502477312158;  // std dev = 0.155, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.2041766652926236;  // std dev = 0.233, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15982305092425647;  // std dev = 0.000408, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15195965676042267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.09629548426963064;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( location(A, G) )
%   | | | then return 0.04999617045658636;  // std dev = 1.558, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.008029760318182111;  // std dev = 0.803, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13828665922093414;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.09486440681324612;  // std dev = 0.884, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.08535692169945618;  // std dev = 1.148, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.22945145297648278;  // std dev = 0.097, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.12548729299038022;  // std dev = 0.075, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.896136
   AUC PR    = 0.048086
   CLL	      = -0.518169
   Precision = 0.027558 at threshold = 0.5
   Recall    = 0.945652
   F1        = 0.053555


Total learning time: 1.798 seconds
Total inference time: 2.441 seconds
AUC ROC: 0.896136


Results scoring model
   AUC ROC   = 0.9936
   AUC PR    = 0.994002
   CLL	      = -0.247761
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.92
   F1        = 0.958333


Total scoring time: 0.635 seconds
Refined model CLL: -0.247761


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.896136
   AUC PR    = 0.048086
   CLL	      = -0.518169
   Precision = 0.027558 at threshold = 0.5
   Recall    = 0.945652
   F1        = 0.053555


Total learning time: 4.3549999999999995 seconds
Total inference time: 2.441 seconds
AUC ROC: 0.896136
Total revision time: 4.3549999999999995
Best scored revision CLL: -0.247761


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:19:30
{'AUC ROC': 0.896136, 'AUC PR': 0.048086, 'CLL': -0.518169, 'Precision': [0.027558, 0.5], 'Recall': 0.945652, 'F1': 0.053555, 'Learning time': 4.3549999999999995, 'Inference time': 2.441, 'parameter_25': {'AUC ROC': 0.889293, 'AUC PR': 0.200629, 'CLL': -0.5197, 'Precision': [0.026955, 0.5], 'Recall': 0.880435, 'F1': 0.052309, 'Learning time': 1.283, 'Inference time': 2.592}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1555325621642444;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07286921623350553;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.14042600470775812;  // std dev = 0.867, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6534159169901202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.027108973168287132;  // std dev = 0.619, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return -0.0014642333478565028;  // std dev = 0.573, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.21229815256555537;  // std dev = 0.404, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.16436474859645672;  // std dev = 0.468, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.006764274337425537;  // std dev = 0.395, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.08108539908500946;  // std dev = 0.351, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3644610224411257;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16993639285787215;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.03842819195290041;  // std dev = 0.577, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.3577559686359819;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.16050529543466588;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.238798998462195;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12735805505183737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.863674
   AUC PR    = 0.271643
   CLL	      = -0.160213
   Precision = 0.25 at threshold = 0.5
   Recall    = 0.662791
   F1        = 0.363057


Total learning time: 0.972 seconds
Total inference time: 2.783 seconds
AUC ROC: 0.863674


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.166047
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.57 seconds
Parameter learned model CLL: -0.166047


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 3, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.724, 3, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.867, 4, 3], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.619, 4, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.573, 3, 1], 'false,false,true,false': [0.404, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.468, 1, 1], 'false,true,false': [0.395, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.351, 1, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.111, 0, 3], 'false,true,false': [0.035, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.577, 4, 3], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.015, 3, 0], 'false,true,false,true': [0.01, 0, 2], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2343749999999999], 'false': [0.24489795918367335, 0.0], 'false,true': [0.18750000000000003, 0.22222222222222224], 'false,true,false': [0.0, 0.0], 'true': [0.0, nan], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.1932421306960088], 'false': [0.20400567457736837, 0.0], 'false,true': [0.18749999999999997, 0.1586414472144835], 'false,true,true': [0.0, -4.625929269271485e-18], 'false,true,false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.12680228209068134], 'false': [0.13392142325880937, 0.0], 'false,true': [0.1311052034641356, 0.09906674252579038], 'false,true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.10047106903167857], 'false': [nan, 0.10047106903167856], 'false,false': [0.10750222761216144, 0.0], 'true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.09474798768267112], 'false': [nan, 0.09474798768267112], 'false,false': [0.10280903319841259, 0.0], 'false,false,true': [0.0, 0.06390667379632257], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.07470964535253553], 'false': [nan, 0.07470964535253555], 'false,false': [0.08153974557276253, 0.0], 'false,false,true': [0.08221461535151901, 0.05452885769743327], 'true': [0.0, 0.0], 'false,false,false': [nan, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.06855472589515638], 'false': [0.08103858307329251, 0.0466454586369582], 'false,true': [0.10967327135879419, 0.05201362708828944], 'false,false': [nan, 0.0466454586369582], 'false,false,false': [0.06144955188119636, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.06480726362559969], 'false': [0.07187629913445136, 0.0], 'false,true': [0.004103182633357905, 0.0003144518767359203], 'false,true,true': [nan, 0.004103182633357905], 'true': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.0428600202562316], 'false': [nan, 0.0428600202562316], 'false,false': [0.04755562687879015, 0.0], 'true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.042086365391859296], 'false': [0.04693355892073831, 0.0], 'false,true': [0.050418042167290754, 0.0298239585681854], 'false,true,true': [0.0, 7.537176402791039e-05], 'false,true,false': [4.560857291877746e-05, 0.0], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(F, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(F, A).;true;true
4;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1555325621642444;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.07286921623350553;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.21385802007849034;  // std dev = 0.701, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.04251665088011522;  // std dev = 0.459, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.6366044028289966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.029457511974053135;  // std dev = 0.621, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.005753676530470174;  // std dev = 0.550, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2019233841945304;  // std dev = 0.437, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then return 0.06681018047108903;  // std dev = 0.615, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then return 0.08521812792889291;  // std dev = 0.378, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.36566000755876554;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17054056968040543;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return -0.013294805950369859;  // std dev = 0.449, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.10779038749452226;  // std dev = 0.333, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.37733457607972243;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.16250812907573522;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.22436465992490873;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11429834519612025;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.834818
   AUC PR    = 0.250729
   CLL	      = -0.165603
   Precision = 0.245763 at threshold = 0.5
   Recall    = 0.674419
   F1        = 0.360248


Total learning time: 0.879 seconds
Total inference time: 2.186 seconds
AUC ROC: 0.834818


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.164737
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.537 seconds
Refined model CLL: -0.164737


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.834818
   AUC PR    = 0.250729
   CLL	      = -0.165603
   Precision = 0.245763 at threshold = 0.5
   Recall    = 0.674419
   F1        = 0.360248


Total learning time: 2.9579999999999997 seconds
Total inference time: 2.186 seconds
AUC ROC: 0.834818
Total revision time: 2.9579999999999997
Best scored revision CLL: -0.164737


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:19:39
{'AUC ROC': 0.834818, 'AUC PR': 0.250729, 'CLL': -0.165603, 'Precision': [0.245763, 0.5], 'Recall': 0.674419, 'F1': 0.360248, 'Learning time': 2.9579999999999997, 'Inference time': 2.186, 'parameter_5': {'AUC ROC': 0.863674, 'AUC PR': 0.271643, 'CLL': -0.160213, 'Precision': [0.25, 0.5], 'Recall': 0.662791, 'F1': 0.363057, 'Learning time': 0.972, 'Inference time': 2.783}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.35092203251355425;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.1490779674864458;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47540780245230163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.04161305975718517;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.2524563035587763;  // std dev = 0.947, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.11106499083748643;  // std dev = 1.143, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.2032351382430256;  // std dev = 0.940, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.27525942561078076;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.060520860285699474;  // std dev = 0.829, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.15985785754612764;  // std dev = 0.935, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return -0.0049496175126513605;  // std dev = 0.821, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12905171238896262;  // std dev = 0.700, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return -0.26550283255844637;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.25350101250772344;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(G, F) )
%   | | then return 0.03398399332480151;  // std dev = 0.803, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.10709101146762127;  // std dev = 0.587, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.019147023230056088;  // std dev = 0.402, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08898945595027405;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2911102618409501;  // std dev = 0.719, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.1503581232454562;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06844287224133866;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return 0.03492505013313877;  // std dev = 0.970, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.0525039319998736;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.14746660655094423;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.14565962050459966;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2602979027804483;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12911929350235413;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4718938323914442;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.39145749971824356;  // std dev = 0.193, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.912969
   AUC PR    = 0.34938
   CLL	      = -0.204145
   Precision = 0.333333 at threshold = 0.5
   Recall    = 0.534884
   F1        = 0.410714


Total learning time: 0.943 seconds
Total inference time: 2.592 seconds
AUC ROC: 0.912969


Results scoring model
   AUC ROC   = 0.985
   AUC PR    = 0.986667
   CLL	      = -0.266984
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.583 seconds
Parameter learned model CLL: -0.266984


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [0.894, 4, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [0.0, 3, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [0.851, 4, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.947, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A), interaction(I, H)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [1.143, 8, 5], 'false,false,false,true': [0.94, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(H, A), interaction(I, H)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.829, 7, 4], 'false,false,false,true': [0.935, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I), interaction(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.821, 4, 1], 'false,false,true,false': [0.7, 4, 4], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'false': 'interaction(A, F), interaction(G, A)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [0.803, 3, 1], 'false,true,false': [0.587, 3, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.402, 2, 1], 'false,false,false,false': [0.89, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.719, 1, 5], 'false,true,false': [0.025, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.887, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.97, 8, 5], 'false,false,false,true': [0.886, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [0.002, 3, 0], 'false,true,false,true': [0.015, 0, 4], 'false,true,false,false': [0.008, 4, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.193, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.2422145328719722], 'false': [0.2366863905325442, 0.25], 'false,false': [0.25, nan], 'false,false,true': [nan, 0.25], 'false,true': [0.16000000000000003, 0.24999999999999994], 'false,true,false': [0.0, 0.0], 'true': [1.4802973661668753e-16, nan]}, {'': [0.0, 0.20286648315191927], 'false': [0.18570122602625524, 0.25], 'false,false': [0.0, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,true': [0.16, 0.178471628116294], 'false,true,false': [0.0, 0.0], 'false,true,true': [0.25, 0.0], 'false,false,true': [nan, 0.0]}, {'': [3.700743415417188e-17, 0.15546703467710488], 'false': [0.1319245358699979, 0.22431347954939473], 'false,false': [nan, 0.22431347954939473], 'false,false,false': [0.22431347954939473, nan], 'false,true': [0.14476469254556518, 0.11145008534151418], 'false,true,false': [0.0, 0.0], 'true': [0.0, 0.0]}, {'': [-3.700743415417188e-17, 0.13040961548910393], 'false': [nan, 0.13040961548910396], 'false,false': [0.10050305820931091, 0.2211094931810274], 'false,false,false': [0.2211094931810274, nan], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.1267375773194974], 'false': [nan, 0.12673757731949745], 'false,false': [0.09738448912075051, 0.21877367406222217], 'false,false,false': [0.21877367406222217, nan], 'false,false,true': [0.25, 0.06254196034806717], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.12320538386994985], 'false': [nan, 0.12320538386994982], 'false,false': [0.09378936080903578, 0.21717260251544207], 'false,false,false': [0.0, 0.2222222222222222], 'false,false,true': [0.13485997379396958, 0.06121393676445171], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.11560815616452577], 'false': [0.10027735475437978, 0.13730158931409392], 'false,false': [nan, 0.13730158931409392], 'false,false,false': [0.053739667903514345, 0.19788247376848084], 'false,true': [0.16137600524408202, 0.0574070666538845], 'true': [0.0, nan]}, {'': [0.0, 0.11381250471662244], 'false': [0.08820561378722666, 0.1968617763042187], 'false,false': [0.1968617763042187, nan], 'false,false,true': [nan, 0.1968617763042187], 'false,true': [0.08606247458034434, 9.135869759192243e-05], 'false,true,true': [nan, 0.08606247458034431], 'true': [0.0, 0.0]}, {'': [-4.625929269271485e-18, 0.10155004712130444], 'false': [nan, 0.10155004712130443], 'false,false': [0.07236558706844855, 0.19616323510838615], 'false,false,false': [0.19616323510838615, nan], 'true': [-4.625929269271485e-18, nan]}, {'': [-2.3129646346357427e-18, 0.10099737710732991], 'false': [0.07183681318690768, 0.19568030988199153], 'false,false': [0.19568030988199153, nan], 'false,false,true': [0.0, 0.01867285843619687], 'false,true': [0.12062196933421729, 0.03794774226603913], 'false,true,true': [0.25, 7.548952348409207e-07], 'false,true,false': [5.487244058076379e-05, 1.7735711118179592e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, A), phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
5;false;interaction(A, G).;true;true
5;false,false;phenotype(A, I), interaction(J, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,true;interaction(D, A), phenotype(A, F).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.35092203251355425;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.1490779674864458;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.47540780245230163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.04161305975718517;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2524563035587763;  // std dev = 0.947, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then return -0.013304800790537122;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return 0.05998800833616073;  // std dev = 0.620, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.39533723771713697;  // std dev = 0.713, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), phenotype(A, G) )
%   | | then return 0.3317905094107514;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, D), interaction(H, H) )
%   | | | then return -0.12566011042616915;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.06513616588428417;  // std dev = 0.414, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2019145265098006;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(G, F) )
%   | | | then return 0.052957954616782335;  // std dev = 0.896, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2973652952458754;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09725964756183371;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then return -0.3135871705909327;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.22890189563564065;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D), location(A, E) )
%   | then return -0.05262948734769446;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2392712240921506;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1096416186438489;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.26715335101442184;  // std dev = 0.603, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.2307161472997508;  // std dev = 0.715, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.11963132511459755;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08211980808683601;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.02382561855007259;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D), location(A, E) )
%   | then return -0.05605233887730802;  // std dev = 0.871, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return 0.01359985340408868;  // std dev = 0.544, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.13711578358327858;  // std dev = 0.441, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.20179035800673176;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.1128147500203782;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.17395813513735897;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08299699001746479;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.3827112714084388;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.3587285849936783;  // std dev = 0.067, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.892375
   AUC PR    = 0.151581
   CLL	      = -0.309287
   Precision = 0.04707 at threshold = 0.5
   Recall    = 0.569767
   F1        = 0.086957


Total learning time: 1.901 seconds
Total inference time: 5.165 seconds
AUC ROC: 0.892375


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.995455
   CLL	      = -0.22713
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.67 seconds
Refined model CLL: -0.22713


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.892375
   AUC PR    = 0.151581
   CLL	      = -0.309287
   Precision = 0.04707 at threshold = 0.5
   Recall    = 0.569767
   F1        = 0.086957


Total learning time: 4.0969999999999995 seconds
Total inference time: 5.165 seconds
AUC ROC: 0.892375
Total revision time: 4.0969999999999995
Best scored revision CLL: -0.22713


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:19:51
{'AUC ROC': 0.892375, 'AUC PR': 0.151581, 'CLL': -0.309287, 'Precision': [0.04707, 0.5], 'Recall': 0.569767, 'F1': 0.086957, 'Learning time': 4.0969999999999995, 'Inference time': 5.165, 'parameter_10': {'AUC ROC': 0.912969, 'AUC PR': 0.34938, 'CLL': -0.204145, 'Precision': [0.333333, 0.5], 'Recall': 0.534884, 'F1': 0.410714, 'Learning time': 0.943, 'Inference time': 2.592}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3444674378357556;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.011134104502422276;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.17266576078189197;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.327334239218108;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.08067497237808176;  // std dev = 1.206, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1692663454290113;  // std dev = 1.331, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.11351075912432756;  // std dev = 1.422, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14043823881405101;  // std dev = 1.327, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2600945407934562;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.07174097855708417;  // std dev = 1.193, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11449590862991518;  // std dev = 1.324, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.030772839619433;  // std dev = 1.191, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.12673371399080663;  // std dev = 0.697, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return -0.21159858907478338;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.1932412240863852;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.043064653020771636;  // std dev = 0.835, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.15377375739653132;  // std dev = 0.948, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return -0.047605682046566865;  // std dev = 0.456, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06840638480448125;  // std dev = 1.289, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1856338458927704;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34969261895004616;  // std dev = 0.856, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.17921395191961625;  // std dev = 0.094, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.054065870895143586;  // std dev = 1.287, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15662506841828241;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.03430240069220779;  // std dev = 1.217, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04249647830162739;  // std dev = 1.286, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1370402755064169;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.1071315920600151;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.03561146922801555;  // std dev = 0.806, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.24407484147157268;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12939320162742063;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4927473852884049;  // std dev = 0.414, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3141731689000421;  // std dev = 0.201, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.960861
   AUC PR    = 0.290003
   CLL	      = -0.201951
   Precision = 0.318182 at threshold = 0.5
   Recall    = 0.569767
   F1        = 0.408333


Total learning time: 1.099 seconds
Total inference time: 3.012 seconds
AUC ROC: 0.960861


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.983353
   CLL	      = -0.308711
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 0.547 seconds
Parameter learned model CLL: -0.308711


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 1], 'false,true,true': [1.225, 6, 2], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.369, 5, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [0.913, 5, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 4], 'false,true,true': [1.206, 6, 2], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.331, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.422, 10, 6], 'false,false,false,true': [1.327, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.193, 9, 5], 'false,false,false,true': [1.324, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I), interaction(J, A)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.191, 6, 2], 'false,false,true,false': [0.697, 4, 4], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), interaction(H, A)', 'false,true': 'interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.835, 3, 2], 'false,true,false': [0.948, 4, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.456, 3, 1], 'false,false,false,false': [1.289, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.021, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.856, 1, 6], 'false,true,false': [0.094, 9, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.287, 5, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, E), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.02, 0, 5], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.217, 10, 6], 'false,false,false,true': [1.286, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.018, 0, 5], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [0.806, 5, 1], 'false,true,false,true': [0.033, 0, 4], 'false,true,false,false': [0.019, 4, 0], 'false,false,true,true': [0.414, 0, 4], 'false,false,true,false': [0.201, 5, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.23999999999999996], 'false': [0.23437500000000006, 0.2469135802469134], 'false,false': [0.2469135802469134, nan], 'false,false,true': [0.0, 0.2343749999999999], 'false,true': [0.18750000000000003, 0.24999999999999994], 'false,true,false': [0.0, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.20912897885745782], 'false': [0.1932421306960089, 0.23474646165370133], 'false,false': [0.0, 0.23311507726475683], 'false,false,false': [0.0, 0.25000000000000006], 'false,true': [0.1875, 0.178471628116294], 'false,true,true': [0.25, 0.13888888888888887], 'false,true,false': [0.0, 0.0], 'false,false,true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.17400176095178252], 'false': [0.15158144805349746, 0.2114734711965519], 'false,false': [0.0, 0.221343957261098], 'false,false,false': [0.221343957261098, nan], 'false,true': [0.1817934415013595, 0.11145008534151418], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'true': [0.0, 0.0]}, {'': [4.4408920985006264e-17, 0.15483151348143837], 'false': [0.0, 0.15780118935009876], 'false,false': [0.12642165553679122, 0.22007686420175357], 'false,false,false': [0.22007686420175357, nan], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'true,true': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [-2.2204460492503132e-17, 0.15140814056637356], 'false': [0.0, 0.1557979684432019], 'false,false': [0.12405186309008273, 0.21904414426190835], 'false,false,false': [0.21904414426190835, nan], 'false,false,true': [0.25, 0.10162463905206033], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.14867105802660727], 'false': [0.0, 0.15368242220592537], 'false,false': [0.12134968296654527, 0.21823036393506934], 'false,false,false': [0.0, 0.25], 'false,false,true': [0.17731806232340988, 0.060777058904621394], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [-5.551115123125783e-18, 0.14327945092799055], 'false': [0.12574167210029358, 0.15882833109776412], 'false,false': [nan, 0.15882833109776412], 'false,false,false': [0.05188855223488681, 0.20781195397751875], 'false,true': [0.13951101442045993, 0.11242179246108086], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.00010495629128376427, 0.1406150418684632], 'false': [0.11521081450912155, 0.18562329408219527], 'false,false': [0.18562329408219527, nan], 'false,false,true': [0.0, 0.20714436860434338], 'false,true': [0.10471910962358687, 0.00098383410985941], 'false,true,true': [nan, 0.10471910962358687], 'true': [0.0, 0.00014577262678300748]}, {'': [7.88130730943526e-05, 0.12590523125180492], 'false': [0.0, 0.13061572948096087], 'false,false': [0.0925825035499646, 0.20663741940437386], 'false,false,false': [0.20663741940437386, nan], 'true': [7.88130730943526e-05, nan], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [6.34105881986674e-05, 0.12536584703130418], 'false': [0.09210457267989457, 0.18433822872249406], 'false,false': [0.18433822872249406, nan], 'false,false,true': [0.04289821416890108, 0.008103226689017107], 'false,true': [0.14751938836132425, 0.035050029622788616], 'false,true,true': [0.25, 0.10826528909529602], 'false,true,false': [0.00027163352113442757, 8.92361163470426e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,false;interaction(K, A), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, A), phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;false,false;interaction(A, G).;true;true
5;false,false,false;phenotype(A, I), interaction(J, A).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(E, C).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,false;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2971166765580142;  // std dev = 1.189, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.6209436491414324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.013398928956085122;  // std dev = 0.808, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.39339130854535515;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4681959497689646;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, F), location(A, G) )
%   | | then if ( interaction(A, H), complex(H, F) )
%   | | | then return -0.19772946107164824;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08180858834290679;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.018000967979347488;  // std dev = 0.561, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24485332223843773;  // std dev = 1.311, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.35535462147639574;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.1980137047804583;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.062250433114681716;  // std dev = 1.107, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.30912590373833665;  // std dev = 0.938, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.004811275270794238;  // std dev = 0.421, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.2786960686044627;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.12280221443838056;  // std dev = 1.102, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.12482239293941562;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return -0.12359640626456919;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.12021804656552716;  // std dev = 1.093, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22624534535367524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( interaction(A, H), complex(H, F) )
%   | | then return -0.17135415590516925;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.056426323236076756;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4065715054462376;  // std dev = 0.393, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.23981098974932297;  // std dev = 0.323, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.014878436280189491;  // std dev = 0.402, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16813420340624452;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.20650297121361685;  // std dev = 0.598, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.315342913073284;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.09093117085490555;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.13760856925047624;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then return 0.12759555349990623;  // std dev = 0.875, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.13975662794807342;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14865744981293522;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.17030379710627774;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.09476045636997546;  // std dev = 0.439, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, G), location(A, H) )
%   | | | then return -0.048921781872287136;  // std dev = 0.700, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.10066675194402624;  // std dev = 0.901, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1308197485183664;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.13187662999898178;  // std dev = 0.706, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.11016770120087038;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.1934282483283807;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09789571975171119;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return -0.10904462359897697;  // std dev = 0.395, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.07949893545337657;  // std dev = 0.761, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.910995
   AUC PR    = 0.243984
   CLL	      = -0.239489
   Precision = 0.130435 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.222973


Total learning time: 2.01 seconds
Total inference time: 2.556 seconds
AUC ROC: 0.910995


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.226014
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.612 seconds
Refined model CLL: -0.226014


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.910995
   AUC PR    = 0.243984
   CLL	      = -0.239489
   Precision = 0.130435 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.222973


Total learning time: 4.268 seconds
Total inference time: 2.556 seconds
AUC ROC: 0.910995
Total revision time: 4.268
Best scored revision CLL: -0.226014


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:20:02
{'AUC ROC': 0.910995, 'AUC PR': 0.243984, 'CLL': -0.239489, 'Precision': [0.130435, 0.5], 'Recall': 0.767442, 'F1': 0.222973, 'Learning time': 4.268, 'Inference time': 2.556, 'parameter_15': {'AUC ROC': 0.960861, 'AUC PR': 0.290003, 'CLL': -0.201951, 'Precision': [0.318182, 0.5], 'Recall': 0.569767, 'F1': 0.408333, 'Learning time': 1.099, 'Inference time': 3.012}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.337786654782979;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.08778665478297897;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1667945087684516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14611957364842149;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11770363152241761;  // std dev = 1.439, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.13077424016580563;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11027152107496467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0.8078904644616733;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.11539947997434859;  // std dev = 1.725, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10975241446232316;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09990845486389406;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6521425297085859;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2447796852552756;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.08505889687305865;  // std dev = 1.530, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09099120354131969;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09127624218530779;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.49408222245091327;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return -0.02055070739343421;  // std dev = 1.215, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.12415208480531681;  // std dev = 1.098, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.20910216469320567;  // std dev = 0.566, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.13907776572191;  // std dev = 0.078, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.25066265445549457;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return -0.03573888395086748;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.08142160878574005;  // std dev = 0.740, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08974452700749286;  // std dev = 1.184, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.02145712368871732;  // std dev = 0.629, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17415515174267104;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17415515174267104;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.31682162037484407;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3383456129790238;  // std dev = 0.847, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.17637786458503515;  // std dev = 0.167, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04918361434647941;  // std dev = 0.618, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07536559860264216;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.14920275110557357;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15312489592705536;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.25251591967722176;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.0363041842430989;  // std dev = 1.420, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.01225553139248018;  // std dev = 0.622, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1322595342297498;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.12429562282686046;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.042332282132471324;  // std dev = 0.870, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.24625989008808596;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1279691546659977;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5378762861131854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.16559270958366437;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.98321
   AUC PR    = 0.310666
   CLL	      = -0.19109
   Precision = 0.276151 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.406154


Total learning time: 1.105 seconds
Total inference time: 3.156 seconds
AUC ROC: 0.98321


Results scoring model
   AUC ROC   = 0.99625
   AUC PR    = 0.99631
   CLL	      = -0.235693
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.672 seconds
Parameter learned model CLL: -0.235693


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 2], 'false,true,true': [1.449, 7, 3], 'false,true,false,true': [0.0, 0, 10], 'false,true,false,false': [0.0, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.816, 2, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [2.11e-08, 0, 6], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [1.225, 6, 2], 'false,true,false,true': [2.98e-08, 0, 10], 'false,true,false,false': [5.27e-09, 10, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.029, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 5], 'false,true,true': [1.439, 7, 3], 'false,true,false,true': [0.0, 0, 10], 'false,true,false,false': [0.0, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.678, 2, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [1.725, 17, 12], 'false,false,false,true': [0.669, 2, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.53, 16, 11], 'false,false,false,true': [0.661, 2, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.215, 7, 2], 'false,false,true,false': [1.098, 10, 10], 'false,false,false,true': [0.566, 1, 1], 'false,false,false,false': [0.078, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.142, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.831, 4, 1], 'false,true,false': [0.74, 4, 4], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [1.184, 9, 7], 'false,false,false,false': [0.629, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.006, 0, 4], 'true,false': [0.004, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.847, 1, 12], 'false,true,false': [0.167, 16, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.618, 2, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.005, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.42, 17, 12], 'false,false,false,true': [0.622, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.005, 0, 6], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [0.87, 6, 2], 'false,true,false,true': [0.002, 0, 10], 'false,true,false,false': [0.013, 10, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.122, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.24221453287197187], 'false': [0.2455555555555551, 0.18750000000000003], 'false,true': [0.20999999999999988, 0.25], 'false,true,false': [-8.881784197001253e-17, -1.1102230246251566e-17], 'false,false': [0.22222222222222224, 0.0], 'false,false,true': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.0], 'true': [0.0, 0.0]}, {'': [7.401486830834377e-17, 0.19555571246055176], 'false': [0.19461519000118063, 0.18265185592665556], 'false,true': [0.20999999999999996, 0.1784716281162939], 'false,true,true': [0.24999999999999997, 0.18749999999999997], 'false,false': [0.25, 0.00042745294221745167], 'false,false,true': [0.0, 0.0], 'false,true,false': [8.881784197001253e-17, 2.7755575615628915e-18], 'false,false,false': [nan, 0.00042745294221745167]}, {'': [-7.401486830834377e-17, 0.1448150140349162], 'false': [0.14573689463995074, 0.12594489781825877], 'false,true': [0.20712459148243895, 0.11145008534151409], 'false,false': [nan, 0.12594489781825877], 'false,false,false': [0.15340076567130942, 0.0], 'false,true,false': [-1.7763568394002506e-16, 0.0], 'true': [0.0, -4.4408920985006264e-17]}, {'': [7.401486830834377e-17, 0.11596818658076158], 'false': [0.0, 0.10509000364910825], 'false,false': [0.10261829878861836, 0.12004726897913881], 'false,false,false': [0.14907360527386213, 0.0], 'true': [0.0, 2.2204460492503132e-17], 'false,true': [nan, 0.0], 'true,true': [0.0, nan], 'false,true,false': [0.0, nan]}, {'': [-3.700743415417188e-17, 0.10778850495382443], 'false': [0.0, 0.10175842385646007], 'false,false': [0.0995629434447327, 0.11542121409130049], 'false,false,false': [0.14558959667880672, 0.0], 'false,false,true': [0.24999999999999997, 0.0866600970676662], 'true': [-3.700743415417188e-17, nan], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [9.25185853854297e-18, 0.10114247511975792], 'false': [0.0, 0.09901423653075687], 'false,false': [0.09700673255620589, 0.11184930887790372], 'false,false,false': [0.16004849890994177, 0.003035486873928253], 'false,false,true': [0.16413599260431527, 0.06030028682314179], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.004283427891481673, 0.08993683073803421], 'false': [0.0984547289998628, 0.08390385126431567], 'false,true': [0.13800421076849972, 0.0684568486412783], 'false,false': [0.0, 0.09066988658819133], 'false,false,false': [0.08763815493002097, 0.09906627765925587], 'true': [0.005019642060330079, 0.0], 'true,false': [nan, 0.0]}, {'': [8.651516307051077e-06, 0.09155544429264671], 'false': [0.09039286047880209, 0.09848307978580882], 'false,false': [0.1274326464361837, 0.0], 'false,false,true': [nan, 0.1274326464361837], 'false,true': [0.05123895940885955, 0.0017512272509953401], 'false,true,true': [0.0, 0.05514732623509537], 'true': [8.651516307047608e-06, 8.651516307047608e-06], 'false,false,false': [nan, 0.0]}, {'': [6.836986666966527e-06, 0.07211667667393354], 'false': [0.0, 0.07288977989426458], 'false,false': [0.06951871855639521, 0.09682173842975818], 'false,false,false': [0.09682173842975818, nan], 'true': [5.127740000224895e-06, 0.0], 'false,true': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [4.8505038896968595e-06, 0.07122013319628823], 'false': [0.06776763114614073, 0.0965103655410546], 'false,false': [0.0965103655410546, nan], 'false,false,true': [0.0, 0.004963330411389202], 'false,true': [0.13016612195438193, 0.03502015091243349], 'false,true,true': [0.24999999999999997, 0.09465468070075017], 'false,true,false': [5.732680314229909e-07, 1.6039588058533448e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(I, A).;true;true
3;false,false,false;interaction(A, J), interaction(J, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,false;interaction(A, J), interaction(J, K).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(G, A), interaction(A, H).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.006314523612371055;  // std dev = 0.931, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.33192117665568704;  // std dev = 0.954, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1667945087684516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14611957364842149;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.00546555092884037;  // std dev = 0.931, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2805377558121426;  // std dev = 0.943, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.13077424016580563;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11027152107496467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.696226384084193;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then return 0.11749727350800815;  // std dev = 0.317, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.10975241446232316;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09990845486389406;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5332423274275577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( location(A, G), complex(A, H) )
%   | | | then return -0.01161931761548254;  // std dev = 1.051, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.1557934684531683;  // std dev = 1.238, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09099120354131969;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09127624218530779;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4012939410799533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return -0.0793384619360753;  // std dev = 0.990, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.08983396405613396;  // std dev = 0.796, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return 0.01424571470297285;  // std dev = 0.436, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20578375203220708;  // std dev = 0.973, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.23475139364373204;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.1593551108073168;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.08478596452830943;  // std dev = 0.953, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.20231396464888807;  // std dev = 0.364, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.01321598451963296;  // std dev = 0.810, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.1133422940462265;  // std dev = 0.968, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17528996554777193;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17528996554777193;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2618989660835759;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.33190086258021473;  // std dev = 0.754, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.20184072466826844;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.15007351955058537;  // std dev = 0.129, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.012329332660757947;  // std dev = 0.635, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11201711365146377;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1505698760338311;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15297779384665855;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.21449828805496263;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return -0.06030021783449187;  // std dev = 0.298, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.009507140661811785;  // std dev = 1.143, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.09292744324834135;  // std dev = 0.843, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1329350691301364;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.14891442230739996;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.049670411375039906;  // std dev = 0.648, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2308781783964433;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12166480045224845;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.5256853357785163;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.20150883963006316;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.97037
   AUC PR    = 0.249592
   CLL	      = -0.226078
   Precision = 0.232639 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.358289


Total learning time: 1.936 seconds
Total inference time: 3.428 seconds
AUC ROC: 0.97037


Results scoring model
   AUC ROC   = 0.99875
   AUC PR    = 0.99881
   CLL	      = -0.222073
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.597 seconds
Refined model CLL: -0.222073


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97037
   AUC PR    = 0.249592
   CLL	      = -0.226078
   Precision = 0.232639 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.358289


Total learning time: 4.3100000000000005 seconds
Total inference time: 3.428 seconds
AUC ROC: 0.97037
Total revision time: 4.3100000000000005
Best scored revision CLL: -0.222073


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:20:13
{'AUC ROC': 0.97037, 'AUC PR': 0.249592, 'CLL': -0.226078, 'Precision': [0.232639, 0.5], 'Recall': 0.77907, 'F1': 0.358289, 'Learning time': 4.3100000000000005, 'Inference time': 3.428, 'parameter_20': {'AUC ROC': 0.98321, 'AUC PR': 0.310666, 'CLL': -0.19109, 'Precision': [0.276151, 0.5], 'Recall': 0.767442, 'F1': 0.406154, 'Learning time': 1.105, 'Inference time': 3.156}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.4926229998504546;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12595633318378793;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6465415686654066;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1667945087684516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14611957364842149;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.17705529906571846;  // std dev = 1.726, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5044629797645588;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13077424016580563;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11027152107496467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415831;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, A), interaction(H, F) )
%   | | | then return 0.778030207549091;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.1106078717413094;  // std dev = 2.198, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10975241446232316;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09990845486389406;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.3207118471601495;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014944;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014944;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.4687802754460912;  // std dev = 0.209, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3516889579970755;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06789622226180728;  // std dev = 1.960, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09099120354131969;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09127624218530779;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.36495804968648493;  // std dev = 0.194, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.043781052450785306;  // std dev = 1.559, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.08923964853639478;  // std dev = 1.463, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.20910216469320567;  // std dev = 0.566, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.13907776572191;  // std dev = 0.078, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.25011699383751534;  // std dev = 0.180, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1899767251227663;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return -0.09314561582117713;  // std dev = 0.793, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.0785559700573119;  // std dev = 0.887, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08884237388584078;  // std dev = 1.720, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.02145712368871732;  // std dev = 0.629, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.1741938732107692;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.174919169679851;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3525928306657655;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3420622080222372;  // std dev = 1.370, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return -0.18356125633261375;  // std dev = 0.286, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.14501863543431548;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04918361434647941;  // std dev = 0.618, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07536559860264216;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.149848414880094;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15178336230204126;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.20238703064373803;  // std dev = 0.105, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.029438505739396284;  // std dev = 1.880, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.01225553139248018;  // std dev = 0.622, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13250066644998904;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.025758276850156525;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.02853799975428276;  // std dev = 1.225, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21008136440594455;  // std dev = 0.954, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.11997492177476642;  // std dev = 0.017, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.322444576935063;  // std dev = 0.305, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.16559270958366437;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973152
   AUC PR    = 0.296587
   CLL	      = -0.200467
   Precision = 0.259843 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.388235


Total learning time: 1.097 seconds
Total inference time: 3.099 seconds
AUC ROC: 0.973152


Results scoring model
   AUC ROC   = 0.9768
   AUC PR    = 0.971016
   CLL	      = -0.285604
   Precision = 0.956522 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.916667


Total scoring time: 0.607 seconds
Parameter learned model CLL: -0.285604


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [1.754, 8, 5], 'false,true,false,true': [0.953, 1, 10], 'false,true,false,false': [0.0, 13, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.816, 2, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 8], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [1.449, 7, 3], 'false,true,false,true': [0.953, 1, 10], 'false,true,false,false': [7.45e-09, 13, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.029, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 1], 'true,false': [2.11e-08, 0, 7], 'false,true,true': [1.726, 8, 5], 'false,true,false,true': [0.953, 1, 10], 'false,true,false,false': [1.05e-08, 13, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.678, 2, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,true,false': 'interaction(H, A), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 7], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [2.198, 22, 14], 'false,false,false,true': [0.669, 2, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.0, 0, 2], 'false,true': [0.209, 0, 2], 'false,false,true,true': [0.816, 1, 2], 'false,false,true,false': [1.96, 21, 12], 'false,false,false,true': [0.661, 2, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 6], 'false,true': [0.194, 0, 2], 'false,false,true,true': [1.559, 8, 4], 'false,false,true,false': [1.463, 14, 10], 'false,false,false,true': [0.566, 1, 1], 'false,false,false,false': [0.078, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.18, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.028, 0, 2], 'false,true,true': [0.793, 4, 1], 'false,true,false': [0.887, 5, 4], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [1.72, 13, 9], 'false,false,false,false': [0.629, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.006, 0, 4], 'true,false': [0.008, 0, 4], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.37, 2, 14], 'false,true,false': [0.286, 20, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.618, 2, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.007, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.005, 0, 4], 'false,true,true': [0.105, 0, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.88, 22, 14], 'false,false,false,true': [0.622, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.008, 0, 8], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [1.225, 7, 4], 'false,true,false,true': [0.954, 1, 10], 'false,true,false,false': [0.017, 13, 0], 'false,false,true,true': [0.305, 0, 2], 'false,false,true,false': [0.122, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-2.220446049250313e-16, 0.24092970521541907], 'false': [0.24105186267348383, 0.24000000000000005], 'false,true': [0.2366863905325442, 0.24305555555555558], 'false,true,false': [0.0826446280991734, -1.2810265668751807e-17], 'false,false': [0.25, 0.0], 'false,false,true': [0.0, 0.22222222222222224], 'false,false,false': [nan, 0.0], 'true': [0.0, 1.4802973661668753e-16]}, {'': [0.0, 0.2043743504195057], 'false': [0.20377387466959448, 0.20880771394417322], 'false,false': [0.25, 0.16678523911013385], 'false,false,true': [0.0, 0.0], 'false,true': [0.23668639053254428, 0.1858348064307629], 'false,true,true': [0.22222222222222218, 0.21000000000000005], 'false,true,false': [0.08264462809917372, 4.270088556250602e-18], 'false,false,false': [0.0, 0.00042745294221745167]}, {'': [-1.1102230246251565e-16, 0.16301927558744758], 'false': [0.1663470997123136, 0.13836920612758477], 'false,true': [0.22913272440399166, 0.1323225361872427], 'false,false': [0.0, 0.12594489781825877], 'false,true,false': [0.08264462809917372, 8.540177112501205e-18], 'false,false,false': [0.15340076567130942, 0.0], 'false,false,true': [0.0, nan], 'true': [0.0, 6.344131569286608e-17]}, {'': [1.1102230246251565e-16, 0.13926685688112908], 'false': [0.03249305893527249, 0.13305566700322177], 'false,false': [0.134217268084107, 0.12004726897913881], 'false,false,false': [0.14907360527386213, 0.0], 'false,true': [nan, 0.03249305893527249], 'false,true,false': [0.0, 0.0], 'true': [0.0, -3.172065784643304e-17], 'true,true': [0.0, nan]}, {'': [2.7755575615628914e-17, 0.1314858274693462], 'false': [0.021924259455069012, 0.13002071691799752], 'false,false': [0.13143016669985408, 0.11542121409130049], 'false,false,true': [0.22222222222222224, 0.11646481706587207], 'false,false,false': [0.14558959667880672, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [2.7755575615628914e-17, 0.12480872157513272], 'false': [0.0187403322204496, 0.12597430786942027], 'false,false': [0.12739106989276514, 0.11184930887790372], 'false,false,true': [0.2024565325400115, 0.08916951058311695], 'false,false,false': [0.16004849890994177, 0.003035486873928253], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.005503847604495111, 0.11585758273719984], 'false': [0.10793328092770733, 0.1178603773169674], 'false,false': [0.0, 0.12967671612306597], 'false,false,false': [0.13454367009011653, 0.09906627765925587], 'false,true': [0.12579827961603077, 0.08747919787313509], 'true': [0.006515485348907802, 0.00039128758554757975], 'true,false': [nan, 0.00039128758554757975]}, {'': [1.1451088708383517e-05, 0.11694246522881976], 'false': [0.12172407422739502, 0.08136597921177068], 'false,true': [0.11042219421170282, 0.004091827520317703], 'false,true,true': [0.0, 0.11731705817268365], 'false,false': [0.09729655068968264, 0.0], 'false,false,true': [0.0, 0.1274326464361837], 'true': [8.425229188327443e-06, 1.4213920744413772e-05], 'false,false,false': [nan, 0.0]}, {'': [9.020046990375341e-06, 0.095053604723642], 'false': [0.005541350848736332, 0.09807643175900556], 'false,false': [0.09818631666818128, 0.09682173842975818], 'false,false,false': [0.09682173842975818, nan], 'false,true': [0.005541350848736332, nan], 'true': [1.1056207160613923e-05, 5.111876057291298e-06], 'true,false': [nan, 5.111876057291298e-06]}, {'': [7.089882980603618e-06, 0.09416976226979365], 'false': [0.09625947405216413, 0.07870562110241133], 'false,true': [0.15395813194835972, 0.06500245779275665], 'false,true,true': [0.25, 0.13649478537318507], 'false,false': [0.07870562110241133, nan], 'false,false,true': [0.04641082131940709, 0.004963330411389202], 'false,true,false': [0.08278888082854827, 2.287950997562285e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
1;false,false,false;interaction(A, K), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, C), phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false,false;interaction(A, J), interaction(J, K).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(H, A), interaction(H, F).;true;true
3;false,false;interaction(I, A).;true;true
3;false,false,false;interaction(A, J), interaction(J, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,false;interaction(A, J), interaction(J, K).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(G, A), interaction(A, H).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.002550280073537479;  // std dev = 0.936, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.38534920869959277;  // std dev = 1.260, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6465415686654066;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1667945087684516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14611957364842149;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.002202015769166487;  // std dev = 0.936, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.32024291327416526;  // std dev = 1.247, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5044629797645588;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.13077424016580563;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11027152107496467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.660344628205229;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.17611982758125946;  // std dev = 1.179, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.08235832570400174;  // std dev = 1.777, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.10975241446232316;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09990845486389406;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4109166405514674;  // std dev = 0.128, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.04209851684274252;  // std dev = 1.823, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.20601673901306883;  // std dev = 0.979, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09099120354131969;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09127624218530779;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(F, E), location(A, G) )
%   | | then if ( location(E, G), complex(E, H) )
%   | | | then return 0.141767596231818;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.15478454085567245;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.4361004569256826;  // std dev = 0.196, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then return -0.15024112603016965;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3874972728101555;  // std dev = 0.609, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.016780150970650203;  // std dev = 1.415, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.2280065564133948;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21169346034047598;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(I, J), phenotype(A, K) )
%   | | | then return 0.3174778760501482;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.009472930167248206;  // std dev = 0.638, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.15213474287868461;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.07667690811891478;  // std dev = 1.600, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.008699985235323976;  // std dev = 0.576, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17577459176101;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17570411020840565;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2553008019106221;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.31330013647455535;  // std dev = 1.230, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.23751682920082834;  // std dev = 0.213, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.14755076988280819;  // std dev = 0.218, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.1802166935018359;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.055756470303820894;  // std dev = 0.549, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.072536203265529;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1510952488349689;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15233232818789258;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), complex(G, I) )
%   | | | then return -0.09522374490792655;  // std dev = 0.987, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.33936393959206734;  // std dev = 0.213, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.1989812798192266;  // std dev = 0.188, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.13911943590393303;  // std dev = 0.190, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return -0.014742922142986396;  // std dev = 0.372, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.05186386690251873;  // std dev = 0.651, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.31594809537713503;  // std dev = 0.216, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1326116281486383;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13418672607048068;  // std dev = 6.32e-05, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.08087628316159792;  // std dev = 0.996, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.02884509908478361;  // std dev = 0.526, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.15712401256128355;  // std dev = 0.843, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.10354885673815238;  // std dev = 0.056, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.03728500288378523;  // std dev = 0.562, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.955848
   AUC PR    = 0.243593
   CLL	      = -0.237436
   Precision = 0.130859 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.22408


Total learning time: 3.241 seconds
Total inference time: 3.253 seconds
AUC ROC: 0.955848


Results scoring model
   AUC ROC   = 0.9912
   AUC PR    = 0.990742
   CLL	      = -0.233222
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 0.849 seconds
Refined model CLL: -0.233222


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.955848
   AUC PR    = 0.243593
   CLL	      = -0.237436
   Precision = 0.130859 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.22408


Total learning time: 5.7940000000000005 seconds
Total inference time: 3.253 seconds
AUC ROC: 0.955848
Total revision time: 5.7940000000000005
Best scored revision CLL: -0.233222


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:20:26
{'AUC ROC': 0.955848, 'AUC PR': 0.243593, 'CLL': -0.237436, 'Precision': [0.130859, 0.5], 'Recall': 0.77907, 'F1': 0.22408, 'Learning time': 5.7940000000000005, 'Inference time': 3.253, 'parameter_25': {'AUC ROC': 0.973152, 'AUC PR': 0.296587, 'CLL': -0.200467, 'Precision': [0.259843, 0.5], 'Recall': 0.767442, 'F1': 0.388235, 'Learning time': 1.097, 'Inference time': 3.099}}


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2448947584827767;  // std dev = 0.577, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.14472384711748415;  // std dev = 0.991, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.1980800583301751;  // std dev = 0.563, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12002399745245847;  // std dev = 0.982, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15707816053369625;  // std dev = 0.552, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.027470044146021493;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1937626700237148;  // std dev = 0.395, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return -0.2624918796776245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5082634854538068;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return 0.04226403673550658;  // std dev = 0.381, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0956322455802955;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08423478756997176;  // std dev = 0.423, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4499999010983788;  // std dev = 0.374, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.22209607572766443;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06710405421776826;  // std dev = 0.419, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.048995021542033716;  // std dev = 0.810, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.05337301746620844;  // std dev = 0.417, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.205160050784132;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07474577544161869;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20436517371562996;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14202518125252783;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3362795166893775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.25146070383898617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.955299
   AUC PR    = 0.121476
   CLL	      = -0.235553
   Precision = 0.150685 at threshold = 0.5
   Recall    = 0.505747
   F1        = 0.23219


Total learning time: 0.903 seconds
Total inference time: 6.38 seconds
AUC ROC: 0.955299


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.289588
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.501 seconds
Parameter learned model CLL: -0.289588


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.577, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.991, 4, 3], 'false,false,false,true': [0.563, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.982, 4, 3], 'false,false,false,true': [0.552, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.866, 3, 1], 'false,false,true,false': [0.395, 1, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.381, 1, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.88, 3, 2], 'false,false,false,false': [0.423, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.374, 0, 3], 'false,true,false': [0.067, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.419, 1, 1], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.81, 4, 3], 'false,false,false,true': [0.417, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.707, 2, 1], 'false,true,false,true': [0.006, 0, 2], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24691358024691348], 'false': [0.24489795918367335, 0.25], 'false,false': [0.25, nan], 'false,false,true': [nan, 0.25], 'false,true': [0.18750000000000003, 0.22222222222222224], 'false,true,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.21500521457011634], 'false': [0.20400567457736837, 0.25000000000000006], 'false,false': [0.0, 0.0], 'false,true': [0.18749999999999997, 0.1586414472144835], 'false,true,true': [nan, 0.18749999999999997], 'false,true,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.16595116272852184], 'false': [0.16504767714706622, 0.1667085109942189], 'false,false': [nan, 0.1667085109942189], 'false,false,false': [0.1667085109942189, nan], 'false,true': [0.18749999999999994, 0.09906674252579038], 'false,true,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.14475179999900895], 'false': [nan, 0.14475179999900892], 'false,false': [0.1402701632077127, 0.15822328466578878], 'false,false,false': [0.15822328466578878, nan], 'true': [nan, 0.0]}, {'': [0.0, 0.14127175901164912], 'false': [nan, 0.14127175901164912], 'false,false': [0.13780309510579558, 0.15234418523640803], 'false,false,false': [0.15234418523640803, nan], 'false,false,true': [nan, 0.13780309510579555], 'true': [0.0, nan], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.1390068749299835], 'false': [nan, 0.13900687492998348], 'false,false': [0.13616041592386477, 0.14851595821972152], 'false,false,false': [0.0, 0.0], 'false,false,true': [0.18750000000000003, 0.05190578720065666], 'true': [nan, 0.0]}, {'': [0.0, 0.12259438709771946], 'false': [0.07267488329685243, 0.13629905986393956], 'false,false': [nan, 0.13629905986393956], 'false,false,false': [0.15498530818024275, 0.08949065189525506], 'false,true': [0.07267488329685243, nan], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}, {'': [0.0, 0.12164234245240918], 'false': [0.13126689716109505, 0.08795535620326997], 'false,true': [0.04666987634233707, 0.001123376175555038], 'false,false': [0.08795535620326997, nan], 'false,false,true': [nan, 0.08795535620326997], 'false,true,true': [nan, 0.04666987634233707], 'true': [nan, 0.0]}, {'': [0.0, 0.09218228433129365], 'false': [nan, 0.09218228433129363], 'false,false': [0.09366480671164344, 0.08697854845138223], 'false,false,false': [0.08697854845138223, nan], 'true': [0.0, nan]}, {'': [0.0, 0.09154335863441904], 'false': [0.09302386350797755, 0.0863596417066824], 'false,true': [0.13975109713107875, 0.026676164621614526], 'false,true,true': [0.0, 0.1667479782859916], 'false,false': [0.0863596417066824, nan], 'false,false,true': [0.0, 0.0], 'false,true,false': [1.8820927433001178e-05, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(F, A).;true;true
5;false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2448947584827767;  // std dev = 0.577, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, D) )
%   | then return -0.16831242176190278;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.5626972888230632;  // std dev = 0.331, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.19662228411580498;  // std dev = 0.448, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.07286080705608577;  // std dev = 0.812, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return -0.15259183272963175;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.4110707272784306;  // std dev = 0.363, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then return -0.1848742117612135;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.4082741860134198;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, D) )
%   | then return -0.13896129772219382;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.32815440595892664;  // std dev = 0.347, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.2755624641388197;  // std dev = 0.318, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11883652977639048;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.05369541683686774;  // std dev = 0.275, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( phenotype(A, D) )
%   | then return -0.11513485563098125;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.23355353330257397;  // std dev = 0.287, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.1178503735161487;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.06594131188710788;  // std dev = 0.420, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.09302801712617798;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.057292398296580296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.19864544387632654;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.1336642202646664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.842338
   AUC PR    = 0.090784
   CLL	      = -0.394711
   Precision = 0.021974 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.042693


Total learning time: 0.939 seconds
Total inference time: 4.216 seconds
AUC ROC: 0.842338


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152226
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.488 seconds
Refined model CLL: -0.152226


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.842338
   AUC PR    = 0.090784
   CLL	      = -0.394711
   Precision = 0.021974 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.042693


Total learning time: 2.831 seconds
Total inference time: 4.216 seconds
AUC ROC: 0.842338
Total revision time: 2.831
Best scored revision CLL: -0.152226


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:20:40
{'AUC ROC': 0.842338, 'AUC PR': 0.090784, 'CLL': -0.394711, 'Precision': [0.021974, 0.5], 'Recall': 0.747126, 'F1': 0.042693, 'Learning time': 2.831, 'Inference time': 4.216, 'parameter_5': {'AUC ROC': 0.955299, 'AUC PR': 0.121476, 'CLL': -0.235553, 'Precision': [0.150685, 0.5], 'Recall': 0.505747, 'F1': 0.23219, 'Learning time': 0.903, 'Inference time': 6.38}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return -0.17266576078189197;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.25590566778953655;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7927941835770488;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2072058164229512;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7927941835770488;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.17054060838891846;  // std dev = 1.353, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.3102610413430707;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.12785795749662252;  // std dev = 1.468, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.24579186628998295;  // std dev = 0.859, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return -0.1913722393555478;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.13054767340961718;  // std dev = 1.425, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1908229422986815;  // std dev = 0.842, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.0983955996352524;  // std dev = 1.339, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.06588973483225757;  // std dev = 0.530, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return -0.05613747815793032;  // std dev = 0.621, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.45070590257000787;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return -0.11578322588266556;  // std dev = 0.539, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1519868427421616;  // std dev = 1.255, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.11118025372755716;  // std dev = 0.753, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4122211353389535;  // std dev = 0.718, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.24781910564494408;  // std dev = 0.223, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08632989449612981;  // std dev = 0.751, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.038691015091520425;  // std dev = 1.191, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.06708405652766322;  // std dev = 0.750, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.24814786550010837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07894255168591433;  // std dev = 1.070, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.24568904032159583;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12870496446144575;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.32417649303139556;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3557807828530424;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.897819
   AUC PR    = 0.110162
   CLL	      = -0.27123
   Precision = 0.146965 at threshold = 0.5
   Recall    = 0.528736
   F1        = 0.23


Total learning time: 0.937 seconds
Total inference time: 6.925 seconds
AUC ROC: 0.897819


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.322556
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.823529


Total scoring time: 0.548 seconds
Parameter learned model CLL: -0.322556


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.369, 5, 3], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 2, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.309, 4, 3], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.353, 5, 3], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.886, 2, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [1.468, 8, 5], 'false,false,false,true': [0.859, 2, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.425, 7, 5], 'false,false,false,true': [0.842, 2, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.339, 5, 3], 'false,false,true,false': [0.53, 3, 2], 'false,false,false,true': [0.621, 2, 1], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.539, 3, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.255, 5, 4], 'false,false,false,false': [0.753, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.718, 1, 5], 'false,true,false': [0.223, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.751, 2, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.191, 8, 5], 'false,false,false,true': [0.75, 2, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.07, 4, 3], 'false,true,false,true': [0.035, 0, 2], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true,true': [0.093, 0, 3], 'false,false,true,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2469135802469134], 'false': [0.2366863905325442, 0.23999999999999994], 'false,false': [0.23999999999999994, nan], 'false,false,true': [nan, 0.23999999999999994], 'false,true': [0.2343749999999999, 0.24000000000000005], 'false,true,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.2254245266632351], 'false': [0.21015255436338928, 0.24], 'false,false': [0.22222222222222218, 0.0], 'false,false,true': [0.0, 0.0], 'false,true': [0.23437500000000008, 0.17133276299164227], 'false,true,true': [0.0, 0.24489795918367355], 'false,true,false': [0.0, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.17941005876366226], 'false': [0.18207531017624945, 0.15712952914507455], 'false,true': [0.22890650850240177, 0.10699208192785356], 'false,false': [nan, 0.15712952914507455], 'false,false,false': [0.15712952914507455, nan], 'false,true,false': [0.0, 2.3129646346357427e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.16344584999165013], 'false': [nan, 0.16344584999165024], 'false,false': [0.1656996631063675, 0.1475409753954602], 'false,false,false': [0.1475409753954602, nan], 'true': [nan, 0.0]}, {'': [0.0, 0.15902263502164002], 'false': [nan, 0.15902263502164007], 'false,false': [0.16365027144809013, 0.14176801650601206], 'false,false,true': [0.0, 0.16931606866609272], 'false,false,false': [0.14176801650601206, nan], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.15466588720170038], 'false': [nan, 0.15466588720170035], 'false,false': [0.15977495614989265, 0.13872071479737189], 'false,false,true': [0.22408339878170364, 0.05623121332570848], 'false,false,false': [0.12844510629386285, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.14647959231033691], 'false': [0.0727463129238873, 0.15329994141550313], 'false,false': [nan, 0.15329994141550313], 'false,false,false': [0.17486480646847719, 0.11341271293707396], 'false,true': [0.0727463129238873, nan], 'true': [nan, 0.0], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.14105890871753357], 'false': [0.15171531452684367, 0.11272309857212699], 'false,true': [0.08587732209808119, 0.00707720882666841], 'false,false': [0.11272309857212699, nan], 'false,false,true': [nan, 0.11272309857212699], 'false,true,true': [nan, 0.08587732209808115], 'true': [nan, 0.0]}, {'': [0.0, 0.11019632012411319], 'false': [nan, 0.11019632012411319], 'false,false': [0.10906039014111656, 0.11256750794513057], 'false,false,false': [0.11256750794513057, nan], 'true': [0.0, nan]}, {'': [0.0, 0.10963307709049845], 'false': [0.10834319853643301, 0.112677978155227], 'false,false': [0.112677978155227, nan], 'false,false,true': [0.0028598714474373974, 0.0], 'false,true': [0.15476776645021048, 0.033885968136562854], 'false,true,true': [0.0, 0.16350392974480335], 'false,true,false': [0.0006123978509166295, 2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(H, A).;true;true
4;false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(F, A).;true;true
5;false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;phenotype(A, F).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return -0.1490779674864458;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.24979642125430043;  // std dev = 1.274, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7927941835770488;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2072058164229512;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.7927941835770488;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.026881454861041244;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4026874491693115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3102610413430707;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then return -0.15977208470318627;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.16417037286217018;  // std dev = 0.974, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then return 0.5121157824904282;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25368294615301973;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return -0.11672460691115245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.09094720712364919;  // std dev = 0.510, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18489905251301927;  // std dev = 1.109, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.17475665966127824;  // std dev = 0.787, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return -0.21487110299888612;  // std dev = 0.213, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.1737500074081879;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3182894139576251;  // std dev = 0.830, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then return -0.03438894003554053;  // std dev = 0.624, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.389818168313698;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, E), location(A, F) )
%   | then return 0.28134753231503923;  // std dev = 0.492, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return -0.1372392409807619;  // std dev = 0.527, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.21576557374688896;  // std dev = 0.762, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.04971062139552855;  // std dev = 0.352, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( complex(A, D), location(A, E) )
%   | then return 0.22416048389403537;  // std dev = 0.464, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, F), enzyme(A, G) )
%   | | then return -0.19125615109083996;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.07681869946292881;  // std dev = 0.502, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20232182529352996;  // std dev = 0.710, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), interaction(E, E) )
%   | | then if ( enzyme(E, F) )
%   | | | then return -0.18511124619694097;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.040111675196318385;  // std dev = 0.399, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.08575040656186823;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then return 0.17985446525874443;  // std dev = 0.472, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.08817406738708879;  // std dev = 0.476, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.16653769256002957;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07138069059002637;  // std dev = 0.803, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17633479518222123;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1629017278137177;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.29125211715055943;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2235749940534461;  // std dev = 0.047, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.805657
   AUC PR    = 0.076215
   CLL	      = -0.438776
   Precision = 0.026782 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.051624


Total learning time: 1.723 seconds
Total inference time: 6.419 seconds
AUC ROC: 0.805657


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.240749
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.561 seconds
Refined model CLL: -0.240749


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.805657
   AUC PR    = 0.076215
   CLL	      = -0.438776
   Precision = 0.026782 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.051624


Total learning time: 3.769 seconds
Total inference time: 6.419 seconds
AUC ROC: 0.805657
Total revision time: 3.769
Best scored revision CLL: -0.240749


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:20:57
{'AUC ROC': 0.805657, 'AUC PR': 0.076215, 'CLL': -0.438776, 'Precision': [0.026782, 0.5], 'Recall': 0.712644, 'F1': 0.051624, 'Learning time': 3.769, 'Inference time': 6.419, 'parameter_10': {'AUC ROC': 0.897819, 'AUC PR': 0.110162, 'CLL': -0.27123, 'Precision': [0.146965, 0.5], 'Recall': 0.528736, 'F1': 0.23, 'Learning time': 0.937, 'Inference time': 6.925}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return -0.17266576078189197;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.25590566778953655;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.191258864214365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47540780245230163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.17054060838891846;  // std dev = 1.353, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.24993578853344303;  // std dev = 1.109, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), enzyme(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.15196982046801352;  // std dev = 1.665, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.20152524345938694;  // std dev = 1.096, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(C, E), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return -0.19513131513853796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.14070031718490789;  // std dev = 1.607, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1589495263373103;  // std dev = 1.086, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.09179374929030228;  // std dev = 1.338, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.10845098710710513;  // std dev = 0.898, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return -0.007776419947850351;  // std dev = 0.629, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.25474639215570444;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(G, H) )
%   | | then return -0.1277326673774887;  // std dev = 0.530, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.144489570380681;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A) )
%   | | | then return 0.16410450725445502;  // std dev = 1.378, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.09292241172817832;  // std dev = 1.059, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3508528709517448;  // std dev = 0.737, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.21673629235168798;  // std dev = 0.281, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07131277962381755;  // std dev = 1.056, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.04824629697029182;  // std dev = 1.320, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.054556588198268884;  // std dev = 1.054, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03330742190229129;  // std dev = 1.131, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.22222442265418735;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.13446415837445627;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4647914721845794;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.38146871025473367;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.897509
   AUC PR    = 0.118808
   CLL	      = -0.276218
   Precision = 0.158249 at threshold = 0.5
   Recall    = 0.54023
   F1        = 0.244792


Total learning time: 0.993 seconds
Total inference time: 6.485 seconds
AUC ROC: 0.897509


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.29965
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.534 seconds
Parameter learned model CLL: -0.29965


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.369, 5, 3], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 3, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H), interaction(A, I)', 'false,false,true': 'enzyme(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.309, 4, 3], 'false,true,false,true': [2.11e-08, 0, 7], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [1.353, 5, 3], 'false,true,false,true': [0.0, 0, 7], 'false,true,false,false': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.109, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(C, D), enzyme(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [1.665, 12, 10], 'false,false,false,true': [1.096, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'enzyme(C, E), enzyme(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.607, 11, 10], 'false,false,false,true': [1.086, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'enzyme(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.338, 5, 3], 'false,false,true,false': [0.898, 7, 7], 'false,false,false,true': [0.629, 2, 1], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'enzyme(A, F)', 'false': 'interaction(G, A), interaction(A, H)', 'false,true': 'interaction(G, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.53, 4, 1], 'false,true,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.378, 7, 9], 'false,false,false,false': [1.059, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.737, 1, 10], 'false,true,false': [0.281, 11, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.056, 3, 3], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.32, 12, 10], 'false,false,false,true': [1.054, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), enzyme(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.131, 5, 3], 'false,true,false,true': [0.049, 0, 7], 'false,true,false,false': [0.04, 7, 0], 'false,false,true,true': [0.014, 0, 3], 'false,false,true,false': [0.181, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2487244897959184], 'false': [0.2479338842975207, 0.24999999999999992], 'false,false': [0.24999999999999992, nan], 'false,false,true': [nan, 0.24999999999999992], 'false,true': [0.2343749999999999, 0.24999999999999992], 'false,true,false': [-2.5376526277146434e-16, -7.93016446160826e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.2117600907469886], 'false': [0.20087451747822413, 0.24999999999999992], 'false,false': [0.22222222222222224, 0.22222222222222224], 'false,false,true': [0.0, 0.0], 'false,false,false': [nan, 0.22222222222222224], 'false,true': [0.23437500000000008, 0.17847162811629397], 'false,true,true': [0.0, 0.24489795918367355], 'false,true,false': [6.344131569286608e-17, -1.982541115402065e-18]}, {'': [0.0, 0.1659259199849681], 'false': [0.15476302858059973, 0.205124529356322], 'false,false': [nan, 0.205124529356322], 'false,false,false': [0.205124529356322, nan], 'false,true': [0.22890650850240177, 0.11145008534151415], 'false,true,false': [-6.344131569286608e-17, -1.982541115402065e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.14227584602577417], 'false': [nan, 0.14227584602577417], 'false,false': [0.1259729185153597, 0.20012373693826582], 'false,false,false': [0.20012373693826582, nan], 'true': [nan, 0.0]}, {'': [0.0, 0.13841672580365455], 'false': [nan, 0.13841672580365452], 'false,false': [0.12231007886034591, 0.1965919113287163], 'false,false,false': [0.1965919113287163, nan], 'false,false,true': [0.0, 0.12300787354493027], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.13450393816976328], 'false': [nan, 0.13450393816976328], 'false,false': [0.11811460210503491, 0.1942486550546564], 'false,false,false': [0.13181597444971144, 0.22222222222222224], 'false,false,true': [0.22380118149201791, 0.0576213751825096], 'true': [nan, 0.0]}, {'': [0.0, 0.13141121611354054], 'false': [0.04684735198264526, 0.13824318212428535], 'false,false': [nan, 0.13824318212428535], 'false,false,false': [0.11861383268034742, 0.18690310253950507], 'false,true': [0.05617002341279792, 0.0], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}, {'': [0.0, 0.12527946494896883], 'false': [0.10877934632704932, 0.1857656779269308], 'false,false': [0.1857656779269308, nan], 'false,false,true': [nan, 0.1857656779269308], 'false,true': [0.049313760073130514, 0.007166203431222631], 'false,true,true': [nan, 0.049313760073130514], 'true': [nan, 0.0]}, {'': [0.0, 0.10190466785289258], 'false': [nan, 0.10190466785289255], 'false,false': [0.0792268285939798, 0.18502545816920132], 'false,false,false': [0.18502545816920132, nan], 'true': [0.0, nan]}, {'': [0.0, 0.10128200379479382], 'false': [0.07857466861598796, 0.18454015578289695], 'false,false': [0.18454015578289695, nan], 'false,false,true': [6.881793118259279e-05, 0.010933345443501627], 'false,true': [0.15984677600049246, 0.03209281632290101], 'false,true,true': [nan, 0.15984677600049246], 'false,true,false': [0.00034719313644670277, 0.00022506759124167014]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;enzyme(A, H), interaction(A, I).;true;true
1;false,false,true;enzyme(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(H, A).;true;true
4;false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(G, A), interaction(A, H).;true;true
6;false,true;interaction(G, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.24472594868978018;  // std dev = 1.258, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.191258864214365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.47540780245230163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.1406662024164046;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3497210515045194;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.24993578853344303;  // std dev = 1.109, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.5051583971601199;  // std dev = 0.247, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.2600290429853152;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14377776886463237;  // std dev = 0.230, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then return 0.5870628453122219;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.5045466544275211;  // std dev = 0.213, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21430433268714622;  // std dev = 0.693, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return -0.08692759313169389;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.03349890632315473;  // std dev = 0.361, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.16328693556358514;  // std dev = 1.174, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else return 0.14666897371252008;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), complex(E, F) )
%   | | then if ( enzyme(E, G), enzyme(A, H) )
%   | | | then return 0.025921097954007787;  // std dev = 0.711, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.1515645137719739;  // std dev = 0.268, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.22833269114908342;  // std dev = 0.443, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.22431865913491927;  // std dev = 0.489, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3437481585430775;  // std dev = 0.588, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E) )
%   | | then return -0.04082851547935419;  // std dev = 0.315, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.08859050121578022;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3286053489063603;  // std dev = 0.216, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18661546113685087;  // std dev = 0.256, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.4095955423869011;  // std dev = 0.188, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21735653213696385;  // std dev = 0.490, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), complex(E, F) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.07396739627651647;  // std dev = 0.424, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10815960829407262;  // std dev = 0.416, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0.14976237350675967;  // std dev = 0.348, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then return 0.24905832932570068;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.3173292206987059;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04561376984638098;  // std dev = 0.526, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.2500129240045947;  // std dev = 0.172, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.10862157090753492;  // std dev = 0.203, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.19576615326553362;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then return 0.25376678955973286;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.20681364187856874;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.037399267368684534;  // std dev = 0.523, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.08950051345903008;  // std dev = 0.412, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13780428060158117;  // std dev = 0.409, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.14947961697257517;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.09642350690527848;  // std dev = 0.161, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.15031371609951874;  // std dev = 0.359, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.17070445787658528;  // std dev = 0.048, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.870788
   AUC PR    = 0.108644
   CLL	      = -0.368613
   Precision = 0.040841 at threshold = 0.5
   Recall    = 0.781609
   F1        = 0.077626


Total learning time: 2.221 seconds
Total inference time: 6.345 seconds
AUC ROC: 0.870788


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.169222
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.549 seconds
Refined model CLL: -0.169222


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.870788
   AUC PR    = 0.108644
   CLL	      = -0.368613
   Precision = 0.040841 at threshold = 0.5
   Recall    = 0.781609
   F1        = 0.077626


Total learning time: 4.297000000000001 seconds
Total inference time: 6.345 seconds
AUC ROC: 0.870788
Total revision time: 4.297000000000001
Best scored revision CLL: -0.169222


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:21:15
{'AUC ROC': 0.870788, 'AUC PR': 0.108644, 'CLL': -0.368613, 'Precision': [0.040841, 0.5], 'Recall': 0.781609, 'F1': 0.077626, 'Learning time': 4.297000000000001, 'Inference time': 6.345, 'parameter_15': {'AUC ROC': 0.897509, 'AUC PR': 0.118808, 'CLL': -0.276218, 'Precision': [0.158249, 0.5], 'Recall': 0.54023, 'F1': 0.244792, 'Learning time': 0.993, 'Inference time': 6.485}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.32373365448410585;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.19873365448410585;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8000001837159434;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.19999981628405664;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5500001837159433;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.18874812059691107;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.28511662797254367;  // std dev = 1.316, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.1385784722949986;  // std dev = 1.896, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.22724413262349433;  // std dev = 1.294, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.20905334257894626;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.10759856828105725;  // std dev = 1.727, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17712390182825025;  // std dev = 1.279, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.10292935359614712;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.08940488206486112;  // std dev = 1.024, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.015866404292992353;  // std dev = 0.837, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.28663688539594445;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return -0.06326782269149081;  // std dev = 0.965, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.13657534960828552;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1367305798412421;  // std dev = 1.484, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.10244411807234878;  // std dev = 1.241, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36994988952917496;  // std dev = 0.934, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.2028656603110492;  // std dev = 0.307, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07829763568037626;  // std dev = 1.238, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.0423680815202531;  // std dev = 1.561, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05978459088118753;  // std dev = 1.236, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.14695780390942711;  // std dev = 0.580, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.014257376410820768;  // std dev = 1.213, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23299761333370095;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.12878066131012492;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.40804941301644676;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.40735359029568297;  // std dev = 0.215, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.962089
   AUC PR    = 0.120342
   CLL	      = -0.2785
   Precision = 0.153846 at threshold = 0.5
   Recall    = 0.528736
   F1        = 0.238342


Total learning time: 1.035 seconds
Total inference time: 6.443 seconds
AUC ROC: 0.962089


Results scoring model
   AUC ROC   = 0.9825
   AUC PR    = 0.982474
   CLL	      = -0.307162
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.59 seconds
Parameter learned model CLL: -0.307162


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [1.549, 6, 4], 'false,true,false,true': [0.0, 0, 8], 'false,true,false,false': [0.0, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.491, 4, 5], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [1.369, 5, 3], 'false,true,false,true': [2.98e-08, 0, 8], 'false,true,false,false': [5.27e-09, 10, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.866, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.547, 6, 4], 'false,true,false,true': [0.0, 0, 8], 'false,true,false,false': [0.0, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.316, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [1.896, 16, 12], 'false,false,false,true': [1.294, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.727, 15, 11], 'false,false,false,true': [1.279, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.544, 6, 4], 'false,false,true,false': [1.024, 10, 8], 'false,false,false,true': [0.837, 3, 2], 'false,false,false,false': [0.866, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.965, 5, 2], 'false,true,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.484, 10, 10], 'false,false,false,false': [1.241, 4, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.934, 1, 12], 'false,true,false': [0.307, 15, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.238, 4, 5], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.561, 16, 12], 'false,false,false,true': [1.236, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.58, 1, 1], 'false,true,true,false': [1.213, 5, 3], 'false,true,false,true': [0.035, 0, 8], 'false,true,false,false': [0.032, 10, 0], 'false,false,true,true': [0.005, 0, 5], 'false,false,true,false': [0.215, 4, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.2483564645726804], 'false': [0.24489795918367302, 0.2469135802469134], 'false,false': [0.2469135802469134, nan], 'false,false,true': [nan, 0.2469135802469134], 'false,true': [0.23999999999999985, 0.2469135802469134], 'false,true,false': [-2.220446049250313e-16, -1.1102230246251566e-17], 'true': [nan, 1.4802973661668753e-16]}, {'': [0.0, 0.2132273041402093], 'false': [0.19918890512705642, 0.2469135802469136], 'false,false': [0.23999999999999994, 0.1875000000000001], 'false,false,true': [0.0, -4.625929269271485e-18], 'false,true': [0.2399999999999999, 0.1762682746827595], 'false,true,true': [0.25000000000000006, 0.2343749999999999], 'false,false,false': [nan, 0.1875000000000001], 'false,true,false': [1.1102230246251565e-16, 2.7755575615628915e-18]}, {'': [3.700743415417188e-17, 0.16683602097301894], 'false': [0.15620251702230967, 0.19247955013127374], 'false,false': [nan, 0.19247955013127374], 'false,false,false': [0.19247955013127374, nan], 'false,true': [0.23922158433611346, 0.11007415836198932], 'false,true,false': [-1.1102230246251565e-16, 0.0], 'true': [nan, 3.700743415417188e-17]}, {'': [-3.700743415417188e-17, 0.14382425791019213], 'false': [nan, 0.14382425791019213], 'false,false': [0.12834484692739, 0.18603310700679251], 'false,false,false': [0.18603310700679251, nan], 'true': [nan, -3.700743415417188e-17]}, {'': [0.0, 0.13957626184448738], 'false': [nan, 0.13957626184448738], 'false,false': [0.12506187668030552, 0.18179695526484066], 'false,false,false': [0.18179695526484066, nan], 'false,false,true': [0.25, 0.11471603243614306], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.13671230732779985], 'false': [nan, 0.13671230732779985], 'false,false': [0.12261142477513373, 0.17924846638930214], 'false,false,false': [0.1400620601955332, 0.1875], 'false,false,true': [0.2384362688088902, 0.058198963725752915], 'true': [nan, 0.0]}, {'': [0.0, 0.1302391382212594], 'false': [0.11700461313527699, 0.12523660310779933], 'false,false': [0.0, 0.12932176351743258], 'false,false,false': [0.11012948179057369, 0.17116054642419418], 'false,true': [0.13304780868105592, 0.0], 'true': [nan, 0.0], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.1293408727771412], 'false': [0.11615859638089773, 0.17017725401501516], 'false,false': [0.17017725401501516, nan], 'false,false,true': [nan, 0.17017725401501516], 'false,true': [0.0671561237347375, 0.00628706658600362], 'false,true,true': [nan, 0.06715612373473757], 'true': [nan, 0.0]}, {'': [-4.625929269271485e-18, 0.10716740856097107], 'false': [nan, 0.10716740856097108], 'false,false': [0.08701688230326816, 0.16962838403785901], 'false,false,false': [0.16962838403785901, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.10661999619456561], 'false': [0.08643624031707241, 0.169330472481902], 'false,false': [0.169330472481902, nan], 'false,false,true': [6.045373257657083e-06, 0.011607085361906966], 'false,true': [0.1835775406217321, 0.03244127088085595], 'false,true,true': [0.16828892882827812, 0.18387781287843305], 'false,true,false': [0.00015083227200941157, 0.0001031684327049781]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;phenotype(A, F).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,true;interaction(H, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.10342040454983688;  // std dev = 1.155, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4982127495347191;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8012433862288051;  // std dev = 0.061, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.18434859656887806;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5296313604253298;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.012871442676653421;  // std dev = 0.855, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3600787705927817;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.46397807759202364;  // std dev = 0.755, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.051274844022471594;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.2877361057467734;  // std dev = 0.450, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.613093614304255;  // std dev = 0.318, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.25049282027969566;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.13743499155179742;  // std dev = 0.206, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then return 0.5641911433834657;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.5138359146993162;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07403164900992568;  // std dev = 0.854, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), interaction(H, A) )
%   | | | then return 0.22945477343598797;  // std dev = 0.416, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.47507772694129996;  // std dev = 0.326, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.10504354005646152;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1603070929124588;  // std dev = 0.222, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then return 0.3967773099025944;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L), location(A, M) )
%   | | | then return 0.4249419384335214;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06115109830100474;  // std dev = 0.844, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), complex(E, F) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.05134712415797157;  // std dev = 0.870, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.08141611690151995;  // std dev = 0.444, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.1985459545007302;  // std dev = 0.373, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then return 0.0057728842700013145;  // std dev = 0.465, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.36865293550532874;  // std dev = 0.165, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14973363178964103;  // std dev = 0.744, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.16541486273226558;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1660669097604352;  // std dev = 0.586, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.08543103081494309;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.03499237975518984;  // std dev = 0.938, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.16819227388825864;  // std dev = 0.785, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), complex(E, F) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.03849156112344046;  // std dev = 0.831, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.07954152800233615;  // std dev = 0.451, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return 0.16157294624320206;  // std dev = 0.346, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then return 0.21518467616273318;  // std dev = 0.456, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.10837173502090985;  // std dev = 0.538, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0046515082015936345;  // std dev = 0.447, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), complex(G, H) )
%   | | then if ( location(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.14964413463239779;  // std dev = 0.476, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.18240687240364226;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.18746344144527102;  // std dev = 0.343, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2709582084756151;  // std dev = 0.268, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1638862513091142;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.058639446619458;  // std dev = 0.679, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.19015109991048185;  // std dev = 0.209, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.07015143093627363;  // std dev = 0.527, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.005355454780068668;  // std dev = 0.569, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.22078872763047466;  // std dev = 0.197, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10294727282467538;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.17884755791018733;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.031241535577758717;  // std dev = 0.510, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1457843972989485;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 0.927006
   AUC PR    = 0.142822
   CLL	      = -0.340763
   Precision = 0.039384 at threshold = 0.5
   Recall    = 0.793103
   F1        = 0.075041


Total learning time: 4.074 seconds
Total inference time: 6.667 seconds
AUC ROC: 0.927006


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.192476
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.663 seconds
Refined model CLL: -0.192476


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.927006
   AUC PR    = 0.142822
   CLL	      = -0.340763
   Precision = 0.039384 at threshold = 0.5
   Recall    = 0.793103
   F1        = 0.075041


Total learning time: 6.362 seconds
Total inference time: 6.667 seconds
AUC ROC: 0.927006
Total revision time: 6.362
Best scored revision CLL: -0.192476


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:21:35
{'AUC ROC': 0.927006, 'AUC PR': 0.142822, 'CLL': -0.340763, 'Precision': [0.039384, 0.5], 'Recall': 0.793103, 'F1': 0.075041, 'Learning time': 6.362, 'Inference time': 6.667, 'parameter_20': {'AUC ROC': 0.962089, 'AUC PR': 0.120342, 'CLL': -0.2785, 'Precision': [0.153846, 0.5], 'Recall': 0.528736, 'F1': 0.238342, 'Learning time': 1.035, 'Inference time': 6.443}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.4879673079836215;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15463397465028805;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8016114478971489;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19838855210285108;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23018287646857752;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.19934663907441028;  // std dev = 1.684, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.28199042863092905;  // std dev = 1.539, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.14545026466004288;  // std dev = 2.107, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2249598598325235;  // std dev = 1.528, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(C, E), complex(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.33317175953120676;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10091035500744035;  // std dev = 1.869, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17522470802630624;  // std dev = 1.520, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.1009022174550021;  // std dev = 1.662, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.09611753034234864;  // std dev = 1.185, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.2870083011329686;  // std dev = 0.662, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04727251630943603;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return 0.0010135103186987514;  // std dev = 1.202, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.020830855128059562;  // std dev = 0.388, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.12172371515535475;  // std dev = 1.547, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.10239499347628155;  // std dev = 1.493, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3641012618674499;  // std dev = 1.012, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.2013216823499031;  // std dev = 0.335, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07788037895500712;  // std dev = 1.492, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.044227675066385926;  // std dev = 1.728, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05911672207325176;  // std dev = 1.493, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), complex(A, F) )
%   | | | then return -0.027817519033296767;  // std dev = 0.600, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0558607512435168;  // std dev = 1.336, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23618418798196367;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.13049911101536582;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.45018950153792997;  // std dev = 0.242, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.4415788607045076;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.967236
   AUC PR    = 0.122669
   CLL	      = -0.284442
   Precision = 0.149254 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.245399


Total learning time: 1.024 seconds
Total inference time: 6.521 seconds
AUC ROC: 0.967236


Results scoring model
   AUC ROC   = 0.9928
   AUC PR    = 0.992407
   CLL	      = -0.31168
   Precision = 0.956522 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.916667


Total scoring time: 0.589 seconds
Parameter learned model CLL: -0.31168


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [1.708, 7, 5], 'false,true,false,true': [0.0, 0, 11], 'false,true,false,false': [0.0, 13, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.651, 5, 6], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H), interaction(A, I)', 'false,false,true': 'complex(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [1.414, 6, 3], 'false,true,false,true': [4.21e-08, 0, 11], 'false,true,false,false': [7.45e-09, 13, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.684, 7, 5], 'false,true,false,true': [0.0, 0, 11], 'false,true,false,false': [1.05e-08, 13, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.539, 5, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), complex(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [2.107, 20, 16], 'false,false,false,true': [1.528, 5, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'complex(C, E), complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.816, 1, 2], 'false,false,true,false': [1.869, 19, 14], 'false,false,false,true': [1.52, 5, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'complex(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,true': [1.662, 7, 5], 'false,false,true,false': [1.185, 13, 11], 'false,false,false,true': [0.662, 1, 3], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'complex(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [1.202, 6, 4], 'false,true,false': [0.388, 2, 1], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.547, 12, 11], 'false,false,false,false': [1.493, 5, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.012, 1, 16], 'false,true,false': [0.335, 19, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.492, 5, 6], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [1.728, 20, 16], 'false,false,false,true': [1.493, 5, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), complex(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.6, 2, 1], 'false,true,true,false': [1.336, 5, 4], 'false,true,false,true': [0.031, 0, 11], 'false,true,false,false': [0.018, 13, 0], 'false,false,true,true': [0.242, 0, 6], 'false,false,true,false': [0.041, 5, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541377], 'false': [0.2469135802469131, 0.2479338842975207], 'false,false': [0.2479338842975207, nan], 'false,false,true': [nan, 0.2479338842975207], 'false,true': [0.24305555555555536, 0.24826388888888884], 'false,true,false': [-1.6148698540002277e-16, -1.2810265668751807e-17], 'true': [nan, 1.4802973661668753e-16]}, {'': [0.0, 0.21223942813764127], 'false': [0.19929966830227897, 0.2479338842975206], 'false,false': [0.1875, 0.24489795918367344], 'false,false,false': [nan, 0.24489795918367344], 'false,true': [0.24305555555555558, 0.17723224180993077], 'false,true,true': [0.22222222222222218, 0.2222222222222222], 'false,false,true': [-7.401486830834377e-17, 0.0], 'false,true,false': [1.6148698540002277e-16, 4.270088556250602e-18]}, {'': [3.700743415417188e-17, 0.1686102477948994], 'false': [0.15256354397788818, 0.2154082373221186], 'false,false': [nan, 0.2154082373221186], 'false,false,false': [0.2154082373221186, nan], 'false,true': [0.2363171597129182, 0.11067612641553144], 'false,true,false': [-2.0185873175002846e-16, 8.540177112501205e-18], 'true': [nan, 3.700743415417188e-17]}, {'': [-3.700743415417188e-17, 0.14524316326846984], 'false': [nan, 0.1452431632684698], 'false,false': [0.12332966695822371, 0.21211784909059309], 'false,false,false': [0.21211784909059309, nan], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.14134562346527796], 'false': [nan, 0.14134562346527801], 'false,false': [0.11962934547648224, 0.21010349073786277], 'false,false,false': [0.21010349073786277, nan], 'false,false,true': [0.22222222222222224, 0.10580727364849926], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.13781316432773016], 'false': [nan, 0.13781316432773016], 'false,false': [0.11574359428502033, 0.20900712111470596], 'false,false,false': [0.10962427034176853, 0.2448979591836735], 'false,false,true': [0.23019163971636555, 0.058511940492425585], 'true': [nan, 0.0]}, {'': [0.0, 0.13226128442630788], 'false': [0.12277026212242882, 0.1323540633877703], 'false,false': [0.0, 0.13599282665039872], 'false,false,false': [0.10405850334360198, 0.2025118645034282], 'false,true': [0.1444902921678835, 0.05006806415914929], 'true': [nan, 0.0], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.1326141365319122], 'false': [0.11123849611376291, 0.20245683292674865], 'false,false': [0.20245683292674865, nan], 'false,false,true': [nan, 0.20245683292674865], 'false,true': [0.060219410758682805, 0.005916240336851154], 'false,true,true': [nan, 0.06021941075868275], 'true': [0.0, 0.0]}, {'': [-4.625929269271485e-18, 0.11095859768260109], 'false': [nan, 0.11095859768260109], 'false,false': [0.0829241437413978, 0.20253791937523163], 'false,false,false': [0.20253791937523163, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.11051096376161301], 'false': [0.08233566177299972, 0.20267016028351267], 'false,false': [0.20267016028351267, nan], 'false,false,true': [0.0097998994261889, 0.00034130318690519525], 'false,true': [0.18013342828388568, 0.033434485344033836], 'false,true,true': [0.12011861922856414, 0.1983878514065297], 'false,true,false': [8.715868512410019e-05, 2.5493247118426513e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;complex(A, H), interaction(A, I).;true;true
1;false,false,true;complex(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(C, D), complex(A, D).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;complex(A, F).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.10532249566724827;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.42094891127175826;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7848757891859867;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1490779674864458;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.5018526675222027;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1490779674864458;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.11270465612045734;  // std dev = 1.365, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.4550961690576829;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.4581903102276644;  // std dev = 0.891, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.03959229684473283;  // std dev = 0.764, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), interaction(H, F) )
%   | | | then return 0.3274265951029442;  // std dev = 1.192, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.5377277812229306;  // std dev = 0.419, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.30011285634435475;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1313225967905261;  // std dev = 0.196, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.1609544395463417;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(F, G) )
%   | | | then return 0.43845255829808716;  // std dev = 0.463, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22748006387912761;  // std dev = 1.073, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.12412840867194272;  // std dev = 0.196, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.21058930019965597;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1409008684098319;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(A, F), interaction(G, A) )
%   | | then return -0.12307397338573463;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07188300743677381;  // std dev = 0.576, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(H, I), phenotype(I, J) )
%   | | | then return 0.40819982337243;  // std dev = 0.312, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.05537079345795914;  // std dev = 0.511, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.11334709963811346;  // std dev = 1.183, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return -0.11518002123032829;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then return -0.11053417445121341;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.2666674878018976;  // std dev = 0.532, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02334189653611297;  // std dev = 0.585, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.04918872789459955;  // std dev = 1.136, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.1389581595307046;  // std dev = 0.707, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(H, A) )
%   | | | then return 0.14378692583460423;  // std dev = 0.825, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.2656718321279484;  // std dev = 0.662, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.21909666231450878;  // std dev = 0.163, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11166694923274156;  // std dev = 0.186, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.11963108716237382;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), interaction(H, F) )
%   | | | then return 0.10897032412793341;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.2453794796131712;  // std dev = 0.316, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.18552425911097795;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10128853229413454;  // std dev = 0.172, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.1078038858580872;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.036614503387643285;  // std dev = 0.708, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1306227132128046;  // std dev = 0.608, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.16721958352804148;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.09161341476607823;  // std dev = 0.174, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.17339186859111097;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.020188881141484916;  // std dev = 0.462, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.139920116621455;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.959813
   AUC PR    = 0.164703
   CLL	      = -0.27205
   Precision = 0.068203 at threshold = 0.5
   Recall    = 0.850575
   F1        = 0.12628


Total learning time: 8.77 seconds
Total inference time: 14.497 seconds
AUC ROC: 0.959813


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.179771
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.896 seconds
Refined model CLL: -0.179771


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.959813
   AUC PR    = 0.164703
   CLL	      = -0.27205
   Precision = 0.068203 at threshold = 0.5
   Recall    = 0.850575
   F1        = 0.12628


Total learning time: 11.279 seconds
Total inference time: 14.497 seconds
AUC ROC: 0.959813
Total revision time: 11.279
Best scored revision CLL: -0.179771


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:22:08
{'AUC ROC': 0.959813, 'AUC PR': 0.164703, 'CLL': -0.27205, 'Precision': [0.068203, 0.5], 'Recall': 0.850575, 'F1': 0.12628, 'Learning time': 11.279, 'Inference time': 14.497, 'parameter_25': {'AUC ROC': 0.967236, 'AUC PR': 0.122669, 'CLL': -0.284442, 'Precision': [0.149254, 0.5], 'Recall': 0.689655, 'F1': 0.245399, 'Learning time': 1.024, 'Inference time': 6.521}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.08749990173064676;  // std dev = 0.863, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07368672372871321;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.17161772944474873;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.006766185400440394;  // std dev = 0.430, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3773194160257245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return -0.01770347450477049;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0654904804507219;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46518008519554555;  // std dev = 0.243, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.17791027100830448;  // std dev = 0.214, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19910828337487896;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08366249539491133;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.01843674322597878;  // std dev = 0.670, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04588864047980613;  // std dev = 0.174, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09616386530347207;  // std dev = 0.599, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20393527368504138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10075748454852403;  // std dev = 3.23e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.1628908856368162;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08081180605999386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.934242
   AUC PR    = 0.097613
   CLL	      = -0.361572
   Precision = 0.050767 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.095662


Total learning time: 0.879 seconds
Total inference time: 7.533 seconds
AUC ROC: 0.934242


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.207689
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.482 seconds
Parameter learned model CLL: -0.207689


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.863, 4, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.855, 4, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.43, 3, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.759, 4, 1], 'false,false,false,false': [0.204, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.243, 0, 2], 'false,true,false': [0.214, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.67, 4, 2], 'false,false,false,true': [0.174, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.599, 1, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [3.23e-09, 3, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.23437500000000006], 'false': [0.22222222222222224, 0.25], 'false,false': [0.0, 0.0], 'false,true': [0.25, 0.18750000000000003], 'false,true,false': [0.0, 0.0], 'true': [0.0, nan], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.1858442875663261], 'false': [0.1836157017469611, 0.178471628116294], 'false,true': [0.25000000000000006, 0.13385372108722052], 'false,true,true': [nan, 0.25000000000000006], 'false,false': [0.0, 0.0], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.14080599969727345], 'false': [0.14810870629457115, 0.11145008534151415], 'false,true': [0.24999999999999997, 0.0835875640061356], 'false,false': [nan, 0.11145008534151415], 'false,false,false': [0.0, 0.0], 'false,true,false': [0.0, 2.3129646346357427e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.11081438741159133], 'false': [nan, 0.11081438741159133], 'false,false': [0.12405515000819027, 0.06736877561142735], 'false,false,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.10238597528272128], 'false': [nan, 0.10238597528272127], 'false,false': [0.12186629110252047, 0.04272553559876201], 'false,false,true': [nan, 0.12186629110252047], 'false,false,false': [0.0, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.0974530015415645], 'false': [nan, 0.0974530015415645], 'false,false': [0.1201483065655121, 0.028960720834012167], 'false,false,true': [0.25, 0.04616378265700397], 'false,false,false': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.09344194227441331], 'false': [0.0, 0.08956217486728424], 'false,false': [nan, 0.08956217486728424], 'false,false,false': [0.1150843352864999, 0.02081303514700473], 'true': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.0, 0.08709573949215244], 'false': [0.10935127637366236, 0.01998982833151842], 'false,true': [0.029460912816985735, 0.011441389404535741], 'false,true,true': [nan, 0.029460912816985735], 'false,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.060109967940058254], 'false': [nan, 0.060109967940058254], 'false,false': [0.0748859314458445, 0.015216872425573506], 'false,false,false': [0.015216872425573506, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.0, 0.0597664286042001], 'false': [0.07457835565757369, 0.014847750485067613], 'false,true': [0.1792008593182026, 0.017407064422495868], 'false,true,true': [nan, 0.1792008593182026], 'false,true,false': [0.0, 3.469446951953614e-18], 'false,false': [0.014847750485067613, nan], 'false,false,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(F, A).;true;true
3;false,false;interaction(A, G), interaction(G, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(D, A).;true;true
4;false;interaction(F, A).;true;true
4;false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(F, A).;true;true
5;false,false;phenotype(A, H), interaction(A, I).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(C, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then return 0.08749990173064676;  // std dev = 0.863, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then return 0.07368672372871321;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then return 0.06171670008187646;  // std dev = 0.849, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( phenotype(A, E), interaction(A, F) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then return 0.3644984780315592;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.262948645210565;  // std dev = 0.525, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1784015142774144;  // std dev = 0.189, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then return 0.04349851180765956;  // std dev = 0.742, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.16947746382568873;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10009803323240837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then return 0.11053465789599133;  // std dev = 0.264, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.011243747010524196;  // std dev = 0.690, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.13933056334282806;  // std dev = 0.636, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2545627185276189;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10881959081569346;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, H), recursion_proteinclass(G, B) )
%   | | then return 0.13361727212303942;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10104207938791557;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.858608
   AUC PR    = 0.038236
   CLL	      = -0.484322
   Precision = 0.014156 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.027836


Total learning time: 0.893 seconds
Total inference time: 3.943 seconds
AUC ROC: 0.858608


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.224904
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.52 seconds
Refined model CLL: -0.224904


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.934242
   AUC PR    = 0.097613
   CLL	      = -0.361572
   Precision = 0.050767 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.095662


Total learning time: 2.774 seconds
Total inference time: 7.533 seconds
AUC ROC: 0.934242
Total revision time: 2.774
Best scored revision CLL: -0.207689


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:22:23
{'AUC ROC': 0.934242, 'AUC PR': 0.097613, 'CLL': -0.361572, 'Precision': [0.050767, 0.5], 'Recall': 0.826923, 'F1': 0.095662, 'Learning time': 2.774, 'Inference time': 7.533, 'parameter_5': {'AUC ROC': 0.934242, 'AUC PR': 0.097613, 'CLL': -0.361572, 'Precision': [0.050767, 0.5], 'Recall': 0.826923, 'F1': 0.095662, 'Learning time': 0.879, 'Inference time': 7.533}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7889802403930554;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17626634551589418;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1655372723153563;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.18952580279813094;  // std dev = 1.425, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.1966922745982127;  // std dev = 0.483, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.10604763597062224;  // std dev = 0.569, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.15706833214899568;  // std dev = 1.414, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15909864965330978;  // std dev = 0.467, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08977250217353569;  // std dev = 0.552, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12775756879756442;  // std dev = 1.405, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.12743185393211204;  // std dev = 0.455, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07576877556420411;  // std dev = 0.539, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.14752961297559053;  // std dev = 0.918, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0569054405969567;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(G, F) )
%   | | then return -0.12920310187062495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.35329708834131235;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03163029486668748;  // std dev = 0.394, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08078011526181685;  // std dev = 1.457, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3117040649665045;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.12698565438502388;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06387664995273208;  // std dev = 1.389, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.3638571772131959;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.23950313943049895;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.03158526851304875;  // std dev = 0.400, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.04872219228401569;  // std dev = 1.429, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.24348034963046766;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11678623310111787;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5116450893817455;  // std dev = 0.316, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2999600562847699;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.877551
   AUC PR    = 0.140811
   CLL	      = -0.247782
   Precision = 0.20339 at threshold = 0.5
   Recall    = 0.576923
   F1        = 0.300752


Total learning time: 0.881 seconds
Total inference time: 4.684 seconds
AUC ROC: 0.877551


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.286951
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.527 seconds
Parameter learned model CLL: -0.286951


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.549, 6, 4], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,false': 'interaction(F, D), recursion_proteinclass(F, B)', 'false,false': 'phenotype(A, G), interaction(H, A)', 'false,false,true': 'phenotype(I, G), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.085, 0, 3], 'false,false,true,false': [0.0, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.141, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.425, 6, 4], 'false,false,false,false': [0.483, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A), interaction(I, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.569, 3, 2], 'false,false,false,true': [1.414, 6, 4], 'false,false,false,false': [0.467, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.552, 3, 2], 'false,false,false,true': [1.405, 6, 4], 'false,false,false,false': [0.455, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.539, 3, 2], 'false,false,false,true': [0.918, 3, 3], 'false,false,false,false': [1.135, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'false': 'interaction(A, F), interaction(G, A)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.394, 2, 1], 'false,false,false,false': [1.457, 7, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.049, 0, 2], 'false,true,false': [0.014, 3, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.389, 6, 4], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.4, 3, 2], 'false,false,false,true': [1.429, 7, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,false': 'interaction(F, D), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.042, 0, 2], 'false,true,false,false': [0.013, 3, 0], 'false,false,true,true': [0.316, 0, 5], 'false,false,true,false': [0.121, 7, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.2422145328719722], 'false': [0.24000000000000005, 0.24305555555555536], 'false,false': [0.23999999999999985, 0.25], 'false,false,false': [0.0, 0.0], 'false,true': [nan, 0.24000000000000005], 'false,true,false': [0.0, 0.0], 'false,false,true': [nan, 0.23999999999999985], 'true': [0.0, 0.0]}, {'': [0.0, 0.21320551759086226], 'false': [0.17133276299164218, 0.23049111381588283], 'false,false': [0.2341330426932048, 0.21693409448765577], 'false,false,true': [0.0024155995819680567, -4.625929269271485e-18], 'false,false,false': [nan, 0.21693409448765577], 'false,true': [nan, 0.17133276299164227], 'false,true,false': [0.0, 0.0]}, {'': [3.700743415417188e-17, 0.16494590600758094], 'false': [0.10699208192785362, 0.18871292948470306], 'false,false': [nan, 0.18871292948470306], 'false,false,false': [0.2031291743119652, 0.11658890675000758], 'false,true': [nan, 0.10699208192785356], 'false,true,false': [0.0, 2.3129646346357427e-18], 'true': [nan, 3.700743415417188e-17]}, {'': [-3.700743415417188e-17, 0.14994993631218098], 'false': [nan, 0.14994993631218104], 'false,false': [0.06467402458697027, 0.18470575580122714], 'false,false,false': [0.19987311761964183, 0.10886551155151321], 'true': [0.0, 0.0], 'true,true': [nan, 0.0]}, {'': [0.0, 0.14650833266188762], 'false': [nan, 0.14650833266188762], 'false,false': [0.06088245820860472, 0.1817626203116105], 'false,false,false': [0.1973768478678605, 0.10369139412188255], 'false,false,true': [nan, 0.06088245820860472], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0, 0.14403604588870242], 'false': [nan, 0.1440360458887024], 'false,false': [0.05802687618961756, 0.17966745391786806], 'false,false,false': [0.14040610134523798, 0.21482243618084187], 'false,false,true': [nan, 0.05802687618961756], 'true': [nan, 0.0]}, {'': [0.0, 0.13452451827997142], 'false': [0.058201608388638915, 0.1439480881068735], 'false,false': [0.0, 0.15234040606721905], 'false,false,false': [0.051734763012123486, 0.17700867586201827], 'false,true': [0.0, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.13805489760803852], 'false': [0.04670164953040265, 0.17605166127329433], 'false,false': [0.1930593284853101, 0.09101091792509493], 'false,false,true': [nan, 0.1930593284853101], 'false,false,false': [0.0, 0.0], 'false,true': [0.0011833713631708015, 6.770036266813088e-05], 'false,true,true': [nan, 0.0011833713631708015], 'true': [0.0, 0.0]}, {'': [-4.625929269271485e-18, 0.12954107510295546], 'false': [nan, 0.12954107510295543], 'false,false': [0.03199793004091849, 0.17009767746027518], 'false,false,false': [0.17009767746027518, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [-2.3129646346357427e-18, 0.12906079387649005], 'false': [0.03153357054600035, 0.16966226744205662], 'false,false': [0.16966226744205662, nan], 'false,false,true': [0.020028125236695615, 0.002084250725257356], 'false,true': [nan, 0.03153357054600035], 'false,true,false': [0.0008709101523184798, 5.8539888550532736e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(F, D), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G), interaction(H, A).;true;true
1;false,false,true;phenotype(I, G), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F), interaction(G, A).;true;true
6;false,true;interaction(G, F).;true;true
6;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,false;phenotype(A, J), interaction(K, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(F, D), recursion_proteinclass(F, B).;true;true
9;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( phenotype(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14197357824080592;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.17102241011988983;  // std dev = 1.075, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.18094179795558307;  // std dev = 0.392, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then return 0.543602907596225;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return -0.13548942296859554;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.24447694627626124;  // std dev = 0.424, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0054721021706773815;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( enzyme(A, E) )
%   | then return 0.3126660314118667;  // std dev = 0.497, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, F) )
%   | | then return -0.12043267711030768;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.04733134123425266;  // std dev = 0.362, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then return 0.33859503988635986;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.15830307509495198;  // std dev = 0.398, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.02881456022456839;  // std dev = 0.852, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.16871159747601353;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(E, D) )
%   | | then return -0.08266172487873438;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3136521184029364;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.19074851192038242;  // std dev = 0.426, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.039008802923602155;  // std dev = 0.893, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.23746354213068038;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.12756833172387205;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(A, I), complex(A, J) )
%   | | | then return -0.035658023926399926;  // std dev = 0.280, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13243513383929348;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.20682405132430504;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1473236706651328;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( location(E, F), location(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.22365820935642278;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14052278312471608;  // std dev = 0.132, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.39245021900545457;  // std dev = 0.479, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.029831701939023663;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.17075336200633628;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.10943144953663986;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.1741116529432075;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06982676721098689;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.12697658452435334;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.856652
   AUC PR    = 0.063782
   CLL	      = -0.394024
   Precision = 0.021615 at threshold = 0.5
   Recall    = 0.692308
   F1        = 0.041921


Total learning time: 2.582 seconds
Total inference time: 11.874 seconds
AUC ROC: 0.856652


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.192371
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.645 seconds
Refined model CLL: -0.192371


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.856652
   AUC PR    = 0.063782
   CLL	      = -0.394024
   Precision = 0.021615 at threshold = 0.5
   Recall    = 0.692308
   F1        = 0.041921


Total learning time: 4.635 seconds
Total inference time: 11.874 seconds
AUC ROC: 0.856652
Total revision time: 4.635
Best scored revision CLL: -0.192371


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:22:45
{'AUC ROC': 0.856652, 'AUC PR': 0.063782, 'CLL': -0.394024, 'Precision': [0.021615, 0.5], 'Recall': 0.692308, 'F1': 0.041921, 'Learning time': 4.635, 'Inference time': 11.874, 'parameter_10': {'AUC ROC': 0.877551, 'AUC PR': 0.140811, 'CLL': -0.247782, 'Precision': [0.20339, 0.5], 'Recall': 0.576923, 'F1': 0.300752, 'Learning time': 0.881, 'Inference time': 4.684}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7636321600737528;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17012971813204988;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.134338789828316;  // std dev = 1.440, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15979377487479013;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.3730931133728741;  // std dev = 0.594, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.09306988812946855;  // std dev = 0.711, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.13366228572667926;  // std dev = 1.682, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.29047351646262265;  // std dev = 0.558, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39506787592872605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03401100290373475;  // std dev = 0.604, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1100021515938502;  // std dev = 1.676, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.22534343350277286;  // std dev = 0.539, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.11379686830412074;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.08918224205215101;  // std dev = 0.624, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.19715373477685122;  // std dev = 0.932, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.03763891354924977;  // std dev = 1.455, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(G, F) )
%   | | then return -0.12310507130948571;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.32648732036211897;  // std dev = 0.056, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.021218496387094582;  // std dev = 0.433, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08643766356297372;  // std dev = 1.740, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2966771101575158;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11475863373822297;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05285823594400014;  // std dev = 1.658, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.2700670228463147;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.31119775489499235;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.0250760431877535;  // std dev = 0.479, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.05539942192064276;  // std dev = 1.708, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0930264736637327;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.23508471791516325;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10919716418110167;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4655894695634226;  // std dev = 0.594, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.29315755967352086;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.864369
   AUC PR    = 0.13434
   CLL	      = -0.216841
   Precision = 0.135747 at threshold = 0.5
   Recall    = 0.576923
   F1        = 0.21978


Total learning time: 0.922 seconds
Total inference time: 5.608 seconds
AUC ROC: 0.864369


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.282653
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.508 seconds
Parameter learned model CLL: -0.282653


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.793, 9, 5], 'false,false,false,true': [2.11e-08, 0, 3], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.121, 0, 5], 'false,false,true,false': [0.0, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.44, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [1.05e-08, 0, 3], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.69, 9, 5], 'false,false,false,false': [0.594, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A), interaction(I, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.711, 5, 3], 'false,false,false,true': [1.682, 9, 5], 'false,false,false,false': [0.558, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.604, 5, 2], 'false,false,false,true': [1.676, 9, 5], 'false,false,false,false': [0.539, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.624, 4, 3], 'false,false,false,true': [0.932, 3, 5], 'false,false,false,false': [1.455, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'false': 'interaction(A, F), interaction(G, A)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.056, 0, 2], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.433, 4, 1], 'false,false,false,false': [1.74, 10, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.103, 0, 3], 'false,true,false': [0.018, 5, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.658, 9, 5], 'false,false,false,true': [0.0, 0, 3], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.479, 5, 3], 'false,false,false,true': [1.708, 10, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false,true': [0.089, 0, 3], 'false,true,false,false': [0.008, 4, 0], 'false,false,true,true': [0.594, 0, 8], 'false,false,true,false': [0.055, 10, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24408284023668633], 'false': [0.2343749999999999, 0.2469135802469136], 'false,false': [0.2295918367346937, 0.18750000000000006], 'false,true': [0.0, 0.24489795918367355], 'false,true,false': [1.4802973661668753e-16, 0.0], 'false,false,true': [nan, 0.2295918367346937], 'false,false,false': [1.4802973661668753e-16, 0.0], 'true': [1.4802973661668753e-16, 0.0]}, {'': [0.0, 0.20900506311211273], 'false': [0.16731715135902553, 0.22615187055398905], 'false,false': [0.20618231841601614, 0.20749860329430705], 'false,false,false': [nan, 0.20749860329430705], 'false,false,true': [0.002924992519215319, -9.25185853854297e-18], 'false,true': [0.0, 0.17482934999147165], 'false,true,false': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.0, 0.1620590640631606], 'false': [0.10448445500766952, 0.1861773755704842], 'false,false': [nan, 0.1861773755704842], 'false,false,false': [0.20409588045415988, 0.08807635796361526], 'false,true': [0.0, 0.10917559380393224], 'false,true,false': [3.700743415417188e-17, 0.0], 'true': [nan, 0.0]}, {'': [0.0, 0.14437905781724872], 'false': [nan, 0.14437905781724872], 'false,false': [0.06315822713571315, 0.17872609903857972], 'false,false,false': [0.20211892476087723, 0.07772583850004403], 'true': [0.0, -3.700743415417188e-17], 'true,true': [nan, 0.0]}, {'': [0.0, 0.13986810397337995], 'false': [nan, 0.13986810397337995], 'false,false': [0.05988507386597485, 0.1744342191059268], 'false,false,false': [0.20055115577179006, 0.07267768753243259], 'false,false,true': [0.0, 0.052144826223433874], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0, 0.13590537085583992], 'false': [nan, 0.13590537085583995], 'false,false': [0.05312634941112942, 0.17208057500562757], 'false,false,false': [0.10856566785580346, 0.21158362152936516], 'false,false,true': [0.0, 0.05556576299330568], 'true': [nan, 0.0]}, {'': [0.0, 0.12775251509851623], 'false': [0.04596135209423782, 0.13669296653655852], 'false,false': [0.0, 0.14173914713815747], 'false,false,false': [0.03755364754185076, 0.16816003135025348], 'false,true': [0.0, 0.0015642552583588765], 'true': [0.0, nan]}, {'': [0.0, 0.12886788830708257], 'false': [0.04104833290850083, 0.16763456814751965], 'false,false': [0.19628148235408574, 0.06335038909549708], 'false,false,true': [nan, 0.19628148235408574], 'false,false,false': [-9.25185853854297e-18, 0.0], 'false,true': [0.003555187935224894, 6.445563432640467e-05], 'false,true,true': [nan, 0.003555187935224894], 'true': [0.0, 0.0]}, {'': [0.0, 0.12127312089384559], 'false': [nan, 0.12127312089384558], 'false,false': [0.02864905318814351, 0.16215644788509767], 'false,false,false': [0.16215644788509767, nan], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.0, 0.1209222236042778], 'false': [0.0282841740047793, 0.1619439546340293], 'false,false': [0.1619439546340293, nan], 'false,false,true': [0.04415753727371344, 0.0003077310218876139], 'false,true': [0.0, 0.03016722534923894], 'false,true,false': [0.0026351803328451273, 1.768153735724233e-05], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(A, H).;true;true
4;false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, F).;true;true
5;false,true;interaction(G, F), interaction(A, G).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F), interaction(G, A).;true;true
6;false,true;interaction(G, F).;true;true
6;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,false;phenotype(A, J), interaction(K, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7348917811753146;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13815014721646235;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.42468600128852124;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.006522068310404932;  // std dev = 0.924, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.4613700578127952;  // std dev = 0.871, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.022343958814123283;  // std dev = 0.937, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.32564998312377225;  // std dev = 0.553, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then return 0.350057745715032;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.20986961869985143;  // std dev = 0.569, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.09336404674943408;  // std dev = 1.100, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.12847600100643525;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.36752289582040065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.008058617924521373;  // std dev = 0.416, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.05554231086389617;  // std dev = 0.382, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then return 0.3846001478520284;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.11184141109885648;  // std dev = 1.349, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.13108167867888046;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then return -0.12328493242445376;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.04211674040179092;  // std dev = 0.396, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11384521745560165;  // std dev = 0.417, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then return -0.1435603189978822;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10041589784390333;  // std dev = 1.263, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.24422976058850984;  // std dev = 0.453, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(E, D) )
%   | | then return -0.12040622116311447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2966538530253754;  // std dev = 0.046, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.1438734424776183;  // std dev = 0.604, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.00504303084645468;  // std dev = 1.302, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.2775502989671172;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11101749281515567;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.15861339382210457;  // std dev = 0.838, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.04195482776647765;  // std dev = 0.920, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.2865926681055179;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1652098486452128;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( interaction(E, G), interaction(G, H) )
%   | | | then return -0.052692137636848844;  // std dev = 0.515, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.04310601966390837;  // std dev = 0.865, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3868698210695726;  // std dev = 0.512, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.022122680577853375;  // std dev = 0.354, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then return -0.09858328585142577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.21079430167440064;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09788873214084287;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.3105435914998784;  // std dev = 0.652, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06871719003915558;  // std dev = 0.329, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.2967567159223046;  // std dev = 0.403, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1605289464912838;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.838687
   AUC PR    = 0.069629
   CLL	      = -0.290888
   Precision = 0.024863 at threshold = 0.5
   Recall    = 0.480769
   F1        = 0.047281


Total learning time: 2.817 seconds
Total inference time: 12.743 seconds
AUC ROC: 0.838687


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995694
   CLL	      = -0.219955
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.933333


Total scoring time: 0.753 seconds
Refined model CLL: -0.219955


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.838687
   AUC PR    = 0.069629
   CLL	      = -0.290888
   Precision = 0.024863 at threshold = 0.5
   Recall    = 0.480769
   F1        = 0.047281


Total learning time: 5.0 seconds
Total inference time: 12.743 seconds
AUC ROC: 0.838687
Total revision time: 5.0
Best scored revision CLL: -0.219955


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:23:09
{'AUC ROC': 0.838687, 'AUC PR': 0.069629, 'CLL': -0.290888, 'Precision': [0.024863, 0.5], 'Recall': 0.480769, 'F1': 0.047281, 'Learning time': 5.0, 'Inference time': 12.743, 'parameter_15': {'AUC ROC': 0.864369, 'AUC PR': 0.13434, 'CLL': -0.216841, 'Precision': [0.135747, 0.5], 'Recall': 0.576923, 'F1': 0.21978, 'Learning time': 0.922, 'Inference time': 5.608}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7875321875810503;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19456511524266235;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21150450034739918;  // std dev = 1.731, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.21943164704188464;  // std dev = 1.887, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.21635126637144497;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.07947010506242959;  // std dev = 1.051, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.18030488346181617;  // std dev = 1.877, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.17383732526159482;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.398322672480409;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03743876148666977;  // std dev = 0.978, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14494774111293504;  // std dev = 1.869, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.13765760115371026;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.18130785516959216;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.02970686749412609;  // std dev = 0.691, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.16405983121756373;  // std dev = 1.126, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.07726908589074749;  // std dev = 1.718, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(G, F) )
%   | | then return 0.26246797947936806;  // std dev = 0.535, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1130534537541142;  // std dev = 0.461, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.07334399411473723;  // std dev = 0.545, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0878548469720669;  // std dev = 2.052, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40308991707626285;  // std dev = 0.220, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1472149165797434;  // std dev = 0.212, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07211475336230937;  // std dev = 1.859, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.21721439005507556;  // std dev = 0.658, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2616565289224831;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.018138528560212974;  // std dev = 0.780, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.05110060691397078;  // std dev = 2.019, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0797973288651194;  // std dev = 0.557, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2574154863503687;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10641651063914441;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4996903601995245;  // std dev = 0.376, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.34400304649496927;  // std dev = 0.220, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.934346
   AUC PR    = 0.152919
   CLL	      = -0.375939
   Precision = 0.13314 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.231447


Total learning time: 1.016 seconds
Total inference time: 5.748 seconds
AUC ROC: 0.934346


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.301112
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.572 seconds
Parameter learned model CLL: -0.301112


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.984, 9, 7], 'false,false,false,true': [0.866, 1, 3], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [2.11e-08, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.056, 0, 5], 'false,false,true,false': [0.044, 4, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.731, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 6], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [1.05e-08, 0, 3], 'false,true,false,false': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.887, 9, 7], 'false,false,false,false': [0.94, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A), interaction(I, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [1.05e-08, 0, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [1.051, 8, 4], 'false,false,false,true': [1.877, 9, 7], 'false,false,false,false': [0.915, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.978, 8, 3], 'false,false,false,true': [1.869, 9, 7], 'false,false,false,false': [0.898, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 6], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.691, 7, 3], 'false,false,false,true': [1.126, 4, 5], 'false,false,false,false': [1.718, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'false': 'interaction(A, F), interaction(G, A)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true,true': [0.535, 1, 1], 'false,true,false': [0.461, 2, 2], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [0.545, 5, 1], 'false,false,false,false': [2.052, 12, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.22, 0, 4], 'false,true,false': [0.212, 8, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.859, 9, 7], 'false,false,false,true': [0.658, 1, 3], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.78, 8, 4], 'false,false,false,true': [2.019, 12, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.557, 1, 1], 'false,true,false,true': [0.073, 0, 3], 'false,true,false,false': [0.033, 7, 0], 'false,false,true,true': [0.376, 0, 10], 'false,false,true,false': [0.22, 12, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.24221453287197228], 'false': [0.22222222222222207, 0.2479338842975207], 'false,false': [0.24609375000000003, 0.24999999999999992], 'false,false,false': [0.18750000000000006, 0.0], 'false,false,true': [nan, 0.24609375000000003], 'false,true': [0.25, 0.21000000000000005], 'false,true,false': [1.4802973661668753e-16, -7.93016446160826e-18], 'true': [1.4802973661668753e-16, 1.4802973661668753e-16]}, {'': [7.401486830834377e-17, 0.21752774914864526], 'false': [0.17113239438741143, 0.2385294947858333], 'false,false': [0.23871876192087763, 0.23043288655187102], 'false,false,true': [0.0006279312317109209, 0.0004905712747742541], 'false,false,false': [nan, 0.23043288655187102], 'false,true': [0.25000000000000006, 0.14991616761768692], 'false,true,true': [nan, 0.25000000000000006], 'false,true,false': [0.0, -1.982541115402065e-18]}, {'': [-7.401486830834377e-17, 0.17674563350670303], 'false': [0.12362153347840715, 0.2020119805796316], 'false,false': [nan, 0.2020119805796316], 'false,false,false': [0.2225463044933566, 0.1472468825708557], 'false,true': [0.24999999999999997, 0.09361807168687189], 'false,true,false': [3.700743415417188e-17, -1.982541115402065e-18], 'true': [nan, 3.700743415417188e-17]}, {'': [7.401486830834377e-17, 0.16295856745117893], 'false': [nan, 0.16295856745117898], 'false,false': [0.09203373068815125, 0.1981807092232226], 'false,false,false': [0.22017602806246223, 0.13949610433622722], 'true': [0.0, 2.2204460492503132e-17], 'true,true': [nan, 0.0]}, {'': [-3.700743415417188e-17, 0.15944473810757107], 'false': [nan, 0.15944473810757112], 'false,false': [0.08969265580218311, 0.19548229376527876], 'false,false,false': [0.218413290406298, 0.13429431765059072], 'false,false,true': [0.0, 0.08699343383453685], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [9.25185853854297e-18, 0.15597014469605736], 'false': [nan, 0.1559701446960574], 'false,false': [0.08470357179337483, 0.19366367259005318], 'false,false,false': [0.14095638175347394, 0.22707180360103124], 'false,false,true': [0.25, 0.04781380957468704], 'true': [nan, 0.0]}, {'': [0.0, 0.14597061928173802], 'false': [0.08810798365773787, 0.15590580430306347], 'false,false': [0.0, 0.16541025402057477], 'false,false,false': [0.04943624630202164, 0.191471300345537], 'false,true': [0.14307290589331106, 0.05318395570738378], 'true': [0.0, nan]}, {'': [4.625929269271485e-18, 0.15016852567899822], 'false': [0.07508562541309192, 0.19076292069394943], 'false,false': [0.21605319643246967, 0.12316876963692441], 'false,false,true': [nan, 0.21605319643246967], 'false,false,false': [0.10831403544124943, 0.0], 'false,true': [0.012136737614467152, 0.005614932664016085], 'false,true,true': [nan, 0.012136737614467125], 'true': [0.0, 0.0]}, {'': [-4.625929269271485e-18, 0.13809191066762225], 'false': [nan, 0.13809191066762228], 'false,false': [0.05069961311491334, 0.18537696650802846], 'false,false,false': [0.18537696650802846, nan], 'true': [-4.625929269271485e-18, -4.625929269271485e-18], 'true,false': [nan, -4.625929269271485e-18]}, {'': [0.0, 0.13769089947845534], 'false': [0.05038771932187908, 0.18510892839950222], 'false,false': [0.18510892839950222, nan], 'false,false,true': [0.014156450855840764, 0.004015433398116737], 'false,true': [0.15517534074404554, 0.028440378845850618], 'false,true,true': [nan, 0.15517534074404554], 'false,true,false': [0.001783862969328781, 0.00015248332577541546]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(A, H).;true;true
4;false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F), interaction(G, A).;true;true
6;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,false;phenotype(A, J), interaction(K, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7773608507728526;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18651836380155495;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.49561819418568626;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1272250911269462;  // std dev = 1.430, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.5196834768536517;  // std dev = 0.857, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.1461985472789375;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1605384572252411;  // std dev = 1.609, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then return 0.4987085097802459;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(E, H), complex(E, I) )
%   | | | then return -0.12205625226362526;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.18914335877501345;  // std dev = 1.962, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else return -0.047122387741415896;  // std dev = 0.537, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.3723538026941783;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.04838819694917789;  // std dev = 0.546, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.15040819594086474;  // std dev = 0.704, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return -0.11578268196452372;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3179045261660295;  // std dev = 0.830, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.0967102134134757;  // std dev = 1.592, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( interaction(F, D), interaction(F, F) )
%   | | | then return 0.2156284140182927;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.0018712885117305508;  // std dev = 1.223, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.3190959622864789;  // std dev = 0.750, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.040463288139811794;  // std dev = 0.550, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then return 0.13447157238850468;  // std dev = 0.650, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return 0.22518815323357178;  // std dev = 0.824, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.0017806675358942182;  // std dev = 1.668, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A) )
%   | | then return 0.11318225424342536;  // std dev = 0.631, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.035267778225275735;  // std dev = 0.553, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.047238251548913035;  // std dev = 1.380, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.07850380339128704;  // std dev = 0.838, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.1985823839227997;  // std dev = 0.661, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.20289067298037972;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then return 0.12222413788794408;  // std dev = 0.570, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I), interaction(J, G) )
%   | | | then return -0.061656482373038245;  // std dev = 0.335, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1396229077635437;  // std dev = 1.549, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.0014274402596287984;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1279673320246042;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then return 0.09970461261793978;  // std dev = 0.543, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.3025403956319521;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1086708890475836;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.13336825317959783;  // std dev = 0.827, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.023050364718930974;  // std dev = 1.280, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.08207167834729316;  // std dev = 0.808, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.761407
   AUC PR    = 0.067399
   CLL	      = -0.507371
   Precision = 0.015448 at threshold = 0.5
   Recall    = 0.615385
   F1        = 0.030139


Total learning time: 1.704 seconds
Total inference time: 3.71 seconds
AUC ROC: 0.761407


Results scoring model
   AUC ROC   = 0.97125
   AUC PR    = 0.971371
   CLL	      = -0.325658
   Precision = 0.944444 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.894737


Total scoring time: 0.555 seconds
Refined model CLL: -0.325658


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.934346
   AUC PR    = 0.152919
   CLL	      = -0.375939
   Precision = 0.13314 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.231447


Total learning time: 3.847 seconds
Total inference time: 5.748 seconds
AUC ROC: 0.934346
Total revision time: 3.847
Best scored revision CLL: -0.301112


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:23:23
{'AUC ROC': 0.934346, 'AUC PR': 0.152919, 'CLL': -0.375939, 'Precision': [0.13314, 0.5], 'Recall': 0.884615, 'F1': 0.231447, 'Learning time': 3.847, 'Inference time': 5.748, 'parameter_20': {'AUC ROC': 0.934346, 'AUC PR': 0.152919, 'CLL': -0.375939, 'Precision': [0.13314, 0.5], 'Recall': 0.884615, 'F1': 0.231447, 'Learning time': 1.016, 'Inference time': 5.748}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7952342379577315;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19596505087945312;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1759115901807868;  // std dev = 1.965, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462844;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6674372528128862;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19919428966974087;  // std dev = 2.030, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.2342032604337702;  // std dev = 1.201, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5072943759749347;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.08256774141413273;  // std dev = 1.199, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1635353965586864;  // std dev = 2.019, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.18908675171506767;  // std dev = 1.184, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3826973860290247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3975805219618199;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.046901825405142594;  // std dev = 1.136, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.13163567395023157;  // std dev = 2.011, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.14994307561505027;  // std dev = 1.173, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.29716968426707324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.04999476889536537;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06074226652704073;  // std dev = 0.770, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.20142129330335545;  // std dev = 1.176, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.05341170389369097;  // std dev = 1.966, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(G, C), interaction(C, G) )
%   | | | then return 0.23903418288620637;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( interaction(I, H) )
%   | | then return 0.29377091725140486;  // std dev = 0.653, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.10647780274716866;  // std dev = 0.457, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.04016077384801123;  // std dev = 0.671, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.08419006248088247;  // std dev = 2.300, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17411816515178635;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4245609688073994;  // std dev = 0.363, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14884300029706948;  // std dev = 0.115, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07068004990546864;  // std dev = 1.996, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.19715393811115794;  // std dev = 0.656, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.058934651268035945;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15029168444730048;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1530010809133762;  // std dev = 0.000315, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0.1872930472625678;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.024596923351601796;  // std dev = 0.931, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04926442354832128;  // std dev = 2.285, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1329989426038102;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024288879262334154;  // std dev = 0.716, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2529646670925366;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11317963897100027;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.49063237740503823;  // std dev = 0.583, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.3459493516035986;  // std dev = 0.131, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977341
   AUC PR    = 0.152185
   CLL	      = -0.297843
   Precision = 0.193651 at threshold = 0.5
   Recall    = 0.586538
   F1        = 0.291169


Total learning time: 0.949 seconds
Total inference time: 5.669 seconds
AUC ROC: 0.977341


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.312744
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.72
   F1        = 0.837209


Total scoring time: 0.609 seconds
Parameter learned model CLL: -0.312744


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.225, 11, 9], 'false,false,false,true': [0.866, 1, 3], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.065, 0, 7], 'false,false,true,false': [0.043, 4, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.965, 11, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 7], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.03, 11, 8], 'false,false,false,false': [1.201, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 6], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.199, 10, 5], 'false,false,false,true': [2.019, 11, 8], 'false,false,false,false': [1.184, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.136, 10, 4], 'false,false,false,true': [2.011, 11, 8], 'false,false,false,false': [1.173, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 7], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.866, 3, 1], 'false,false,true,false': [0.77, 7, 4], 'false,false,false,true': [1.176, 4, 6], 'false,false,false,false': [1.966, 11, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(G, C), interaction(C, G)', 'false': 'interaction(A, H), interaction(I, A)', 'false,true': 'interaction(I, H)', 'false,false': 'interaction(A, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.653, 1, 2], 'false,true,false': [0.457, 2, 2], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [0.671, 7, 2], 'false,false,false,false': [2.3, 15, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.01, 0, 4], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.363, 0, 5], 'false,true,false': [0.115, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.996, 11, 9], 'false,false,false,true': [0.656, 1, 3], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.009, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.000315, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.931, 10, 5], 'false,false,false,true': [2.285, 15, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.008, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.716, 3, 1], 'false,true,false,true': [0.073, 0, 4], 'false,true,false,false': [0.033, 7, 0], 'false,false,true,true': [0.583, 0, 13], 'false,false,true,false': [0.131, 15, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-2.5376526277146434e-16, 0.2433747971876686], 'false': [0.22222222222222202, 0.2487244897959179], 'false,false': [0.2475, 0.24999999999999986], 'false,false,false': [0.18750000000000006, 0.18750000000000003], 'false,false,true': [nan, 0.2475], 'false,true': [0.18750000000000003, 0.2314049586776859], 'false,true,false': [0.0, -7.93016446160826e-18], 'true': [0.0, 1.4802973661668753e-16]}, {'': [-6.344131569286608e-17, 0.22195741250427808], 'false': [0.17263581704160957, 0.24343092826966153], 'false,false': [0.22789396430565698, 0.2271540913876999], 'false,false,true': [0.0005948353303394224, 0.000455420799791266], 'false,false,false': [nan, 0.2271540913876999], 'false,true': [0.18749999999999997, 0.16519687891756132], 'false,true,true': [nan, 0.18749999999999997], 'false,true,false': [0.0, -1.982541115402065e-18]}, {'': [0.0, 0.18095070734803362], 'false': [0.12611714772793564, 0.2062220726337831], 'false,false': [0.0, 0.20637261013416724], 'false,false,false': [0.2169546876520908, 0.18037769704224027], 'false,true': [0.18749999999999994, 0.10316040957231061], 'false,true,false': [0.0, -1.982541115402065e-18], 'true': [nan, 0.0], 'false,false,true': [nan, 0.0]}, {'': [9.516197353929913e-17, 0.16578222581967247], 'false': [0.0, 0.1665832934131862], 'false,false': [0.09578737853318393, 0.20311469542712304], 'false,false,false': [0.21464089831021127, 0.17528053531103951], 'true': [0.0, -3.700743415417188e-17], 'false,true': [nan, 0.0], 'true,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [-3.172065784643304e-17, 0.16146689258601646], 'false': [0.0, 0.1636224274720608], 'false,false': [0.0936747930058843, 0.20088953646693217], 'false,false,false': [0.21293149045507737, 0.1720540417392124], 'false,false,true': [0.0, 0.09216747976791571], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [2.3790493384824782e-17, 0.1580062995718334], 'false': [0.0, 0.16077260605500795], 'false,false': [0.08953950518370787, 0.1994410133067207], 'false,false,false': [0.13833496426095557, 0.22727210412944307], 'false,false,true': [0.18749999999999994, 0.05388670474726773], 'true': [nan, -7.93016446160826e-18]}, {'': [0.00013713784557684017, 0.14847100332571422], 'false': [0.09936251070830451, 0.1550712112025163], 'false,false': [0.0, 0.16239465204330145], 'false,false,false': [0.050029165664846505, 0.19598403154552926], 'false,true': [0.14221260565466892, 0.05219120632394682], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [1.737887027745371e-05, 0.15219302431903495], 'false': [0.08272889920797415, 0.18913363667649427], 'false,false': [0.19922674601406704, 0.16389910177790168], 'false,false,true': [nan, 0.19922674601406704], 'false,false,false': [0.10750752075069064, 0.18750000000000003], 'false,true': [0.026346698592783692, 0.0013226289206498155], 'false,true,true': [nan, 0.0263466985927836], 'true': [2.661139511235186e-05, 0.0]}, {'': [1.3244026780053922e-05, 0.14219062466925214], 'false': [0.0, 0.14507468482600125], 'false,false': [0.0577781567021965, 0.19335543973233738], 'false,false,false': [0.19335543973233738, nan], 'true': [2.000616586139009e-05, 3.308178948835394e-08], 'true,false': [nan, 3.308178948835394e-08], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan]}, {'': [1.030699207106578e-05, 0.14176788991692185], 'false': [0.05733178113471496, 0.18684256420263523], 'false,false': [0.18684256420263523, nan], 'false,false,true': [0.026179487119408283, 0.001144724066049463], 'false,true': [0.12806795726663914, 0.03160454679231096], 'false,true,true': [nan, 0.12806795726663914], 'false,true,false': [0.001329417661987617, 0.0001549286309766287]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(A, H).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(E, C).;true;true
6;false;interaction(A, H), interaction(I, A).;true;true
6;false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7706430727943747;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19097968176806024;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.3252565603607334;  // std dev = 1.571, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.021062135362928083;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6492291185197292;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.42872586561525566;  // std dev = 1.117, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.11332389994435114;  // std dev = 1.853, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4916066180466292;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5533018327553999;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.24757366566564729;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.19222909809613667;  // std dev = 1.727, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.003951228210837495;  // std dev = 1.236, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.371641005750473;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.37163293002842623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05481257724817867;  // std dev = 1.130, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.2504741657798117;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.07172001612482999;  // std dev = 1.816, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.2897035404480378;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return 0.05625755699646721;  // std dev = 1.387, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.2886609458588761;  // std dev = 1.209, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.1889315873868477;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06387044366221495;  // std dev = 1.240, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2338805027642179;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.055597981522374905;  // std dev = 0.380, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3561108140872881;  // std dev = 0.610, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.17527385344118226;  // std dev = 0.871, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.013883197117231438;  // std dev = 1.885, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18299499310119763;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.40922239060512383;  // std dev = 0.343, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.14269477439467224;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11793225401798406;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3439143297930132;  // std dev = 0.415, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.24369652625788818;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.07256554402050681;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07266361868847569;  // std dev = 1.400, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15760077135611572;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15223600446798324;  // std dev = 0.000622, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.1462497809942378;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), phenotype(A, I) )
%   | | | then return -0.03685350960473261;  // std dev = 0.584, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.14965767226973098;  // std dev = 1.560, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.11809370445032291;  // std dev = 0.284, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02625200029427073;  // std dev = 1.080, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.13342963453333664;  // std dev = 0.000921, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13943482781301472;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.03715376782158032;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.2504338119054035;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10864698076802316;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.3010147527537882;  // std dev = 0.965, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14034974225310914;  // std dev = 0.818, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.30744147286970597;  // std dev = 0.241, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.2022348552642827;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.946935
   AUC PR    = 0.127054
   CLL	      = -0.329435
   Precision = 0.078141 at threshold = 0.5
   Recall    = 0.711538
   F1        = 0.140818


Total learning time: 3.944 seconds
Total inference time: 13.951 seconds
AUC ROC: 0.946935


Results scoring model
   AUC ROC   = 0.9888
   AUC PR    = 0.991152
   CLL	      = -0.278936
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.84
   F1        = 0.913043


Total scoring time: 0.771 seconds
Refined model CLL: -0.278936


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.946935
   AUC PR    = 0.127054
   CLL	      = -0.329435
   Precision = 0.078141 at threshold = 0.5
   Recall    = 0.711538
   F1        = 0.140818


Total learning time: 6.273 seconds
Total inference time: 13.951 seconds
AUC ROC: 0.946935
Total revision time: 6.273
Best scored revision CLL: -0.278936


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:23:49
{'AUC ROC': 0.946935, 'AUC PR': 0.127054, 'CLL': -0.329435, 'Precision': [0.078141, 0.5], 'Recall': 0.711538, 'F1': 0.140818, 'Learning time': 6.273, 'Inference time': 13.951, 'parameter_25': {'AUC ROC': 0.977341, 'AUC PR': 0.152185, 'CLL': -0.297843, 'Precision': [0.193651, 0.5], 'Recall': 0.586538, 'F1': 0.291169, 'Learning time': 0.949, 'Inference time': 5.669}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.7061374073445398;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.019254179672830662;  // std dev = 0.688, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.542536968798959;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01633347897949308;  // std dev = 0.686, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.40806343968102277;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return -0.3013010773744835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.0663677227104192;  // std dev = 0.593, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.3143112101515271;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0.14082940823083706;  // std dev = 0.357, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.036558837840934305;  // std dev = 0.493, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2507997550152754;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3808030085280088;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1368805432148969;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.2066642184916121;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return -0.002413439464540919;  // std dev = 0.510, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.01814154000491154;  // std dev = 0.273, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2965318685591957;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.09914524343952759;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971166
   AUC PR    = 0.367258
   CLL	      = -0.167261
   Precision = 0.479675 at threshold = 0.5
   Recall    = 0.641304
   F1        = 0.548837


Total learning time: 0.932 seconds
Total inference time: 2.331 seconds
AUC ROC: 0.971166


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160854
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.514 seconds
Parameter learned model CLL: -0.160854


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.688, 5, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.686, 5, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.593, 4, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.357, 1, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.493, 4, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.03, 0, 2], 'false,true,false': [0.111, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.51, 5, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.273, 1, 1], 'false,true,false,true': [0.026, 0, 2], 'false,true,false,false': [0.014, 4, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24691358024691348], 'false': [0.2343749999999999, 0.0], 'false,true': [0.25, 0.22222222222222224], 'false,true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.19243188222099533], 'false': [0.18584428756632607, 0.0], 'false,true': [0.25000000000000006, 0.15864144721448356], 'false,true,true': [nan, 0.25000000000000006], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}, {'': [0.0, 0.1416485483410187], 'false': [0.14080599969727345, 0.0], 'false,true': [0.24999999999999997, 0.09906674252579034], 'false,true,false': [0.0, 0.0], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.108140505930537], 'false': [0.0, 0.07655835449957515], 'false,false': [0.06766894312758769, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,true,false': [0.0, nan]}, {'': [0.0, 0.08481738060246699], 'false': [0.0, 0.06894216767307972], 'false,false': [0.06721027489219404, 0.0], 'false,false,true': [nan, 0.06721027489219404], 'true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.07073242244053685], 'false': [0.0, 0.06484784920733418], 'false,false': [0.06683188895751963, 0.0], 'false,false,true': [0.0, 0.05865905903769592], 'true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.052777476930522677], 'false': [0.06356294254603945, 0.047151118222860854], 'false,true': [0.06356294254603945, nan], 'false,false': [0.0, 0.04899060573271775], 'false,false,false': [0.04867675279341984, 0.0], 'true': [0.0, nan]}, {'': [0.0, 0.051426237831654106], 'false': [0.055796500591604146, 0.0], 'false,true': [0.004046875959396956, 0.0024686125571529464], 'false,true,true': [0.0, 0.00043669863113005025], 'true': [0.0, nan], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.03482038610941306], 'false': [0.0, 0.03517519671964408], 'false,false': [0.03719100144925445, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [0.0, 0.03328182203646076], 'false': [0.035998503992369674, 0.0], 'false,true': [0.03723578337644328, 0.034938663417859034], 'false,true,true': [nan, 0.03723578337644328], 'false,true,false': [0.0003416404008462631, 5.038260648200857e-05], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
5;false,false,true;interaction(F, G), interaction(G, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(H, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7061374073445398;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.07144030839421248;  // std dev = 0.424, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.019885416868205698;  // std dev = 0.529, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.542536968798959;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.06121282212474388;  // std dev = 0.415, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.016746756248502456;  // std dev = 0.530, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.40806343968102277;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return -0.28631895432251997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.06446236442927973;  // std dev = 0.593, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3143112101515271;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then return 0.12471980755927539;  // std dev = 0.348, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.030031800053755154;  // std dev = 0.504, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2507997550152754;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3799761844709585;  // std dev = 0.054, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.1363769287979899;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.2066642184916121;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.012634285295481574;  // std dev = 0.306, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.013270639980189139;  // std dev = 0.406, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return -0.013146360740964397;  // std dev = 0.266, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2960431994937468;  // std dev = 0.051, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.10096984992291982;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.827229
   AUC PR    = 0.130504
   CLL	      = -0.61348
   Precision = 0.026599 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.051692


Total learning time: 0.887 seconds
Total inference time: 1.908 seconds
AUC ROC: 0.827229


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.498 seconds
Refined model CLL: -0.160433


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.827229
   AUC PR    = 0.130504
   CLL	      = -0.61348
   Precision = 0.026599 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.051692


Total learning time: 2.8310000000000004 seconds
Total inference time: 1.908 seconds
AUC ROC: 0.827229
Total revision time: 2.8310000000000004
Best scored revision CLL: -0.160433


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:23:57
{'AUC ROC': 0.827229, 'AUC PR': 0.130504, 'CLL': -0.61348, 'Precision': [0.026599, 0.5], 'Recall': 0.913043, 'F1': 0.051692, 'Learning time': 2.8310000000000004, 'Inference time': 1.908, 'parameter_5': {'AUC ROC': 0.971166, 'AUC PR': 0.367258, 'CLL': -0.167261, 'Precision': [0.479675, 0.5], 'Recall': 0.641304, 'F1': 0.548837, 'Learning time': 0.932, 'Inference time': 2.331}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16653882456488175;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.1420942428155648;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.785815571574131;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.1073283168172645;  // std dev = 1.309, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6257598792641622;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.39166541305725433;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07021229356267718;  // std dev = 1.252, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.47210629475008303;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return -0.04557674454634456;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12205496532476268;  // std dev = 0.838, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.3580593540796151;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return -0.06498105877465726;  // std dev = 0.483, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.072843299986348;  // std dev = 0.290, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1042234669402785;  // std dev = 1.061, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.28052550383836794;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3805265857050871;  // std dev = 0.398, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.18099284308721292;  // std dev = 0.159, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.227517545162353;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.03326963802063593;  // std dev = 1.023, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.20090863078425922;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.09702640332319515;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23759496343169761;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12395111063934013;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.970023
   AUC PR    = 0.381551
   CLL	      = -0.181751
   Precision = 0.479675 at threshold = 0.5
   Recall    = 0.641304
   F1        = 0.548837


Total learning time: 1.01 seconds
Total inference time: 2.433 seconds
AUC ROC: 0.970023


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.221187
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.546 seconds
Parameter learned model CLL: -0.221187


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.155, 4, 2], 'false,true,false,true': [2.11e-08, 0, 6], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 6], 'false,true,false,false': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [1.309, 10, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.252, 10, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.894, 4, 1], 'false,false,true,false': [0.838, 6, 6], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true': [0.483, 3, 1], 'false,true,false': [0.29, 1, 1], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.061, 6, 5], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.398, 0, 7], 'false,true,false': [0.159, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.023, 10, 7], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.732, 2, 2], 'false,true,false,true': [0.058, 0, 6], 'false,true,false,false': [0.016, 6, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2493074792243767], 'false': [0.2469135802469136, 0.0], 'false,true': [0.22222222222222224, 0.24999999999999992], 'false,true,false': [-1.4802973661668753e-16, -6.938893903907228e-18], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.19730377517959147], 'false': [0.19683824222967947, 0.0], 'false,true': [0.2222222222222222, 0.178471628116294], 'false,true,true': [nan, 0.2222222222222222], 'false,true,false': [7.401486830834377e-17, -2.3129646346357427e-18], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}, {'': [0.0, 0.14836671257970782], 'false': [0.14977618648792282, 0.0], 'false,true': [0.22222222222222224, 0.11145008534151417], 'false,true,false': [-7.401486830834377e-17, 0.0], 'true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.11674353013567028], 'false': [0.0, 0.10021571175480665], 'false,false': [0.10076548139632333, 0.0], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,false,false': [nan, 0.0], 'false,true,false': [0.0, nan]}, {'': [0.0, 0.10401799452424759], 'false': [0.0, 0.09535795273641551], 'false,false': [0.09798756733719387, 0.0], 'false,false,true': [0.0, 0.09803343099972177], 'true': [nan, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.09345439288955508], 'false': [0.0, 0.09067301763937048], 'false,false': [0.09415798458330357, 0.0], 'false,false,true': [0.16, 0.058458990859392546], 'true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.08254058456511743], 'false': [0.05718606771756648, 0.08809740547921215], 'false,false': [0.0, 0.09471896555371286], 'false,false,false': [0.10240165746679714, 0.0], 'false,true': [0.05838751685773903, 0.04211946685863321], 'true': [0.0, nan]}, {'': [0.0, 0.08130057646086675], 'false': [0.08513230561880555, 0.0], 'false,true': [0.020917829117499898, 0.0025384713976368987], 'false,true,true': [0.0, 0.022656063373185566], 'true': [0.0, nan], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.05752387010959287], 'false': [0.0, 0.058867131138293304], 'false,false': [0.061536898599189566, 0.0], 'true': [nan, 0.0], 'false,true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [0.0, 0.056441222467467835], 'false': [0.05908278338905366, 0.0], 'false,true': [0.10895526353409458, 0.0329819895755611], 'false,true,true': [0.0, 0.13384446711827191], 'false,true,false': [0.0005645958294107448, 4.160148362128413e-05], 'false,false': [0.0, nan], 'false,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
4;false,false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
5;false,false;interaction(F, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,false;interaction(H, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,true;interaction(A, D), phenotype(A, F).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.16653882456488173;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.1420942428155648;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.785815571574131;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.20270093248666227;  // std dev = 1.028, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 3.412418919209945E-5;  // std dev = 0.694, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.6257598792641622;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3691908324923252;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06960650651431732;  // std dev = 1.237, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.47210629475008303;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.04858793428628434;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12147627503995541;  // std dev = 0.825, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3580593540796151;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then return -0.030461919692948477;  // std dev = 0.578, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.10918437164693685;  // std dev = 1.036, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.28052550383836794;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.37502873082588517;  // std dev = 0.384, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.2427094643566844;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13534183601580319;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.227517545162353;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.09819488250957087;  // std dev = 0.812, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.03925705738499865;  // std dev = 0.510, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.22250257440588067;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.10787540257534871;  // std dev = 0.669, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23323316029373983;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1215744863538157;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */


Results
   AUC ROC   = 0.827077
   AUC PR    = 0.130485
   CLL	      = -0.622273
   Precision = 0.026515 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.051534


Total learning time: 1.111 seconds
Total inference time: 2.061 seconds
AUC ROC: 0.827077


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.211047
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.506 seconds
Refined model CLL: -0.211047


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.827077
   AUC PR    = 0.130485
   CLL	      = -0.622273
   Precision = 0.026515 at threshold = 0.5
   Recall    = 0.913043
   F1        = 0.051534


Total learning time: 3.173 seconds
Total inference time: 2.061 seconds
AUC ROC: 0.827077
Total revision time: 3.173
Best scored revision CLL: -0.211047


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:24:05
{'AUC ROC': 0.827077, 'AUC PR': 0.130485, 'CLL': -0.622273, 'Precision': [0.026515, 0.5], 'Recall': 0.913043, 'F1': 0.051534, 'Learning time': 3.173, 'Inference time': 2.061, 'parameter_10': {'AUC ROC': 0.970023, 'AUC PR': 0.381551, 'CLL': -0.181751, 'Precision': [0.479675, 0.5], 'Recall': 0.641304, 'F1': 0.548837, 'Learning time': 1.01, 'Inference time': 2.433}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1570669878174392;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.18700165289553622;  // std dev = 1.504, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.768130054200965;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.12721256822891255;  // std dev = 1.601, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.20613740734453978;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6057906545399689;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4932815697949159;  // std dev = 0.150, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06871683327025736;  // std dev = 1.460, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.16162857548414666;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4560789233573964;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return -0.0502963111483872;  // std dev = 1.084, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.14986569803945224;  // std dev = 0.959, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.05464240148441415;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.34700796277202905;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(C, G), interaction(G, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34700796277202905;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(H, I) )
%   | | then return 0.08464782203432308;  // std dev = 0.759, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.00881846311110899;  // std dev = 0.316, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.07826646747386849;  // std dev = 1.217, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.044592162732780966;  // std dev = 0.726, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.27304555378291906;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.36339011484375316;  // std dev = 0.414, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.2044778683514246;  // std dev = 0.234, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09324303265673621;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.10101522609933003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.22230731307034757;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22230731307034757;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.03839170210571325;  // std dev = 1.218, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.02249137076718775;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return -0.03847830440735509;  // std dev = 0.502, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.006062742404245076;  // std dev = 0.844, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2324106705145683;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12509839292194577;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5710632290580895;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2581837659191417;  // std dev = 0.241, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.963603
   AUC PR    = 0.400024
   CLL	      = -0.145185
   Precision = 0.488 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.562212


Total learning time: 1.097 seconds
Total inference time: 2.51 seconds
AUC ROC: 0.963603


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995694
   CLL	      = -0.251561
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.593 seconds
Parameter learned model CLL: -0.251561


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [1.549, 6, 4], 'false,true,false,true': [0.0, 0, 9], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.414, 6, 3], 'false,true,false,true': [2.98e-08, 0, 9], 'false,true,false,false': [0.0, 7, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [1.504, 6, 4], 'false,true,false,true': [0.0, 0, 9], 'false,true,false,false': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,false': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [1.601, 13, 11], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 2], 'false,false,true,true': [0.15, 0, 2], 'false,false,true,false': [1.46, 13, 9], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), interaction(G, A)', 'false,false,false': 'phenotype(A, H), interaction(A, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 0, 2], 'false,false,true,true': [1.084, 6, 2], 'false,false,true,false': [0.959, 7, 9], 'false,false,false,true': [0.728, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(C, G), interaction(G, C)', 'false': 'interaction(H, A), interaction(A, I)', 'false,true': 'interaction(H, I)', 'false,false': 'interaction(J, A), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.759, 3, 3], 'false,true,false': [0.316, 2, 1], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.217, 8, 7], 'false,false,false,false': [0.726, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.414, 0, 11], 'false,true,false': [0.234, 13, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(F, H), interaction(H, F)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.218, 13, 11], 'false,false,false,true': [0.719, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 1], 'false,true,true,true': [0.502, 2, 1], 'false,true,true,false': [0.844, 4, 3], 'false,true,false,true': [0.052, 0, 9], 'false,true,false,false': [0.011, 7, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.241, 2, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24970273483947644], 'false': [0.24999999999999956, 0.22222222222222224], 'false,true': [0.23999999999999985, 0.24609374999999997], 'false,true,false': [-2.9605947323337506e-16, -7.93016446160826e-18], 'false,false': [0.0, 0.25], 'false,false,false': [0.25, nan], 'true': [nan, 0.0], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.20638466000374076], 'false': [0.20418320350929198, 0.20855939702592685], 'false,false': [0.20855939702592685, nan], 'false,false,true': [0.25000000000000006, 0.0], 'false,true': [0.2399999999999999, 0.17568300892697686], 'false,true,true': [0.0, 0.22222222222222227], 'false,true,false': [9.868649107779169e-17, -1.982541115402065e-18]}, {'': [0.0, 0.1610501191884844], 'false': [0.15587260292240368, 0.19688019751754093], 'false,false': [nan, 0.19688019751754093], 'false,false,false': [0.0, 0.24999999999999997], 'false,true': [0.22615666519115818, 0.10970867775805303], 'false,true,false': [-1.4802973661668753e-16, -1.982541115402065e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.13440356846104365], 'false': [0.0, 0.1157972541409772], 'false,false': [0.10674585745679906, 0.1877111228410707], 'false,false,false': [0.0, 0.25], 'true': [nan, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan]}, {'': [0.0, 0.12078358977340979], 'false': [0.0, 0.11216206788774377], 'false,false': [0.10346990750294012, 0.18103968599004092], 'false,false,false': [0.0, 0.24999999999999997], 'false,false,true': [0.01130894237564306, 0.09682690910161282], 'true': [nan, 0.0]}, {'': [0.0, 0.10704937061273188], 'false': [0.0, 0.1052236534785874], 'false,false': [0.09623103315021543, 0.1764424830069249], 'false,false,false': [0.1764424830069249, nan], 'false,false,true': [0.14696410123870096, 0.05750955579860173], 'true': [nan, 0.0]}, {'': [0.0, 0.09738621095479867], 'false': [0.07711783353828833, 0.10676337725873353], 'false,false': [0.0, 0.11170533883822625], 'false,false,false': [0.0987249206245952, 0.1756624642398852], 'false,true': [0.09613260955367882, 0.03326431720158247], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.0, 0.09528143810781126], 'false': [0.08594119125468223, 0.17505250468776415], 'false,false': [0.0, 0.24999999999999994], 'false,false,false': [0.24999999999999994, nan], 'false,true': [0.014222316516762175, 0.004219339251407341], 'false,true,true': [0.0, 0.015552478445040324], 'true': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.07124604020184445], 'false': [0.0, 0.07414573694411754], 'false,false': [0.06182158163933197, 0.1725142500164688], 'false,false,false': [0.1725142500164688, nan], 'true': [nan, 0.0], 'false,true': [0.0, 0.0], 'true,false': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.0702201981856148], 'false': [0.058379161497417925, 0.17224896552259672], 'false,false': [0.17224896552259672, nan], 'false,false,true': [0.0, 0.029156588724305724], 'false,true': [0.09690132477055453, 0.031634003881863194], 'false,true,true': [0.08406747600065938, 0.10180637421661623], 'false,true,false': [0.00030569417007426166, 1.8598353511748273e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), interaction(H, I).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, I), interaction(I, J).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(F, A).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(D, A), interaction(C, E).;true;true
6;false;interaction(H, A), interaction(A, I).;true;true
6;false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
8;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7927941835770488;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15842076631955188;  // std dev = 1.389, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.3392345664604547;  // std dev = 1.053, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.02968978343423224;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.6993481491617469;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.09868652052277938;  // std dev = 1.484, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.2877361057467734;  // std dev = 0.450, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.20613740734453978;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.536148715348258;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.08172998501187737;  // std dev = 1.469, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.22945477343598797;  // std dev = 0.416, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.16162857548414666;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.40340411884764893;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5091318805165044;  // std dev = 0.389, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17448469141939368;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, H), interaction(I, A) )
%   | | | then return 0.06450830341933635;  // std dev = 1.120, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.18483835693093065;  // std dev = 0.226, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.31115925471240313;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.31115925471240313;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.08600710626559172;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.13150448826454914;  // std dev = 0.476, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.06805464348752288;  // std dev = 0.481, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.13205858657806716;  // std dev = 1.072, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.24864267611066015;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3382969317722488;  // std dev = 0.439, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.24747134590159447;  // std dev = 0.170, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1375198094538014;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return -0.08116074814261891;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.05191590627406922;  // std dev = 0.587, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.20513447950891806;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20513447950891806;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), interaction(H, I) )
%   | | | then return -0.07709064730747643;  // std dev = 0.587, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.06707064297985263;  // std dev = 0.514, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.03454663268929263;  // std dev = 0.848, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.18518002750586493;  // std dev = 0.403, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.022964067382809428;  // std dev = 0.361, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06060103421134837;  // std dev = 0.843, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.20635230692195933;  // std dev = 0.128, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11621552357545398;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.008802516016891915;  // std dev = 0.566, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.07011456436225018;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.896361
   AUC PR    = 0.432323
   CLL	      = -0.166042
   Precision = 0.433333 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.53719


Total learning time: 1.811 seconds
Total inference time: 4.608 seconds
AUC ROC: 0.896361


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.230791
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.61 seconds
Refined model CLL: -0.230791


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.896361
   AUC PR    = 0.432323
   CLL	      = -0.166042
   Precision = 0.433333 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.53719


Total learning time: 4.111 seconds
Total inference time: 4.608 seconds
AUC ROC: 0.896361
Total revision time: 4.111
Best scored revision CLL: -0.230791


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:24:17
{'AUC ROC': 0.896361, 'AUC PR': 0.432323, 'CLL': -0.166042, 'Precision': [0.433333, 0.5], 'Recall': 0.706522, 'F1': 0.53719, 'Learning time': 4.111, 'Inference time': 4.608, 'parameter_15': {'AUC ROC': 0.963603, 'AUC PR': 0.400024, 'CLL': -0.145185, 'Precision': [0.488, 0.5], 'Recall': 0.663043, 'F1': 0.562212, 'Learning time': 1.097, 'Inference time': 2.51}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07373365448410583;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7997037370488552;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19803691326694994;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21532255835423242;  // std dev = 1.533, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.18465532310238933;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6552387055648856;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.22914458912123337;  // std dev = 1.797, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.22396865496986595;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.49672720231369627;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.13947318110665208;  // std dev = 1.593, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.18613118140408005;  // std dev = 1.783, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.18005591711585162;  // std dev = 0.766, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.375236055571174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6509654695610968;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 5.4964829450098494E-5;  // std dev = 1.192, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14796251153092663;  // std dev = 1.774, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.14243874307202514;  // std dev = 0.752, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.29213143031593514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.08018408599924418;  // std dev = 1.275, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0988327625849843;  // std dev = 0.653, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.164185565664818;  // std dev = 1.143, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.07049514610395655;  // std dev = 1.525, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(G, C), interaction(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2355585262315818;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( interaction(I, H) )
%   | | then return 0.14615551015921208;  // std dev = 1.057, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0.09101590341329621;  // std dev = 0.740, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.0694430068571471;  // std dev = 0.508, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08892449300792839;  // std dev = 1.905, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1865565547671999;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4432146709326971;  // std dev = 0.358, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.21500498886632888;  // std dev = 0.217, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07879738980786916;  // std dev = 1.763, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.16722560221706337;  // std dev = 0.618, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.26490167385118324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.1598830466415706;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1836903971628988;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03545716906803126;  // std dev = 1.142, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05021832364158473;  // std dev = 1.886, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13770642428430344;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.013102295688607046;  // std dev = 0.527, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.02574414407720767;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.24902098046425988;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11368588942992224;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.453822840462548;  // std dev = 0.427, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.36490613907569747;  // std dev = 0.179, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.981156
   AUC PR    = 0.446735
   CLL	      = -0.254435
   Precision = 0.521739 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.626087


Total learning time: 1.072 seconds
Total inference time: 2.488 seconds
AUC ROC: 0.981156


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.330824
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.527 seconds
Parameter learned model CLL: -0.330824


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true': [1.549, 6, 4], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.0, 8, 8], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.225, 6, 2], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.031, 0, 6], 'false,false,true,false': [0.023, 4, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.533, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.447, 6, 4], 'false,true,false,true': [1.05e-08, 0, 3], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.797, 8, 7], 'false,false,false,false': [0.786, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,false': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.593, 10, 7], 'false,false,false,true': [1.783, 8, 7], 'false,false,false,false': [0.766, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.132, 0, 3], 'false,false,true,false': [1.192, 10, 4], 'false,false,false,true': [1.774, 8, 7], 'false,false,false,false': [0.752, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.275, 6, 4], 'false,false,true,false': [0.653, 4, 3], 'false,false,false,true': [1.143, 4, 5], 'false,false,false,false': [1.525, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(G, C), interaction(C, G)', 'false': 'interaction(A, H), interaction(I, A)', 'false,true': 'interaction(I, H)', 'false,false': 'interaction(A, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.057, 4, 6], 'false,true,false': [0.74, 3, 2], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.508, 3, 1], 'false,false,false,false': [1.905, 10, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.358, 0, 7], 'false,true,false': [0.217, 10, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.763, 8, 8], 'false,false,false,true': [0.618, 1, 2], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.142, 10, 7], 'false,false,false,true': [1.886, 10, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.005, 0, 3], 'false,true,true,true': [0.527, 2, 2], 'false,true,true,false': [0.888, 4, 2], 'false,true,false,true': [0.03, 0, 3], 'false,true,false,false': [0.016, 4, 0], 'false,false,true,true': [0.427, 0, 10], 'false,false,true,false': [0.179, 10, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.2483564645726808], 'false': [0.24221453287197234, 0.25], 'false,false': [0.24999999999999997, 0.25], 'false,false,false': [0.22222222222222224, 0.0], 'false,false,true': [nan, 0.24999999999999997], 'false,true': [0.23999999999999985, 0.24489795918367355], 'false,true,false': [1.4802973661668753e-16, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.23230560885674253], 'false': [0.21320551759086248, 0.24567991283844032], 'false,false': [0.23906987710008956, 0.23512469805236008], 'false,false,true': [0.00016334915185497087, 0.0001378258468777288], 'false,false,false': [nan, 0.23512469805236008], 'false,true': [0.2399999999999999, 0.17482934999147162], 'false,true,true': [0.0, 0.18750000000000006], 'false,true,false': [0.0, 0.0]}, {'': [3.700743415417188e-17, 0.18708423774314964], 'false': [0.16817307102621287, 0.20095759776104907], 'false,false': [0.0, 0.20241001404781517], 'false,false,false': [0.21521260753664245, 0.1543791382323398], 'false,true': [0.20942308165873177, 0.10917559380393226], 'false,true,false': [3.700743415417188e-17, 0.0], 'true': [nan, 3.700743415417188e-17], 'false,false,true': [nan, 0.0]}, {'': [-3.700743415417188e-17, 0.1737720027688616], 'false': [0.0, 0.17559652844065138], 'false,false': [0.14922393332076161, 0.1982206357020417], 'false,false,false': [0.2120027412301856, 0.14650860141662966], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true': [nan, -3.700743415417188e-17]}, {'': [0.0, 0.1692587578070994], 'false': [0.0, 0.17235802854917992], 'false,false': [0.14616700886707854, 0.19531222065599482], 'false,false,false': [0.20973751060792312, 0.14119329490101076], 'false,false,true': [0.005772298298647005, 0.10148373937905211], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0, 0.1559880730834461], 'false': [0.0, 0.15934527398212173], 'false,false': [0.12090103014567918, 0.19339820266765775], 'false,false,false': [0.14522662947889184, 0.23259466840820972], 'false,false,true': [0.16268916873386305, 0.06099911687106384], 'true': [nan, 0.0]}, {'': [0.0, 0.1461630395495804], 'false': [0.1117315502558547, 0.16628834874301357], 'false,false': [0.0, 0.17260097452045062], 'false,false,false': [0.06460279633968734, 0.1909756478650802], 'false,true': [0.11175196442771088, 0.1096638044240796], 'true': [nan, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [1.98872619684524e-05, 0.15117192017161854], 'false': [0.11525757409436943, 0.18153585748656803], 'false,false': [0.19419010360890762, 0.13061143188358093], 'false,false,true': [nan, 0.19419010360890762], 'false,false,false': [0.1274650801642339, 0.0], 'false,true': [0.018309395026717055, 0.004722955687513242], 'false,true,true': [nan, 0.01830939502671696], 'true': [0.0, 0.0]}, {'': [1.1326225138325966e-05, 0.1319323776926513], 'false': [0.0, 0.13506408139006465], 'false,false': [0.07668848583261449, 0.1871919841197669], 'false,false,false': [0.1871919841197669, nan], 'true': [0.0, 0.0], 'false,true': [nan, 0.0], 'true,false': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [6.84275900573091e-06, 0.1314181017474227], 'false': [0.07615467230918915, 0.17828733822292803], 'false,false': [0.17828733822292803, nan], 'false,false,true': [0.01820651556285773, 0.0032095899151299177], 'false,true': [0.10661301433278325, 0.03238154892025983], 'false,true,true': [0.06936799467749022, 0.1313791009040398], 'false,true,false': [0.00029875430206929843, 6.238482600192524e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, H), interaction(I, A).;true;true
6;false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,false;phenotype(A, J), interaction(K, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7974484051691343;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07636351378256216;  // std dev = 1.181, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7992068358339054;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18409208569259514;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.0854221602825398;  // std dev = 1.177, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.49684897646600973;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.3147236285398053;  // std dev = 1.223, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.1340647144061234;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6830110729992102;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.695034312488018;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13751972290975803;  // std dev = 1.686, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5211456687246241;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), location(A, F) )
%   | | then if ( complex(E, G), interaction(H, E) )
%   | | | then return 0.07998148659456535;  // std dev = 1.576, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.35728281620162156;  // std dev = 1.358, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return -0.05705983240099208;  // std dev = 0.531, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.39257228069637795;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), location(A, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5344461299112919;  // std dev = 0.180, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10120194549427107;  // std dev = 1.967, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else return -0.04883176658052155;  // std dev = 0.536, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.3038386205774879;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, A), location(A, F) )
%   | | then if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0.05322759718747829;  // std dev = 1.448, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.24771781186712094;  // std dev = 1.360, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return -0.04195575872894363;  // std dev = 0.541, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2436219988105981;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.03845147794647311;  // std dev = 0.981, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.21751399086730805;  // std dev = 0.490, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.053578001729574366;  // std dev = 0.511, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.46173170501101507;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.026946756592142816;  // std dev = 1.563, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.18849184361899052;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(A, H), interaction(H, F) )
%   | | | then return -0.10619451758886618;  // std dev = 0.591, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.15365125359640353;  // std dev = 0.830, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return -0.06834256836829913;  // std dev = 0.557, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.12989990381793612;  // std dev = 1.151, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.05078519844871652;  // std dev = 0.901, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.10802512388516267;  // std dev = 0.576, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.19335076180285082;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.16135920215486343;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.1935149466988666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), location(A, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.36503322350327105;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.018386201602882346;  // std dev = 1.808, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else return -0.0528020825737251;  // std dev = 0.462, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13847850933269526;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.05674550334994023;  // std dev = 0.949, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.11028120192258418;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.2662196758136682;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1622648196751011;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, I) )
%   | | then return 0.3000979309545923;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.09312228082689135;  // std dev = 1.060, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.14260682266288136;  // std dev = 0.965, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */


Results
   AUC ROC   = 0.799348
   AUC PR    = 0.237476
   CLL	      = -0.405391
   Precision = 0.027828 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.053415


Total learning time: 2.12 seconds
Total inference time: 2.624 seconds
AUC ROC: 0.799348


Results scoring model
   AUC ROC   = 0.99375
   AUC PR    = 0.994358
   CLL	      = -0.333314
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.542 seconds
Refined model CLL: -0.333314


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981156
   AUC PR    = 0.446735
   CLL	      = -0.254435
   Precision = 0.521739 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.626087


Total learning time: 4.261 seconds
Total inference time: 2.488 seconds
AUC ROC: 0.981156
Total revision time: 4.261
Best scored revision CLL: -0.330824


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:24:27
{'AUC ROC': 0.981156, 'AUC PR': 0.446735, 'CLL': -0.254435, 'Precision': [0.521739, 0.5], 'Recall': 0.782609, 'F1': 0.626087, 'Learning time': 4.261, 'Inference time': 2.488, 'parameter_20': {'AUC ROC': 0.981156, 'AUC PR': 0.446735, 'CLL': -0.254435, 'Precision': [0.521739, 0.5], 'Recall': 0.782609, 'F1': 0.626087, 'Learning time': 1.072, 'Inference time': 2.488}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8213006413169548;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1213006413169548;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7957093348047481;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19116520276823987;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22292416395485196;  // std dev = 1.535, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.19717426374568006;  // std dev = 1.623, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6685639747645948;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19173265353215516;  // std dev = 1.876, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.2881493008110748;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5082825700071821;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.1488357242256679;  // std dev = 1.831, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1578254987305282;  // std dev = 1.862, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.2274470478007203;  // std dev = 0.821, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3833982094081654;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6397784275266502;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04468036667693578;  // std dev = 1.529, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12749686740244162;  // std dev = 1.851, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.17676814242440908;  // std dev = 0.805, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.29764291041527835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.08881690875803076;  // std dev = 1.487, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.10296719918921816;  // std dev = 0.813, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.12218067437793645;  // std dev = 1.292, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.09410641501126386;  // std dev = 1.538, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, F) )
%   | | then if ( interaction(G, C), interaction(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23936020217463128;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( interaction(I, H) )
%   | | then return 0.05903494993416483;  // std dev = 1.177, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0.2224487190332859;  // std dev = 0.963, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.0881334102891272;  // std dev = 0.518, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08568435095991751;  // std dev = 2.001, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.1761755331090889;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20013970909754497;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4286773251827135;  // std dev = 0.456, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.22366815376751842;  // std dev = 0.276, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06761740171649272;  // std dev = 1.839, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.1870368066788407;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.30011051708291137;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.170009333512129;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15204497947740775;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1879832686344628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03985237211772117;  // std dev = 1.344, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.049741877762074276;  // std dev = 1.977, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14040362705439052;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.015007928877877219;  // std dev = 0.549, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.036441715401123315;  // std dev = 1.074, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2276883637611836;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1220039040741721;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4585565987475773;  // std dev = 0.502, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.3363197832062587;  // std dev = 0.190, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993274
   AUC PR    = 0.46037
   CLL	      = -0.258083
   Precision = 0.470085 at threshold = 0.5
   Recall    = 0.597826
   F1        = 0.526316


Total learning time: 1.064 seconds
Total inference time: 2.555 seconds
AUC ROC: 0.993274


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.323076
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.76
   F1        = 0.863636


Total scoring time: 0.568 seconds
Parameter learned model CLL: -0.323076


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 2], 'false,true,true': [1.708, 7, 5], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.108, 10, 8], 'false,false,false,true': [0.866, 1, 3], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.449, 7, 3], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.066, 0, 7], 'false,false,true,false': [0.046, 6, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.535, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true': [1.623, 7, 5], 'false,true,false,true': [0.0, 0, 5], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.876, 10, 7], 'false,false,false,false': [0.849, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.831, 13, 10], 'false,false,false,true': [1.862, 10, 7], 'false,false,false,false': [0.821, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.126, 0, 3], 'false,false,true,false': [1.529, 13, 7], 'false,false,false,true': [1.851, 10, 7], 'false,false,false,false': [0.805, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)', 'false,false,true': 'interaction(G, F), interaction(A, G)', 'false,false,false': 'phenotype(A, H), interaction(I, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [0.0, 0, 1], 'false,false,true,true': [1.487, 7, 5], 'false,false,true,false': [0.813, 6, 5], 'false,false,false,true': [1.292, 6, 6], 'false,false,false,false': [1.538, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'true,false,true': 'interaction(G, C), interaction(C, G)', 'false': 'interaction(A, H), interaction(I, A)', 'false,true': 'interaction(I, H)', 'false,false': 'interaction(A, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.177, 7, 6], 'false,true,false': [0.963, 3, 6], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.518, 3, 1], 'false,false,false,false': [2.001, 12, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.001, 0, 2], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.456, 0, 10], 'false,true,false': [0.276, 13, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.839, 10, 8], 'false,false,false,true': [0.657, 1, 3], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, F), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.001, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true': [1.344, 13, 10], 'false,false,false,true': [1.977, 12, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.014, 0, 4], 'false,true,true,true': [0.549, 2, 2], 'false,true,true,false': [1.074, 5, 3], 'false,true,false,true': [0.05, 0, 5], 'false,true,false,false': [0.028, 6, 0], 'false,false,true,true': [0.502, 0, 11], 'false,false,true,false': [0.19, 12, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24810964083175782], 'false': [0.2457466918714556, 0.24952741020793906], 'false,false': [0.2469135802469136, 0.23999999999999994], 'false,false,true': [nan, 0.2469135802469136], 'false,true': [0.24305555555555536, 0.2479338842975206], 'false,true,false': [0.0, -6.938893903907228e-18], 'false,false,false': [0.18750000000000006, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 0.2276854548445467], 'false': [0.21156848752032206, 0.2429459661750531], 'false,false': [0.2425318170576562, 0.235706758060401], 'false,false,true': [0.0006150743306997544, 0.0003488268773645618], 'false,false,false': [nan, 0.235706758060401], 'false,true': [0.24305555555555558, 0.17699665598310138], 'false,true,true': [0.0, 0.20999999999999996], 'false,true,false': [0.0, -2.3129646346357427e-18]}, {'': [0.0, 0.181333471897716], 'false': [0.167409645314126, 0.1944921444320026], 'false,false': [0.0, 0.19433483587402153], 'false,false,false': [0.20701941923907263, 0.14402384844045538], 'false,true': [0.2195330189347897, 0.1105290102560471], 'false,true,false': [-4.4408920985006264e-17, 0.0], 'true': [nan, 0.0], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.16601529789518332], 'false': [0.0, 0.1670821683613576], 'false,false': [0.14571580478523777, 0.18910505056052163], 'false,false,false': [0.20394434204628623, 0.13490592670829163], 'true': [0.0, -3.700743415417188e-17], 'false,true': [nan, 0.0], 'true,true': [0.0, nan], 'false,true,false': [nan, 0.0]}, {'': [0.0, 0.1614475438041982], 'false': [0.0, 0.1636428650127883], 'false,false': [0.1424462134074621, 0.18566564913445027], 'false,false,false': [0.20161854885820743, 0.12954987210917848], 'false,false,true': [0.005253697235519643, 0.11683269491667644], 'true': [0.0, 0.0], 'true,true': [nan, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [0.0, 0.15108281587474462], 'false': [0.0, 0.1536110818357581], 'false,false': [0.12492064803907274, 0.1835077929524057], 'false,false,false': [0.1390299198037148, 0.23645133307320548], 'false,false,true': [0.18432027680445004, 0.0600165848209303], 'true': [nan, 0.0]}, {'': [0.0, 0.14077024055631618], 'false': [0.11155717718692011, 0.16288320364185657], 'false,false': [0.0, 0.16830553368349707], 'false,false,false': [0.06714920268453227, 0.1820494993842609], 'false,true': [0.10651503339870048, 0.10306060199238813], 'true': [nan, 0.0], 'true,false': [0.0, nan], 'true,false,true': [nan, 0.0]}, {'': [0.00014399452063197649, 0.14556454014382147], 'false': [0.11695208995659219, 0.17409964452643578], 'false,false': [0.18785710355584345, 0.124194355739355], 'false,false,true': [nan, 0.18785710355584345], 'false,false,false': [0.10778044166454627, 0.0], 'false,true': [0.020825028559990154, 0.005872233813894763], 'false,true,true': [nan, 0.0208250285599902], 'true': [8.481758611081358e-07, 0.0]}, {'': [8.1014149159956e-05, 0.12466359600069234], 'false': [0.0, 0.12698751223447688], 'false,false': [0.07854346632319933, 0.17758357237922032], 'false,false,false': [0.17758357237922032, nan], 'true': [0.0, 6.692903775154524e-07], 'true,false': [nan, 6.692903775154524e-07], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [4.846550232429428e-05, 0.12413035357579011], 'false': [0.07800216597232174, 0.17019932495227544], 'false,false': [0.17019932495227544, nan], 'false,false,true': [0.022926008481738345, 0.0030210351168666327], 'false,true': [0.12140667587479476, 0.030621258000185118], 'false,true,true': [0.07529254973713037, 0.14431060320871889], 'false,true,false': [0.000507981109531852, 0.00013170896186549819]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;phenotype(C, E), phenotype(A, F).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, H), interaction(I, A).;true;true
6;false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;phenotype(C, D).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,false;phenotype(A, J), interaction(K, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8000001837159434;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.12236673704264296;  // std dev = 1.406, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7716059038732184;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18386760314967554;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.13018172355004126;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.45942023217200467;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.3047712354954945;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.13949576103413375;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5834401744701433;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.0015898732084828893;  // std dev = 0.737, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.27450458580816844;  // std dev = 1.741, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4386781749238775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, F), phenotype(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5022475256363657;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17967914408006702;  // std dev = 0.217, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.0013425604349231236;  // std dev = 0.737, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.23855820679280582;  // std dev = 2.040, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( phenotype(C, E), phenotype(A, F) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3351002533249471;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), complex(I, K) )
%   | | | then return 0.042200802922128904;  // std dev = 1.603, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.2911579036838312;  // std dev = 1.488, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.05638470567718751;  // std dev = 0.373, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06174204696470936;  // std dev = 0.435, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.2649676487850824;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, E), interaction(F, A) )
%   | | then if ( phenotype(F, G), phenotype(A, G) )
%   | | | then return -0.08476977980289185;  // std dev = 0.855, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.19753095071323865;  // std dev = 1.921, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.04875517292592677;  // std dev = 0.367, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05182534924705895;  // std dev = 0.437, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2166537375812556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.06903485562793095;  // std dev = 1.231, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.15454179988289335;  // std dev = 0.666, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.11618058730577954;  // std dev = 1.481, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.03415120883966799;  // std dev = 0.907, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(F, H), enzyme(G, I) )
%   | | | then return 0.19501770587216732;  // std dev = 0.892, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.03590301558049538;  // std dev = 0.946, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.18195815128341356;  // std dev = 0.336, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.14807540227882643;  // std dev = 1.213, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.04401208363702543;  // std dev = 0.912, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.13547243711049062;  // std dev = 0.619, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.18501239596869676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.18878626262944675;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return 0.057678915017841004;  // std dev = 1.562, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.2254964512580385;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1830486457046713;  // std dev = 1.099, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.022747992275065212;  // std dev = 0.744, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.10396538301314748;  // std dev = 1.118, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.14429432556815788;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.25248666346743487;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1612863875009715;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), interaction(I, K) )
%   | | | then return -0.12445066061042778;  // std dev = 0.648, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.24437893710374223;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.09249256293161694;  // std dev = 0.788, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.839161
   AUC PR    = 0.275152
   CLL	      = -0.369131
   Precision = 0.03458 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.065733


Total learning time: 2.367 seconds
Total inference time: 2.618 seconds
AUC ROC: 0.839161


Results scoring model
   AUC ROC   = 0.9952
   AUC PR    = 0.995332
   CLL	      = -0.316046
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.93617


Total scoring time: 0.626 seconds
Refined model CLL: -0.316046


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.839161
   AUC PR    = 0.275152
   CLL	      = -0.369131
   Precision = 0.03458 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.065733


Total learning time: 4.625 seconds
Total inference time: 2.618 seconds
AUC ROC: 0.839161
Total revision time: 4.625
Best scored revision CLL: -0.316046


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:24:37
{'AUC ROC': 0.839161, 'AUC PR': 0.275152, 'CLL': -0.369131, 'Precision': [0.03458, 0.5], 'Recall': 0.663043, 'F1': 0.065733, 'Learning time': 4.625, 'Inference time': 2.618, 'parameter_25': {'AUC ROC': 0.993274, 'AUC PR': 0.46037, 'CLL': -0.258083, 'Precision': [0.470085, 0.5], 'Recall': 0.597826, 'F1': 0.526316, 'Learning time': 1.064, 'Inference time': 2.555}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return 0.12087934778908352;  // std dev = 0.680, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3884414776177917;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05403185473913027;  // std dev = 0.579, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.30104857663234286;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04608848704988122;  // std dev = 0.571, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0018434221527537837;  // std dev = 0.298, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A) )
%   | | | then return 0.12066112579695813;  // std dev = 0.489, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3056517862192887;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.13035574970120142;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.0387105852571547;  // std dev = 0.478, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18454135340943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.26521990129844397;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12031775851298288;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.856176
   AUC PR    = 0.218161
   CLL	      = -0.327458
   Precision = 0.023757 at threshold = 0.5
   Recall    = 0.755814
   F1        = 0.046067


Total learning time: 0.87 seconds
Total inference time: 2.941 seconds
AUC ROC: 0.856176


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143538
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.509 seconds
Parameter learned model CLL: -0.143538


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(A, I)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.68, 4, 3], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B), interaction(A, C)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.579, 4, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.571, 4, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, E)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.298, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.489, 2, 2], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.078, 0, 3], 'false,true,false': [0.014, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.478, 4, 3], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(D, E), interaction(E, A)', 'false,true,true': 'interaction(A, D), phenotype(A, F)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.013, 4, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2343749999999999], 'false': [0.24489795918367335, 0.0], 'false,true': [0.0, 0.22222222222222224], 'false,true,false': [0.0, 0.0], 'true': [0.0, nan], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.16731715135902553], 'false': [0.17482934999147157, 0.0], 'false,true': [0.0, 0.15864144721448356], 'false,true,false': [0.0, 0.0], 'false,false': [0.0, nan], 'false,true,true': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.10448445500766952], 'false': [0.10917559380393224, 0.0], 'false,true': [0.0, 0.09906674252579034], 'false,true,false': [0.0, 0.0], 'true': [0.0, nan], 'false,false': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.06315822713571315], 'false': [nan, 0.06315822713571315], 'false,false': [0.06599390263976558, 0.0], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.05805544790465616], 'false': [nan, 0.05805544790465614], 'false,false': [0.061620499767222676, 0.0], 'false,false,true': [0.0, 0.05591489793692427], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0, 0.050778557718830115], 'false': [nan, 0.05077855771883012], 'false,false': [0.05451738929728156, 0.0], 'false,false,true': [0.0, 0.05431724266398608], 'true': [0.0, nan], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.04653491978000326], 'false': [0.029657753215021312, 0.054101633205234], 'false,false': [nan, 0.054101633205234], 'false,false,false': [0.059671947868638366, 0.0], 'false,true': [nan, 0.029657753215021312], 'true': [0.0, nan]}, {'': [0.0, 0.043360347327055314], 'false': [0.04745027232045586, 0.0], 'false,true': [0.0020230797378532985, 4.8136166211729114e-05], 'false,true,true': [nan, 0.0020230797378532985], 'true': [0.0, nan], 'false,false': [0.0, nan], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.029867437330081983], 'false': [nan, 0.029867437330081986], 'false,false': [0.032699406913110095, 0.0], 'true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.0, 0.02916756543712182], 'false': [0.03214415283563082, 0.0], 'false,true': [0.0, 0.03305892467751484], 'false,true,false': [0.0, 4.1957971981764625e-05], 'false,false': [0.0, nan], 'false,true,true': [nan, 0.0], 'false,false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(E, A).;true;true
0;false,true;interaction(F, E), interaction(F, A).;true;true
0;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(D, A).;true;true
1;false,true;interaction(E, D), interaction(E, A).;true;true
1;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(A, C).;true;true
4;false;interaction(H, A).;true;true
4;false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
5;false,true;interaction(G, H), interaction(H, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A), interaction(A, G).;true;true
6;false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(D, A).;true;true
9;false,true;interaction(D, E), interaction(E, A).;true;true
9;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.2877361057467734;  // std dev = 0.450, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.34961660451529497;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.048354776776812325;  // std dev = 0.523, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.27481244038180874;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.041709034111756055;  // std dev = 0.516, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then return -0.0062130005232750585;  // std dev = 0.283, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then return 0.11443802966286187;  // std dev = 0.430, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.277976993665054;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.11590700965106948;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.007100206537121206;  // std dev = 0.297, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.059652455886087086;  // std dev = 0.314, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.171281747858251;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2429814603360596;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.10756169232232035;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.811409
   AUC PR    = 0.201498
   CLL	      = -0.487166
   Precision = 0.020803 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.040583


Total learning time: 0.863 seconds
Total inference time: 2.202 seconds
AUC ROC: 0.811409


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.133731
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.49 seconds
Refined model CLL: -0.133731


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.811409
   AUC PR    = 0.201498
   CLL	      = -0.487166
   Precision = 0.020803 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.040583


Total learning time: 2.732 seconds
Total inference time: 2.202 seconds
AUC ROC: 0.811409
Total revision time: 2.732
Best scored revision CLL: -0.133731


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:24:45
{'AUC ROC': 0.811409, 'AUC PR': 0.201498, 'CLL': -0.487166, 'Precision': [0.020803, 0.5], 'Recall': 0.825581, 'F1': 0.040583, 'Learning time': 2.732, 'Inference time': 2.202, 'parameter_5': {'AUC ROC': 0.856176, 'AUC PR': 0.218161, 'CLL': -0.327458, 'Precision': [0.023757, 0.5], 'Recall': 0.755814, 'F1': 0.046067, 'Learning time': 0.87, 'Inference time': 2.941}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1555325621642444;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.17626634551589415;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5216035333475302;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.07286921623350553;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16760126498355152;  // std dev = 0.984, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6035424804737625;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.04528447372754055;  // std dev = 0.849, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1372951581813496;  // std dev = 0.975, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.45430412835105527;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5405898492726284;  // std dev = 0.190, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12824548129597527;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.110714375828648;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3457894727237385;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.03550697913099628;  // std dev = 0.591, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 5.945701382718063E-4;  // std dev = 0.329, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.04918941431218771;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2094681693270108;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.06607456526676762;  // std dev = 0.608, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.03214199053865296;  // std dev = 0.310, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return -0.0943212187892132;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.11132704752888907;  // std dev = 0.978, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.18257616309408847;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40015706471808205;  // std dev = 0.172, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.12044805482334857;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.038500649772387256;  // std dev = 0.952, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21346173790138934;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15690192090998978;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.0027597041226397508;  // std dev = 0.543, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.07276454493774882;  // std dev = 0.967, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13725431850192452;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.1324920959142594;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.14526997184142826;  // std dev = 0.393, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.20603439376789123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08365184201195779;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.26503570827338035;  // std dev = 0.513, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.3276166138991875;  // std dev = 0.158, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.915417
   AUC PR    = 0.17691
   CLL	      = -0.267431
   Precision = 0.120141 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.208589


Total learning time: 0.988 seconds
Total inference time: 2.686 seconds
AUC ROC: 0.915417


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.219831
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.56 seconds
Parameter learned model CLL: -0.219831


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 1], 'false,true,true': [0.866, 3, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 3, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 3, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.81, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 2], 'false,true,true': [0.724, 3, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [2.63e-09, 3, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.984, 3, 2], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [0.849, 6, 2], 'false,false,false,true': [0.975, 3, 2], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.19, 0, 2], 'false,false,true,false': [0.055, 6, 0], 'false,false,false,true': [0.968, 3, 2], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I), interaction(J, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.591, 3, 1], 'false,false,true,false': [0.329, 3, 1], 'false,false,false,true': [0.644, 2, 1], 'false,false,false,false': [0.718, 1, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), interaction(H, A)', 'false,true': 'interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true,true': [0.608, 3, 2], 'false,true,false': [0.31, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.978, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.019, 0, 4], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.172, 0, 2], 'false,true,false': [0.066, 6, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.952, 3, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.017, 0, 4], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.543, 6, 2], 'false,false,false,true': [0.967, 3, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.015, 0, 4], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.393, 1, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.008, 3, 0], 'false,false,true,true': [0.513, 1, 4], 'false,false,true,false': [0.158, 3, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.23437499999999994], 'false': [0.18750000000000003, 0.24999999999999986], 'false,false': [0.22222222222222224, 0.0], 'false,false,true': [0.0, 0.24000000000000005], 'false,true': [0.18750000000000003, 0.18750000000000003], 'false,true,false': [0.0, 0.0], 'true': [1.4802973661668753e-16, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.20190266491934045], 'false': [0.16069570727162155, 0.22023405469369844], 'false,false': [0.2222222222222223, 0.19830940504561653], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.0, 0.16415248896142626], 'false,true': [0.18749999999999997, 0.13385372108722052], 'false,true,true': [0.0, -4.625929269271485e-18], 'false,true,false': [0.0, 0.0]}, {'': [0.0, 0.14804713158848262], 'false': [0.10742978529313457, 0.1728473716190552], 'false,false': [0.0, 0.17709012550471165], 'false,false,false': [0.19362767760285846, 0.0], 'false,true': [0.1311052034641356, 0.0835875640061356], 'false,true,false': [0.0, 2.3129646346357427e-18], 'true': [0.0, 0.0], 'false,false,true': [0.0, nan]}, {'': [0.0, 0.12432382218443284], 'false': [0.0, 0.1292455539496485], 'false,false': [0.09005904997003182, 0.15625030918780403], 'false,false,false': [0.1900376651006236, 0.0], 'true': [-3.700743415417188e-17, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true,true': [-3.700743415417188e-17, nan]}, {'': [0.0, 0.1145996722072698], 'false': [0.0, 0.11982683210938401], 'false,false': [0.08874617774110363, 0.1450555953729211], 'false,false,false': [0.18728917604202208, 0.0], 'false,false,true': [0.017968441526018064, 0.0005035816252621159], 'true': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0, 0.09464170351606875], 'false': [0.0, 0.09934097644409928], 'false,false': [0.05741148336112968, 0.13922744045691898], 'false,false,false': [0.13826739343587474, 0.12893778459022998], 'false,false,true': [0.08721541809887454, 0.026998110472547177], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.015609776360253548, 0.09159402774161499], 'false': [0.0585102862859735, 0.12415705516831187], 'false,false': [nan, 0.12415705516831187], 'false,false,false': [0.0, 0.13660737615525842], 'false,true': [0.07399314372097353, 0.03198588662700738], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [9.008019700488396e-05, 0.08919757726896818], 'false': [0.05506456956990428, 0.12161540133211267], 'false,false': [0.15278502546787806, 0.0], 'false,false,true': [0.0, 0.18126080319612087], 'false,true': [0.014785060716127507, 0.0007336498979763906], 'false,true,true': [nan, 0.014785060716127507], 'true': [9.008019700488396e-05, nan], 'false,false,false': [nan, 0.0]}, {'': [7.102963751327157e-05, 0.07882258005955199], 'false': [0.0, 0.08344096771389567], 'false,false': [0.03683318727023387, 0.13366491600204639], 'false,false,false': [0.13366491600204639, nan], 'true': [7.102963751327157e-05, nan], 'false,true': [0.0, nan]}, {'': [5.7075864531047626e-05, 0.07811181008618408], 'false': [0.03688439231070482, 0.11831717624004556], 'false,false': [0.11831717624004556, nan], 'false,false,true': [0.05257456989771092, 0.008365202450267542], 'false,true': [0.057863824712936406, 0.015749741433611013], 'false,true,true': [0.0, 0.07715176628391521], 'false,true,false': [0.0, 2.0126444740112732e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
1;false,false,false;interaction(K, A), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, A), phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,false;interaction(J, A), interaction(K, J).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, I).;true;true
3;false,false,false;interaction(J, A), interaction(K, J).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(A, H).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), interaction(K, J).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(E, C).;true;true
6;false;interaction(A, G), interaction(H, A).;true;true
6;false,false;interaction(A, J).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,true;interaction(D, A), phenotype(A, F).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1555325621642444;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8237336544841058;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.17626634551589415;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5216035333475302;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.07286921623350553;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.16760126498355152;  // std dev = 0.984, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6035424804737625;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.12328907262340921;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2138580200784903;  // std dev = 0.701, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.1372951581813496;  // std dev = 0.975, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.45430412835105527;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5016003431517786;  // std dev = 0.191, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12314644299883583;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.110714375828648;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3457894727237385;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.45365492558335757;  // std dev = 0.355, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13711710262906318;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09723906522377868;  // std dev = 0.465, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.16959620990993096;  // std dev = 0.361, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.046668043249553245;  // std dev = 0.260, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, J) )
%   | | then return -0.07424173684374352;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.25008964632653174;  // std dev = 0.571, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07911595504972313;  // std dev = 0.464, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17857873811762695;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.2758720130580539;  // std dev = 0.123, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.09803576850741469;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.028642072298464983;  // std dev = 0.755, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2323381135875064;  // std dev = 0.108, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.153868344573449;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.10508290251186643;  // std dev = 0.318, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.005183638704081833;  // std dev = 0.387, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13901181974287646;  // std dev = 0.663, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13488496777502376;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.10112420707035187;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.09422665994792077;  // std dev = 0.292, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.14975935932526663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.07179283188708215;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then return 0.12129004912621408;  // std dev = 0.582, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.09160595632704092;  // std dev = 0.405, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.871811
   AUC PR    = 0.204786
   CLL	      = -0.345635
   Precision = 0.041457 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.078665


Total learning time: 1.636 seconds
Total inference time: 2.548 seconds
AUC ROC: 0.871811


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.191338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.553 seconds
Refined model CLL: -0.191338


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.871811
   AUC PR    = 0.204786
   CLL	      = -0.345635
   Precision = 0.041457 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.078665


Total learning time: 3.737 seconds
Total inference time: 2.548 seconds
AUC ROC: 0.871811
Total revision time: 3.737
Best scored revision CLL: -0.191338


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:24:55
{'AUC ROC': 0.871811, 'AUC PR': 0.204786, 'CLL': -0.345635, 'Precision': [0.041457, 0.5], 'Recall': 0.767442, 'F1': 0.078665, 'Learning time': 3.737, 'Inference time': 2.548, 'parameter_10': {'AUC ROC': 0.915417, 'AUC PR': 0.17691, 'CLL': -0.267431, 'Precision': [0.120141, 0.5], 'Recall': 0.790698, 'F1': 0.208589, 'Learning time': 0.988, 'Inference time': 2.686}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1667945087684516;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8016114478971489;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19838855210285108;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4060769389756004;  // std dev = 1.327, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.13163434325644832;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2700790636036722;  // std dev = 1.522, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.6308288253038202;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.04773664760035179;  // std dev = 1.078, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.21429992753631585;  // std dev = 1.508, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.4762542018539393;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5651354346061618;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13382044365756862;  // std dev = 0.093, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.166386946039931;  // std dev = 1.498, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.3609348576111403;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.06882157201088009;  // std dev = 0.760, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03171711972131943;  // std dev = 0.341, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.17956937780434173;  // std dev = 0.839, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13367900168111754;  // std dev = 1.249, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.05760891684767912;  // std dev = 0.780, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.034492587697252455;  // std dev = 0.308, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return -0.09133744220118652;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.11606707914359257;  // std dev = 1.503, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.1829143961893306;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4104610706291641;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12476105301799656;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.06244395765283859;  // std dev = 1.486, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2346946064089278;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15715869283164366;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.004224868581717753;  // std dev = 0.670, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.07000678769839201;  // std dev = 1.498, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13745494373473213;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.01844271144287249;  // std dev = 0.457, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11340601096519926;  // std dev = 0.373, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.20507491333995664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08048318753333107;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.32406047577595665;  // std dev = 0.531, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.4559170983072967;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.909161
   AUC PR    = 0.244108
   CLL	      = -0.288353
   Precision = 0.102102 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.180851


Total learning time: 1.047 seconds
Total inference time: 2.916 seconds
AUC ROC: 0.909161


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.263896
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.592 seconds
Parameter learned model CLL: -0.263896


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 1], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.651, 5, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 4, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.327, 3, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 2], 'false,true,true': [0.958, 4, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 5, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.522, 5, 6], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [1.078, 9, 3], 'false,false,false,true': [1.508, 5, 6], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.195, 0, 3], 'false,false,true,false': [0.093, 9, 0], 'false,false,false,true': [1.498, 5, 6], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I), interaction(J, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.76, 4, 2], 'false,false,true,false': [0.341, 5, 1], 'false,false,false,true': [0.839, 2, 3], 'false,false,false,false': [1.249, 3, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), interaction(H, A)', 'false,true': 'interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true,true': [0.78, 5, 3], 'false,true,false': [0.308, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [1.503, 5, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.02, 0, 4], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.161, 0, 3], 'false,true,false': [0.115, 9, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.486, 5, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.018, 0, 4], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.67, 9, 3], 'false,false,false,true': [1.498, 5, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.016, 0, 4], 'false,true,true,true': [0.457, 3, 1], 'false,true,true,false': [0.373, 1, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.011, 5, 0], 'false,false,true,true': [0.531, 1, 8], 'false,false,true,false': [0.15, 5, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24408284023668628], 'false': [0.1874999999999999, 0.24489795918367338], 'false,false': [0.25, 0.0], 'false,false,true': [0.0, 0.2479338842975207], 'false,true': [0.22222222222222224, 0.13888888888888892], 'false,true,false': [0.0, -2.7755575615628915e-18], 'true': [1.4802973661668753e-16, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.0, 0.2196173534045632], 'false': [0.16639918606400075, 0.23018694265334982], 'false,false': [0.23999999999999994, 0.2236708380900153], 'false,false,true': [-7.401486830834377e-17, 0.0], 'false,false,false': [0.0, 0.2202391164787859], 'false,true': [0.2222222222222222, 0.09915090450905223], 'false,true,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}, {'': [0.0, 0.16902336635355514], 'false': [0.11182051568587602, 0.19385051159197456], 'false,false': [0.0, 0.19506549041824078], 'false,false,false': [0.21051034467283208, 0.0], 'false,true': [0.152923619371335, 0.061916714078618956], 'false,true,false': [0.0, 0.0], 'true': [0.0, 0.0], 'false,false,true': [0.0, nan]}, {'': [0.0, 0.14932599781786451], 'false': [0.0, 0.1527606241534799], 'false,false': [0.09692449317473613, 0.18376117758299135], 'false,false,false': [0.2066153712670877, 0.0], 'true': [-3.700743415417188e-17, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true,true': [-3.700743415417188e-17, nan]}, {'': [0.0, 0.1403911009081983], 'false': [0.0, 0.1442384856583123], 'false,false': [0.095492215921052, 0.177643614404747], 'false,false,false': [0.20411954724947148, 0.0], 'false,false,true': [0.012669691889689213, 0.0009648939916505309], 'true': [0.0, nan], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0, 0.12050295273893245], 'false': [0.0, 0.12417486832232819], 'false,false': [0.06037994430268376, 0.17460022943627773], 'false,false,false': [0.14085734583644188, 0.19487955990897093], 'false,false,true': [0.09630750800704456, 0.019398366330711823], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.015609776360253548, 0.11717591322237486], 'false': [0.0640968193574798, 0.15551798224686442], 'false,false': [nan, 0.15551798224686442], 'false,false,false': [0.0, 0.17370827427289134], 'false,true': [0.0761124934783375, 0.03166639284848409], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.00010154382691594799, 0.1152344838271761], 'false': [0.05697564047654135, 0.16301669110867562], 'false,false': [0.18537276825735702, 0.0], 'false,false,true': [0.0, 0.20069051927597534], 'false,true': [0.00862009733120217, 0.0014784744479769346], 'false,true,true': [nan, 0.00862009733120217], 'true': [0.00010154382691594799, nan], 'false,false,false': [nan, 0.0]}, {'': [8.006971264605187e-05, 0.1052430472265296], 'false': [0.0, 0.10904629340377565], 'false,false': [0.03735318223328422, 0.17257958724768224], 'false,false,false': [0.17257958724768224, nan], 'true': [8.006971264605187e-05, nan], 'false,true': [0.0, nan]}, {'': [6.433772349593095e-05, 0.10477873697592092], 'false': [0.03743004670800019, 0.16138947997477587], 'false,false': [0.16138947997477587, nan], 'false,false,true': [0.031279835853498215, 0.004495043346277506], 'false,true': [0.06181008213561157, 0.011344904524595224], 'false,true,true': [0.05215225680192228, 0.06953634240256304], 'false,true,false': [0.0, 2.3313933787807994e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
1;false,false,false;interaction(K, A), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, A), phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,false;interaction(J, A), interaction(K, J).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, I).;true;true
3;false,false,false;interaction(J, A), interaction(K, J).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;interaction(A, H).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), interaction(K, J).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(E, C).;true;true
6;false;interaction(A, G), interaction(H, A).;true;true
6;false,false;interaction(A, J).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8332054912315484;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1667945087684516;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8016114478971489;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19838855210285108;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4060769389756004;  // std dev = 1.327, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.13163434325644832;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.2700790636036722;  // std dev = 1.522, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.6308288253038202;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.09751430662974785;  // std dev = 1.036, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.21429992753631585;  // std dev = 1.508, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.4762542018539393;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5534987731842578;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13359290305290702;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.166386946039931;  // std dev = 1.498, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.3609348576111403;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.1705192483433567;  // std dev = 0.655, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.060626305019035376;  // std dev = 0.365, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.19963713341819145;  // std dev = 1.240, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.042636175426731426;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.15179209055799808;  // std dev = 0.640, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.04634396888104147;  // std dev = 0.369, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, J) )
%   | | then return -0.07759884921463199;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.1523088669658645;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.0331300257449183;  // std dev = 0.815, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1792480474168014;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.37681551618992515;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.1740651728799506;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0794639576796595;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.06047206273084595;  // std dev = 1.470, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return 0.24210368161751517;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1543761574979341;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, E), phenotype(A, F) )
%   | | then return -0.0497721946549658;  // std dev = 0.429, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.189660370509751;  // std dev = 0.487, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.011982792549727736;  // std dev = 1.427, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13528149095945852;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then return 0.007887042966556351;  // std dev = 0.537, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.2199719403297875;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0784178568603821;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.30495848177584045;  // std dev = 0.471, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.47177989030554784;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0012659142507518706;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.884942
   AUC PR    = 0.239604
   CLL	      = -0.346481
   Precision = 0.04113 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.078134


Total learning time: 1.549 seconds
Total inference time: 2.407 seconds
AUC ROC: 0.884942


Results scoring model
   AUC ROC   = 0.997778
   AUC PR    = 0.997917
   CLL	      = -0.271664
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.566 seconds
Refined model CLL: -0.271664


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.909161
   AUC PR    = 0.244108
   CLL	      = -0.288353
   Precision = 0.102102 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.180851


Total learning time: 3.7539999999999996 seconds
Total inference time: 2.916 seconds
AUC ROC: 0.909161
Total revision time: 3.7539999999999996
Best scored revision CLL: -0.263896


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:25:05
{'AUC ROC': 0.909161, 'AUC PR': 0.244108, 'CLL': -0.288353, 'Precision': [0.102102, 0.5], 'Recall': 0.790698, 'F1': 0.180851, 'Learning time': 3.7539999999999996, 'Inference time': 2.916, 'parameter_15': {'AUC ROC': 0.909161, 'AUC PR': 0.244108, 'CLL': -0.288353, 'Precision': [0.102102, 0.5], 'Recall': 0.790698, 'F1': 0.180851, 'Learning time': 1.047, 'Inference time': 2.916}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8195467402759845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.019546740275984503;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7976199470618165;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18675074596801108;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.21428661372848334;  // std dev = 1.647, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.20239758862822368;  // std dev = 1.185, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.22215209725556886;  // std dev = 1.889, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.628178854255056;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.0693316492738629;  // std dev = 1.319, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1793585210157856;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.47699076484721936;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5362267249842708;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07150272138469116;  // std dev = 0.904, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14188545388715385;  // std dev = 1.862, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.36336653091034643;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.12380727493840082;  // std dev = 1.067, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.04674230291055309;  // std dev = 0.354, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.29733244889112115;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.029791747372907282;  // std dev = 1.519, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.005805728296450759;  // std dev = 0.816, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.16198865138286403;  // std dev = 0.763, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return -0.09721797986835501;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.10611955565241131;  // std dev = 1.831, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.1848504432431812;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46743790243080496;  // std dev = 0.340, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1564773594790515;  // std dev = 0.212, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05336632697208107;  // std dev = 1.799, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.15087470423845062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2938241136466564;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.1587816763496711;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1579946026240564;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.006761090169335618;  // std dev = 0.934, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.06502201566219412;  // std dev = 1.819, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13859717740799715;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.0769561294541447;  // std dev = 0.467, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2487480356275342;  // std dev = 0.603, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.17828759697628027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08923220945719838;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3638845721310278;  // std dev = 0.687, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.3802323849542717;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.929447
   AUC PR    = 0.299454
   CLL	      = -0.365155
   Precision = 0.037771 at threshold = 0.5
   Recall    = 0.709302
   F1        = 0.071723


Total learning time: 1.098 seconds
Total inference time: 2.823 seconds
AUC ROC: 0.929447


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.293869
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.607 seconds
Parameter learned model CLL: -0.293869


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 2], 'false,true,true': [1.309, 4, 3], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [2.058, 9, 8], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.894, 4, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.086, 0, 6], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.647, 7, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [1.05e-08, 0, 3], 'false,true,true': [1.185, 4, 3], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.889, 9, 8], 'false,false,false,false': [0.113, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [1.319, 10, 4], 'false,false,false,true': [1.873, 9, 8], 'false,false,false,false': [0.117, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.166, 0, 3], 'false,false,true,false': [0.904, 10, 1], 'false,false,false,true': [1.862, 9, 8], 'false,false,false,false': [0.106, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I), interaction(J, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true': [0.0, 1, 0], 'false,false,true,true': [1.067, 4, 3], 'false,false,true,false': [0.354, 6, 1], 'false,false,false,true': [0.936, 2, 6], 'false,false,false,false': [1.519, 7, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), interaction(H, A)', 'false,true': 'interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true,true': [0.816, 5, 3], 'false,true,false': [0.763, 3, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [1.831, 9, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.027, 0, 5], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.34, 0, 4], 'false,true,false': [0.212, 10, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.799, 9, 8], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.024, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.934, 10, 4], 'false,false,false,true': [1.819, 9, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.022, 0, 5], 'false,true,true,true': [0.467, 3, 1], 'false,true,true,false': [0.603, 1, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.023, 6, 0], 'false,false,true,true': [0.687, 1, 11], 'false,false,true,false': [0.039, 9, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.2448979591836731], 'false': [0.20408163265306106, 0.2494331065759633], 'false,false': [0.2469135802469136, 1.4802973661668753e-16], 'false,false,true': [0.0, 0.24913494809688583], 'false,true': [0.24489795918367335, 0.12244897959183677], 'false,true,false': [0.0, -6.938893903907228e-18], 'false,false,false': [0.0, 0.0], 'true': [1.4802973661668753e-16, 0.0]}, {'': [0.0, 0.22389684559356376], 'false': [0.1821408909041014, 0.23494160805840542], 'false,false': [0.18260084362938384, 0.21685015010403857], 'false,false,false': [0.0, 0.22604274027219376], 'false,false,true': [0.0012213761818395212, 0.0], 'false,true': [0.2448979591836735, 0.08741467499573585], 'false,true,true': [0.0, 0.16000000000000006], 'false,true,false': [0.0, -2.3129646346357427e-18]}, {'': [-4.4408920985006264e-17, 0.18144615645217935], 'false': [0.1395965733232214, 0.1975814430147398], 'false,false': [0.0, 0.2000167339722701], 'false,false,false': [0.20983534065021214, 0.004248894507672259], 'false,true': [0.20055237010844676, 0.0545877969019661], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'true': [0.0, 3.700743415417188e-17]}, {'': [4.4408920985006264e-17, 0.16431927409650648], 'false': [0.0, 0.16719226397324619], 'false,false': [0.12428696355285809, 0.18737518829839367], 'false,false,false': [0.206346052771375, 0.004576413268586414], 'true': [-3.700743415417188e-17, 0.0], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true,true': [-3.700743415417188e-17, nan]}, {'': [-2.2204460492503132e-17, 0.15650230099202878], 'false': [0.0, 0.15972400301237957], 'false,false': [0.12255611272804796, 0.18016421066210378], 'false,false,false': [0.20393692386057016, 0.0037563818466777033], 'false,false,true': [0.009176299725425182, 0.0743346484854546], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0, 0.14296169948327941], 'false': [0.0, 0.14622497459215333], 'false,false': [0.09755109581286667, 0.1763198323822806], 'false,false,false': [0.10959807371191034, 0.19216979404165094], 'false,false,true': [0.16263491982411526, 0.017923692549389934], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.015609776360253548, 0.13225941305588457], 'false': [0.09511594441127295, 0.15580990903433178], 'false,false': [nan, 0.15580990903433178], 'false,false,false': [0.0, 0.1676321587239778], 'false,true': [0.08328046898938486, 0.0969576608992286], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.00015085532039929017, 0.13329532982368175], 'false': [0.09090532555613727, 0.16042761561582047], 'false,false': [0.1807034554495965, 0.004541007477812174], 'false,false,true': [0.0, 0.19044247389214453], 'false,true': [0.028882755930096926, 0.004494280822540548], 'false,true,true': [nan, 0.028882755930096926], 'false,false,false': [0.0, 0.0], 'true': [0.00015085532039929017, nan]}, {'': [0.0001189990205079594, 0.12058178563017152], 'false': [0.0, 0.12378598540527447], 'false,false': [0.062361347237699524, 0.16538556458875397], 'false,false,false': [0.16538556458875397, nan], 'true': [0.0001486248786250373, 0.0], 'false,true': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [9.558146465442619e-05, 0.12016762523456756], 'false': [0.062244260381651303, 0.15816951234573629], 'false,false': [0.15816951234573629, nan], 'false,false,true': [0.03936648905109291, 0.00016780293561180493], 'false,true': [0.10919133891404349, 0.008839422445884605], 'false,true,true': [0.05461614279290416, 0.12133929384610338], 'false,true,false': [0.0, 8.882425816929505e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
1;false,false,false;interaction(K, A), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, A), phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(E, C).;true;true
6;false;interaction(A, G), interaction(H, A).;true;true
6;false,false;interaction(A, J).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
7;false,false,false;phenotype(A, J), interaction(K, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8209733135085917;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.018526877964000366;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7976199470618165;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18675074596801108;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.21428661372848334;  // std dev = 1.647, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.09563066149313919;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2824091682575786;  // std dev = 0.932, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.22215209725556886;  // std dev = 1.889, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.628178854255056;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.23363198683925038;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.003544099491035699;  // std dev = 0.839, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.3814892991100469;  // std dev = 0.960, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.11901272991080325;  // std dev = 1.580, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.07266088596564994;  // std dev = 0.725, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12671192678068227;  // std dev = 0.993, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.13015130126648222;  // std dev = 1.813, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.42879713157643656;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(A, H), enzyme(F, I) )
%   | | | then return -0.1685715324793761;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.21010031700252155;  // std dev = 1.702, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.15252275271574164;  // std dev = 0.653, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.017762918320375944;  // std dev = 1.033, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(J, I), complex(J, K) )
%   | | | then return -0.1468475706596976;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.20679739413996923;  // std dev = 0.475, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.280679312725106;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.010063173385762273;  // std dev = 0.433, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, M) )
%   | | then return -0.11233399960682193;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.06812558582052244;  // std dev = 1.774, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.31773034489485263;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17516284246377395;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.1526127378625342;  // std dev = 0.655, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.00743354189753869;  // std dev = 0.812, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.1196642745855482;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.052457127610138064;  // std dev = 1.772, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.16879358302877345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2974036820141702;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15075274086805582;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15337828006196996;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.0862417874324866;  // std dev = 0.601, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2000400759153306;  // std dev = 1.002, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.03861369463532084;  // std dev = 1.425, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.059297271082561526;  // std dev = 0.767, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13286250570001829;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.13786430783647832;  // std dev = 0.645, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.009639272480934213;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.32974708151327514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10212197855159862;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then return 0.17035013010446107;  // std dev = 0.354, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else return -0.37364372621994757;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.833788
   AUC PR    = 0.141842
   CLL	      = -0.475691
   Precision = 0.034045 at threshold = 0.5
   Recall    = 0.686047
   F1        = 0.064871


Total learning time: 3.085 seconds
Total inference time: 4.257 seconds
AUC ROC: 0.833788


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990851
   CLL	      = -0.337854
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.687 seconds
Refined model CLL: -0.337854


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.929447
   AUC PR    = 0.299454
   CLL	      = -0.365155
   Precision = 0.037771 at threshold = 0.5
   Recall    = 0.709302
   F1        = 0.071723


Total learning time: 5.477 seconds
Total inference time: 2.823 seconds
AUC ROC: 0.929447
Total revision time: 5.477
Best scored revision CLL: -0.293869


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:25:18
{'AUC ROC': 0.929447, 'AUC PR': 0.299454, 'CLL': -0.365155, 'Precision': [0.037771, 0.5], 'Recall': 0.709302, 'F1': 0.071723, 'Learning time': 5.477, 'Inference time': 2.823, 'parameter_20': {'AUC ROC': 0.929447, 'AUC PR': 0.299454, 'CLL': -0.365155, 'Precision': [0.037771, 0.5], 'Recall': 0.709302, 'F1': 0.071723, 'Learning time': 1.098, 'Inference time': 2.823}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(D, C), recursion_accounttype(D, B).;false;false
0;false;follows(E, A).;true;true
0;false,true;follows(F, E), follows(F, A).;false;true
0;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(A, H), follows(H, I).;true;true
0;false,false,true;recursion_accounttype(I, B).;false;false
0;false,false,false;tweets(A, J).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
1;false;follows(D, A).;true;true
1;false,true;follows(E, D), follows(E, A).;true;true
1;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
1;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
1;false,false;tweets(A, H), follows(A, I).;true;true
1;false,false,true;tweets(J, H), recursion_accounttype(J, B).;false;false
1;false,false,false;follows(A, K), recursion_accounttype(K, B).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(A, C), tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(C, D), tweets(A, D).;true;false
3;true,true;follows(A, E).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(G, A), follows(F, G).;false;true
3;false,true,false;follows(H, A), follows(H, F).;false;false
3;false,false;follows(I, A).;false;true
3;false,false,false;follows(A, J), follows(J, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(D, A).;true;false
4;true,true;recursion_accounttype(D, B), follows(A, C).;false;true
4;true,true,false;tweets(C, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;false;true
4;false,false;follows(H, A).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), follows(J, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(C, E), follows(E, A).;false;true
5;true,true,false;follows(F, A), follows(F, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;tweets(A, J), follows(A, K).;false;false
6;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
6;true;follows(D, A), follows(C, E).;false;true
6;true,false;tweets(A, F).;true;false
6;true,false,true;follows(C, G), follows(G, C).;false;false
6;false;follows(H, A), follows(A, I).;true;true
6;false,true;follows(H, I).;false;false
6;false,false;follows(J, A), recursion_accounttype(J, B).;false;true
6;false,false,false;follows(K, A).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J), follows(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(C, D).;false;true
8;true,false;tweets(A, E), follows(A, C).;false;false
8;false;follows(A, F), recursion_accounttype(F, B).;true;true
8;false,true;follows(F, G), recursion_accounttype(G, B).;false;true
8;false,true,false;follows(F, H), follows(H, F).;false;false
8;false,false;follows(I, A).;false;true
8;false,false,false;follows(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
9;false;follows(D, A).;true;true
9;false,true;follows(D, E), follows(E, A).;true;true
9;false,true,true;follows(A, D), tweets(A, F).;false;false
9;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
9;false,false;follows(A, H).;true;true
9;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
9;false,false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6259563331837878;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.04904366681621207;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7975826703387998;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.191258864214365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.17962302446645348;  // std dev = 1.694, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.17306363689107054;  // std dev = 1.624, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.24183589452866902;  // std dev = 2.026, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.6332264039616601;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.08359908182382716;  // std dev = 1.722, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19410167733676711;  // std dev = 2.006, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.4815168609260416;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(C, E), phenotype(A, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4516690281763447;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.09316957777128664;  // std dev = 0.937, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.152528938139774;  // std dev = 1.992, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.36677703278644586;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.09604782965036468;  // std dev = 1.491, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.044105647920095185;  // std dev = 0.367, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.32850802368890963;  // std dev = 0.974, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.004546785824138895;  // std dev = 1.563, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(H, G) )
%   | | then return 0.053050152578417845;  // std dev = 1.290, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.1696390778628684;  // std dev = 0.789, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J) )
%   | | | then return -0.13333521881789123;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10792498891563325;  // std dev = 1.930, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.1860845897095366;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5180676650544989;  // std dev = 0.349, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18353035862078976;  // std dev = 0.368, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.058212778022449466;  // std dev = 1.898, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.14508467198984587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30519708950139457;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.16009291162177378;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15681625562114887;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.008734437351024391;  // std dev = 1.243, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.06556351165884786;  // std dev = 1.917, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1393074148823528;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return -0.002609045085861801;  // std dev = 0.886, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.10218765811690197;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.17937429817364237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08695485241578686;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.35621375110535675;  // std dev = 0.677, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.38837534458027506;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.932614
   AUC PR    = 0.324723
   CLL	      = -0.34765
   Precision = 0.03676 at threshold = 0.5
   Recall    = 0.686047
   F1        = 0.069781


Total learning time: 1.114 seconds
Total inference time: 2.707 seconds
AUC ROC: 0.932614


Results scoring model
   AUC ROC   = 0.9984
   AUC PR    = 0.998431
   CLL	      = -0.305716
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.84
   F1        = 0.913043


Total scoring time: 0.606 seconds
Parameter learned model CLL: -0.305716


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 2], 'false,true,true': [1.754, 8, 5], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [2.236, 10, 10], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H), interaction(I, A)', 'false,false,true': 'phenotype(J, H), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), recursion_proteinclass(K, B)'}, {'true': [2.11e-08, 0, 6], 'false,true,true,true': [0.894, 1, 4], 'false,true,true,false': [0.935, 7, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.084, 0, 8], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.694, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 4], 'false,true,true': [1.624, 8, 5], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 6, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.026, 10, 10], 'false,false,false,false': [0.119, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D), phenotype(A, D)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,true,false': 'interaction(A, H), interaction(F, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [1.722, 14, 6], 'false,false,false,true': [2.006, 10, 10], 'false,false,false,false': [0.124, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B), interaction(C, A)', 'true,true,false': 'phenotype(C, E), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.0, 1, 0], 'false,false,true,true': [0.896, 1, 5], 'false,false,true,false': [0.937, 13, 1], 'false,false,false,true': [1.992, 10, 10], 'false,false,false,false': [0.113, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'phenotype(A, I), interaction(J, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 3], 'false,true': [0.0, 1, 0], 'false,false,true,true': [1.491, 8, 5], 'false,false,true,false': [0.367, 6, 1], 'false,false,false,true': [0.974, 2, 8], 'false,false,false,false': [1.563, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(E, C)', 'true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), interaction(H, A)', 'false,true': 'interaction(H, G)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true,true': [1.29, 8, 6], 'false,true,false': [0.789, 3, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.089, 3, 0], 'false,false,false,false': [1.93, 10, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.027, 0, 6], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.349, 0, 6], 'false,true,false': [0.368, 14, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.898, 10, 10], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.023, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.243, 14, 6], 'false,false,false,true': [1.917, 10, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(E, D), interaction(A, E)', 'false,true,true': 'interaction(D, A), phenotype(A, F)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true': [0.021, 0, 6], 'false,true,true,true': [0.886, 5, 3], 'false,true,true,false': [0.791, 3, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.026, 6, 0], 'false,false,true,true': [0.677, 1, 13], 'false,false,true,false': [0.011, 10, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.24535123966942127], 'false': [0.2100000000000001, 0.24826388888888848], 'false,false': [0.2494331065759637, 1.4802973661668753e-16], 'false,false,true': [0.0, 0.25], 'false,true': [0.2366863905325442, 0.12244897959183677], 'false,true,false': [0.0, -6.938893903907228e-18], 'false,false,false': [0.0, 0.0], 'true': [0.0, 0.0]}, {'': [7.401486830834377e-17, 0.22805225410093097], 'false': [0.19498819529215716, 0.23617025250621615], 'false,false': [0.15714647643951155, 0.21122081190888947], 'false,false,false': [0.0, 0.22082097531360198], 'false,true': [0.23668639053254428, 0.08741467499573585], 'false,true,true': [0.15999999999999998, 0.10937499999999997], 'false,false,true': [0.000871579457897731, 0.0], 'false,true,false': [0.0, -2.3129646346357427e-18]}, {'': [-7.401486830834377e-17, 0.18577014697710395], 'false': [0.15921800868014027, 0.19484718517679533], 'false,false': [0.0, 0.19647756690822246], 'false,false,false': [0.2052594452050395, 0.004726032575050665], 'false,true': [0.20292278495768468, 0.0545877969019661], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.0, nan], 'true': [0.0, 0.0]}, {'': [7.401486830834377e-17, 0.1709182193597393], 'false': [0.0, 0.17330481475300588], 'false,false': [0.14823354665552227, 0.18491917619412512], 'false,false,false': [0.2011113535983901, 0.005138728782222435], 'true': [-3.700743415417188e-17, -3.700743415417188e-17], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0], 'true,true': [-3.700743415417188e-17, nan]}, {'': [-3.700743415417188e-17, 0.16377004849797547], 'false': [0.0, 0.16645943739448527], 'false,false': [0.1464052034572356, 0.17825029642978588], 'false,false,false': [0.1983659132261927, 0.00423118788006314], 'false,false,true': [0.13392380257372752, 0.06269964330516584], 'true': [-2.2204460492503132e-17, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, nan]}, {'': [9.25185853854297e-18, 0.14975986988709458], 'false': [0.0, 0.15248930086460366], 'false,false': [0.12229952826935578, 0.17469548119146938], 'false,false,false': [0.09485280585047558, 0.1878844428311286], 'false,false,true': [0.1709206228170475, 0.019235261594832003], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.015609776360253548, 0.13542327964494186], 'false': [0.1171466164369556, 0.14945484413743915], 'false,false': [nan, 0.14945484413743915], 'false,false,false': [0.0026695320794195725, 0.16188462119407376], 'false,true': [0.11883204885090627, 0.10369885655511568], 'true': [0.0, 0.0], 'true,false': [nan, 0.0]}, {'': [0.00011710830990986631, 0.13848181766945725], 'false': [0.11626521606092141, 0.15585983594757374], 'false,false': [0.17231801105241426, 0.005696885831420556], 'false,false,true': [0.0, 0.18011098447758966], 'false,true': [0.02035819088979211, 0.009696290801027038], 'false,true,true': [nan, 0.02035819088979211], 'false,false,false': [0.0, 0.0], 'true': [0.00011710830990986631, nan]}, {'': [9.198660578705702e-05, 0.11969907116315853], 'false': [0.0, 0.12221984319211415], 'false,false': [0.0772077129201969, 0.1598587126946158], 'false,false,false': [0.1598587126946158, nan], 'true': [0.00010859451452006064, 0.0], 'false,true': [0.0, nan], 'true,false': [nan, 0.0]}, {'': [7.33120665437718e-05, 0.1193175539862056], 'false': [0.07705041282178465, 0.15386352265035055], 'false,false': [0.15386352265035055, nan], 'false,false,true': [0.03275147545434926, 1.2851233283317498e-05], 'false,true': [0.11118683357592965, 0.008778902276182193], 'false,true,true': [0.09815370325317817, 0.1252814734756132], 'false,true,false': [0.0, 0.00010902173359062424]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;false;interaction(A, E).;true;true
0;false,true;interaction(E, F), interaction(A, F).;true;true
0;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), interaction(I, H).;true;true
0;false,false,true;recursion_proteinclass(I, B).;true;true
0;false,false,false;phenotype(A, J).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, D).;true;true
1;false,true;interaction(D, E), interaction(A, E).;true;true
1;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
1;false,false;phenotype(A, H), interaction(I, A).;true;true
1;false,false,true;phenotype(J, H), recursion_proteinclass(J, B).;true;true
1;false,false,false;interaction(K, A), recursion_proteinclass(K, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, A), phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), interaction(A, F).;true;true
2;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(C, D), phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B), interaction(C, A).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, D), interaction(E, C).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
7;false,false,false;phenotype(A, J), interaction(K, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(D, C).;true;true
8;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, D).;true;true
9;false,true;interaction(E, D), interaction(A, E).;true;true
9;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
9;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( location(A, F), interaction(G, A) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( location(A, F), interaction(G, A) )
%   | | | then return 0.30874113578563506;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7975826703387998;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.191258864214365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.17962302446645348;  // std dev = 1.694, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( location(A, G), interaction(H, A) )
%   | | | then return 0.2564123687585864;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.4799219007773372;  // std dev = 1.023, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14901369959115318;  // std dev = 1.689, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(F, A), location(A, G) )
%   | | then if ( enzyme(F, H), complex(F, I) )
%   | | | then return 0.4455048520871364;  // std dev = 0.628, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15594981919942522;  // std dev = 2.514, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( location(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.1284103072549378;  // std dev = 2.498, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.3718762977217762;  // std dev = 0.595, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.09269127618926096;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( phenotype(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3826664654362438;  // std dev = 1.062, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.2678748870930002;  // std dev = 0.278, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.09336378111539412;  // std dev = 1.481, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.041452485158345445;  // std dev = 1.075, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.45765165004275304;  // std dev = 0.351, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.1441320978835165;  // std dev = 0.914, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.11432551840159412;  // std dev = 1.864, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | else return -0.08105481818837383;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18352948937254634;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return -0.09780406934248306;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.12131357018540864;  // std dev = 0.867, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.08780576893651348;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.052056895103912745;  // std dev = 1.741, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.20416366448507262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4862957709741473;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.15633837642134096;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.16462075057123937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( phenotype(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2550563774158164;  // std dev = 0.930, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.20791683339909803;  // std dev = 0.220, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.04731116614108383;  // std dev = 1.617, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.09369858380598066;  // std dev = 0.504, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13794987326501465;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.044018425491727894;  // std dev = 0.910, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2043767930514555;  // std dev = 0.578, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.22402428808035146;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13027922143869664;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.24538791708384006;  // std dev = 0.134, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.08584877753372117;  // std dev = 1.422, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return -0.29849666748368164;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.884625
   AUC PR    = 0.241449
   CLL	      = -0.335176
   Precision = 0.053112 at threshold = 0.5
   Recall    = 0.744186
   F1        = 0.099148


Total learning time: 5.726 seconds
Total inference time: 7.226 seconds
AUC ROC: 0.884625


Results scoring model
   AUC ROC   = 0.9864
   AUC PR    = 0.987615
   CLL	      = -0.311466
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.93617


Total scoring time: 0.883 seconds
Refined model CLL: -0.311466


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.932614
   AUC PR    = 0.324723
   CLL	      = -0.34765
   Precision = 0.03676 at threshold = 0.5
   Recall    = 0.686047
   F1        = 0.069781


Total learning time: 8.329 seconds
Total inference time: 2.707 seconds
AUC ROC: 0.932614
Total revision time: 8.329
Best scored revision CLL: -0.305716


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:25:36
{'AUC ROC': 0.932614, 'AUC PR': 0.324723, 'CLL': -0.34765, 'Precision': [0.03676, 0.5], 'Recall': 0.686047, 'F1': 0.069781, 'Learning time': 8.329, 'Inference time': 2.707, 'parameter_25': {'AUC ROC': 0.932614, 'AUC PR': 0.324723, 'CLL': -0.34765, 'Precision': [0.03676, 0.5], 'Recall': 0.686047, 'F1': 0.069781, 'Learning time': 1.114, 'Inference time': 2.707}}


