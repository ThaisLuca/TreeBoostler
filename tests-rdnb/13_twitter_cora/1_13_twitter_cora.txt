Starting experiment #1 for 13_twitter_cora

Loading pre-trained trees.
Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos  examples: 2649
Target test neg examples: 4334

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.424815601766179;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.004815601766179008;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.004815601766179008;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.45935396641210174;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3982164798305049;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3628735944379146;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.004228390109386251;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.004228390109386251;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.37343204136433367;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.32650617096328266;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.29775896640997807;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.14974330653669568;  // std dev = 2.784, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.14149654570757056;  // std dev = 0.042, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.11669340332070102;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.0037111125833978686;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14514481334590568;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.26401060060118464;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2906444907032828;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23424913421266852;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return -0.10980429489397554;  // std dev = 0.045, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0032558270569705674;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.003911681670084824;  // std dev = 0.346, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.11804668707041945;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.2424850587477804;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20281493301753364;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1782070602559735;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return -0.09953837016457324;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0028554031467501392;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.0034335612113566712;  // std dev = 0.346, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09457696812283496;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.1826279959417426;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15922209076995367;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13419758645019736;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then return -0.029299214164223333;  // std dev = 0.328, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.002127160213159074;  // std dev = 3.067, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.10482916080141491;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.006870934527798597;  // std dev = 2.848, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07489163449109286;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.1371467283246146;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11968568445568975;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10104228862528591;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.0864496665410625;  // std dev = 0.028, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.002666332662024592;  // std dev = 0.346, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0029283180884813577;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.05877777591804268;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.10545729310453333;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09478846257989285;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07480580468098029;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.13353357253995538;  // std dev = 2.767, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.12531761669002128;  // std dev = 0.082, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.0848534873664772;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.002567537237384835;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04582386394015474;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.08261581037396042;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07110522385030418;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05584631425926668;  // std dev = 2.718, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.11521994736170404;  // std dev = 2.764, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.11223107988757548;  // std dev = 0.074, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.07851958266286738;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.002250586738165279;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.03554750876544446;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.06276676121589082;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05723432547282816;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04128775221510906;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.07964820642981309;  // std dev = 0.081, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.0012335344777229598;  // std dev = 0.334, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0019722859171695992;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.557437
   AUC PR    = 0.428426
   CLL	      = -0.654273
   Precision = 0.637427 at threshold = 0.5
   Recall    = 0.041148
   F1        = 0.077305


Total learning time: 63.11360764503479 seconds
Total inference time: 7.951 seconds
AUC ROC: 0.557437


Dataset: 13_twitter_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:01:11
{'AUC ROC': 0.557437, 'AUC PR': 0.428426, 'CLL': -0.654273, 'Precision': [0.637427, 0.5], 'Recall': 0.041148, 'F1': 0.077305, 'Learning time': 63.11360764503479, 'Inference time': 7.951}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos  examples: 2246
Target test neg examples: 4478

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.5949910403626703;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.5062567560764839;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.48074388375574334;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.5791684237702857;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( haswordvenue(B, C) )
%   | | then return 0.22916842377028543;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(F, D), venue(F, B) )
%   | | | then return -0.008145345695425854;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07083157622971455;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.3045453081923796;  // std dev = 0.494, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.4047531668618019;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.42464571865829975;  // std dev = 1.908, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return 0.4317030979309822;  // std dev = 0.348, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.24202763793698798;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.3098169854894562;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2877826293809521;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.44960468245709945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.44785888933339724;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.17062637354018512;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.1316730160126654;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.18614669808889744;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.23288770051702257;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21657984029357435;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.3425676419265825;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.3413723950665916;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13664585375352212;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.10354034558269198;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14104799161736328;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.19155569148270196;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1440244614724635;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.27003591012705197;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.2692252801573361;  // std dev = 2.58e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.10762034996184425;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.08048520911847132;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.3105861549032635;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( author(F, D), venue(F, B) )
%   | | then return -0.11505396857084772;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.04785725950827181;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.17941856452848143;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.10450386091515732;  // std dev = 0.494, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.14461627028325488;  // std dev = 1.915, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.13422935280538895;  // std dev = 1.891, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return 0.16784401879455085;  // std dev = 0.319, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else return 0.08372807955323866;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.23495492583593305;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.035977612038309945;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0990477660224302;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.07841087338489824;  // std dev = 0.494, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.11021526551554549;  // std dev = 1.915, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.10458888304940586;  // std dev = 1.894, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.192223597080385;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.06457405393631672;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.026490420601408573;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.05981862681187965;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.0848119646365072;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05304189079342948;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.18193466940649972;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.16412515393560487;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.04949778322519479;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.020150260175664157;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04493973937434854;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.06987998195954064;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03659081208870977;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.1564042768189754;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.14283078034795033;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.03777940363354101;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.015307297156936125;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.535252
   AUC PR    = 0.342749
   CLL	      = -0.75558
   Precision = 0.352912 at threshold = 0.5
   Recall    = 0.957703
   F1        = 0.515765


Total learning time: 61.03260517120361 seconds
Total inference time: 6.234 seconds
AUC ROC: 0.535252


Dataset: 13_twitter_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:02:18
{'AUC ROC': 0.535252, 'AUC PR': 0.342749, 'CLL': -0.75558, 'Precision': [0.352912, 0.5], 'Recall': 0.957703, 'F1': 0.515765, 'Learning time': 61.03260517120361, 'Inference time': 6.234}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos  examples: 2436
Target test neg examples: 2800

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D), haswordtitle(F, C) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.18314893509951236;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.21485830799229227;  // std dev = 0.479, 1,483.000 (wgt'ed) examples reached here.  /* #neg=954 #pos=529 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.6200536970042743;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.024204006076958388;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.017440970497742472;  // std dev = 0.366, 113.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1848548562734471;  // std dev = 0.478, 1,536.000 (wgt'ed) examples reached here.  /* #neg=991 #pos=545 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return -0.005709354715764379;  // std dev = 0.338, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.03632228195246074;  // std dev = 3.249, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | | | else return -0.04802109890528154;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.012875311768684927;  // std dev = 3.673, 102.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.29677752785478706;  // std dev = 1.203, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.15824009908898162;  // std dev = 0.479, 1,523.000 (wgt'ed) examples reached here.  /* #neg=981 #pos=542 */
%   else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | then if ( title(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.5820042216295067;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.1452371895942191;  // std dev = 0.006, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( title(I, F), venue(I, B) )
%   | | | then return -0.14558166613324144;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.07664055608898081;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.027975920418311605;  // std dev = 3.249, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.02217335811116625;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1398293921804634;  // std dev = 0.481, 1,498.000 (wgt'ed) examples reached here.  /* #neg=953 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.01934055043032394;  // std dev = 0.345, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | | else return 0.1549705133002849;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.02791225060861674;  // std dev = 3.282, 87.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | | else return -0.03377054840555491;  // std dev = 1.319, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11163661638772607;  // std dev = 0.480, 1,510.000 (wgt'ed) examples reached here.  /* #neg=965 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.023989902114605523;  // std dev = 0.345, 87.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.1329575638927981;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.004460543731623954;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.022612260110262596;  // std dev = 3.279, 88.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=16 */
%   | | | else return -0.04321603456370848;  // std dev = 1.328, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return -0.09480581282462515;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.43799879225071686;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.046275782488446535;  // std dev = 0.465, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | else return 0.08993806275080042;  // std dev = 0.480, 1,467.000 (wgt'ed) examples reached here.  /* #neg=938 #pos=529 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then return -0.03625062477458514;  // std dev = 0.273, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.03725806391324806;  // std dev = 0.287, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.025476459907450136;  // std dev = 3.292, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | | | else return 0.013189677871792715;  // std dev = 3.296, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07901265783544519;  // std dev = 0.482, 1,480.000 (wgt'ed) examples reached here.  /* #neg=935 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.39420049921623324;  // std dev = 2.401, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | | else return -0.13285046216025237;  // std dev = 0.046, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0.1845978275466836;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.12869972674733524;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.014836907301781662;  // std dev = 0.342, 103.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05251411218923313;  // std dev = 0.479, 1,522.000 (wgt'ed) examples reached here.  /* #neg=977 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.502495777533451;  // std dev = 1.954, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.13944636959472148;  // std dev = 0.039, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12132002208177932;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.01310574017875251;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.007612368145471241;  // std dev = 2.993, 88.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=16 */
%   | | | else return -0.06447003260428635;  // std dev = 1.321, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else return -0.08581142294657332;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.046741407551368803;  // std dev = 0.481, 1,499.000 (wgt'ed) examples reached here.  /* #neg=954 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3675452090963061;  // std dev = 2.212, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.12182822464851872;  // std dev = 0.020, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.10302133246267516;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.021738302149597526;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0019820669580632366;  // std dev = 2.884, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.04685830734773644;  // std dev = 1.321, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else return -0.079899103651034;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0331823525569064;  // std dev = 0.480, 1,514.000 (wgt'ed) examples reached here.  /* #neg=969 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.14316160108925802;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.0031409820105876966;  // std dev = 2.695, 83.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=16 */
%   | | | else return -0.01969186153664424;  // std dev = 1.302, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.014676421667752383;  // std dev = 3.027, 99.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
%   | | | else return -0.07490344959859856;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.564825
   AUC PR    = 0.516433
   CLL	      = -0.707194
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 42.4749436378479 seconds
Total inference time: 4.488 seconds
AUC ROC: 0.564825


Dataset: 13_twitter_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:03:05
{'AUC ROC': 0.564825, 'AUC PR': 0.516433, 'CLL': -0.707194, 'Precision': [nan, 0.5], 'Recall': 0.0, 'F1': nan, 'Learning time': 42.4749436378479, 'Inference time': 4.488}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos  examples: 2270
Target test neg examples: 3954

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.1914822684328457;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.24811816884741328;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.3851926776601658;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.3851926776601658;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.48767788391726297;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.16653882456488167;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20289930723994204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.20848477447886868;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.31518052304212246;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.31518052304212246;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.3912569620992536;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.1420942428155646;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7460022840154411;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.25399771598455895;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.546002284015441;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.16413830416657968;  // std dev = 0.493, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.2046917632962252;  // std dev = 3.500, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.26072578583467215;  // std dev = 2.600, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(B, M) )
%   | | then return 0.11914890490746433;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1334874868704699;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.12955478951205684;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.18715399206068548;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.20056760106043933;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.23624775363596132;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then if ( samebib(L, M), venue(M, A) )
%   | | | then return 0.32342996356885667;  // std dev = 2.623, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return -0.1765700364311428;  // std dev = 0.141, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0.07188755709780537;  // std dev = 0.454, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6685928476187613;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3143678211835305;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.46814299923990177;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.10331080762390063;  // std dev = 0.492, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.11917924909742514;  // std dev = 3.492, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.15804658762284374;  // std dev = 2.598, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | then return 0.0862347787799619;  // std dev = 0.454, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.023806660016126916;  // std dev = 0.381, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.509853575595898;  // std dev = 0.134, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.25083847333729253;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.35831733135658933;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.08062571104290345;  // std dev = 0.492, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.09116457274650829;  // std dev = 3.492, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.11888327017516596;  // std dev = 2.598, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | then return 0.06994291324218899;  // std dev = 0.453, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.024408230135271918;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.020355951021442855;  // std dev = 0.381, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.06346083712866431;  // std dev = 0.491, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.05386685726988884;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.08300463728922249;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.08899539364117874;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.10954139854686785;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.05623587149796373;  // std dev = 0.453, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.02084688910874009;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.017364121342584624;  // std dev = 0.380, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.45922515933164576;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.2667132995371432;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.3059306985457688;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.04737663894863422;  // std dev = 0.492, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05045637868664839;  // std dev = 3.490, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.07084828730729748;  // std dev = 2.598, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | | then return 0.04490356233790243;  // std dev = 1.919, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.021464375245302116;  // std dev = 2.960, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else return 0.014781837877170741;  // std dev = 0.380, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.037298913454506366;  // std dev = 0.490, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.02912281545010639;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.049132092170703044;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.04973219460729564;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.06733497043153745;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.03566104264835138;  // std dev = 0.452, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.015261196736368724;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.012561626678953457;  // std dev = 0.380, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */


Results
   AUC ROC   = 0.575075
   AUC PR    = 0.440411
   CLL	      = -0.636687
   Precision = 0.503797 at threshold = 0.5
   Recall    = 0.087665
   F1        = 0.149343


Total learning time: 96.8544270992279 seconds
Total inference time: 7.71 seconds
AUC ROC: 0.575075


Dataset: 13_twitter_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:04:50
{'AUC ROC': 0.575075, 'AUC PR': 0.440411, 'CLL': -0.636687, 'Precision': [0.503797, 0.5], 'Recall': 0.087665, 'F1': 0.149343, 'Learning time': 96.8544270992279, 'Inference time': 7.71}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos  examples: 2467
Target test neg examples: 4522

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.7291166770349955;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(I, F), venue(I, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15083186192878065;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.14762261931003867;  // std dev = 2.796, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else return 0.051131391239862906;  // std dev = 0.395, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else if ( haswordauthor(E, C) )
%   | | then return 0.7447648631331598;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5966167149850116;  // std dev = 0.355, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.629623109416637;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.17037689058336294;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.11167103821357358;  // std dev = 0.442, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.1407704077153081;  // std dev = 0.451, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03825072160333175;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.05181004363723003;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.668165715428881;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2449182844345499;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.04651828805649443;  // std dev = 1.986, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return 0.3226813064206765;  // std dev = 13.464, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.48002947048427186;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, A) )
%   | | then return 0.06060493279716734;  // std dev = 0.385, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.12198764076334348;  // std dev = 0.451, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.12070472226116911;  // std dev = 0.450, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else return 0.03904673565045965;  // std dev = 0.395, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return -0.3248625391860014;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.4462467685131494;  // std dev = 1.947, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | else return 0.2449798536573808;  // std dev = 0.490, 783.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=460 */
%   | else return 0.42208875921884087;  // std dev = 0.286, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.5017413316984769;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15874682289399553;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07825745187099237;  // std dev = 0.441, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.10202998100795937;  // std dev = 0.450, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else return 0.03389234422535296;  // std dev = 0.395, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then return 0.18814538805952413;  // std dev = 0.488, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then return 0.23895623706488656;  // std dev = 0.396, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.34337913163109174;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41089128144527276;  // std dev = 0.122, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then return 0.07697942914517356;  // std dev = 0.438, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( haswordtitle(M, N), haswordvenue(B, N) )
%   | | | then return -0.17022333204651216;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.05455767546917806;  // std dev = 3.004, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( haswordvenue(B, P), haswordtitle(Q, P) )
%   | | | then return 0.1007264077429397;  // std dev = 4.054, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return -0.184090567159369;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.3645108210098516;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.07672610003125449;  // std dev = 2.580, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.23344553789420072;  // std dev = 1.906, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.1541828206778163;  // std dev = 0.487, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | else return 0.22960160486904915;  // std dev = 0.335, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.4707570124247654;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.18070940219551773;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.045177999094270366;  // std dev = 0.436, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0.03803253100319541;  // std dev = 0.407, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then return 0.10650573083433268;  // std dev = 0.485, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | else return 0.22055236631473285;  // std dev = 0.279, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, A) )
%   | | then return 0.0086753645949397;  // std dev = 0.329, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( author(I, G), venue(I, B) )
%   | | | then return 0.060898352131177155;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06784851305903873;  // std dev = 2.828, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.06947526813674779;  // std dev = 4.074, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | | else return -0.1719792131890185;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03369108453875155;  // std dev = 2.996, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.1875705399183764;  // std dev = 0.153, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.26098690787696444;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.031233483628210466;  // std dev = 2.580, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.20818288757938433;  // std dev = 1.877, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.08939224957919581;  // std dev = 0.487, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | else return 0.14369252751618652;  // std dev = 0.334, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then return 0.09473589394449597;  // std dev = 0.384, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.0373764222510095;  // std dev = 0.432, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.004173004358792035;  // std dev = 0.375, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | else return 0.04387232122085061;  // std dev = 0.424, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.0505054446928364;  // std dev = 0.399, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | else if ( author(F, D), venue(F, B) )
%   | | then return -0.26896453531093617;  // std dev = 0.315, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else return 0.06590443835589957;  // std dev = 0.428, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( author(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.42426784184691024;  // std dev = 1.289, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.41148118111127785;  // std dev = 0.567, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( author(K, H), venue(K, A) )
%   | | | then return -0.29238866046482115;  // std dev = 0.842, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.0848092934681899;  // std dev = 2.887, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | then return 0.07913677604166804;  // std dev = 0.484, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | | else return 0.009822704138548563;  // std dev = 0.391, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return -0.03527804280423821;  // std dev = 0.398, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | else if ( haswordtitle(F, C) )
%   | | then return 0.05150095697409237;  // std dev = 0.483, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | else return 0.12195823670482193;  // std dev = 0.338, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordvenue(A, I) )
%   | | then return -0.16230693301963667;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordauthor(J, G) )
%   | | | then return 0.11253447057005003;  // std dev = 0.771, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.05112323427084135;  // std dev = 4.043, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( haswordauthor(M, K) )
%   | | | then return 0.11760262105414762;  // std dev = 0.685, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04854643135552704;  // std dev = 4.060, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   | | else return -0.19408384413574975;  // std dev = 0.047, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.55749
   AUC PR    = 0.407451
   CLL	      = -0.706868
   Precision = 0.374392 at threshold = 0.5
   Recall    = 0.93636
   F1        = 0.534908


Total learning time: 52.57758140563965 seconds
Total inference time: 11.241 seconds
AUC ROC: 0.55749


Dataset: 13_twitter_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:05:54
{'AUC ROC': 0.55749, 'AUC PR': 0.407451, 'CLL': -0.706868, 'Precision': [0.374392, 0.5], 'Recall': 0.93636, 'F1': 0.534908, 'Learning time': 52.57758140563965, 'Inference time': 11.241}


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos  examples: 2649
Target test neg examples: 4334

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.424815601766179;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.004815601766179008;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.004815601766179008;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.45935396641210174;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3637773104801572;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.004228390109386251;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.004228390109386251;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.37391135762433364;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3332954282738762;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2965666072992053;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0037111125833978686;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0037111125833978686;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14514481334590568;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.30226819674070854;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2633171091379274;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.23320603365471806;  // std dev = 2.716, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0032558270569705674;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0032558270569705674;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.11804668707041945;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.22996069785741113;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20331196219185346;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17938010962786255;  // std dev = 2.716, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0028554031467501392;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0028554031467501392;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09457696812283496;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.18067145118658642;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15858330273438495;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13450180129931008;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.002503460836945874;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.002503460836945874;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07489163449109286;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.135667528821961;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12035636095696037;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10107912804588869;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.15191665241662;  // std dev = 2.771, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.14134399642260334;  // std dev = 0.091, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08816184098481847;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.0021943081594878503;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.05877777591804268;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.10779335676129853;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09393829948617696;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07471324759285619;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then return -0.030176912701803595;  // std dev = 0.328, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | | then return -0.07800134745978297;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0019228798175884457;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.006080117497347756;  // std dev = 2.847, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04582386394015474;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.0716307187593607;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.0815017388609381;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05586974192380997;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return -0.07257879870861196;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0016846780662751325;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.0019635200942717214;  // std dev = 0.346, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.03554750876544446;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.06593302439477855;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05659551689184199;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.041076213599861466;  // std dev = 2.718, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return -0.02019094994778181;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return -0.026520906985309997;  // std dev = 0.328, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.006860236618294749;  // std dev = 2.926, 79.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=10 */
%   | | | else return 0.001189750596829189;  // std dev = 2.850, 71.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=10 */


Results
   AUC ROC   = 0.556945
   AUC PR    = 0.4283
   CLL	      = -0.65727
   Precision = 0.637427 at threshold = 0.5
   Recall    = 0.041148
   F1        = 0.077305


Total learning time: 55.82579326629639 seconds
Total inference time: 6.771 seconds
AUC ROC: 0.556945


Dataset: 13_twitter_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:57
{'AUC ROC': 0.556945, 'AUC PR': 0.4283, 'CLL': -0.65727, 'Precision': [0.637427, 0.5], 'Recall': 0.041148, 'F1': 0.077305, 'Learning time': 55.82579326629639, 'Inference time': 6.771}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos  examples: 2246
Target test neg examples: 4478

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.5949910403626703;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.5062567560764839;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.48074388375574334;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.30665618885999163;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.4047531668618019;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.386198448632422;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.24206322397592006;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.3261448737160187;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2788572331674748;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.17062637354018512;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.17062637354018512;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.4586612187245652;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( haswordvenue(B, C) )
%   | | then return 0.10866121872456526;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(F, D), venue(F, B) )
%   | | | then return -0.11648547966105265;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.19133878127543472;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.45076648188246;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.14133878127543473;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordtitle(K, G) )
%   | | | then return 0.18192600021558156;  // std dev = 16.896, 1,167.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=669 */
%   | | | else return 0.23985506378478072;  // std dev = 2.691, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | else return 0.22409034942807493;  // std dev = 0.386, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14100522311314528;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.18581002370323105;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14993924880770418;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.2708414839194305;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.27396602326110664;  // std dev = 2.98e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.09340455412987769;  // std dev = 0.491, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.08827195957422182;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.10610078025775631;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.14216339366570652;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11133805978171796;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.22076757456515503;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.22294972738167557;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.07231496224758824;  // std dev = 0.491, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.06818515664401811;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07963193853230824;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.11317851430607649;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07947943598788883;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.1851305762483334;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.18671344248747385;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.055591049880215425;  // std dev = 0.491, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.052323076725597925;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.05975021986317726;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.08926654332270348;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05855766755336173;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.1588115990879151;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.1600008286893083;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.04252307119737291;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.039966416497323465;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04486569334787462;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.07311793838519502;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04090343375424272;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.1387263892579309;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.1396472668198248;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.03241416406476265;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.030429560144484134;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.537645
   AUC PR    = 0.348089
   CLL	      = -0.755052
   Precision = 0.35461 at threshold = 0.5
   Recall    = 0.957257
   F1        = 0.517511


Total learning time: 56.29030132293701 seconds
Total inference time: 6.392 seconds
AUC ROC: 0.537645


Dataset: 13_twitter_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:08:00
{'AUC ROC': 0.537645, 'AUC PR': 0.348089, 'CLL': -0.755052, 'Precision': [0.35461, 0.5], 'Recall': 0.957257, 'F1': 0.517511, 'Learning time': 56.29030132293701, 'Inference time': 6.392}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos  examples: 2436
Target test neg examples: 2800

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22269743008278498;  // std dev = 0.481, 1,495.000 (wgt'ed) examples reached here.  /* #neg=950 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.0168510649004878;  // std dev = 0.331, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.07353355048412775;  // std dev = 3.314, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | | else return -0.04661296966239256;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return 0.020311097261674547;  // std dev = 0.369, 111.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18294821267335035;  // std dev = 0.478, 1,539.000 (wgt'ed) examples reached here.  /* #neg=994 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.003044993478586329;  // std dev = 0.350, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.041704959077596714;  // std dev = 3.609, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.03323044143919948;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.15104011784523197;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.02479950981726704;  // std dev = 3.632, 93.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.3012864817040454;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.09674102715859081;  // std dev = 0.456, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else return 0.1592025845457178;  // std dev = 0.479, 1,478.000 (wgt'ed) examples reached here.  /* #neg=949 #pos=529 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.5777035350355574;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.1494201377007601;  // std dev = 0.009, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.029174555494137888;  // std dev = 0.314, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 4.4064891216101233E-4;  // std dev = 3.678, 106.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=16 */
%   | | | else return 0.0830058078079904;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return -0.14342949765545263;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.3489589822471054;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.07432192527834561;  // std dev = 0.453, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.0770445642248768;  // std dev = 0.459, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else return 0.13631674036282543;  // std dev = 0.480, 1,427.000 (wgt'ed) examples reached here.  /* #neg=911 #pos=516 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then if ( title(L, J), venue(L, A) )
%   | | | then return 0.39838953779692154;  // std dev = 2.683, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return -0.1517331629850231;  // std dev = 0.047, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.03552133150557016;  // std dev = 0.313, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return 0.015430918184369624;  // std dev = 0.339, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | else return -0.13029886110639038;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11327605306820755;  // std dev = 0.481, 1,503.000 (wgt'ed) examples reached here.  /* #neg=958 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.02883794456928468;  // std dev = 0.286, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.024764311847509386;  // std dev = 3.163, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | | else return -0.04102907226856504;  // std dev = 1.336, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.003798542202472281;  // std dev = 3.557, 113.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
%   | | | else return -0.11623083301012975;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08797808453735594;  // std dev = 0.480, 1,517.000 (wgt'ed) examples reached here.  /* #neg=972 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.025641219988450224;  // std dev = 0.287, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.024380840989741016;  // std dev = 3.152, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return -0.02459264840378558;  // std dev = 1.327, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.007043878836615071;  // std dev = 3.548, 110.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=18 */
%   | | | else return -0.10481358551240821;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0735342329022204;  // std dev = 0.481, 1,504.000 (wgt'ed) examples reached here.  /* #neg=959 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.48385035852117286;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.1336395489654962;  // std dev = 0.030, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.13993612870707625;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.026730537959590434;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.017949270861153777;  // std dev = 3.398, 87.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | | else return -0.03326678467471779;  // std dev = 1.336, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.09427142923322512;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.047752815408592615;  // std dev = 0.478, 1,548.000 (wgt'ed) examples reached here.  /* #neg=1,003 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.42559880198681854;  // std dev = 2.360, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | | else return -0.15060811969458804;  // std dev = 0.251, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12392418705005656;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.03349679564073297;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.10565486140776217;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.0032366886843710335;  // std dev = 1.006, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.0022079225757096143;  // std dev = 3.068, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then return 0.04798253238095619;  // std dev = 0.475, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else return -0.06280833912217736;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.05146111963753408;  // std dev = 0.482, 1,446.000 (wgt'ed) examples reached here.  /* #neg=917 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.4702005792851078;  // std dev = 1.868, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.13386392259125873;  // std dev = 0.224, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.052417899884699394;  // std dev = 0.259, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.07400798343743448;  // std dev = 0.336, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.007924165717202968;  // std dev = 3.065, 102.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
%   | | | else return -0.08742888975167079;  // std dev = 0.000306, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.5471991427089246;  // std dev = 0.330, 452.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=396 */
%   | | else return -0.2891235536932594;  // std dev = 0.145, 864.000 (wgt'ed) examples reached here.  /* #neg=848 #pos=16 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( samebib(G, H), venue(H, A) )
%   | | | then return 0.4736703274097507;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.32632967259024936;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( haswordvenue(A, C) )
%   | | | then return 0.1815443431577835;  // std dev = 7.968, 254.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=129 */
%   | | | else return 0.04295533241629411;  // std dev = 1.494, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return 0.010137286877297409;  // std dev = 0.328, 112.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=21 */
%   | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | then return 0.5925249699631251;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.08075237070438647;  // std dev = 0.000255, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.862973
   AUC PR    = 0.751675
   CLL	      = -0.570789
   Precision = 0.616162 at threshold = 0.5
   Recall    = 0.025041
   F1        = 0.048126


Total learning time: 69.60721492767334 seconds
Total inference time: 9.58 seconds
AUC ROC: 0.862973


Dataset: 13_twitter_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:09:19
{'AUC ROC': 0.862973, 'AUC PR': 0.751675, 'CLL': -0.570789, 'Precision': [0.616162, 0.5], 'Recall': 0.025041, 'F1': 0.048126, 'Learning time': 69.60721492767334, 'Inference time': 9.58}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos  examples: 2270
Target test neg examples: 3954

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.1914822684328457;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.24811816884741328;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.3851926776601658;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.3851926776601658;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.48767788391726297;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.16653882456488167;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20289930723994204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.20848477447886868;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.31518052304212246;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.31518052304212246;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.3912569620992536;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.1420942428155646;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.16640029396569495;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.17062637354018492;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.24804771389482108;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.24804771389482108;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.3005711547884894;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.11914890490746433;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.13360339271793026;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.13664585375352234;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.19020231164899937;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.19020231164899937;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.22629823971521876;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.0984134027840187;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.10551742939082928;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.10762034996184403;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.14379027326522745;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.14379027326522745;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.16984358676510128;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.08026654944252247;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.08232251291348108;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.08372807955323855;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.10803450809035726;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.10803450809035726;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.12813320688246752;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.06479591611329234;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.024408230135271918;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.024408230135271918;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.643264127386356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3567358726136441;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.44326412738635596;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.06140014753749459;  // std dev = 0.493, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.07181637161845014;  // std dev = 3.490, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.08499200024019614;  // std dev = 2.598, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | then return 0.05187916934404051;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.02084688910874009;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.02084688910874009;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.61124418884727;  // std dev = 0.133, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.37094623184089076;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.4105447777609553;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.046731157643077136;  // std dev = 0.492, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05308618647417276;  // std dev = 3.490, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.06659430327010747;  // std dev = 2.598, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(B, M) )
%   | | then return 0.04126932998424623;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.017760671541598414;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.017760671541598414;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.03732276704467551;  // std dev = 0.491, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.03519786650443076;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.04654687354225808;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.046629342462623645;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.062294811756438015;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.03266374873483021;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.015098879183171418;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.015098879183171418;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */


Results
   AUC ROC   = 0.57288
   AUC PR    = 0.436625
   CLL	      = -0.640297
   Precision = 0.755869 at threshold = 0.5
   Recall    = 0.070925
   F1        = 0.129682


Total learning time: 89.67231154441833 seconds
Total inference time: 7.137 seconds
AUC ROC: 0.57288


Dataset: 13_twitter_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:10:56
{'AUC ROC': 0.57288, 'AUC PR': 0.436625, 'CLL': -0.640297, 'Precision': [0.755869, 0.5], 'Recall': 0.070925, 'F1': 0.129682, 'Learning time': 89.67231154441833, 'Inference time': 7.137}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos  examples: 2467
Target test neg examples: 4522

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.7291166770349955;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, B) )
%   | | then if ( samebib(G, H), venue(H, A) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.13087620782678508;  // std dev = 0.445, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17522210583121967;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04458961306561406;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.6157326050686436;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.6397480032138977;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15715819152444083;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(I, F), venue(I, B) )
%   | | | then return -0.15223232334423262;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1276404832756815;  // std dev = 2.890, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.03800959748909183;  // std dev = 0.806, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.15404125523550588;  // std dev = 2.947, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else return 0.044790460982400505;  // std dev = 0.395, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6805851247859591;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.2449182844345499;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.04746202633921468;  // std dev = 1.980, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.3226813064206765;  // std dev = 0.491, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | else return 0.47549952672721435;  // std dev = 0.343, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return 0.11297091028193688;  // std dev = 0.443, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then if ( haswordtitle(M, K) )
%   | | | then return 0.024901387683108695;  // std dev = 0.813, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.132137331142676;  // std dev = 2.934, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else return 0.03904700118037833;  // std dev = 0.395, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then return 0.24528990666542214;  // std dev = 0.490, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | else return 0.42289861754592145;  // std dev = 0.287, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.5115437499106157;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1511591322757065;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07635032631955165;  // std dev = 0.440, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.15763477828198338;  // std dev = 1.232, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.08992419029011516;  // std dev = 2.782, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02671935016841127;  // std dev = 2.990, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.04158750228343113;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.44903606758792647;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.12237294841814172;  // std dev = 2.581, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.18504017324300412;  // std dev = 1.906, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.15767810343418012;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.08972099213358319;  // std dev = 1.910, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.21318343022930816;  // std dev = 0.484, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, B) )
%   | | then return 0.131943897382166;  // std dev = 0.389, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.06404431428491006;  // std dev = 0.440, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0.04526653878076109;  // std dev = 0.412, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14033714332168;  // std dev = 0.487, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.2617225097905588;  // std dev = 0.330, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.47229695691132567;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.17385736297834764;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.04898651830068142;  // std dev = 0.435, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.17359458698675923;  // std dev = 0.043, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.09199216423059109;  // std dev = 4.049, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04679792635607542;  // std dev = 3.006, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.19415447458610055;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.3058728246483836;  // std dev = 0.077, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.05821837827892572;  // std dev = 2.580, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.1804752234862154;  // std dev = 1.876, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.05508321771216087;  // std dev = 2.740, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return -0.17230512324945776;  // std dev = 1.562, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.12572207047360823;  // std dev = 0.484, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, B) )
%   | | then return 0.09445648257694292;  // std dev = 0.382, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.04432595611012775;  // std dev = 0.432, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0.030574073347920144;  // std dev = 0.407, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.0777692123608738;  // std dev = 0.484, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.19745225792561344;  // std dev = 0.334, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.35328631095235136;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15461110040077233;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(I, F), venue(I, B) )
%   | | | then return -0.17907207263567826;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.04981040958195557;  // std dev = 2.854, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return -0.1543819006667471;  // std dev = 0.042, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.07056352797117167;  // std dev = 4.045, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | else return -6.822429421019687E-5;  // std dev = 0.381, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then return 0.05910498507496633;  // std dev = 0.483, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then return 0.11381466940878507;  // std dev = 0.405, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.21258355518973449;  // std dev = 0.191, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2550137278426985;  // std dev = 0.231, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then if ( title(M, K), venue(M, B) )
%   | | | then return 0.6331329597849368;  // std dev = 1.808, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return -0.1963991187060348;  // std dev = 0.304, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.15892479675308713;  // std dev = 0.119, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | then return 0.05490232655666361;  // std dev = 0.432, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | | else return -0.2006020904234318;  // std dev = 0.176, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then if ( author(F, D), venue(F, A) )
%   | | then return -0.5123328522025998;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.18932801377568087;  // std dev = 0.377, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | else return -0.038264518389838215;  // std dev = 0.371, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then if ( author(J, H), title(J, I) )
%   | | | then return 0.24332462673709704;  // std dev = 1.855, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.3824494809021134;  // std dev = 0.391, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( author(K, H), venue(K, A) )
%   | | | then return -0.2525097348974945;  // std dev = 1.335, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.08147534720368785;  // std dev = 2.984, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | then return 0.05972195252249848;  // std dev = 0.484, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | | else return 0.005291201498754424;  // std dev = 0.366, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */


Results
   AUC ROC   = 0.555926
   AUC PR    = 0.403907
   CLL	      = -0.704266
   Precision = 0.375244 at threshold = 0.5
   Recall    = 0.933928
   F1        = 0.535378


Total learning time: 45.88482666015625 seconds
Total inference time: 5.72 seconds
AUC ROC: 0.555926


Dataset: 13_twitter_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:11:48
{'AUC ROC': 0.555926, 'AUC PR': 0.403907, 'CLL': -0.704266, 'Precision': [0.375244, 0.5], 'Recall': 0.933928, 'F1': 0.535378, 'Learning time': 45.88482666015625, 'Inference time': 5.72}


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos  examples: 2649
Target test neg examples: 4334

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.424815601766179;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.004815601766179008;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.004815601766179008;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.45935396641210174;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3637773104801572;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.1488242116562869;  // std dev = 2.789, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.14162905569876189;  // std dev = 0.023, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.12787230110394693;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.004228390109386251;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.37391135762433364;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3332954282738762;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2965666072992053;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return -0.12205676751791568;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0037111125833978686;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.004507924439813011;  // std dev = 0.346, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14514481334590568;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.30226819674070854;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2633171091379274;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.23320603365471818;  // std dev = 2.716, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return -0.10959153340338802;  // std dev = 0.046, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0032558270569705674;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.00395871751953134;  // std dev = 0.346, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.11804668707041945;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.22996069785741113;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20331196219185346;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17938010962786263;  // std dev = 2.716, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then return -0.02879733809916237;  // std dev = 0.328, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.002351125544549036;  // std dev = 3.069, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.11287321682174857;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.007328377203989888;  // std dev = 2.848, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09457696812283496;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.18067145118658642;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15858330273438495;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13450180129931008;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.13262420994524807;  // std dev = 2.772, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.12533578208438062;  // std dev = 0.064, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.09631135146444736;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.0033187605416033356;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07489163449109286;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.12035636095696037;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.135667528821961;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10107912804588884;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.09318110726231028;  // std dev = 0.064, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0017416567668898971;  // std dev = 0.340, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.002910744014674799;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.05877777591804268;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.10779335676129853;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09393829948617687;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07471324759285612;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.11508281657144007;  // std dev = 2.767, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.11212127769250517;  // std dev = 0.067, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.0824316993339972;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.0025520950079659325;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04582386394015474;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.0716307187593607;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08134499567600446;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05588541624230333;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.08562690430888038;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -6.128007115647517E-4;  // std dev = 0.335, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0022370252104252733;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then return -0.14473418137539884;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.06609793508479966;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.03661174542507164;  // std dev = 0.486, 847.000 (wgt'ed) examples reached here.  /* #neg=524 #pos=323 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.056591627844483613;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04106026532619221;  // std dev = 2.718, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return -0.006105023001260373;  // std dev = 0.325, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | else return -0.0717658247433122;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.001960381789524455;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.557313
   AUC PR    = 0.428347
   CLL	      = -0.654352
   Precision = 0.637427 at threshold = 0.5
   Recall    = 0.041148
   F1        = 0.077305


Total learning time: 62.879169940948486 seconds
Total inference time: 7.015 seconds
AUC ROC: 0.557313


Dataset: 13_twitter_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:12:58
{'AUC ROC': 0.557313, 'AUC PR': 0.428347, 'CLL': -0.654352, 'Precision': [0.637427, 0.5], 'Recall': 0.041148, 'F1': 0.077305, 'Learning time': 62.879169940948486, 'Inference time': 7.015}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos  examples: 2246
Target test neg examples: 4478

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.5949910403626703;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.5062567560764839;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.48074388375574334;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.5791684237702857;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( haswordvenue(A, C) )
%   | | then return 0.22916842377028543;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(F, D), venue(F, A) )
%   | | | then return -0.008145345695425854;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07083157622971455;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.3045453081923796;  // std dev = 0.494, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.4047531668618019;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.42464571865829975;  // std dev = 1.908, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.4317030979309822;  // std dev = 0.348, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.242027637936988;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.3098169854894562;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2877826293809521;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.44960468245709945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.44785888933339724;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.17062637354018512;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.1316730160126654;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.18614669808889744;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.23288770051702257;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21657984029357435;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.3425676419265825;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.3413723950665916;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13664585375352212;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.10354034558269198;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1410479916173633;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.19155569148270205;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1440244614724635;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.27003591012705197;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.2692252801573361;  // std dev = 2.58e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.10762034996184425;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.08048520911847132;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.3105861549032635;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( haswordvenue(A, C) )
%   | | then return 0.0478572595082718;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(F, D), venue(F, A) )
%   | | | then return -0.11505396857084772;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.17941856452848143;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.10450386091515732;  // std dev = 0.494, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.14461627028325488;  // std dev = 1.915, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.13422935280538895;  // std dev = 1.891, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.1678440187945509;  // std dev = 0.319, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else return 0.08372807955323866;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.23495492583593305;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( haswordvenue(A, C) )
%   | | then return 0.035977612038309945;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(F, D), venue(F, A) )
%   | | | then return -0.08910043831127214;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.13817550198772904;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.3451392521206909;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.24696601103720395;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordtitle(K, G) )
%   | | | then return 0.07629877045379045;  // std dev = 16.896, 1,167.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=669 */
%   | | | else return 0.10719623102151934;  // std dev = 2.693, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | else return 0.11434620681149249;  // std dev = 0.382, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.0598561596652438;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.08549717707578389;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.052451197719125826;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.18154692799324146;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.17509027827031837;  // std dev = 2.58e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.03771408150139007;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.00169521715530294;  // std dev = 0.485, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04497515857248214;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.06953097589354502;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03710758507616595;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.1561116408351646;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.15122022853694722;  // std dev = 1.67e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.028698775356419154;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.0012850639932684346;  // std dev = 0.485, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.535447
   AUC PR    = 0.342617
   CLL	      = -0.755479
   Precision = 0.353813 at threshold = 0.5
   Recall    = 0.956367
   F1        = 0.516532


Total learning time: 58.79824185371399 seconds
Total inference time: 5.933 seconds
AUC ROC: 0.535447


Dataset: 13_twitter_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:14:03
{'AUC ROC': 0.535447, 'AUC PR': 0.342617, 'CLL': -0.755479, 'Precision': [0.353813, 0.5], 'Recall': 0.956367, 'F1': 0.516532, 'Learning time': 58.79824185371399, 'Inference time': 5.933}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos  examples: 2436
Target test neg examples: 2800

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2113569713924432;  // std dev = 0.478, 1,543.000 (wgt'ed) examples reached here.  /* #neg=998 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return -0.00851773156715447;  // std dev = 0.340, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then return -0.0168510649004878;  // std dev = 0.331, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.03206197857777325;  // std dev = 3.636, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | | else return 0.024815601766179047;  // std dev = 3.651, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.25899652961042474;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.13994891056280537;  // std dev = 0.462, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | else return 0.18980010103899755;  // std dev = 0.480, 1,472.000 (wgt'ed) examples reached here.  /* #neg=943 #pos=529 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.582290164736201;  // std dev = 2.088, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.1448495447794498;  // std dev = 0.017, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.050560848323373805;  // std dev = 0.294, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.033638087570851107;  // std dev = 3.626, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return -0.05398969156517002;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.14489878247426097;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16115041073675998;  // std dev = 0.480, 1,518.000 (wgt'ed) examples reached here.  /* #neg=973 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5291028393280693;  // std dev = 1.951, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.1277271973297792;  // std dev = 0.016, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.13961409419737453;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.014232059648779308;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.011603213229892632;  // std dev = 0.340, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return 0.0118477919774474;  // std dev = 0.365, 101.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1359838181837839;  // std dev = 0.480, 1,511.000 (wgt'ed) examples reached here.  /* #neg=966 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.3500415099483243;  // std dev = 2.830, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return -0.1490841896894165;  // std dev = 0.021, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13975500541063404;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.06024499458936598;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 2.1643424732333805E-4;  // std dev = 0.305, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return 0.008668932307408174;  // std dev = 0.320, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11553029953069668;  // std dev = 0.481, 1,494.000 (wgt'ed) examples reached here.  /* #neg=949 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.38555221083663777;  // std dev = 2.088, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.1160125972408587;  // std dev = 0.031, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0.07983444456632251;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.0015308690201462233;  // std dev = 3.497, 104.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=16 */
%   | | | else return 0.052843737071554694;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.1290435690547383;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08898493504430864;  // std dev = 0.480, 1,512.000 (wgt'ed) examples reached here.  /* #neg=967 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6000775838888444;  // std dev = 1.791, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.13990213980202137;  // std dev = 0.186, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12361732086149277;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.011055481750363111;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.028291759328413855;  // std dev = 2.732, 106.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=16 */
%   | | | else return 0.029400516411703877;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.11496909156957501;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07686406397856266;  // std dev = 0.482, 1,488.000 (wgt'ed) examples reached here.  /* #neg=943 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4919581134486516;  // std dev = 1.750, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.12531254481894274;  // std dev = 0.176, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.11083605627659192;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.014188223882503369;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.008091764204562368;  // std dev = 0.304, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.016894595859910877;  // std dev = 0.282, 102.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return 0.022754653279271335;  // std dev = 0.465, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | else return 0.050535214360187576;  // std dev = 0.479, 1,485.000 (wgt'ed) examples reached here.  /* #neg=956 #pos=529 */
%   else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | then if ( title(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.3042670784137273;  // std dev = 2.091, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.10045439037740436;  // std dev = 0.022, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0.17929303940904825;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.01177055460015055;  // std dev = 2.505, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.05784605433279351;  // std dev = 1.333, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else return -0.10186630051425719;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04008281383453761;  // std dev = 0.479, 1,530.000 (wgt'ed) examples reached here.  /* #neg=985 #pos=545 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then return 0.05125823161539902;  // std dev = 0.284, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return -0.0218782120368093;  // std dev = 2.554, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | | | else return 0.07112152774952459;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.007814442828140962;  // std dev = 2.748, 100.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */
%   | | | else return -0.09429034275993822;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03321783071284788;  // std dev = 0.479, 1,522.000 (wgt'ed) examples reached here.  /* #neg=977 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.27143308402661975;  // std dev = 2.173, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.10913156821529985;  // std dev = 0.151, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return 0.10405494578811325;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.024433391785451848;  // std dev = 2.603, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | | else return -0.041380341214907086;  // std dev = 1.297, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else return -0.08742570348532648;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.564376
   AUC PR    = 0.511787
   CLL	      = -0.705651
   Precision = 0.659091 at threshold = 0.5
   Recall    = 0.02381
   F1        = 0.045959


Total learning time: 42.336915493011475 seconds
Total inference time: 5.015 seconds
AUC ROC: 0.564376


Dataset: 13_twitter_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:14:51
{'AUC ROC': 0.564376, 'AUC PR': 0.511787, 'CLL': -0.705651, 'Precision': [0.659091, 0.5], 'Recall': 0.02381, 'F1': 0.045959, 'Learning time': 42.336915493011475, 'Inference time': 5.015}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos  examples: 2270
Target test neg examples: 3954

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.1914822684328457;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.24811816884741328;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.3851926776601658;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.3851926776601658;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.48767788391726297;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.16653882456488167;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20289930723994204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.20848477447886868;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.31518052304212246;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.31518052304212246;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.3912569620992536;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.1420942428155646;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.16640029396569495;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.17062637354018492;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.24804771389482108;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.24804771389482108;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.3005711547884894;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.11914890490746433;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7132053827676746;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2867946172323253;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.5132053827676747;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.131341402918815;  // std dev = 0.493, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.1602106952275325;  // std dev = 3.494, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.19891512187188015;  // std dev = 2.599, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(B, M) )
%   | | then return 0.0984134027840187;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.10541434031987175;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.10246307220535986;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.14163545619459858;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.15119201431602758;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.17664313168463983;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.08026654944252247;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.08225472376743981;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.07955753113999157;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.10639675506619288;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.11367293071724269;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.1331350168403033;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.06479591611329234;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.024408230135271918;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.024408230135271918;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.06362123873371814;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.0612717998300316;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.0798043488611261;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.085270684716156;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.10112116534072403;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.05187916934404051;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.02084688910874009;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.02084688910874009;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04890210787741369;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.046920611825756985;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.059891317083841364;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06397886100952203;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.07742717832062947;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.04126932998424623;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.017760671541598414;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.017760671541598414;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.0374223263014984;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.035787875884971454;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.045008206178553535;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.048063395929009566;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.05971712734840816;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.03266374873483021;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.015098879183171418;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.015098879183171418;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */


Results
   AUC ROC   = 0.569277
   AUC PR    = 0.430631
   CLL	      = -0.641282
   Precision = 0.721212 at threshold = 0.5
   Recall    = 0.052423
   F1        = 0.097741


Total learning time: 90.82695984840393 seconds
Total inference time: 7.082 seconds
AUC ROC: 0.569277


Dataset: 13_twitter_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:16:29
{'AUC ROC': 0.569277, 'AUC PR': 0.430631, 'CLL': -0.641282, 'Precision': [0.721212, 0.5], 'Recall': 0.052423, 'F1': 0.097741, 'Learning time': 90.82695984840393, 'Inference time': 7.082}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos  examples: 2467
Target test neg examples: 4522

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.7291166770349955;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, B) )
%   | | then if ( samebib(G, H), venue(H, A) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(I, F), venue(I, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15083186192878065;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17522210583121967;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else return 0.051131391239862906;  // std dev = 0.395, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.6157326050686436;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.6392119282680097;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15769426647032894;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.10912768446848496;  // std dev = 0.441, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.15036186526718273;  // std dev = 0.017, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0739802392357881;  // std dev = 3.026, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.1335715660378899;  // std dev = 4.096, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return -0.15411334428389578;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.6805851247859591;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.2449182844345499;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.047462026339214675;  // std dev = 1.980, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.2648613043775699;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.03762993035031233;  // std dev = 1.967, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.3407976691556591;  // std dev = 0.485, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | then if ( author(L, K), venue(L, A) )
%   | | then return 0.19790656117758298;  // std dev = 0.440, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.0936683156805287;  // std dev = 0.441, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0.06232967414710309;  // std dev = 0.411, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.5734270518416389;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24118656261481328;  // std dev = 0.490, 800.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=466 */
%   | else return 0.4187148080064091;  // std dev = 0.330, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.5223910325739805;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14578126129326888;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(J, G), venue(J, A) )
%   | | | then return -0.1439295874644154;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10764275905862752;  // std dev = 2.858, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.10380696262075276;  // std dev = 0.450, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else return 0.0271953994079354;  // std dev = 0.393, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.40461348267652736;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.13661510195617912;  // std dev = 2.583, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.10302951742664553;  // std dev = 1.931, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.15864514588175652;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.08880204869997903;  // std dev = 1.911, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.2103852291787154;  // std dev = 0.485, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, A) )
%   | | then return 0.05740684440669099;  // std dev = 0.319, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.09302179093136298;  // std dev = 0.443, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else return 0.041624245978081134;  // std dev = 0.411, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1392676349657316;  // std dev = 0.486, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.2849473236583763;  // std dev = 0.332, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.4590459302890591;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.18564911676415483;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(I, F), venue(I, B) )
%   | | | then return -0.20703459274351385;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07345599399755566;  // std dev = 2.860, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return -0.002163890243920419;  // std dev = 0.680, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.09443701884484833;  // std dev = 2.874, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else return 0.017468324024682718;  // std dev = 0.392, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.27415309086253375;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(F, C) )
%   | | | then return -0.051350574546364096;  // std dev = 3.070, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.2719675919177538;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.0568109077836956;  // std dev = 2.739, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return -0.17283865019797748;  // std dev = 1.554, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.12356776446912354;  // std dev = 0.484, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | then if ( author(L, K), venue(L, B) )
%   | | then return 0.11361300531111859;  // std dev = 0.385, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.04629470373667362;  // std dev = 0.428, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0.028981805828197305;  // std dev = 0.408, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then return 0.07829289406473998;  // std dev = 0.483, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then return 0.16533177774232904;  // std dev = 0.403, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.24629390605145296;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.31328709840468816;  // std dev = 0.217, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return -0.16828276835692035;  // std dev = 0.111, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.07355318753433661;  // std dev = 0.434, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then if ( haswordauthor(P, M) )
%   | | | then return 0.12257657693152653;  // std dev = 0.776, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.0596635608062459;  // std dev = 4.068, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   | | else return -0.1981603377302602;  // std dev = 0.158, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then return 0.05896714150973195;  // std dev = 0.483, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | else return 0.18742709414120706;  // std dev = 0.289, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.32632741826650136;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.16699551132081658;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.03479424402893574;  // std dev = 0.423, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return -0.14389797754690906;  // std dev = 0.098, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.06569905481893841;  // std dev = 4.046, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.018004060583990327;  // std dev = 2.992, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.16146056281463672;  // std dev = 0.124, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then if ( author(F, D), venue(F, A) )
%   | | then return -0.4427322906266205;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.18844300605524117;  // std dev = 0.381, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | else if ( author(G, D), venue(G, B) )
%   | | then return -0.21528438130888294;  // std dev = 0.305, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( haswordvenue(A, C) )
%   | | | then return 0.11773693410590609;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0702804974503644;  // std dev = 3.056, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordtitle(I, H) )
%   | | then return 0.05027811277341497;  // std dev = 0.487, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | else return 0.11507702215166321;  // std dev = 0.337, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then return 0.029477124612971806;  // std dev = 0.418, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | else return -0.010217808365326125;  // std dev = 0.374, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */


Results
   AUC ROC   = 0.554572
   AUC PR    = 0.403319
   CLL	      = -0.707755
   Precision = 0.375457 at threshold = 0.5
   Recall    = 0.916498
   F1        = 0.532689


Total learning time: 47.42574620246887 seconds
Total inference time: 6.122 seconds
AUC ROC: 0.554572


Dataset: 13_twitter_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:17:23
{'AUC ROC': 0.554572, 'AUC PR': 0.403319, 'CLL': -0.707755, 'Precision': [0.375457, 0.5], 'Recall': 0.916498, 'F1': 0.532689, 'Learning time': 47.42574620246887, 'Inference time': 6.122}


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos  examples: 2649
Target test neg examples: 4334

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.424815601766179;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.004815601766179008;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.004815601766179008;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.3982164798305049;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3678678148031607;  // std dev = 2.617, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.004228390109386251;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.004228390109386251;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.39248002769657764;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.32650617096328266;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.29589687611026966;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0037111125833978686;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0037111125833978686;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14514481334590568;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.3080087264940268;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2571145088587262;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.23371934431269045;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0032558270569705674;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0032558270569705674;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.11804668707041945;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.2345816602623693;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20334939718668626;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17892619731863899;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0028554031467501392;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0028554031467501392;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09457696812283496;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.19737437220026807;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15340081888071114;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13368200695844829;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.002503460836945874;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.002503460836945874;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07489163449109286;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.14821811925064862;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12059066241851749;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09975576820768832;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.15191665241662;  // std dev = 2.771, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.14134399642260334;  // std dev = 0.091, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08816184098481847;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.0021943081594878503;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.05877777591804268;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.10910364439347504;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09045580803198905;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0751286565757981;  // std dev = 2.716, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then return -0.030176912701803595;  // std dev = 0.328, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | | then return -0.07800134745978297;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0019228798175884457;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.006080117497347758;  // std dev = 2.847, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then return -0.13445782620068708;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.08244766471043852;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.04688810059978192;  // std dev = 0.486, 847.000 (wgt'ed) examples reached here.  /* #neg=524 #pos=323 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07156466490714344;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05575331983975604;  // std dev = 2.716, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then return -0.0016731716725231732;  // std dev = 0.343, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | else return -0.08724871367583657;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return 0.001963520094271752;  // std dev = 0.346, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.03554035108634858;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.07481677882327605;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05403253352586459;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04058527990451055;  // std dev = 2.718, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.06951896918099669;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0017209652909400005;  // std dev = 0.346, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0020289897710250074;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.55687
   AUC PR    = 0.428233
   CLL	      = -0.657668
   Precision = 0.637427 at threshold = 0.5
   Recall    = 0.041148
   F1        = 0.077305


Total learning time: 60.2162709236145 seconds
Total inference time: 6.836 seconds
AUC ROC: 0.55687


Dataset: 13_twitter_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:18:30
{'AUC ROC': 0.55687, 'AUC PR': 0.428233, 'CLL': -0.657668, 'Precision': [0.637427, 0.5], 'Recall': 0.041148, 'F1': 0.077305, 'Learning time': 60.2162709236145, 'Inference time': 6.836}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos  examples: 2246
Target test neg examples: 4478

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.5949910403626703;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.5062567560764839;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.48074388375574334;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.30665618885999163;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.4047531668618019;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.386198448632422;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.24206322397592006;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.3261448737160187;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2788572331674748;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.17062637354018512;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.17062637354018512;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.4586612187245652;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.10866121872456526;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.14133878127543473;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.18403810314669028;  // std dev = 0.494, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.24558668125641064;  // std dev = 1.914, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.23490503051382786;  // std dev = 1.891, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13664585375352212;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.13664585375352212;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.4106434583517543;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( haswordvenue(A, C) )
%   | | then return 0.08249570247950498;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(F, D), venue(F, A) )
%   | | | then return -0.15719386217852044;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.23594145670149916;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.13886918675583182;  // std dev = 0.493, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.1843926491048414;  // std dev = 1.915, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.17858400017571843;  // std dev = 1.894, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.21003275240803626;  // std dev = 0.318, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else return 0.10762034996184425;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.10610033115126043;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.1369486899938656;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11029848809583002;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.2379427838492716;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.21733803683340533;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.08372807955323866;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.06599748736808053;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.2822897042820042;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.036045096584915934;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1614839053667953;  // std dev = 1.221, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.2769915101507624;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.16628142221273154;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordtitle(J, C) )
%   | | | then return 0.07643488092903596;  // std dev = 16.896, 1,167.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=669 */
%   | | | else return 0.10739165731807317;  // std dev = 2.692, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then return 0.13402264585016022;  // std dev = 0.323, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else return 0.05063991213514653;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.05979953070735119;  // std dev = 0.491, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.08768391614278039;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0505216153925161;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.18103872510867325;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.1634734523269929;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.03868633160879524;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.03301942933647803;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04493055090844257;  // std dev = 0.491, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.06798815099336272;  // std dev = 0.439, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03920190657192878;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.15572790227244826;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.1423287795565269;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.029463862622558148;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.025098194489952128;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.537303
   AUC PR    = 0.344282
   CLL	      = -0.755343
   Precision = 0.35429 at threshold = 0.5
   Recall    = 0.955922
   F1        = 0.516976


Total learning time: 59.356762409210205 seconds
Total inference time: 6.654 seconds
AUC ROC: 0.537303


Dataset: 13_twitter_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:19:36
{'AUC ROC': 0.537303, 'AUC PR': 0.344282, 'CLL': -0.755343, 'Precision': [0.35429, 0.5], 'Recall': 0.955922, 'F1': 0.516976, 'Learning time': 59.356762409210205, 'Inference time': 6.654}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos  examples: 2436
Target test neg examples: 2800

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then return 0.24276431971489698;  // std dev = 0.487, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return 0.1604745164948612;  // std dev = 0.459, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else return 0.21352083592595367;  // std dev = 0.479, 1,452.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=516 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.6200536970042743;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.04661296966239256;  // std dev = 0.294, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.027960255854229364;  // std dev = 0.375, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.588439182848671;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15928966651712118;  // std dev = 0.471, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | else return 0.17928778725516964;  // std dev = 0.477, 1,516.000 (wgt'ed) examples reached here.  /* #neg=987 #pos=529 */
%   else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | then return -0.016568060511143838;  // std dev = 0.329, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.016680642626430115;  // std dev = 0.308, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021377816467195592;  // std dev = 3.651, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | | else return 0.006414378179480971;  // std dev = 3.376, 101.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then return 0.1465674718046748;  // std dev = 0.470, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else return 0.010133559235604557;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.15951305819648168;  // std dev = 0.479, 1,485.000 (wgt'ed) examples reached here.  /* #neg=956 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.6525082942980014;  // std dev = 1.790, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.14713412543314083;  // std dev = 0.015, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.05272563381695582;  // std dev = 0.294, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.016178542591439013;  // std dev = 3.293, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | | else return -0.031764649309266216;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else return -0.12552209003440024;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D), haswordtitle(F, C) )
%   | | then return 0.36137596208238243;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.09161436778037056;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06472241382471153;  // std dev = 3.067, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else return 0.15070501813692766;  // std dev = 0.484, 1,415.000 (wgt'ed) examples reached here.  /* #neg=886 #pos=529 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( samebib(J, K), venue(K, A) )
%   | | | then return 0.44617910466903726;  // std dev = 2.209, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.12948225368718047;  // std dev = 0.014, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.05810586603148388;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return -0.12245502432516146;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0024825332170431594;  // std dev = 0.326, 121.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10688524036430126;  // std dev = 0.479, 1,528.000 (wgt'ed) examples reached here.  /* #neg=983 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6506552858855872;  // std dev = 1.334, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.1263861774144073;  // std dev = 0.029, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.13302814700152318;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.06697185299847684;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.010525151333287144;  // std dev = 2.889, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | | else return -0.05452907576172466;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.11224345744765869;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.2405732299511152;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.10016339124879747;  // std dev = 0.474, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else return 0.07730894512507913;  // std dev = 0.476, 1,519.000 (wgt'ed) examples reached here.  /* #neg=990 #pos=529 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then return -0.0192019481001484;  // std dev = 0.249, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.015934331201329116;  // std dev = 2.887, 99.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
%   | | | else return 0.08127851976521584;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11014035191223298;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.010041577890440193;  // std dev = 3.080, 103.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0689117606259371;  // std dev = 0.478, 1,535.000 (wgt'ed) examples reached here.  /* #neg=990 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5474052910296917;  // std dev = 1.335, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.11488279282068861;  // std dev = 0.028, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1271868671644482;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.07281313283555181;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.01798715901057136;  // std dev = 2.899, 104.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=16 */
%   | | | else return 0.030743304978747495;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.09766028436010807;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.19666084616451635;  // std dev = 0.998, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.014603441897684321;  // std dev = 0.453, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else return 0.06255110345727478;  // std dev = 0.481, 1,456.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=529 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.395203011747308;  // std dev = 1.951, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.11027903675804994;  // std dev = 0.015, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( title(K, H), venue(K, B) )
%   | | | then return -0.11492471867735529;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.044939818691382194;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return -0.01753813736097316;  // std dev = 0.281, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.025925732151694685;  // std dev = 0.263, 108.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.12039053810209122;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.06490339681546779;  // std dev = 0.474, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return -0.013705720585713921;  // std dev = 0.459, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else return 0.05140282027394801;  // std dev = 0.482, 1,412.000 (wgt'ed) examples reached here.  /* #neg=896 #pos=516 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then return 0.010307943452537919;  // std dev = 0.269, 81.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
%   | | else return -0.04114531298080773;  // std dev = 0.274, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, A) )
%   | | | then return -0.004166851870347192;  // std dev = 2.554, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | | | else return -0.04385043988172202;  // std dev = 1.321, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.0903546462371635;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.09092431191553214;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.003996938644354561;  // std dev = 0.465, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | else return 0.04077883734251709;  // std dev = 0.481, 1,449.000 (wgt'ed) examples reached here.  /* #neg=920 #pos=529 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then return -0.04384929650293307;  // std dev = 0.224, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.018675014424737006;  // std dev = 2.532, 98.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
%   | | | else return 0.03884100249931154;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.018714265438798415;  // std dev = 0.272, 103.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */


Results
   AUC ROC   = 0.564371
   AUC PR    = 0.514101
   CLL	      = -0.704953
   Precision = 0.697674 at threshold = 0.5
   Recall    = 0.012315
   F1        = 0.024203


Total learning time: 51.4983549118042 seconds
Total inference time: 5.465 seconds
AUC ROC: 0.564371


Dataset: 13_twitter_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:20:33
{'AUC ROC': 0.564371, 'AUC PR': 0.514101, 'CLL': -0.704953, 'Precision': [0.697674, 0.5], 'Recall': 0.012315, 'F1': 0.024203, 'Learning time': 51.4983549118042, 'Inference time': 5.465}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos  examples: 2270
Target test neg examples: 3954

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, B) )
%   | | then if ( samebib(L, M), venue(M, A) )
%   | | | then return 0.35814893509951234;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0.15814893509951225;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.24811816884741328;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.3851926776601658;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.3851926776601658;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.48767788391726297;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.17487895797485528;  // std dev = 0.459, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.045167904687026986;  // std dev = 0.383, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20289930723994204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.20848477447886868;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.31518052304212246;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.31518052304212246;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.3912569620992536;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.1502594469738981;  // std dev = 0.457, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.039214416516084004;  // std dev = 0.382, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.16640029396569495;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.17062637354018492;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.24804771389482108;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.24804771389482108;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.3005711547884894;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.12682935666826375;  // std dev = 0.456, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.03389801444511922;  // std dev = 0.382, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7132053827676746;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2867946172323253;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.5132053827676747;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.131341402918815;  // std dev = 0.493, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.1602106952275325;  // std dev = 3.494, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.1989151218718801;  // std dev = 2.599, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | then return 0.10539138899679801;  // std dev = 0.455, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.02919070541031338;  // std dev = 0.381, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.10541434031987185;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.10246307220535986;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.14163545619459858;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.15119201431602758;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.17664313168463983;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.08642521547040476;  // std dev = 0.454, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.025053475591738917;  // std dev = 0.381, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.08225472376743981;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.07955753113999157;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.10639675506619288;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.11367293071724269;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.1331350168403033;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.07010527544417881;  // std dev = 0.453, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.024408230135271918;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.021440557109547283;  // std dev = 0.381, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), venue(E, A) )
%   | then if ( samebib(E, F), venue(F, B) )
%   | | then return 0.6261609564285082;  // std dev = 0.132, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.33404969992289313;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.42552571653106863;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.061498287240697225;  // std dev = 0.492, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.06942612140371324;  // std dev = 3.490, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.08909666279794834;  // std dev = 2.598, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | | then return 0.05637181139197765;  // std dev = 1.922, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.02455059281244379;  // std dev = 2.960, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else return 0.018302921243106892;  // std dev = 0.381, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( author(E, D), venue(E, A) )
%   | then return 0.1043527716335926;  // std dev = 0.373, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else return 0.32248830493961106;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.1040000309301066;  // std dev = 1.434, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.28708933655581337;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(J, F) )
%   | | | then return 0.04615891083474215;  // std dev = 19.534, 1,570.000 (wgt'ed) examples reached here.  /* #neg=916 #pos=654 */
%   | | | else return 0.058004736610780865;  // std dev = 4.351, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | | then return 0.04501579779220917;  // std dev = 1.920, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.020911769387996954;  // std dev = 2.960, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else return 0.015590964793219855;  // std dev = 0.380, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.037386525995698736;  // std dev = 0.491, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.031190075316813472;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.0480502419731278;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.04859653790570126;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.06686168924979109;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then return 0.03575271866281918;  // std dev = 0.452, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.014756545567131059;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.013256449969921468;  // std dev = 0.380, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */


Results
   AUC ROC   = 0.57282
   AUC PR    = 0.429305
   CLL	      = -0.639163
   Precision = 0.503797 at threshold = 0.5
   Recall    = 0.087665
   F1        = 0.149343


Total learning time: 90.16102075576782 seconds
Total inference time: 7.223 seconds
AUC ROC: 0.57282


Dataset: 13_twitter_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:22:11
{'AUC ROC': 0.57282, 'AUC PR': 0.429305, 'CLL': -0.639163, 'Precision': [0.503797, 0.5], 'Recall': 0.087665, 'F1': 0.149343, 'Learning time': 90.16102075576782, 'Inference time': 7.223}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos  examples: 2467
Target test neg examples: 4522

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.7291166770349955;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, B) )
%   | | then if ( samebib(G, H), venue(H, A) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.13087620782678508;  // std dev = 0.445, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17522210583121967;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04458961306561406;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.7952322657799766;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3777322657799845;  // std dev = 0.493, 800.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=466 */
%   | else return 0.6157326050686436;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, A) )
%   | | then if ( samebib(H, I), venue(I, B) )
%   | | | then return 0.6397480032138977;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15715819152444083;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(J, G), venue(J, B) )
%   | | | then return -0.16254500754977086;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12839506992486718;  // std dev = 2.887, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then return 0.14142911852393908;  // std dev = 0.452, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else return 0.044790460982400505;  // std dev = 0.395, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.31144831971916825;  // std dev = 0.492, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.48283090502633463;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, B) )
%   | | then if ( samebib(G, H), venue(H, A) )
%   | | | then return 0.5316524138104854;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14148395872801378;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.09441360299241025;  // std dev = 0.441, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.03159879174578699;  // std dev = 0.805, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.13142811859141887;  // std dev = 2.936, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03189048206920282;  // std dev = 2.990, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.046723994408730624;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.5444259695977735;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.179478985205612;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.12401454824262048;  // std dev = 1.920, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.2572420071917392;  // std dev = 0.491, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | else return 0.356716758660831;  // std dev = 0.343, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then return 0.07180651240201158;  // std dev = 0.381, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( author(L, J), venue(L, A) )
%   | | | then return 0.1563771668397982;  // std dev = 1.001, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.0893793545882398;  // std dev = 2.858, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else return 0.05315073739305894;  // std dev = 0.410, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.4108450805032818;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.13817686297132117;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.0960161453889568;  // std dev = 1.925, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.19744981635808476;  // std dev = 0.491, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | else return 0.2687032100909134;  // std dev = 0.343, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then return 0.1347001602000931;  // std dev = 0.388, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.07119934094072197;  // std dev = 0.441, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | then return 0.08591864230464673;  // std dev = 0.448, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else return 0.026653435835408777;  // std dev = 0.395, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then return 0.14129756800817778;  // std dev = 0.488, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | else return 0.28601932100096716;  // std dev = 0.289, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, A) )
%   | | then if ( samebib(H, I), venue(I, B) )
%   | | | then return 0.4693071429312793;  // std dev = 0.920, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.17379709275192942;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(J, G), venue(J, B) )
%   | | | then return -0.17806141186990934;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.059449438798891266;  // std dev = 2.852, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return 0.006092346522220594;  // std dev = 0.379, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0953629731005948;  // std dev = 4.054, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return -0.19056108415646697;  // std dev = 0.067, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.27987388462279295;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.04235174404686599;  // std dev = 2.569, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.2750018879136656;  // std dev = 1.867, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.11918384720444984;  // std dev = 0.487, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | else return 0.19600292021463825;  // std dev = 0.343, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then return 0.001079017496543655;  // std dev = 0.323, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( author(K, I), venue(K, B) )
%   | | | then return 0.06377870111686997;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06955296203279977;  // std dev = 2.833, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else return 0.028859751418851682;  // std dev = 0.408, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then if ( author(F, D), venue(F, B) )
%   | | then return -0.4926914765513982;  // std dev = 3.33e-08, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.20114381353116814;  // std dev = 0.382, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | else if ( author(G, D), venue(G, A) )
%   | | then return -0.24945108450622536;  // std dev = 0.314, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else return 0.08532227531951547;  // std dev = 0.428, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.03153582358258005;  // std dev = 2.736, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return -0.2062167604323886;  // std dev = 1.527, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.0996390952974435;  // std dev = 0.484, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.005617028821577639;  // std dev = 0.378, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | else return 0.04538080133179942;  // std dev = 0.426, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.3834215602459255;  // std dev = 0.262, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return -0.3569273682259387;  // std dev = 0.122, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.017434074696565847;  // std dev = 0.399, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, G) )
%   | | | then return -0.05792763786620061;  // std dev = 2.968, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.27914835720161596;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.07494749209409048;  // std dev = 0.484, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordvenue(B, M) )
%   | | | then return -0.17859162256741415;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.06978913910325428;  // std dev = 4.038, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | else return -0.006140158420594663;  // std dev = 0.383, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then return 0.04337646959475215;  // std dev = 0.478, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then return 0.09212126996442846;  // std dev = 0.402, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.23219500063311918;  // std dev = 0.069, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, B) )
%   | | then if ( title(K, I), venue(K, A) )
%   | | | then return 0.6279514429350386;  // std dev = 1.836, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return -0.19735276068177438;  // std dev = 0.306, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.17999948976078375;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( haswordauthor(N, L) )
%   | | | then return 0.08579004576066843;  // std dev = 0.599, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.049725626981936;  // std dev = 4.056, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   | | else return -0.20777989654299442;  // std dev = 0.180, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.555859
   AUC PR    = 0.403659
   CLL	      = -0.703273
   Precision = 0.373809 at threshold = 0.5
   Recall    = 0.922173
   F1        = 0.531977


Total learning time: 48.463788747787476 seconds
Total inference time: 6.145 seconds
AUC ROC: 0.555859


Dataset: 13_twitter_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:23:06
{'AUC ROC': 0.555859, 'AUC PR': 0.403659, 'CLL': -0.703273, 'Precision': [0.373809, 0.5], 'Recall': 0.922173, 'F1': 0.531977, 'Learning time': 48.463788747787476, 'Inference time': 6.145}


Starting fold 1

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos  examples: 2649
Target test neg examples: 4334

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.424815601766179;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.004815601766179008;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.004815601766179008;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.3982164798305049;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.45935396641210174;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36287359443791467;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.1488242116562869;  // std dev = 2.789, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.14162905569876189;  // std dev = 0.023, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.12787230110394693;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.004228390109386251;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.37391135762433364;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3269052770205085;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2976445171077738;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return -0.12205676751791567;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0037111125833978686;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.004507924439812993;  // std dev = 0.346, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.14514481334590568;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.29107789104287257;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.26358767085800217;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.23427726647373656;  // std dev = 2.715, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return -0.10959153340338802;  // std dev = 0.046, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0032558270569705674;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return 0.003958717519531365;  // std dev = 0.346, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.11804668707041945;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.24185760298278067;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20295547503731384;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17824642992011888;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then return -0.02879733809916237;  // std dev = 0.328, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -0.002351125544549036;  // std dev = 3.069, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.11287321682174857;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.007328377203989897;  // std dev = 2.848, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09457696812283496;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.18213891260273649;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15909483439814323;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13426751126146078;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.13262420994524807;  // std dev = 2.772, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.12533578208438062;  // std dev = 0.064, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.09631135146444736;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.0033187605416033356;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07489163449109286;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.12013209515454029;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1367774456565101;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10100458086538985;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.09318110726231028;  // std dev = 0.064, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0017416567668898898;  // std dev = 0.340, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.002910744014674799;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.05877777591804268;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.10592282508156321;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09434771210702811;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07483232335539478;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then return -0.03598609793561938;  // std dev = 0.326, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | | then return -0.08562861744173798;  // std dev = 0.059, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0025520950079659325;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.006006920359363292;  // std dev = 2.791, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04582386394015474;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.07079382862474018;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08230046185689006;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05592954809337356;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.0791802881144716;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.001382886435556004;  // std dev = 0.339, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0022370252104252733;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.03554750876544446;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.06463670389129879;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05752213270326769;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04105240337929863;  // std dev = 2.718, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return -0.07361437620618962;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.0012126324469617284;  // std dev = 0.339, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.001960381789524455;  // std dev = 0.354, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.557024
   AUC PR    = 0.428385
   CLL	      = -0.655661
   Precision = 0.637427 at threshold = 0.5
   Recall    = 0.041148
   F1        = 0.077305


Total learning time: 59.90229868888855 seconds
Total inference time: 7.404 seconds
AUC ROC: 0.557024


Dataset: 13_twitter_cora, Fold: 1, Type: Scratch (RDN-B), Time: 00:24:13
{'AUC ROC': 0.557024, 'AUC PR': 0.428385, 'CLL': -0.655661, 'Precision': [0.637427, 0.5], 'Recall': 0.041148, 'F1': 0.077305, 'Learning time': 59.90229868888855, 'Inference time': 7.404}


Starting fold 2

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos  examples: 2246
Target test neg examples: 4478

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.5949910403626703;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.5062567560764839;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.48074388375574334;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.30665618885999163;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.4047531668618019;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.386198448632422;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.5145754588862081;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( haswordvenue(A, C) )
%   | | then return 0.16457545888620817;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(F, D), venue(F, A) )
%   | | | then return -0.06605466959315473;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.13542454111379182;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.2399523433083081;  // std dev = 0.494, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.3261448737160187;  // std dev = 1.915, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.3103700402108463;  // std dev = 1.898, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.33324199902303153;  // std dev = 0.330, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else return 0.17062637354018512;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.18613466623308178;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.23233438181079052;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2166010869669191;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.344487667745488;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.33934134460665244;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13664585375352212;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.10772948932183568;  // std dev = 0.490, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.3457604235013102;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( haswordvenue(A, C) )
%   | | then return 0.08249918443180616;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(F, D), venue(F, A) )
%   | | | then return -0.08852432283344379;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14682125527890094;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.13943894836053314;  // std dev = 0.494, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.1911614910571029;  // std dev = 1.914, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1729593262603421;  // std dev = 1.895, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.20597213579526596;  // std dev = 0.322, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else return 0.10762034996184425;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.37356096104878905;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.062309926445436314;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.22047801466140027;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.2524067627002796;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.07490403372924753;  // std dev = 1.220, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordtitle(J, C) )
%   | | | then return 0.10278676682959537;  // std dev = 16.896, 1,167.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=669 */
%   | | | else return 0.1382656976931302;  // std dev = 2.695, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then return 0.16943387121808548;  // std dev = 0.326, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else return 0.04030218299055429;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07967178860111647;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.09958200969915247;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08268380460859576;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.2143213207705915;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then return 0.2008519529731791;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.044511305258257625;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.030748933450042037;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then return 0.2615028155569658;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( haswordvenue(B, C) )
%   | | then return 0.027113473754135184;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( author(F, D), venue(F, B) )
%   | | | then return -0.17536194073178152;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.23560175737174327;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.058195311284099084;  // std dev = 0.493, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.09187263231069834;  // std dev = 1.913, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.07711900535893636;  // std dev = 1.897, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return 0.12970838429278103;  // std dev = 0.317, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else return 0.02340782809617941;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04503125392173529;  // std dev = 0.491, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.05947006005934872;  // std dev = 0.440, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.042656468616290404;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.16931189652360212;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then return 0.15296427534688695;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.01779105303983719;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.007728510768187654;  // std dev = 0.491, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.537217
   AUC PR    = 0.345598
   CLL	      = -0.755588
   Precision = 0.353871 at threshold = 0.5
   Recall    = 0.956367
   F1        = 0.516595


Total learning time: 55.90673804283142 seconds
Total inference time: 5.852 seconds
AUC ROC: 0.537217


Dataset: 13_twitter_cora, Fold: 2, Type: Scratch (RDN-B), Time: 00:25:15
{'AUC ROC': 0.537217, 'AUC PR': 0.345598, 'CLL': -0.755588, 'Precision': [0.353871, 0.5], 'Recall': 0.956367, 'F1': 0.516595, 'Learning time': 55.90673804283142, 'Inference time': 5.852}


Starting fold 3

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos  examples: 2436
Target test neg examples: 2800

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.14703782398840126;  // std dev = 0.453, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return 0.1914822684328457;  // std dev = 0.471, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else return 0.22255571476052435;  // std dev = 0.481, 1,416.000 (wgt'ed) examples reached here.  /* #neg=900 #pos=516 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then return -0.00851773156715447;  // std dev = 0.340, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.049929757017320595;  // std dev = 3.364, 73.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | | else return -0.05094197399139689;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.02481560176617905;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18196602171174134;  // std dev = 0.478, 1,545.000 (wgt'ed) examples reached here.  /* #neg=1,000 #pos=545 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then return -0.049481812782428546;  // std dev = 0.294, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.061103612106673415;  // std dev = 3.334, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | | else return -0.05398969156517002;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0313985699762196;  // std dev = 3.847, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return -0.12800675989407506;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.3910578390323177;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.20714814330122944;  // std dev = 0.489, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | else return 0.15475003220150008;  // std dev = 0.478, 1,498.000 (wgt'ed) examples reached here.  /* #neg=969 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( title(J, H), venue(J, A) )
%   | | | then return 0.44137059909959114;  // std dev = 2.554, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return -0.15104526632712773;  // std dev = 0.021, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( title(K, H), venue(K, A) )
%   | | | then return -0.13948866987855565;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.02717799678811103;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else return 0.012201597749368048;  // std dev = 0.365, 113.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13519994739942665;  // std dev = 0.480, 1,516.000 (wgt'ed) examples reached here.  /* #neg=971 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.574314505924434;  // std dev = 2.093, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.15266885212673112;  // std dev = 0.033, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.13979754661609756;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.08242467560612471;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03394189462298913;  // std dev = 3.351, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return -0.042268309078929825;  // std dev = 1.335, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.11328104513017559;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10946492594247229;  // std dev = 0.479, 1,522.000 (wgt'ed) examples reached here.  /* #neg=977 #pos=545 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.543113971175905;  // std dev = 1.922, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.1457948765323037;  // std dev = 0.220, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.11906645774530847;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04413099133425641;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03630087499757833;  // std dev = 3.223, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return -0.06332282991502076;  // std dev = 1.344, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else return -0.1036317984699962;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08976658470582054;  // std dev = 0.480, 1,516.000 (wgt'ed) examples reached here.  /* #neg=971 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.446911015931886;  // std dev = 2.206, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.1373850220650355;  // std dev = 0.037, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.11710938840790472;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.01173568640260867;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -4.044777307296638E-4;  // std dev = 2.994, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | | else return -0.04173870370983413;  // std dev = 1.330, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else return -0.09622662931013246;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.1469876850527463;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.01928248314077048;  // std dev = 0.459, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else return 0.07034192915483424;  // std dev = 0.479, 1,478.000 (wgt'ed) examples reached here.  /* #neg=949 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.37521525246678955;  // std dev = 2.141, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.12878341486326053;  // std dev = 0.231, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0.06202852830767895;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return -0.0018637784520840262;  // std dev = 2.963, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | | else return -0.041715658343360086;  // std dev = 1.332, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else return -0.08648331296792615;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.21273815676863972;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.04636093013216602;  // std dev = 0.471, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | else return 0.05619902903867055;  // std dev = 0.480, 1,476.000 (wgt'ed) examples reached here.  /* #neg=947 #pos=529 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.5008417528038649;  // std dev = 1.595, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.1225863840968891;  // std dev = 0.027, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.034190954610722316;  // std dev = 0.284, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return -0.02166246015436851;  // std dev = 2.757, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | | else return 0.02115081197102368;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.08213799167718344;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0401690772851698;  // std dev = 0.478, 1,537.000 (wgt'ed) examples reached here.  /* #neg=992 #pos=545 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( title(G, E), venue(G, A) )
%   | | | then return 0.2353948295531093;  // std dev = 1.977, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return -0.11416149505795307;  // std dev = 0.354, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0.019380886417055657;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.01156478007464289;  // std dev = 2.725, 93.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | | else return 0.018501131517457397;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.0731406855027607;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then return 0.037154350570668356;  // std dev = 0.468, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else return -0.19869881614082124;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.03724902621077365;  // std dev = 0.480, 1,469.000 (wgt'ed) examples reached here.  /* #neg=940 #pos=529 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.3967546812862002;  // std dev = 1.737, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.11015630892780275;  // std dev = 0.168, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( title(K, H), venue(K, A) )
%   | | | then return -0.08914526485522317;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.01615082539187362;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.030170926977906853;  // std dev = 0.238, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.03202511110632667;  // std dev = 0.270, 100.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=16 */


Results
   AUC ROC   = 0.565268
   AUC PR    = 0.510455
   CLL	      = -0.705868
   Precision = 0.571429 at threshold = 0.5
   Recall    = 0.044335
   F1        = 0.082286


Total learning time: 49.180988073349 seconds
Total inference time: 5.731 seconds
AUC ROC: 0.565268


Dataset: 13_twitter_cora, Fold: 3, Type: Scratch (RDN-B), Time: 00:26:10
{'AUC ROC': 0.565268, 'AUC PR': 0.510455, 'CLL': -0.705868, 'Precision': [0.571429, 0.5], 'Recall': 0.044335, 'F1': 0.082286, 'Learning time': 49.180988073349, 'Inference time': 5.731}


Starting fold 4

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos  examples: 2270
Target test neg examples: 3954

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.1914822684328457;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(B, G) )
%   | | | then return 0.24811816884741328;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.3851926776601658;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.3851926776601658;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.48767788391726297;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.16653882456488167;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7825012972897073;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.21749870271029265;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.5825012972897073;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.2006373174408249;  // std dev = 0.493, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.2554309038467003;  // std dev = 3.509, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.33354380143522294;  // std dev = 2.603, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(B, M) )
%   | | then return 0.1420942428155646;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.16627278814108717;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.16153884536939936;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.24389847404002757;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.2613806000007637;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.3144965494660669;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.11914890490746433;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.03842866223690456;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.13351355589432412;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.12875910516214492;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.18678417359691227;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.20129574584424512;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.23723136491506377;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.0984134027840187;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.033154945921885746;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.10546120260430522;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.10105349094222651;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.14111998948018567;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.152505134275848;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.17800353626734847;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.08026654944252247;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.028495105925721097;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6450704635097326;  // std dev = 0.130, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.33750832160549576;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.444517591218888;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.08016770152824436;  // std dev = 0.492, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.09055819162927214;  // std dev = 3.491, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.11937279649202165;  // std dev = 2.598, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(B, M) )
%   | | then return 0.06479591611329234;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.024408230135271918;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.024408230135271918;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.06357116614013913;  // std dev = 0.491, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.057546163942251885;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.0833708286773974;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.08485041643514898;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.10536908908315411;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.05187916934404051;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.02084688910874009;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.02084688910874009;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.048874847795409765;  // std dev = 0.491, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.044020216467278876;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.06255799326526147;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06366452753030587;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.08058416267149489;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then return 0.04126932998424623;  // std dev = 0.471, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return 0.017760671541598414;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0.017760671541598414;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordauthor(D, C) )
%   then if ( author(E, D), venue(E, B) )
%   | then if ( samebib(E, F), venue(F, A) )
%   | | then return 0.46178583772707993;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.276125313395524;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.31031987725956167;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordtitle(H, G) )
%   | | then return 0.03585284887134731;  // std dev = 0.492, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.03946883857589636;  // std dev = 3.490, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.051270410389745995;  // std dev = 2.598, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, M), haswordvenue(B, M) )
%   | | | then return 0.03266374873483021;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.018802582886875124;  // std dev = 2.960, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else return 0.015098879183171418;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */


Results
   AUC ROC   = 0.572806
   AUC PR    = 0.435564
   CLL	      = -0.640221
   Precision = 0.592105 at threshold = 0.5
   Recall    = 0.079295
   F1        = 0.13986


Total learning time: 93.22464871406555 seconds
Total inference time: 7.302 seconds
AUC ROC: 0.572806


Dataset: 13_twitter_cora, Fold: 4, Type: Scratch (RDN-B), Time: 00:27:51
{'AUC ROC': 0.572806, 'AUC PR': 0.435564, 'CLL': -0.640221, 'Precision': [0.592105, 0.5], 'Recall': 0.079295, 'F1': 0.13986, 'Learning time': 93.22464871406555, 'Inference time': 7.302}


Starting fold 5

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos  examples: 2467
Target test neg examples: 4522

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.44064893509950764;  // std dev = 0.493, 800.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=466 */
%   | else return 0.7291166770349955;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.13087620782678508;  // std dev = 0.445, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then return 0.03996711691769419;  // std dev = 0.386, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.14730556160553568;  // std dev = 4.130, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.3802742035706283;  // std dev = 0.492, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.6157326050686436;  // std dev = 0.335, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.6424874761096973;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15472074399097419;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.11641895384363546;  // std dev = 0.439, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.14874535707283834;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0613617974039474;  // std dev = 3.030, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.13533679346720007;  // std dev = 4.097, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return -0.14048845513357996;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6358464244432969;  // std dev = 0.103, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.2454435255722109;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.04704621043856603;  // std dev = 1.980, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.2653865455152309;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.037218872068664234;  // std dev = 1.966, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.3413106112584207;  // std dev = 0.485, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, A) )
%   | | then return 0.20112080135844063;  // std dev = 0.441, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.10048650844203655;  // std dev = 0.438, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0.06015204591572167;  // std dev = 0.411, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.24316862886472868;  // std dev = 0.488, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.4200417033521577;  // std dev = 0.330, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, B) )
%   | | then if ( samebib(G, H), venue(H, A) )
%   | | | then return 0.5224472053647579;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14540705874795629;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(I, F), venue(I, A) )
%   | | | then return -0.1801746218230229;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.11028131640637345;  // std dev = 2.860, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.011352921050865983;  // std dev = 0.786, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12340116521748383;  // std dev = 2.916, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else return 0.024107775426084836;  // std dev = 0.392, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4048195650713846;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.13873441781816487;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.09822291317833798;  // std dev = 1.923, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1539687637223848;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.09104714095743983;  // std dev = 1.910, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.21040979545609687;  // std dev = 0.485, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( author(M, L), venue(M, B) )
%   | | then return 0.13932301106189618;  // std dev = 0.390, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.07639058412165216;  // std dev = 0.435, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0.04159183920646712;  // std dev = 0.409, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.13925788778271436;  // std dev = 0.486, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | else return 0.2855481985675417;  // std dev = 0.332, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.46498272071501956;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.17883692098398252;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(I, F), venue(I, B) )
%   | | | then return -0.19593640279585253;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07744643993220728;  // std dev = 2.833, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return -0.0065543375136820625;  // std dev = 0.666, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.09643438843096154;  // std dev = 2.881, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else return 0.014704400055220038;  // std dev = 0.392, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.27385616750135017;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(F, C) )
%   | | | then return -0.054214349686980204;  // std dev = 3.069, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.2694946421167949;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.11292412807620986;  // std dev = 0.487, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | else return 0.21051101055113478;  // std dev = 0.343, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, B) )
%   | | then return 0.10202923988055992;  // std dev = 0.382, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( author(K, I), venue(K, A) )
%   | | | then return -0.17812928034640785;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06537757228615369;  // std dev = 2.824, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else return 0.029029578481222278;  // std dev = 0.406, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then return 0.07925709889718334;  // std dev = 0.484, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | else return 0.20134558322017304;  // std dev = 0.290, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, A) )
%   | | then if ( samebib(H, I), venue(I, B) )
%   | | | then return 0.3461548830351847;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15895386673256534;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(J, G), venue(J, B) )
%   | | | then return -0.17291368243097485;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.058803276983925616;  // std dev = 2.827, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.00630760961913222;  // std dev = 0.375, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.07032866209918147;  // std dev = 4.045, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return -0.16003062156863124;  // std dev = 0.114, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordauthor(D, C) )
%   then if ( haswordtitle(E, C) )
%   | then if ( author(F, D), venue(F, B) )
%   | | then return -0.49492738046568796;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.19398137902361923;  // std dev = 0.384, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | else if ( author(G, D), venue(G, A) )
%   | | then return -0.2045524519509391;  // std dev = 0.306, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( author(H, D), venue(H, B) )
%   | | | then return 0.04801657680144846;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07399014817286793;  // std dev = 2.919, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.04751917593384285;  // std dev = 2.735, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return -0.21558070281142958;  // std dev = 1.433, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.07500129427185578;  // std dev = 0.484, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else return 0.018326396850054216;  // std dev = 0.404, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then return 0.04413450415072373;  // std dev = 0.480, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | else return 0.1749522951272422;  // std dev = 0.288, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then return 0.005979527341468916;  // std dev = 0.265, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( author(I, G), venue(I, A) )
%   | | | then return 0.007816311462688663;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.043289848766429655;  // std dev = 2.820, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return -0.16080162868934153;  // std dev = 0.076, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.02405049614604204;  // std dev = 2.983, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.05091396002835836;  // std dev = 4.039, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return -0.14576960746993162;  // std dev = 0.117, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.55462
   AUC PR    = 0.40346
   CLL	      = -0.707918
   Precision = 0.373767 at threshold = 0.5
   Recall    = 0.921767
   F1        = 0.531868


Total learning time: 46.51292872428894 seconds
Total inference time: 6.117 seconds
AUC ROC: 0.55462


Dataset: 13_twitter_cora, Fold: 5, Type: Scratch (RDN-B), Time: 00:28:44
{'AUC ROC': 0.55462, 'AUC PR': 0.40346, 'CLL': -0.707918, 'Precision': [0.373767, 0.5], 'Recall': 0.921767, 'F1': 0.531868, 'Learning time': 46.51292872428894, 'Inference time': 6.117}


