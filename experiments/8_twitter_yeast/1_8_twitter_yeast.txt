Starting experiment #1 for 8_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 282

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then return 0.6648716241751409;  // std dev = 0.395, 119.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=96 */
%   | | else if ( follows(F, C), follows(F, D) )
%   | | | then return 0.3140312880406899;  // std dev = 5.808, 136.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=62 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.11032284814298954;  // std dev = 0.434, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.48423589162125247;  // std dev = 5.189, 115.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=72 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( follows(J, A), tweets(A, K) )
%   | | | then return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.3381489350995123;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then return 0.5635067695772231;  // std dev = 0.395, 119.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=96 */
%   | | else if ( follows(F, C), follows(F, D) )
%   | | | then return 0.2713547801063382;  // std dev = 5.808, 136.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=62 */
%   | | | else return 0.7194734122109546;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.09635561052977279;  // std dev = 0.434, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.41456305779222935;  // std dev = 5.189, 115.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=72 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( follows(J, A), tweets(A, K) )
%   | | | then return -0.03683251744007497;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.29181562708602976;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then return 0.4458599571432359;  // std dev = 0.395, 119.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=96 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.18126124191970638;  // std dev = 4.827, 97.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
%   | | | else return 0.3845483763876274;  // std dev = 3.178, 49.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.08325682064521463;  // std dev = 0.434, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.014493657940534596;  // std dev = 2.046, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.33910949866475626;  // std dev = 3.017, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.357416421460075;  // std dev = 3.871, 70.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | | | else return 0.2631514212186676;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, A), follows(A, E) )
%   | | then return 0.3558283219625205;  // std dev = 0.379, 99.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=81 */
%   | | else if ( follows(A, C), tweets(C, F) )
%   | | | then return 0.14416801761726908;  // std dev = 4.738, 98.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=42 */
%   | | | else return 0.2968857966866719;  // std dev = 3.863, 68.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.07124471129487038;  // std dev = 0.434, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.20102030597040269;  // std dev = 3.601, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | | else return -0.3276896661964676;  // std dev = 0.194, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.2826766321703736;  // std dev = 3.840, 70.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | | | else return 0.21236211320793252;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.20102514204266964;  // std dev = 0.446, 265.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=168 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( follows(A, F), follows(E, F) )
%   | | then if ( follows(G, A), follows(G, E) )
%   | | | then return 0.0446354929854998;  // std dev = 3.151, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.2897533381033451;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else return -0.10081905246904548;  // std dev = 0.287, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.22007790809661265;  // std dev = 5.031, 115.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=72 */
%   | | | else return -0.18352555355666192;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.04998271784395168;  // std dev = 1.217, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.16697209060144844;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( tweets(A, E), tweets(C, F) )
%   | | then if ( tweets(D, E), follows(D, C) )
%   | | | then return 0.1835704367181907;  // std dev = 5.898, 181.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=126 */
%   | | | else return -0.2467736241251716;  // std dev = 1.470, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else return 0.26945337467839553;  // std dev = 0.431, 55.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=38 */
%   | else return -0.08518475138839682;  // std dev = 1.75e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then return 0.04994838307831134;  // std dev = 0.427, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.07999913231240531;  // std dev = 2.016, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.19289557759683482;  // std dev = 2.873, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.17115315000062722;  // std dev = 3.763, 70.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | | | else return 0.12891146362574893;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( recursion_accounttype(C, B), tweets(C, D) )
%   | then return 0.0720335353261543;  // std dev = 0.414, 340.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=152 */
%   | else if ( follows(E, C), recursion_accounttype(E, B) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.3104826350145348;  // std dev = 2.031, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return 0.1253355645023811;  // std dev = 5.112, 122.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=76 */
%   | | else return -0.18196050758533533;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(F, A) )
%   | then if ( recursion_accounttype(F, B) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return 0.06803194930773357;  // std dev = 2.667, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | | else return -0.10214373680280253;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.048204248443926005;  // std dev = 0.329, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( tweets(A, H) )
%   | | then return 0.09836046494903106;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.09836046494903093;  // std dev = 0.500, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.09596137321815049;  // std dev = 0.434, 265.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=168 */
%   | else return -0.0841654745296984;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then return -0.13300084742988966;  // std dev = 0.303, 55.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=7 */
%   | | else if ( follows(G, E), recursion_accounttype(G, B) )
%   | | | then return 0.19462764466229787;  // std dev = 3.842, 68.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
%   | | | else return -0.09392095388792135;  // std dev = 1.725, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.19089577869550245;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.1394735767921654;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.07965812046720305;  // std dev = 3.087, 44.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | | else return 0.1141163658284126;  // std dev = 3.129, 48.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=29 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(C, D), recursion_accounttype(C, B) )
%   | then return 0.042890279492068986;  // std dev = 0.409, 340.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=152 */
%   | else if ( follows(E, C), recursion_accounttype(E, B) )
%   | | then if ( follows(E, A) )
%   | | | then return 0.21173892807436992;  // std dev = 2.025, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return 0.07542729376538863;  // std dev = 5.049, 122.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=76 */
%   | | else return -0.1679199535816696;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( recursion_accounttype(F, B), tweets(A, H) )
%   | | | then return 0.03910727224066775;  // std dev = 2.593, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return -0.14562729912210767;  // std dev = 0.676, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return 0.10884461499440316;  // std dev = 1.249, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tweets(A, I) )
%   | | then return 0.05493231107636029;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.04640643473098216;  // std dev = 0.500, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.05191277820140963;  // std dev = 0.419, 380.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=190 */
%   | else if ( follows(E, C), recursion_accounttype(E, B) )
%   | | then if ( follows(C, F), follows(E, F) )
%   | | | then return -0.017036151900926173;  // std dev = 3.644, 71.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=35 */
%   | | | else return 0.11648116250503401;  // std dev = 2.525, 35.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   | | else return -0.14587062290948308;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( follows(G, A) )
%   | then if ( follows(G, H), follows(H, A) )
%   | | then if ( recursion_accounttype(G, B), tweets(A, I) )
%   | | | then return 0.03022826305223202;  // std dev = 2.592, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return -0.1261232656507079;  // std dev = 0.666, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return 0.08317864343862172;  // std dev = 1.251, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( tweets(A, J) )
%   | | then return 0.04132736202466844;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.03488201459529483;  // std dev = 0.500, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 282

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 87

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6842358916212509;  // std dev = 2.571, 46.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | | | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5792891135108366;  // std dev = 2.571, 46.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | | | else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.12543301544918353;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3087411357856348;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.04068942017337716;  // std dev = 2.351, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.3422991042327324;  // std dev = 1.850, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2689180444489668;  // std dev = 2.766, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, A), complex(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.21989949779487786;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.11677878278053959;  // std dev = 2.824, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.21745656799477633;  // std dev = 2.681, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.5458140345516047;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04581403455160471;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.35222831257609577;  // std dev = 2.512, 46.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | | | else return -0.15941998081519695;  // std dev = 0.102, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16149388045651009;  // std dev = 2.176, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(C, F) )
%   | | then if ( complex(D, E), interaction(C, D) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.15977827426288999;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return -0.02440678441197494;  // std dev = 2.288, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.2265675396838204;  // std dev = 1.591, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.12633891992176288;  // std dev = 2.378, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.07162176408684628;  // std dev = 0.679, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24187116547531542;  // std dev = 2.489, 49.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | | else return -0.1542161753258367;  // std dev = 0.153, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11757984431327195;  // std dev = 2.115, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1817834390160498;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return -0.04324262579465603;  // std dev = 2.270, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3001905540157809;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16631398370224895;  // std dev = 1.440, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.044443628999811025;  // std dev = 0.677, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.20008253048263167;  // std dev = 0.818, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.0214037244044918;  // std dev = 1.966, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.037025464958234;  // std dev = 0.646, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1521382928651106;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17083558767861867;  // std dev = 2.451, 49.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | | else return -0.14368859853443167;  // std dev = 0.191, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), complex(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.02460032379369103;  // std dev = 1.703, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.36654897303818207;  // std dev = 0.846, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.013508414032622892;  // std dev = 2.112, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return 0.26090769479724685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21684699689577167;  // std dev = 1.268, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return -0.14054163751805562;  // std dev = 0.086, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), complex(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.019582166548739958;  // std dev = 1.703, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.2760114924669191;  // std dev = 0.846, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.914057
   AUC PR    = 0.895026
   CLL	      = -0.378325
   Precision = 0.787037 at threshold = 0.5
   Recall    = 0.977011
   F1        = 0.871795


Total learning time: 6.758 seconds
Total inference time: 3.687 seconds
AUC ROC: 0.914057


Results scoring model
   AUC ROC   = 0.955357
   AUC PR    = 0.953001
   CLL	      = -0.349411
   Precision = 0.83871 at threshold = 0.5
   Recall    = 0.928571
   F1        = 0.881356


Total scoring time: 3.243 seconds
Parameter learned model CLL: -0.349411


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), complex(A, K)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.816, 1, 2], 'false,false,true,true': [2.571, 8, 38], 'false,false,true,false': [3.49e-08, 35, 0], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.871, 7, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), complex(A, K)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.816, 1, 2], 'false,false,true,true': [2.571, 8, 38], 'false,false,true,false': [1.49e-08, 35, 0], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.871, 7, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [1.05e-08, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.816, 1, 2], 'false,false,true,true': [2.351, 24, 9], 'false,false,true,false': [1.85, 9, 12], 'false,false,false,true': [2.766, 22, 26], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), complex(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.816, 1, 2], 'false,false,true,true': [1.192, 3, 4], 'false,false,true,false': [2.824, 30, 17], 'false,false,false,true': [2.681, 22, 26], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.707, 1, 1], 'false,false,true,true': [2.512, 8, 38], 'false,false,true,false': [0.102, 35, 0], 'false,false,false,true': [2.176, 12, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'complex(A, E), complex(C, F)', 'true,true,true': 'complex(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [0.771, 1, 2], 'false,false,true,true': [2.288, 24, 9], 'false,false,true,false': [1.591, 9, 12], 'false,false,false,true': [2.378, 22, 26], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), complex(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)'}, {'true,true': [0.679, 1, 3], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false': [2.489, 8, 41], 'true,false,false': [0.153, 35, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.115, 12, 9], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.028, 0, 7], 'true,false': [0.0, 0, 0], 'false,true,true': [2.27, 24, 9], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.44, 9, 12], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.677, 1, 1], 'false,false,false,true': [0.818, 4, 10], 'false,false,false,false': [1.966, 18, 16]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'complex(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), complex(A, H)'}, {'true,true': [0.646, 1, 3], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false': [2.451, 8, 41], 'true,false,false': [0.191, 35, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.703, 11, 4], 'false,true,false': [0.846, 1, 5], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), complex(A, I)'}, {'true,true': [2.112, 18, 19], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [1.268, 2, 27], 'true,false,false': [0.086, 24, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.703, 11, 4], 'false,true,false': [0.846, 1, 5], 'false,false': [0.0, 0, 0]}]]
[{'': [-2.5376526277146434e-16, 0.24888888888889008], 'false': [0.22222222222222224, 0.24846212995002045], 'false,false': [0.24904740131077732, 0.2448979591836735], 'false,false,true': [0.14366729678639076, 3.489272363107635e-17], 'false,false,false': [0.20408163265306126, 0.25], 'true': [-2.5376526277146434e-16, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [-6.344131569286608e-17, 0.21274466846381374], 'false': [0.2222222222222222, 0.2115493555281435], 'false,false': [0.20346140869684326, 0.2421609591024167], 'false,false,false': [0.20408163265306117, 0.2500000000000001], 'false,false,true': [0.1436672967863902, 6.3441315692866086e-18], 'true': [-6.344131569286608e-17, nan], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [-6.344131569286608e-17, 0.17922799546445828], 'false': [0.22222222222222224, 0.17730181457745275], 'false,false': [0.187399967742076, 0.15942603322679186], 'false,false,true': [0.16753299567864013, 0.16302769434243042], 'false,false,false': [0.15942603322679186, nan], 'true': [-6.344131569286608e-17, nan], 'true,true': [3.700743415417188e-17, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [9.516197353929913e-17, 0.167090488352504], 'false': [0.2222222222222222, 0.16512626067785113], 'false,false': [0.1751901531815988, 0.14976863025882456], 'false,false,true': [0.2030060423330661, 0.16966889501262186], 'false,false,false': [0.14976863025882456, nan], 'true': [9.516197353929913e-17, nan], 'true,true': [0.0, -3.700743415417188e-17], 'true,true,false': [nan, -3.700743415417188e-17]}, {'': [-3.172065784643304e-17, 0.16151222294141246], 'false': [0.2222222222222222, 0.15956554808391363], 'false,true': [0.0, 0.25], 'false,false': [0.1422965690560673, 0.2254430760670018], 'false,false,false': [0.2254430760670018, nan], 'false,false,true': [0.13722183922257622, 0.0002987707456367339], 'false,true,true': [0.0, nan], 'true': [-3.172065784643304e-17, nan]}, {'': [2.3790493384824782e-17, 0.14194803250841112], 'false': [0.1980886436251749, 0.140188511033528], 'false,false': [0.15876185080691393, 0.11779826168136293], 'false,false,true': [0.15859779582687225, 0.12052691677268366], 'false,false,false': [0.11779826168136293, nan], 'true': [2.3790493384824782e-17, nan], 'true,true': [0.0, 0.0], 'true,true,true': [0.0, nan]}, {'': [0.10918222637381159, 0.21291475583126449], 'false': [0.21291475583126449, nan], 'false,true': [nan, 0.21291475583126449], 'true': [0.11541604322335258, 0.10889139553033775], 'true,false': [0.11920717603204817, 0.000669810953512722], 'true,false,true': [0.0, 0.1264460780072684]}, {'': [0.0001105923725544403, 0.12583596866688576], 'false': [0.14288085417981347, 0.10673831085223957], 'false,true': [0.15615416998653917, 0.09507002094002283], 'false,false': [0.2293452179448811, 0.10107308833676348], 'false,false,true': [nan, 0.2293452179448811], 'false,false,false': [0.04784393937701063, 0.11367918944460378], 'false,true,false': [0.0, 0.09878248588163177], 'true': [0.0001105923725544403, nan]}, {'': [0.09357740215958554, 0.20345221379529607], 'false': [0.20345221379529607, nan], 'false,true': [0.19342769971416657, 0.11922937584664174], 'false,true,true': [nan, 0.19342769971416657], 'true': [0.10421130396821918, 0.09308655340603288], 'true,false': [0.11551480112165374, 0.001041595598740527], 'true,false,true': [-4.625929269271485e-18, 0.12256696729766493]}, {'': [0.08693380378946916, 0.19004979536066768], 'false': [0.19004979536066768, nan], 'false,true': [0.1934358526663754, 0.11917350120335157], 'false,true,true': [nan, 0.1934358526663754], 'true': [0.12058436329696383, 0.06174967803457752], 'true,false': [0.05366741375657629, 0.0003088532513867472], 'true,false,true': [0.0, 0.05545330272762218]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D), complex(D, E).;true;true
0;true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), complex(D, E).;true;true
1;true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), complex(D, E).;true;true
2;true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, E), complex(C, F).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), complex(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(A, E).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), interaction(A, F).;true;true
7;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;complex(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(A, E).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
9;true,false,true;interaction(F, C), interaction(F, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(D, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6842358916212509;  // std dev = 2.571, 46.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | | | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(D, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5792891135108366;  // std dev = 2.571, 46.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | | | else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.19598518149914834;  // std dev = 1.903, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.41107045104591416;  // std dev = 1.111, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F), phenotype(E, F) )
%   | | | then return 0.009337826587118642;  // std dev = 0.748, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14898660539911351;  // std dev = 0.238, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.3237239703204202;  // std dev = 0.975, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.059323852982104366;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(A, J), interaction(K, H) )
%   | | | then return 0.4763334184823981;  // std dev = 1.152, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.1339660715627548;  // std dev = 2.439, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.20181617282555653;  // std dev = 1.494, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.3794048586520106;  // std dev = 1.782, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41751358415830986;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F), phenotype(D, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.23401794484463345;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12955902304739378;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.17721302836539624;  // std dev = 0.193, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.20894995432018998;  // std dev = 1.304, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( enzyme(I, K), complex(A, L) )
%   | | | then return 0.5269844280150356;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.16744361931987567;  // std dev = 3.135, 66.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=31 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.061475665473661435;  // std dev = 1.165, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.42584904915918287;  // std dev = 1.174, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.4560067927040089;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.06955610743060683;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.346416076797536;  // std dev = 2.382, 46.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | | | else return -0.1452658964275661;  // std dev = 0.181, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.003576612553267034;  // std dev = 1.134, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.19210910380584095;  // std dev = 1.734, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, E) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then if ( complex(A, F) )
%   | | then return -0.08638569651278113;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.18239794268190504;  // std dev = 0.235, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3396246304269426;  // std dev = 1.301, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.14816461790055518;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.1771949209706904;  // std dev = 1.128, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.05461224459120864;  // std dev = 2.870, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.05895154163655372;  // std dev = 0.641, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2197703445981067;  // std dev = 2.349, 49.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.12919583901123194;  // std dev = 0.100, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.12347380997381259;  // std dev = 0.140, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( complex(G, H), phenotype(A, I) )
%   | | then return 0.09414679931606333;  // std dev = 1.056, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.08587333180407848;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.16742558247105224;  // std dev = 0.446, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18326852770022564;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.09864488137238135;  // std dev = 1.216, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.11605701654705856;  // std dev = 1.713, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3233112691816994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1740422920033296;  // std dev = 1.289, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.16757939868313737;  // std dev = 0.314, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22966138481287313;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.009197977928428414;  // std dev = 1.766, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.1352568979270458;  // std dev = 1.028, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.016332739647484856;  // std dev = 0.647, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.15194682690752104;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15539259047106724;  // std dev = 2.292, 49.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.06611815731226207;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1327509479123963;  // std dev = 0.119, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.5574540594265128;  // std dev = 0.233, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, J), interaction(J, G) )
%   | | | then return -0.2623624111241358;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.3713644839833135;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2081342516333713;  // std dev = 0.971, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.058621403610652205;  // std dev = 0.219, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.06573677470461875;  // std dev = 1.756, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.07973829541759736;  // std dev = 0.313, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | then return 0.19107836005217452;  // std dev = 0.226, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | else return -0.11703801974146394;  // std dev = 0.023, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then if ( phenotype(I, K) )
%   | | then if ( interaction(A, L), interaction(I, L) )
%   | | | then return 0.07175377492355425;  // std dev = 0.858, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.21047112942647256;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.13027668852988727;  // std dev = 0.825, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.16159774379053485;  // std dev = 0.972, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.897278
   AUC PR    = 0.82907
   CLL	      = -0.381548
   Precision = 0.803738 at threshold = 0.5
   Recall    = 0.988506
   F1        = 0.886598


Total learning time: 15.986 seconds
Total inference time: 3.319 seconds
AUC ROC: 0.897278


Results scoring model
   AUC ROC   = 0.976244
   AUC PR    = 0.975085
   CLL	      = -0.300567
   Precision = 0.870968 at threshold = 0.5
   Recall    = 0.964286
   F1        = 0.915254


Total scoring time: 3.224 seconds
Refined model CLL: -0.300567


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.897278
   AUC PR    = 0.82907
   CLL	      = -0.381548
   Precision = 0.803738 at threshold = 0.5
   Recall    = 0.988506
   F1        = 0.886598


Total learning time: 29.211000000000002 seconds
Total inference time: 3.319 seconds
AUC ROC: 0.897278
Total revision time: 29.211000000000002
Best scored revision CLL: -0.300567


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 18:21:21
{'AUC ROC': 0.897278, 'AUC PR': 0.82907, 'CLL': -0.381548, 'Precision': [0.803738, 0.5], 'Recall': 0.988506, 'F1': 0.886598, 'Learning time': 29.211000000000002, 'Inference time': 3.319, 'parameter_0.2': {'AUC ROC': 0.914057, 'AUC PR': 0.895026, 'CLL': -0.378325, 'Precision': [0.787037, 0.5], 'Recall': 0.977011, 'F1': 0.871795, 'Learning time': 6.758, 'Inference time': 3.687}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7445125714631483;  // std dev = 2.977, 88.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=78 */
%   | | | else return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.6302322013528495;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.498380757744019;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6281908794091159;  // std dev = 2.977, 88.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=78 */
%   | | | else return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.1377866547829789;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.24811816884741297;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.4930252128087158;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3990418766037683;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.10747156513904711;  // std dev = 3.106, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.18507799244100584;  // std dev = 2.685, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.26557862471042143;  // std dev = 3.689, 95.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4731591607542787;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(C, A), complex(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31685852391904623;  // std dev = 0.895, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.30590364655137575;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3477105275642494;  // std dev = 1.361, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.08915728218652873;  // std dev = 3.740, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.21491651081186364;  // std dev = 3.552, 95.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.29608972520175836;  // std dev = 0.927, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.5028129845031671;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5028129845031671;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.07424155593173853;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.38664454570330875;  // std dev = 2.964, 88.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=78 */
%   | | | else return -0.15417962091686993;  // std dev = 0.140, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14143994899548074;  // std dev = 2.690, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(C, F) )
%   | | then if ( complex(D, E), interaction(C, D) )
%   | | | then return 0.31131851093444374;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.02770958960927365;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2736262922760425;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.17344622697700907;  // std dev = 1.408, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.031594319399289174;  // std dev = 2.939, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.10809604876010816;  // std dev = 2.330, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1227600400229649;  // std dev = 3.041, 95.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.15862117900327066;  // std dev = 1.146, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.21923356655919898;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.27064678122557934;  // std dev = 2.965, 95.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=85 */
%   | | else return -0.15257767409892398;  // std dev = 0.441, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.03941084944282869;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2853192025166006;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1039253635232079;  // std dev = 2.678, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.15699168193697302;  // std dev = 0.844, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.003480508270688035;  // std dev = 2.877, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2970558906976857;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07249408245829839;  // std dev = 2.155, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.281779062616759;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09361586413613758;  // std dev = 1.174, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.13480777470108674;  // std dev = 1.063, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.049385894763165475;  // std dev = 2.503, 71.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.11239162005241302;  // std dev = 1.105, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16164198910215855;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19546515729947417;  // std dev = 2.951, 95.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=85 */
%   | | else return -0.14058909571458414;  // std dev = 0.400, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), complex(A, H) )
%   | | | then return -0.06308368595034648;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.016922529581710605;  // std dev = 2.208, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.27590204307584554;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.014287862130445436;  // std dev = 2.584, 67.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=34 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return 0.2966289259597254;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.216991349464744;  // std dev = 1.670, 63.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=60 */
%   | | else return -0.13040438781729638;  // std dev = 0.354, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), complex(A, I) )
%   | | | then return -0.05053213195273184;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.01342921950471287;  // std dev = 2.208, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.2110785678858943;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.919871
   AUC PR    = 0.894368
   CLL	      = -0.364082
   Precision = 0.805825 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.873684


Total learning time: 8.244 seconds
Total inference time: 3.313 seconds
AUC ROC: 0.919871


Results scoring model
   AUC ROC   = 0.962333
   AUC PR    = 0.957145
   CLL	      = -0.320692
   Precision = 0.884956 at threshold = 0.5
   Recall    = 0.892857
   F1        = 0.888889


Total scoring time: 3.737 seconds
Parameter learned model CLL: -0.320692


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), complex(A, K)'}, {'true,true,true': [0.943, 1, 8], 'true,true,false,true': [2.11e-08, 0, 3], 'true,true,false,false': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 0], 'false,true': [1.477, 3, 8], 'false,false,true,true': [2.977, 10, 78], 'false,false,true,false': [7.6e-08, 79, 0], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [2.268, 12, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), complex(A, K)'}, {'true,true,true': [0.943, 1, 8], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true': [1.477, 3, 8], 'false,false,true,true': [2.977, 10, 78], 'false,false,true,false': [0.0, 79, 0], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [2.268, 12, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.943, 1, 8], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true': [1.477, 3, 8], 'false,false,true,true': [3.106, 37, 19], 'false,false,true,false': [2.685, 28, 19], 'false,false,false,true': [3.689, 43, 52], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), complex(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.06, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.895, 1, 7], 'true,false': [0.0, 0, 0], 'false,true': [1.477, 3, 8], 'false,false,true,true': [1.361, 3, 9], 'false,false,true,false': [3.74, 62, 29], 'false,false,false,true': [3.552, 43, 52], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.927, 1, 14], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [1.309, 3, 4], 'false,false,true,true': [2.964, 10, 78], 'false,false,true,false': [0.14, 79, 0], 'false,false,false,true': [2.69, 19, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'complex(A, E), complex(C, F)', 'true,true,true': 'complex(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.041, 0, 7], 'true,true,true,false': [0.78, 1, 2], 'true,true,false': [0.027, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [1.408, 3, 8], 'false,false,true,true': [2.939, 37, 19], 'false,false,true,false': [2.33, 28, 19], 'false,false,false,true': [3.041, 43, 52], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), complex(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [1.146, 2, 9], 'true,false,true,true': [0.022, 0, 3], 'true,false,true,false': [2.965, 10, 85], 'true,false,false': [0.441, 80, 0], 'false,true,true,true': [0.758, 1, 2], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [2.678, 19, 12], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.844, 1, 14], 'true,false': [0.0, 0, 0], 'false,true,true': [2.877, 37, 19], 'false,true,false,true': [0.009, 0, 5], 'false,true,false,false': [2.155, 28, 18], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.174, 3, 3], 'false,false,false,true': [1.063, 9, 15], 'false,false,false,false': [2.503, 34, 37]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'complex(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), complex(A, H)'}, {'true,true': [1.105, 2, 9], 'true,false,true,true': [0.017, 0, 3], 'true,false,true,false': [2.951, 10, 85], 'true,false,false': [0.4, 80, 0], 'false,true,true,true': [0.761, 1, 2], 'false,true,true,false': [2.208, 16, 8], 'false,true,false': [1.361, 3, 5], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), complex(A, I)'}, {'true,true': [2.584, 33, 34], 'true,false,true,true': [0.125, 0, 3], 'true,false,true,false': [1.67, 3, 60], 'true,false,false': [0.354, 56, 0], 'false,true,true,true': [0.759, 1, 2], 'false,true,true,false': [2.208, 16, 8], 'false,true,false': [1.361, 3, 5], 'false,false': [0.0, 0, 0]}]]
[{'': [0.06222222222222188, 0.2490327602390061], 'false': [0.19834710743801634, 0.24793388429752075], 'false,false': [0.2489153429667613, 0.23725286160249692], 'false,false,true': [0.10072314049586789, 7.307797124114954e-17], 'false,false,false': [0.20999999999999988, 0.2448979591836735], 'true': [0.06222222222222188, nan], 'true,true': [0.09876543209876527, -1.4802973661668753e-16], 'true,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}, {'': [0.061170617750960034, 0.20424026824547462], 'false': [0.1983471074380164, 0.20163725474333943], 'false,false': [0.19465489398324876, 0.2363006352317155], 'false,false,false': [0.20999999999999996, 0.2448979591836732], 'false,false,true': [0.1007231404958703, -2.5296220814244072e-17], 'true': [0.061170617750960034, nan], 'true,true': [0.09876543209876543, 7.401486830834377e-17], 'true,true,false': [0.0, 0.0]}, {'': [0.06019200202774767, 0.16243930856528846], 'false': [0.19834710743801642, 0.15839585173525686], 'false,false': [0.1651721274349276, 0.14321786258976996], 'false,false,true': [0.172313041108117, 0.15338929579660507], 'false,false,false': [0.14321786258976996, nan], 'true': [0.06019200202774767, nan], 'true,true': [0.09876543209876543, -7.401486830834377e-17], 'true,true,false': [0.0, 0.0]}, {'': [0.05977133131985225, 0.15311733890946344], 'false': [0.19834710743801648, 0.14956209878323448], 'false,false': [0.16066078671790762, 0.13277083784951796], 'false,false,true': [0.15431897649313706, 0.1537087454204032], 'false,false,false': [0.13277083784951796, nan], 'true': [0.05977133131985225, nan], 'true,true': [0.0005160716991164145, 0.10021906858628297], 'true,true,false': [nan, 0.10021906858628307]}, {'': [0.05734934573503676, 0.1459379236499467], 'false': [0.1983471074380166, 0.1425247907329628], 'false,true': [0.0, 0.24489795918367346], 'false,false': [0.1256196501678498, 0.23349903491096505], 'false,false,false': [0.23349903491096505, nan], 'false,false,true': [0.09980646435857979, 0.00024670100175988233], 'true': [0.05734934573503676, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.057722433947899894, 0.1228195916589941], 'false': [0.18011206480726294, 0.1193002445479352], 'false,false': [0.13805592221835586, 0.09731877037170847], 'false,false,true': [0.1542932272395685, 0.1155273963400433], 'false,false,false': [0.09731877037170847, nan], 'true': [0.057722433947899894, nan], 'true,true': [0.0851437815387484, 0.00014768854259202823], 'true,true,true': [0.00023462909554518494, 0.20280710016875925]}, {'': [0.09631531675232392, 0.22402050781421096], 'false': [0.22402050781421096, nan], 'false,true': [0.16338549507545072, 0.23140288529186626], 'false,true,true': [0.19148492510587423, 0.0], 'true': [0.11946657781295446, 0.09452088990938252], 'true,false': [0.08979461102916837, 0.002426632917343005], 'true,false,true': [0.00015416766024237138, 0.09254444395477529]}, {'': [0.0474541909338877, 0.10760425355121604], 'false': [0.12494545029742625, 0.08927389880216068], 'false,true': [0.1477856682817981, 0.09552920948025238], 'false,true,false': [1.5753428968012793e-05, 0.1009671847477446], 'false,false': [0.2140261937800187, 0.07923676360032417], 'false,false,true': [0.0, 0.22956560450071525], 'false,false,false': [0.04712434509042924, 0.08824823887677395], 'true': [0.0474541909338877, nan]}, {'': [0.07980750872697188, 0.2219228685620596], 'false': [0.2219228685620596, nan], 'false,true': [0.20266042507012974, 0.2315806445886931], 'false,true,true': [0.19288918933676003, 0.20317060792304967], 'true': [0.110916282077751, 0.07761170623209374], 'true,false': [0.08889527165177848, 0.001995587359003928], 'true,false,true': [9.602357720710682e-05, 0.09166443781960411]}, {'': [0.0719232628622738, 0.21638790929886667], 'false': [0.21638790929886667, nan], 'false,true': [0.2023535223810349, 0.23141175502745567], 'false,true,true': [0.19212305792368398, 0.2031777688292857], 'true': [0.09968299633620681, 0.054748608906517185], 'true,false': [0.042744730949098544, 0.002240380335520518], 'true,false,true': [0.005179192206604029, 0.04424528687322194]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D), complex(D, E).;true;true
0;true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), complex(D, E).;true;true
1;true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), complex(D, E).;true;true
2;true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, E), complex(C, F).;true;true
5;true,true;complex(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), complex(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(A, E).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), interaction(A, F).;true;true
7;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;complex(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(A, E).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7445125714631483;  // std dev = 2.977, 88.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=78 */
%   | | | else return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.6526478931012827;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6281908794091159;  // std dev = 2.977, 88.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=78 */
%   | | | else return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.09962996053153489;  // std dev = 1.703, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.3174381009096997;  // std dev = 1.992, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.508738411682717;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, F), complex(F, H) )
%   | | then return 0.38007548617148557;  // std dev = 1.031, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, I), phenotype(F, J) )
%   | | | then return -0.09742881034126785;  // std dev = 0.731, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.10508119983572348;  // std dev = 2.050, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.49411681378094346;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.14884829606754968;  // std dev = 2.829, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | else if ( complex(A, N), phenotype(A, P) )
%   | | | then return 0.42584184912063944;  // std dev = 1.076, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.25643024559453936;  // std dev = 3.751, 92.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=49 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then return 0.45277793384598153;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21600206497885854;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, F), interaction(A, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5335998173852509;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, I), complex(G, J) )
%   | | | then return 0.2193744122885756;  // std dev = 1.993, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.05535266742241507;  // std dev = 3.207, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( phenotype(L, M), enzyme(L, N) )
%   | | | then return 0.13836966845942414;  // std dev = 2.050, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.30854903459955724;  // std dev = 2.485, 54.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=36 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.06719221666684926;  // std dev = 1.324, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.27202634164272477;  // std dev = 1.178, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.0421953289906386;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3599160865297262;  // std dev = 0.123, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.4475584143315464;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.07091027102995244;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3132741932265099;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3765088149728445;  // std dev = 2.890, 88.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=78 */
%   | | | else return -0.1492886101126023;  // std dev = 0.199, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.06364702919482511;  // std dev = 1.970, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.2541164901836297;  // std dev = 1.653, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, E) )
%   | then if ( complex(F, D), interaction(C, F) )
%   | | then return 0.2957814608608687;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.5973412912331145;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.28366475960346477;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then if ( complex(A, G) )
%   | | then return -0.10551087648060618;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.25290845293797065;  // std dev = 0.336, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.17407520719215028;  // std dev = 1.138, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.02180937395968607;  // std dev = 2.036, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.054384256543678934;  // std dev = 1.479, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.14279821250037628;  // std dev = 3.836, 124.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=66 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2571676826930551;  // std dev = 0.111, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.023138619468668187;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.2550737605296418;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26470975785455186;  // std dev = 2.852, 95.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=85 */
%   | | else return -0.14484657498552805;  // std dev = 0.377, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0.02844784560044818;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -6.235476051053031E-4;  // std dev = 1.632, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.15807565955385747;  // std dev = 1.968, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.155747029225228;  // std dev = 0.168, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.11700707939034574;  // std dev = 1.730, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return -0.07919372421288472;  // std dev = 1.985, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2924801902631144;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06962187418278379;  // std dev = 2.006, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.39879712534019796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05974722769806596;  // std dev = 1.021, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.16629305956702078;  // std dev = 0.621, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.054408403373977524;  // std dev = 2.599, 83.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=43 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.12922510048797287;  // std dev = 0.252, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.18559582034765543;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1906286262535625;  // std dev = 2.825, 95.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=85 */
%   | | else return -0.13354181594065156;  // std dev = 0.377, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( enzyme(A, F), complex(A, G) )
%   | then return -0.12693678257209262;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5350391569000594;  // std dev = 0.897, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.34075557554474745;  // std dev = 0.212, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.12488005010745229;  // std dev = 0.623, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13802243130243655;  // std dev = 1.101, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1308177459089249;  // std dev = 0.136, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.0356000707483413;  // std dev = 0.306, 55.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=23 */
%   | else return 0.05795024356171991;  // std dev = 0.228, 122.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=63 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3191549943780875;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.3201418890658138;  // std dev = 0.177, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5198934788308396;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.24228667456746478;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.055304869853566856;  // std dev = 1.051, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.10746154014532615;  // std dev = 1.098, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */


Results
   AUC ROC   = 0.8877
   AUC PR    = 0.830653
   CLL	      = -0.391793
   Precision = 0.786408 at threshold = 0.5
   Recall    = 0.931034
   F1        = 0.852632


Total learning time: 20.714 seconds
Total inference time: 3.534 seconds
AUC ROC: 0.8877


Results scoring model
   AUC ROC   = 0.978037
   AUC PR    = 0.972668
   CLL	      = -0.287404
   Precision = 0.913793 at threshold = 0.5
   Recall    = 0.946429
   F1        = 0.929825


Total scoring time: 3.962 seconds
Refined model CLL: -0.287404


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.8877
   AUC PR    = 0.830653
   CLL	      = -0.391793
   Precision = 0.786408 at threshold = 0.5
   Recall    = 0.931034
   F1        = 0.852632


Total learning time: 36.657000000000004 seconds
Total inference time: 3.534 seconds
AUC ROC: 0.8877
Total revision time: 36.657000000000004
Best scored revision CLL: -0.287404


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 18:22:06
{'AUC ROC': 0.8877, 'AUC PR': 0.830653, 'CLL': -0.391793, 'Precision': [0.786408, 0.5], 'Recall': 0.931034, 'F1': 0.852632, 'Learning time': 36.657000000000004, 'Inference time': 3.534, 'parameter_0.4': {'AUC ROC': 0.919871, 'AUC PR': 0.894368, 'CLL': -0.364082, 'Precision': [0.805825, 0.5], 'Recall': 0.954023, 'F1': 0.873684, 'Learning time': 8.244, 'Inference time': 3.313}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6359267128772901;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7461489350995105;  // std dev = 3.526, 125.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=111 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.3429974199479972;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5398498420741679;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6295137233665141;  // std dev = 3.526, 125.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=111 */
%   | | | else return -0.12544463852839105;  // std dev = 8.30e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.18701313901080718;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.2959222839173268;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.4289562725350849;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.12297474685633923;  // std dev = 3.888, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | | | else return 0.18796831383462592;  // std dev = 3.372, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.24734016434455378;  // std dev = 4.411, 136.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=71 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4463759664769329;  // std dev = 0.274, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(C, A), enzyme(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.35823223609049565;  // std dev = 0.681, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3264400476801372;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3067165778612425;  // std dev = 1.703, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.1051817795423392;  // std dev = 4.732, 143.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=49 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2011396210113998;  // std dev = 4.255, 136.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=71 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.30731878658594625;  // std dev = 0.749, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.1339203880033343;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.46725372133666765;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19452644860939491;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.393745118024198;  // std dev = 3.518, 125.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=111 */
%   | | | else return -0.15258938312474268;  // std dev = 0.139, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.17215781859190088;  // std dev = 3.396, 47.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(C, F) )
%   | | then if ( enzyme(D, E), interaction(C, D) )
%   | | | then return 0.1496888723804069;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2692286096345611;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2607359569519234;  // std dev = 0.036, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.18518404205541195;  // std dev = 1.732, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.04413597520663602;  // std dev = 3.650, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | | | else return 0.1036544430101854;  // std dev = 2.964, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1142383771727088;  // std dev = 3.631, 136.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=71 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then return 0.08928374471547577;  // std dev = 1.459, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.2110657913329282;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2694084759852511;  // std dev = 3.632, 140.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=125 */
%   | | else return -0.14520822438169315;  // std dev = 0.167, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.044663838532666186;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22061222768387415;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1220597747579497;  // std dev = 3.392, 47.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1690033723935134;  // std dev = 0.738, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.007864875962156175;  // std dev = 3.612, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2934365044517821;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06880918049665047;  // std dev = 2.779, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.2586457695285789;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0012770217592368046;  // std dev = 1.396, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.050534868124644056;  // std dev = 2.187, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return 0.07521400461315177;  // std dev = 2.432, 84.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=44 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then return 0.05628502204566271;  // std dev = 1.435, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1546627107370227;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1950219684156417;  // std dev = 3.616, 140.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=125 */
%   | | else return -0.13415694734480801;  // std dev = 0.182, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), enzyme(A, H) )
%   | | | then return -0.5379790905441169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09168880967027783;  // std dev = 2.681, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else return 0.10820148794298111;  // std dev = 2.084, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.03151956349028481;  // std dev = 3.099, 99.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=45 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return 0.28398579654217393;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22239259084456448;  // std dev = 2.010, 98.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=94 */
%   | | else return -0.12855213386806744;  // std dev = 0.547, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), enzyme(A, I) )
%   | | | then return -0.40473611010160065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07228295673131079;  // std dev = 2.683, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else return 0.08218576195913586;  // std dev = 2.083, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.918549
   AUC PR    = 0.891542
   CLL	      = -0.36601
   Precision = 0.805825 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.873684


Total learning time: 9.799 seconds
Total inference time: 3.464 seconds
AUC ROC: 0.918549


Results scoring model
   AUC ROC   = 0.961714
   AUC PR    = 0.956027
   CLL	      = -0.319328
   Precision = 0.891566 at threshold = 0.5
   Recall    = 0.87574
   F1        = 0.883582


Total scoring time: 4.284 seconds
Parameter learned model CLL: -0.319328


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false,true': [0.0, 0, 15], 'true,true,false,false': [2.98e-08, 0, 7], 'true,false': [0.0, 0, 0], 'false,true': [1.764, 4, 14], 'false,false,true,true': [3.526, 14, 111], 'false,false,true,false': [0.0, 124, 0], 'false,false,false,true': [1.793, 9, 5], 'false,false,false,false': [2.871, 17, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false,true': [5.16e-08, 0, 15], 'true,true,false,false': [0.0, 0, 7], 'true,false': [0.0, 0, 0], 'false,true': [1.764, 4, 14], 'false,false,true,true': [3.526, 14, 111], 'false,false,true,false': [8.3e-08, 124, 0], 'false,false,false,true': [1.793, 9, 5], 'false,false,false,false': [2.871, 17, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.707, 1, 1], 'true,true,false,true': [0.0, 0, 7], 'true,true,false,false': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false,true': [1.764, 4, 14], 'false,false,true,true': [3.888, 57, 31], 'false,false,true,false': [3.372, 42, 30], 'false,false,false,true': [4.411, 65, 71], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), enzyme(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.274, 0, 10], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.681, 1, 11], 'true,false': [0.0, 0, 0], 'false,true': [1.764, 4, 14], 'false,false,true,true': [1.703, 5, 12], 'false,false,true,false': [4.732, 94, 49], 'false,false,false,true': [4.255, 65, 71], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.749, 1, 23], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [0.0, 0, 4], 'false,true,false': [1.477, 3, 8], 'false,false,true,true': [3.518, 14, 111], 'false,false,true,false': [0.139, 124, 0], 'false,false,false,true': [3.396, 26, 21], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'enzyme(A, E), enzyme(C, F)', 'true,true,true': 'enzyme(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.725, 1, 3], 'true,true,true,false': [0.0, 0, 2], 'true,true,false': [0.036, 0, 18], 'true,false': [0.0, 0, 0], 'false,true': [1.732, 4, 14], 'false,false,true,true': [3.65, 57, 31], 'false,false,true,false': [2.964, 42, 30], 'false,false,false,true': [3.631, 65, 71], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), enzyme(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [1.459, 3, 8], 'true,false,true,true': [0.02, 0, 9], 'true,false,true,false': [3.632, 15, 125], 'true,false,false': [0.167, 124, 0], 'false,true,true,true': [0.611, 1, 3], 'false,true,true,false': [0.001, 0, 3], 'false,true,false': [3.392, 26, 21], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.738, 1, 23], 'true,false': [0.0, 0, 0], 'false,true,true': [3.612, 58, 31], 'false,true,false,true': [0.039, 0, 5], 'false,true,false,false': [2.779, 42, 30], 'false,false,true,true': [5.27e-09, 0, 3], 'false,false,true,false': [1.396, 3, 6], 'false,false,false,true': [2.187, 25, 27], 'false,false,false,false': [2.432, 40, 44]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'enzyme(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), enzyme(A, H)'}, {'true,true': [1.435, 3, 8], 'true,false,true,true': [0.016, 0, 9], 'true,false,true,false': [3.616, 15, 125], 'true,false,false': [0.182, 124, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.681, 17, 18], 'false,true,false': [2.084, 9, 9], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), enzyme(A, I)'}, {'true,true': [3.099, 54, 45], 'true,false,true,true': [0.071, 0, 3], 'true,false,true,false': [2.01, 4, 94], 'true,false,false': [0.547, 84, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.683, 17, 18], 'false,true,false': [2.083, 9, 9], 'false,false': [0.0, 0, 0]}]]
[{'': [0.039930555555556024, 0.24877276968639714], 'false': [0.1728395061728392, 0.2470781592403239], 'false,false': [0.24706053128175653, 0.24717066545948382], 'false,false,false': [0.2295918367346937, 0.24977043158861298], 'false,false,true': [0.0994560000000032, -7.162729191130042e-18], 'true': [0.039930555555556024, nan], 'true,true': [0.25, -1.6148698540002277e-16], 'true,true,false': [-2.3684757858670006e-16, 1.2688263138573217e-16]}, {'': [0.03372021549911667, 0.20374343600416966], 'false': [0.17283950617283925, 0.20097558248098688], 'false,false': [0.19241594469481504, 0.24624049036551404], 'false,false,false': [0.22959183673469385, 0.24977043158861384], 'false,false,true': [0.09945600000000224, 5.551115123125783e-17], 'true': [0.03372021549911667, nan], 'true,true': [0.25000000000000006, 8.074349270001139e-17], 'true,true,false': [1.7763568394002506e-16, -6.344131569286608e-17]}, {'': [0.0276604783502102, 0.16179008578108142], 'false': [0.17283950617283989, 0.15800521410635304], 'false,false': [0.16657135059918143, 0.14303686952506364], 'false,false,true': [0.1717640940315537, 0.15790137412013058], 'false,false,false': [0.14303686952506364, nan], 'true': [0.0276604783502102, nan], 'true,true': [0.24999999999999997, -1.6148698540002277e-16], 'true,true,false': [-6.344131569286608e-17, -5.921189464667501e-17]}, {'': [0.02424638034283655, 0.15283930001682167], 'false': [0.1728395061728396, 0.15005112841277368], 'false,false': [0.16190357124537255, 0.133103336071598], 'false,false,true': [0.17050643385107525, 0.15656537410154808], 'false,false,false': [0.133103336071598, nan], 'true': [0.02424638034283655, nan], 'true,true': [0.007497334017957313, 0.03356494308263423], 'true,true,false': [0.0, 0.03865706051611086]}, {'': [0.023367107909171052, 0.14633196823381991], 'false': [0.17283950617283939, 0.14395740352821196], 'false,true': [0.12244897959183675, 0.1983471074380165], 'false,false': [0.1244125760017816, 0.2453595461591841], 'false,false,false': [0.2453595461591841, nan], 'false,false,true': [0.09903437084271113, 0.00015539031770070343], 'false,true,true': [0.2222222222222222, 0.0], 'true': [0.023367107909171052, nan]}, {'': [0.02367550583871106, 0.12332759893741987], 'false': [0.16673417740429505, 0.12017758520127418], 'false,false': [0.1390453388893883, 0.09696587998360529], 'false,false,true': [0.15141361979160226, 0.1219802047146907], 'false,false,false': [0.09696587998360529, nan], 'true': [0.02367550583871106, nan], 'true,true': [0.09068351391989887, 7.212514958787608e-05], 'true,true,true': [0.13126202128558426, 0.0]}, {'': [0.0944154984633249, 0.22100299633626003], 'false': [0.22100299633626003, nan], 'false,true': [0.06094609368482472, 0.24484074535330752], 'true': [0.19362463935659707, 0.09041409166200273], 'true,false': [0.08871031814729646, 0.00022482092202523766], 'true,false,true': [4.5724922799225994e-05, 0.09420458203799525], 'false,true,true': [0.09338766527720657, 4.730978936939856e-07]}, {'': [0.022722498467701756, 0.10861804580272924], 'false': [0.1279771430651254, 0.08663181926323893], 'false,true': [0.14661567784377944, 0.1033752741759942], 'false,true,false': [0.00030259880912411055, 0.10725664205767475], 'false,false': [0.17518132458940192, 0.07881827878521344], 'false,false,true': [9.25185853854297e-18, 0.21668513509482354], 'false,false,false': [0.0919951585600186, 0.0704282869367428], 'true': [0.022722498467701756, nan]}, {'': [0.07889297583503953, 0.22086297702259827], 'false': [0.22086297702259827, nan], 'false,true': [0.21030371073368265, 0.24121068637717924], 'false,true,true': [0.0, 0.2052990086120941], 'true': [0.1872168367671687, 0.07452259725891827], 'true,false': [0.087826793915011, 0.00026795995506034484], 'true,false,true': [2.8277778960201288e-05, 0.09337259613654401]}, {'': [0.0713101743927863, 0.2178301115272937], 'false': [0.2178301115272937, nan], 'false,true': [0.20606537324250865, 0.24100220348670698], 'false,true,true': [0.0, 0.20563220005398114], 'true': [0.09699129641479237, 0.05438385975824014], 'true,false': [0.04014859478163862, 0.003557286902546808], 'true,false,true': [0.00167264550933649, 0.04121374512221286]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D), enzyme(D, E).;true;true
0;true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), enzyme(D, E).;true;true
1;true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), enzyme(D, E).;true;true
2;true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(E, A).;true;true
3;true,false;interaction(C, A), enzyme(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, E), enzyme(C, F).;true;true
5;true,true;enzyme(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), enzyme(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(A, E).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), interaction(A, F).;true;true
7;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;enzyme(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(A, E).;true;true
8;false;interaction(G, F), interaction(A, G).;true;true
8;false,true;recursion_proteinclass(F, B), enzyme(A, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
9;true,false,true;interaction(F, C), interaction(F, E).;true;true
9;false;interaction(H, G), interaction(A, H).;true;true
9;false,true;recursion_proteinclass(G, B), enzyme(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.7956489350995123;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), complex(A, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6763307532813305;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7461489350995105;  // std dev = 3.526, 125.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=111 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.25208832903890627;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.42957750652808374;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.686099930323527;  // std dev = 0.199, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.7370710508940469;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.43578253100654735;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.1860834102389029;  // std dev = 1.040, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7546686895771393;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6295137233665141;  // std dev = 3.526, 125.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=111 */
%   | | | else return -0.12544463852839105;  // std dev = 8.30e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2185513014981362;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.3688769765977055;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.5163979812167332;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.5635915412215327;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13591329081626707;  // std dev = 0.078, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(F, G), enzyme(A, H) )
%   | | | then return -0.10470001360080947;  // std dev = 0.825, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.14517442358188215;  // std dev = 2.049, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), complex(J, K) )
%   | | | then return 0.6392635341466587;  // std dev = 0.210, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.21635676742069107;  // std dev = 1.120, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.18179739143056975;  // std dev = 3.219, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | | else return 0.24424982580666108;  // std dev = 5.383, 187.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=96 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3999638068735188;  // std dev = 0.198, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(D, F), interaction(A, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return -0.19682419255364608;  // std dev = 0.406, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.025073432903811258;  // std dev = 1.030, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4126605855498797;  // std dev = 1.262, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.12301993204883893;  // std dev = 3.073, 83.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4617544007221282;  // std dev = 0.965, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.1993511471436673;  // std dev = 0.406, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.14772961737658327;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.2300831526966354;  // std dev = 4.406, 139.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=78 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3048787802718328;  // std dev = 0.198, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.21635257161202617;  // std dev = 0.453, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.48130257679076194;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.3758514421535417;  // std dev = 0.630, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06422249433115573;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3850548453512957;  // std dev = 3.374, 125.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=111 */
%   | | | else return -0.14656126393549251;  // std dev = 0.269, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.11077700282756549;  // std dev = 2.522, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.19182159376588181;  // std dev = 2.227, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, E) )
%   | then return 0.12176988876772817;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2786670254338496;  // std dev = 0.046, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(F, F), enzyme(F, G) )
%   | | then return -0.27474516516303404;  // std dev = 0.281, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.03617300520595807;  // std dev = 1.583, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.06588623087361978;  // std dev = 0.845, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), complex(J, K) )
%   | | | then return 0.3687297237605345;  // std dev = 0.142, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.06099822197354427;  // std dev = 1.000, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.16137306805267002;  // std dev = 2.628, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | | else return 0.09938079994581368;  // std dev = 4.746, 207.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=100 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.2877039784554089;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.010150521701696577;  // std dev = 0.731, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.22951299101481684;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.266449783563431;  // std dev = 3.412, 140.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=125 */
%   | | else return -0.13843643076608303;  // std dev = 0.301, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return -0.07146769323899689;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I) )
%   | | | then return 0.11335888686807694;  // std dev = 3.244, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return -0.062212869796158865;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16828272026551394;  // std dev = 0.188, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.13572603663600016;  // std dev = 1.292, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.0313412651511573;  // std dev = 3.030, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.32615321438101275;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.061290457213854545;  // std dev = 2.739, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.22929449808991242;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04545345192836527;  // std dev = 0.986, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.021381879682782608;  // std dev = 1.394, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.08147648235617838;  // std dev = 2.849, 115.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=62 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.18847806273162707;  // std dev = 0.145, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.06590801012044545;  // std dev = 0.586, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.16681183856993945;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1925366489488704;  // std dev = 3.373, 140.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=125 */
%   | | else return -0.12862577776403353;  // std dev = 0.322, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( interaction(G, H), interaction(A, G) )
%   | then if ( recursion_proteinclass(H, B), enzyme(A, I) )
%   | | then return -0.5289108111483309;  // std dev = 0.319, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.20437917215522305;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06410105900510228;  // std dev = 3.184, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | else return 0.08111102616245994;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.06260252740317154;  // std dev = 0.186, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.1535801499893805;  // std dev = 1.868, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.012780095900772727;  // std dev = 1.293, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | then return 0.21474251764855823;  // std dev = 0.191, 101.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=97 */
%   | | else return -0.1297052507431686;  // std dev = 0.319, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(I, J), interaction(A, I) )
%   | then if ( recursion_proteinclass(J, B), enzyme(A, K) )
%   | | then return -0.4241566946830491;  // std dev = 0.311, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.10069104705418348;  // std dev = 2.333, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.025081414821714186;  // std dev = 2.171, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else return 0.0612907654665939;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.910226
   AUC PR    = 0.867614
   CLL	      = -0.367499
   Precision = 0.792453 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.870466


Total learning time: 48.725 seconds
Total inference time: 4.021 seconds
AUC ROC: 0.910226


Results scoring model
   AUC ROC   = 0.972673
   AUC PR    = 0.96813
   CLL	      = -0.29442
   Precision = 0.899408 at threshold = 0.5
   Recall    = 0.899408
   F1        = 0.899408


Total scoring time: 6.546 seconds
Refined model CLL: -0.29442


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.910226
   AUC PR    = 0.867614
   CLL	      = -0.367499
   Precision = 0.792453 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.870466


Total learning time: 69.354 seconds
Total inference time: 4.021 seconds
AUC ROC: 0.910226
Total revision time: 69.354
Best scored revision CLL: -0.29442


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 18:23:24
{'AUC ROC': 0.910226, 'AUC PR': 0.867614, 'CLL': -0.367499, 'Precision': [0.792453, 0.5], 'Recall': 0.965517, 'F1': 0.870466, 'Learning time': 69.354, 'Inference time': 4.021, 'parameter_0.6': {'AUC ROC': 0.918549, 'AUC PR': 0.891542, 'CLL': -0.36601, 'Precision': [0.805825, 0.5], 'Recall': 0.954023, 'F1': 0.873684, 'Learning time': 9.799, 'Inference time': 3.464}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6763307532813305;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7110901115700978;  // std dev = 4.618, 170.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=145 */
%   | | | else return -0.14185106490048818;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.3733004502510275;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.657810671461647;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.7194734122109545;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5728505077589573;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6011175673852852;  // std dev = 4.618, 170.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=145 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.32153806159310183;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.24811816884741328;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.5123505661168763;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.45250734201965803;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.14246894014007755;  // std dev = 4.321, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
%   | | | else return 0.19392897477266155;  // std dev = 3.998, 96.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=40 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.22402492341564706;  // std dev = 5.474, 191.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=94 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.45104740252978254;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(C, A), phenotype(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3578080690225992;  // std dev = 0.925, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.34273989085368045;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3994879310678644;  // std dev = 1.840, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return 0.10189808732663616;  // std dev = 5.335, 178.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=60 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1824304065531333;  // std dev = 5.330, 191.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=94 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.30952614689271657;  // std dev = 0.951, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.10586197498999388;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4391953083233272;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.22490959403761293;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.37517954711745494;  // std dev = 4.617, 170.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=145 */
%   | | | else return -0.15099853518200232;  // std dev = 0.118, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1871910595118161;  // std dev = 3.898, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(C, F) )
%   | | then if ( phenotype(D, E), interaction(C, D) )
%   | | | then return 0.2817163310857052;  // std dev = 0.038, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.26588961063402095;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.20755350867857972;  // std dev = 0.932, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.1956373542034499;  // std dev = 1.781, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.05379146750890667;  // std dev = 3.988, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
%   | | | else return 0.10821735360026342;  // std dev = 3.550, 96.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=40 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10037045171551585;  // std dev = 4.730, 191.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=94 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then return 0.1590005807466805;  // std dev = 1.516, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.2220271381844637;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2566361812456196;  // std dev = 4.708, 188.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=162 */
%   | | else return -0.14349424506280292;  // std dev = 0.135, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.011490518294701352;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22329651798761854;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12980130649686314;  // std dev = 3.896, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1689443990870955;  // std dev = 0.921, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.01893720196202087;  // std dev = 3.940, 109.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=41 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2947932648275837;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06524673329415838;  // std dev = 3.319, 94.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=38 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.2522799714810809;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.019280786667271288;  // std dev = 1.465, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.02551002942368704;  // std dev = 3.575, 97.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=49 */
%   | | | else return 0.08247686868867951;  // std dev = 2.524, 94.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=45 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.10669969337719498;  // std dev = 1.494, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16182210227222443;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.18518220275970732;  // std dev = 4.683, 188.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=162 */
%   | | else return -0.1325517785130011;  // std dev = 0.149, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), phenotype(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07553062671686009;  // std dev = 3.002, 40.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | else return 0.10101198318672437;  // std dev = 2.633, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.03370558911735616;  // std dev = 3.682, 137.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=63 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return 0.08424007723775975;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.22318239280014268;  // std dev = 2.772, 131.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=123 */
%   | | else return -0.12563791830001692;  // std dev = 0.606, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.058875234612757496;  // std dev = 3.002, 40.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | | else return 0.07659848792489636;  // std dev = 2.633, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.936319
   AUC PR    = 0.926584
   CLL	      = -0.359562
   Precision = 0.805825 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.873684


Total learning time: 10.964 seconds
Total inference time: 3.492 seconds
AUC ROC: 0.936319


Results scoring model
   AUC ROC   = 0.949689
   AUC PR    = 0.93976
   CLL	      = -0.33963
   Precision = 0.867257 at threshold = 0.5
   Recall    = 0.871111
   F1        = 0.86918


Total scoring time: 4.527 seconds
Parameter learned model CLL: -0.33963


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true,true': [0.961, 1, 12], 'true,true,false,true': [0.0, 0, 12], 'true,true,false,false': [0.0, 0, 9], 'true,false': [0.0, 0, 0], 'false,true': [1.809, 4, 18], 'false,false,true,true': [4.618, 25, 145], 'false,false,true,false': [0.0, 163, 0], 'false,false,false,true': [2.871, 16, 17], 'false,false,false,false': [2.619, 16, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true,true': [0.961, 1, 12], 'true,true,false,true': [4.21e-08, 0, 12], 'true,true,false,false': [2.98e-08, 0, 9], 'true,false': [0.0, 0, 0], 'false,true': [1.809, 4, 18], 'false,false,true,true': [4.618, 25, 145], 'false,false,true,false': [0.0, 163, 0], 'false,false,false,true': [2.871, 16, 17], 'false,false,false,false': [2.619, 16, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.961, 1, 12], 'true,true,false,true': [0.0, 0, 6], 'true,true,false,false': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false,true': [1.809, 4, 18], 'false,false,true,true': [4.321, 67, 40], 'false,false,true,false': [3.998, 56, 40], 'false,false,false,true': [5.474, 97, 94], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), phenotype(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.077, 0, 16], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.925, 1, 15], 'true,false': [0.0, 0, 0], 'false,true': [1.809, 4, 18], 'false,false,true,true': [1.84, 5, 20], 'false,false,true,false': [5.335, 118, 60], 'false,false,false,true': [5.33, 97, 94], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.951, 1, 33], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [0.0, 0, 5], 'false,true,false': [1.535, 3, 11], 'false,false,true,true': [4.617, 25, 145], 'false,false,true,false': [0.118, 163, 0], 'false,false,false,true': [3.898, 32, 29], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'phenotype(A, E), phenotype(C, F)', 'true,true,true': 'phenotype(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.038, 0, 12], 'true,true,true,false': [0.016, 0, 6], 'true,true,false': [0.932, 1, 15], 'true,false': [0.0, 0, 0], 'false,true': [1.781, 4, 18], 'false,false,true,true': [3.988, 67, 40], 'false,false,true,false': [3.55, 56, 40], 'false,false,false,true': [4.73, 97, 94], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), phenotype(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [1.516, 3, 22], 'true,false,true,true': [0.02, 0, 6], 'true,false,true,false': [4.708, 26, 162], 'true,false,false': [0.135, 163, 0], 'false,true,true,true': [0.837, 1, 3], 'false,true,true,false': [0.008, 0, 3], 'false,true,false': [3.896, 32, 29], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.921, 1, 33], 'true,false': [0.0, 0, 0], 'false,true,true': [3.94, 68, 41], 'false,true,false,true': [0.036, 0, 7], 'false,true,false,false': [3.319, 56, 38], 'false,false,true,true': [0.018, 0, 4], 'false,false,true,false': [1.465, 3, 8], 'false,false,false,true': [3.575, 48, 49], 'false,false,false,false': [2.524, 49, 45]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), phenotype(A, H)'}, {'true,true': [1.494, 3, 22], 'true,false,true,true': [0.015, 0, 6], 'true,false,true,false': [4.683, 26, 162], 'true,false,false': [0.149, 163, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.002, 19, 21], 'false,true,false': [2.633, 14, 14], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), phenotype(A, I)'}, {'true,true': [3.682, 74, 63], 'true,false,true,true': [0.881, 1, 4], 'true,false,true,false': [2.772, 8, 123], 'true,false,false': [0.606, 109, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.002, 19, 21], 'false,true,false': [2.633, 14, 14], 'false,false': [0.0, 0, 0]}]]
[{'': [0.028546712802769686, 0.2485207100591735], 'false': [0.148760330578512, 0.2465922852946515], 'false,false': [0.2458314170025918, 0.2493953238376795], 'false,false,false': [0.24977043158861298, 0.24489795918367302], 'false,false,true': [0.12543252595156237, -1.5801947344358056e-16], 'true': [0.028546712802769686, nan], 'true,true': [0.07100591715976314, -3.383536836952858e-16], 'true,true,false': [-1.4802973661668753e-16, 0.0]}, {'': [0.02804726776515456, 0.20659192068492518], 'false': [0.1487603305785126, 0.20437796955138166], 'false,false': [0.1959494658850719, 0.24887245288764298], 'false,false,false': [0.24977043158861312, 0.244897959183673], 'false,false,true': [0.1254325259515618, 0.0], 'true': [0.02804726776515456, nan], 'true,true': [0.07100591715976333, 8.458842092382145e-17], 'true,true,false': [1.4802973661668753e-16, 9.868649107779169e-17]}, {'': [0.027586301958490492, 0.16765252315720033], 'false': [0.1487603305785127, 0.16518819083063233], 'false,false': [0.17139388487616308, 0.15690567423471516], 'false,false,true': [0.17451173794510377, 0.16652296272308995], 'false,false,false': [0.15690567423471516, nan], 'true': [0.027586301958490492, nan], 'true,true': [0.07100591715976351, -2.5376526277146434e-16], 'true,true,false': [-7.401486830834377e-17, -1.7763568394002506e-16]}, {'': [0.027394352718733236, 0.15951904181058868], 'false': [0.14876033057851246, 0.15835028848939775], 'false,false': [0.16644114669006993, 0.1487589049872128], 'false,false,true': [0.135476854642215, 0.15988369525809681], 'false,false,false': [0.1487589049872128, nan], 'true': [0.027394352718733236, nan], 'true,true': [0.0003748389915235739, 0.047882054431249266], 'true,true,false': [0.0, 0.05347122806430868]}, {'': [0.02662717418032067, 0.1524888321885139], 'false': [0.14876033057851226, 0.15181717158083274], 'false,false': [0.1332440079265616, 0.2491177112858903], 'false,false,false': [0.2491177112858903, nan], 'false,true': [0.10937500000000004, 0.1683673469387755], 'false,false,true': [0.1253981520673526, 8.513982930814287e-05], 'false,true,true': [0.2222222222222222, 0.0], 'true': [0.02662717418032067, nan]}, {'': [0.026805431654739437, 0.1309584802477794], 'false': [0.14411535482790006, 0.1296295694323326], 'false,false': [0.14115161974682097, 0.11715984045984906], 'false,false,true': [0.14862501606485312, 0.13126055219975777], 'false,false,false': [0.11715984045984906, nan], 'true': [0.026805431654739437, nan], 'true,true': [0.0001500082295242554, 0.05428048432705344], 'true,true,true': [0.00011919232848247215, 4.464997810400365e-05]}, {'': [0.10147000811200717, 0.23508169655696273], 'false': [0.23508169655696273, nan], 'false,true': [0.11354674802829, 0.2488580702253241], 'false,true,true': [0.17506458887662063, 2.2987426952679007e-05], 'true': [0.09187241744583809, 0.10166213569365838], 'true,false': [0.11427544957756884, 0.00011134280692382322], 'true,false,true': [6.480017740537192e-05, 0.11788342537955106]}, {'': [0.024962217599035677, 0.11709617153570157], 'false': [0.12897978190611176, 0.10495905688473921], 'false,true': [0.14238824000212774, 0.11249994810246781], 'false,true,false': [0.00018490084297825442, 0.1172119408285033], 'false,false': [0.15370397406030253, 0.10107437229412267], 'false,false,true': [8.47423467460473e-05, 0.19508854749885887], 'false,false,false': [0.13172816423043388, 0.0677941714342479], 'true': [0.024962217599035677, nan]}, {'': [0.08689722837914846, 0.23464594641942102], 'false': [0.23464594641942102, nan], 'false,true': [0.2252991508954565, 0.247616570555101], 'false,true,true': [nan, 0.2252991508954565], 'true': [0.08926063515198264, 0.0864380995569586], 'true,false': [0.11306445498876717, 0.00013640476507786507], 'true,false,true': [3.994967652033721e-05, 0.1166547429087863]}, {'': [0.07980488577127182, 0.23457698812009004], 'false': [0.23457698812009004, nan], 'false,true': [0.22534468486744, 0.24758121999734092], 'false,true,true': [nan, 0.22534468486744003], 'true': [0.09894696031695129, 0.06559565501108729], 'true,false': [0.06290798751387516, 0.0033704114440083798], 'true,false,true': [0.1552969808503815, 0.05867194862248036]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D), phenotype(D, E).;true;true
0;true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), phenotype(D, E).;true;true
1;true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), phenotype(D, E).;true;true
2;true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(E, A).;true;true
3;true,false;interaction(C, A), phenotype(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, E), phenotype(C, F).;true;true
5;true,true;phenotype(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), phenotype(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(A, E).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), interaction(A, F).;true;true
7;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;phenotype(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.8211118980624748;  // std dev = 0.189, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7110901115700978;  // std dev = 4.618, 170.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=145 */
%   | | | else return -0.14185106490048818;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.28672036367094095;  // std dev = 3.207, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return 0.43709630352056494;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.6898504987207649;  // std dev = 0.189, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then return 0.35518050164082676;  // std dev = 0.998, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5754057969465044;  // std dev = 1.279, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6011175673852852;  // std dev = 4.618, 170.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=145 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2481181688474136;  // std dev = 3.207, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return 0.3751785876229692;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.5347234689195577;  // std dev = 0.189, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), phenotype(F, H) )
%   | | then return 0.08602397096816092;  // std dev = 1.019, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, I), location(F, I) )
%   | | | then return 0.6096810165238014;  // std dev = 0.189, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.38954780733752037;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1301895381891816;  // std dev = 0.259, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.14959708714366973;  // std dev = 2.665, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.16032563343714842;  // std dev = 3.325, 69.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=29 */
%   | | | else return 0.23058503614947257;  // std dev = 6.682, 261.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=126 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then return 0.43413629259344755;  // std dev = 0.046, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.2929753444745842;  // std dev = 0.349, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11666081215463746;  // std dev = 0.062, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.16261154733893773;  // std dev = 2.405, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return -0.024881017393475188;  // std dev = 0.990, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), phenotype(I, J) )
%   | | | then return 0.5033115266269672;  // std dev = 0.255, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.20513595440145738;  // std dev = 1.221, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.0900158024785888;  // std dev = 2.188, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.18551032657182207;  // std dev = 6.972, 299.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=143 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3095396944423835;  // std dev = 0.164, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.12246219290920218;  // std dev = 0.523, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4215280160313514;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.46742205668125986;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16369847778439056;  // std dev = 1.187, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3823866060412829;  // std dev = 4.560, 170.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=145 */
%   | | | else return -0.14878516830387975;  // std dev = 0.256, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.19511203026825397;  // std dev = 2.847, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.11144775580680447;  // std dev = 2.609, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.24403820519109787;  // std dev = 0.165, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.08973747600069974;  // std dev = 0.957, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.19145336388063214;  // std dev = 0.952, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.07849804185716801;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.08865251413374482;  // std dev = 2.343, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return 0.33407014014118325;  // std dev = 0.259, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.09002129161667917;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08465115506288387;  // std dev = 4.808, 219.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=97 */
%   | | | else return 0.13481503710822676;  // std dev = 4.383, 108.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=54 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.24409306551171212;  // std dev = 0.053, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.08179915995839625;  // std dev = 0.290, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.21566320359804556;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2614033379299238;  // std dev = 4.581, 188.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=162 */
%   | | else return -0.14044935817425203;  // std dev = 0.298, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else if ( recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return -0.0736532163480527;  // std dev = 0.928, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1420509962671685;  // std dev = 2.806, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.06228054424825687;  // std dev = 2.615, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.170108159061387;  // std dev = 0.160, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10052392914403;  // std dev = 1.551, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return -9.581496836716361E-4;  // std dev = 3.418, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3345280020163305;  // std dev = 0.173, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04939868357312138;  // std dev = 3.269, 94.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=38 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.2644863635955472;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03900223744630155;  // std dev = 1.059, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return -0.016327281302847108;  // std dev = 2.249, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.07171357515345887;  // std dev = 3.725, 157.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=78 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.12129585831516718;  // std dev = 0.204, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.15752077077010462;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1876562706073625;  // std dev = 4.553, 188.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=162 */
%   | | else return -0.1297513722624077;  // std dev = 0.294, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else if ( complex(A, F), enzyme(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.4888196450850997;  // std dev = 0.338, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.48582853521409114;  // std dev = 0.317, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return 0.23521649927646368;  // std dev = 1.114, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.21870531260199827;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0551321229339346;  // std dev = 3.377, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1250293786781561;  // std dev = 0.139, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.18683757865202835;  // std dev = 1.412, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.015802293545870538;  // std dev = 2.647, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   | | else if ( enzyme(A, I), recursion_proteinclass(D, B) )
%   | | | then return 0.2331924108548931;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.026492142217124624;  // std dev = 3.367, 139.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=65 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, J), phenotype(J, L) )
%   | | | then return 0.12457501433843682;  // std dev = 1.570, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return -0.011341489164971822;  // std dev = 2.727, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.060061245122369766;  // std dev = 2.397, 107.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=53 */
%   | | | else return 0.11248131563233228;  // std dev = 2.104, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */


Results
   AUC ROC   = 0.91082
   AUC PR    = 0.86934
   CLL	      = -0.374234
   Precision = 0.811321 at threshold = 0.5
   Recall    = 0.988506
   F1        = 0.891192


Total learning time: 31.273 seconds
Total inference time: 3.64 seconds
AUC ROC: 0.91082


Results scoring model
   AUC ROC   = 0.963921
   AUC PR    = 0.96151
   CLL	      = -0.333433
   Precision = 0.872881 at threshold = 0.5
   Recall    = 0.915556
   F1        = 0.893709


Total scoring time: 4.805 seconds
Refined model CLL: -0.333433


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.91082
   AUC PR    = 0.86934
   CLL	      = -0.374234
   Precision = 0.811321 at threshold = 0.5
   Recall    = 0.988506
   F1        = 0.891192


Total learning time: 51.568999999999996 seconds
Total inference time: 3.64 seconds
AUC ROC: 0.91082
Total revision time: 51.568999999999996
Best scored revision CLL: -0.333433


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 18:24:24
{'AUC ROC': 0.91082, 'AUC PR': 0.86934, 'CLL': -0.374234, 'Precision': [0.811321, 0.5], 'Recall': 0.988506, 'F1': 0.891192, 'Learning time': 51.568999999999996, 'Inference time': 3.64, 'parameter_0.8': {'AUC ROC': 0.936319, 'AUC PR': 0.926584, 'CLL': -0.359562, 'Precision': [0.805825, 0.5], 'Recall': 0.954023, 'F1': 0.873684, 'Learning time': 10.964, 'Inference time': 3.492}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6581489350995119;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7277141524908135;  // std dev = 4.845, 207.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=180 */
%   | | | else return -0.14185106490048843;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.35814893509951234;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.30912932725637404;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109546;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.7194734122109544;  // std dev = 2.98e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5580193346218546;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6145965951068239;  // std dev = 4.845, 207.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=180 */
%   | | | else return -0.1254446385283917;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.3087411357856347;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.2671893119872954;  // std dev = 3.554, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.41257245288266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.4419486100244409;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.13641911985367994;  // std dev = 4.795, 133.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=49 */
%   | | | else return 0.20772461250374905;  // std dev = 4.498, 121.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=53 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.21518981153409522;  // std dev = 5.970, 238.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=114 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4376497305392459;  // std dev = 0.238, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(C, A), enzyme(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3769262067040335;  // std dev = 0.832, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3354113949509431;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4294281275431795;  // std dev = 2.057, 35.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   | | | else return 0.09513930178721836;  // std dev = 5.883, 219.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=73 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17601345066994448;  // std dev = 5.803, 238.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=114 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3133145647793294;  // std dev = 0.881, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.20176837314502194;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.45176837314502194;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.18510170647835528;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3855999098251545;  // std dev = 4.828, 207.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=180 */
%   | | | else return -0.1501336648228642;  // std dev = 0.126, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1803026599788598;  // std dev = 4.373, 77.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(C, F) )
%   | | then if ( enzyme(D, E), interaction(C, D) )
%   | | | then return 0.19518469208241787;  // std dev = 0.871, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.26439879982899717;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.257894017088435;  // std dev = 0.034, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.19083733578696283;  // std dev = 1.967, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.0474737300901664;  // std dev = 4.392, 133.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=49 */
%   | | | else return 0.11513377477181037;  // std dev = 3.986, 121.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=53 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09788717603231815;  // std dev = 5.067, 238.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=114 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then return 0.1348550925485345;  // std dev = 1.497, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.2102003323288339;  // std dev = 0.022, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.26250839985839103;  // std dev = 4.993, 232.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=203 */
%   | | else return -0.14266416177597144;  // std dev = 0.149, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 2.817047455585253E-4;  // std dev = 0.752, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21699085383469915;  // std dev = 0.000902, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12443289389295434;  // std dev = 4.370, 77.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1722035139609848;  // std dev = 0.862, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.009455132241812318;  // std dev = 4.390, 136.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=50 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2083813212919682;  // std dev = 0.724, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.073038994931031;  // std dev = 3.691, 116.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.2549321662612024;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04054642803154056;  // std dev = 1.461, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.04589588276151966;  // std dev = 2.980, 89.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=43 */
%   | | | else return 0.05841134035870678;  // std dev = 3.566, 149.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=71 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then return 0.08546004631663205;  // std dev = 1.474, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.15367286223560933;  // std dev = 0.017, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.19000799653071623;  // std dev = 4.978, 232.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=203 */
%   | | else return -0.13155039222670234;  // std dev = 0.166, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), enzyme(A, H) )
%   | | | then return -0.6890547828479713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09168175390928472;  // std dev = 3.167, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | else return 0.09364657192054632;  // std dev = 3.023, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.004380994929144951;  // std dev = 3.924, 176.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=88 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return 0.0879008401659431;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2045623417358454;  // std dev = 3.202, 159.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=148 */
%   | | else return -0.12358512511933485;  // std dev = 0.584, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), enzyme(A, I) )
%   | | | then return -0.5266370695546045;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07146501663184356;  // std dev = 3.168, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | else return 0.07092692789712159;  // std dev = 3.023, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.932818
   AUC PR    = 0.919297
   CLL	      = -0.361794
   Precision = 0.805825 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.873684


Total learning time: 11.069 seconds
Total inference time: 3.632 seconds
AUC ROC: 0.932818


Results scoring model
   AUC ROC   = 0.95407
   AUC PR    = 0.944294
   CLL	      = -0.3269
   Precision = 0.88172 at threshold = 0.5
   Recall    = 0.87234
   F1        = 0.877005


Total scoring time: 4.794 seconds
Parameter learned model CLL: -0.3269


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.866, 1, 3], 'true,true,false,true': [1.79e-07, 0, 29], 'true,true,false,false': [0.0, 0, 14], 'true,false': [0.0, 0, 0], 'false,true': [2.0, 5, 20], 'false,false,true,true': [4.845, 27, 180], 'false,false,true,false': [0.0, 208, 0], 'false,false,false,true': [2.55, 13, 13], 'false,false,false,false': [3.554, 28, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.866, 1, 3], 'true,true,false,true': [0.0, 0, 29], 'true,true,false,false': [2.98e-08, 0, 14], 'true,false': [0.0, 0, 0], 'false,true': [2.0, 5, 20], 'false,false,true,true': [4.845, 27, 180], 'false,false,true,false': [0.0, 208, 0], 'false,false,false,true': [2.55, 13, 13], 'false,false,false,false': [3.554, 28, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.866, 1, 3], 'true,true,false,true': [0.0, 0, 18], 'true,true,false,false': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false,true': [2.0, 5, 20], 'false,false,true,true': [4.795, 84, 49], 'false,false,true,false': [4.498, 68, 53], 'false,false,false,true': [5.97, 124, 114], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), enzyme(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.238, 0, 22], 'true,true,false,true': [0.0, 0, 4], 'true,true,false,false': [0.832, 1, 20], 'true,false': [0.0, 0, 0], 'false,true': [2.0, 5, 20], 'false,false,true,true': [2.057, 6, 29], 'false,false,true,false': [5.883, 146, 73], 'false,false,false,true': [5.803, 124, 114], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.881, 1, 46], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.866, 1, 3], 'false,true,true,false': [0.0, 0, 6], 'false,true,false': [1.713, 4, 11], 'false,false,true,true': [4.828, 27, 180], 'false,false,true,false': [0.126, 208, 0], 'false,false,false,true': [4.373, 41, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'enzyme(A, E), enzyme(C, F)', 'true,true,true': 'enzyme(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.871, 1, 7], 'true,true,true,false': [0.0, 0, 5], 'true,true,false': [0.034, 0, 34], 'true,false': [0.0, 0, 0], 'false,true': [1.967, 5, 20], 'false,false,true,true': [4.392, 84, 49], 'false,false,true,false': [3.986, 68, 53], 'false,false,false,true': [5.067, 124, 114], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), enzyme(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [1.497, 3, 14], 'true,false,true,true': [0.022, 0, 23], 'true,false,true,false': [4.993, 29, 203], 'true,false,false': [0.149, 208, 0], 'false,true,true,true': [0.752, 1, 3], 'false,true,true,false': [0.000902, 0, 3], 'false,true,false': [4.37, 41, 36], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.862, 1, 46], 'true,false': [0.0, 0, 0], 'false,true,true': [4.39, 86, 50], 'false,true,false,true': [0.724, 1, 10], 'false,true,false,false': [3.691, 67, 49], 'false,false,true,true': [0.022, 0, 5], 'false,false,true,false': [1.461, 3, 8], 'false,false,false,true': [2.98, 46, 43], 'false,false,false,false': [3.566, 78, 71]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'enzyme(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), enzyme(A, H)'}, {'true,true': [1.474, 3, 14], 'true,false,true,true': [0.017, 0, 23], 'true,false,true,false': [4.978, 29, 203], 'true,false,false': [0.166, 208, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.167, 23, 24], 'false,true,false': [3.023, 18, 18], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), enzyme(A, I)'}, {'true,true': [3.924, 88, 88], 'true,false,true,true': [0.897, 1, 4], 'true,false,true,false': [3.202, 11, 148], 'true,false,false': [0.584, 140, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.168, 23, 24], 'false,true,false': [3.023, 18, 18], 'false,false': [0.0, 0, 0]}]]
[{'': [0.020823902218199193, 0.24810598266296352], 'false': [0.16000000000000014, 0.2462819750148756], 'false,false': [0.24560894179126525, 0.2489458593354714], 'false,false,false': [0.24999999999999956, 0.2475970780469062], 'false,false,true': [0.11342155009452415, -2.391249591500337e-16], 'true': [0.020823902218199193, nan], 'true,true': [0.18750000000000006, 1.652424966883954e-16], 'true,true,false': [1.1025663141105003e-15, 0.0]}, {'': [0.019147221220319737, 0.20466175425813551], 'false': [0.15999999999999975, 0.20233019030553634], 'false,false': [0.19348858446835154, 0.24879459203492063], 'false,false,false': [0.25000000000000017, 0.24759707804690514], 'false,false,true': [0.11342155009451337, -5.764619550938313e-17], 'true': [0.019147221220319737, nan], 'true,true': [0.18750000000000006, 1.652424966883954e-16], 'true,true,false': [-3.675221047035001e-16, 6.344131569286608e-17]}, {'': [0.017545088707268626, 0.16426578628046973], 'false': [0.16000000000000014, 0.1614629963238215], 'false,false': [0.17144958643588612, 0.14976877636658598], 'false,false,true': [0.17288115769803686, 0.16721369885514914], 'false,false,false': [0.14976877636658598, nan], 'true': [0.017545088707268626, nan], 'true,true': [0.18750000000000003, -2.478637450325931e-16], 'true,true,false': [-2.4671622769447924e-16, -2.486899575160351e-16]}, {'': [0.01677286518635726, 0.15624543923355308], 'false': [0.16000000000000036, 0.15453338784174617], 'false,false': [0.16617321410635005, 0.14148545500595144], 'false,false,true': [0.12085061377899035, 0.1580180651846462], 'false,false,false': [0.14148545500595144, nan], 'true': [0.01677286518635726, nan], 'true,true': [0.0025679411434716263, 0.02789663335678515], 'true,true,false': [0.0, 0.03294670417231811]}, {'': [0.0165085802394652, 0.14864890736737546], 'false': [0.16, 0.14731913231296356], 'false,true': [0.09000000000000001, 0.1955555555555555], 'false,false': [0.12794769097274222, 0.248352929201585], 'false,false,false': [0.248352929201585, nan], 'false,false,true': [0.11258599778426875, 7.609410302754467e-05], 'false,true,true': [0.1875, 0.0], 'true': [0.0165085802394652, nan]}, {'': [0.01674087392036396, 0.12630903490353726], 'false': [0.1547664540045369, 0.12435660672588779], 'false,false': [0.13964143640735346, 0.10787356331444135], 'false,false,true': [0.1450661272608277, 0.13128167992442435], 'false,false,false': [0.10787356331444135, nan], 'true': [0.01674087392036396, nan], 'true,true': [0.059495184890487475, 3.340436723838834e-05], 'true,true,true': [0.09483713978890554, 0.0]}, {'': [0.09515885560397616, 0.23513079351669647], 'false': [0.23513079351669647, nan], 'false,true': [0.0922827618778228, 0.24803546336624016], 'true': [0.1318077720448797, 0.09369828144387814], 'true,false': [0.09799716640134513, 0.00010665999490198172], 'true,false,true': [2.0563138089711177e-05, 0.10746357558822109], 'false,true,true': [0.14136769197331908, 2.7110348149728125e-07]}, {'': [0.015793222847590657, 0.11205334742263878], 'false': [0.1291881631544489, 0.0942464244788527], 'false,true': [0.1417273878045879, 0.1128277697959242], 'false,true,false': [0.047598309963555935, 0.11742676297926027], 'false,false': [0.14325058250398678, 0.09076962729126749], 'false,false,true': [9.752783077580097e-05, 0.1939572638236552], 'false,false,false': [0.09974716213615045, 0.08534863292877322], 'true': [0.015793222847590657, nan]}, {'': [0.08049990344478024, 0.2353867822554862], 'false': [0.2353867822554862, nan], 'false,true': [0.22143095100806534, 0.2538046493516118], 'false,true,true': [0.0, 0.2134432990916135], 'true': [0.12779976022244413, 0.0787015609562587], 'true,false': [0.09727946112977409, 0.0001326180554637927], 'true,false,true': [1.2652993000707701e-05, 0.10680321059722266]}, {'': [0.07326678003371723, 0.23249277520411496], 'false': [0.23249277520411496, nan], 'false,true': [0.21643640747445012, 0.25382004097338623], 'false,true,true': [0.0, 0.21358881022278617], 'true': [0.08750099875533614, 0.06387998817861894], 'true,false': [0.067810466660583, 0.0024372345724438566], 'true,false,true': [0.16086538539337403, 0.06446927519755247]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D), enzyme(D, E).;true;true
0;true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), enzyme(D, E).;true;true
1;true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), enzyme(D, E).;true;true
2;true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(E, A).;true;true
3;true,false;interaction(C, A), enzyme(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, E), enzyme(C, F).;true;true
5;true,true;enzyme(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), enzyme(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(A, E).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;enzyme(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(A, E).;true;true
8;false;interaction(G, F), interaction(A, G).;true;true
8;false,true;recursion_proteinclass(F, B), enzyme(A, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
9;false;interaction(H, G), interaction(A, H).;true;true
9;false,true;recursion_proteinclass(G, B), enzyme(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6706489350995123;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7277141524908135;  // std dev = 4.845, 207.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=180 */
%   | | | else return -0.14185106490048843;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.3479448534668582;  // std dev = 3.499, 49.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.6909105759500754;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109542;  // std dev = 1.83e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return 0.27509071321223133;  // std dev = 0.963, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.7462880140892679;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4598431867755507;  // std dev = 1.406, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6145965951068239;  // std dev = 4.845, 207.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=180 */
%   | | | else return -0.1254446385283917;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.24811816884741328;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.3001104399107084;  // std dev = 3.499, 49.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A) )
%   | | then return 0.571176969857044;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.4045103031903774;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G) )
%   | | then if ( complex(G, I), interaction(G, H) )
%   | | | then return 0.34215403613946205;  // std dev = 1.043, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.6440937390993166;  // std dev = 0.152, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.14334677218235845;  // std dev = 1.071, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12760625386994506;  // std dev = 0.063, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.16861297799820804;  // std dev = 4.564, 145.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=60 */
%   | | | else return 0.21987131335012375;  // std dev = 7.507, 329.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=156 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then return 0.4240211104374767;  // std dev = 0.037, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( interaction(C, A), enzyme(C, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.22057017482540373;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4528846446030392;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.11451510676388651;  // std dev = 0.059, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I), phenotype(H, J) )
%   | | | then return 0.08522527107770832;  // std dev = 1.005, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.41330530553189765;  // std dev = 1.160, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.12396336949859817;  // std dev = 3.950, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | | | else return 0.17780441721030102;  // std dev = 7.642, 383.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=180 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3128837711310461;  // std dev = 0.134, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.19983185219736382;  // std dev = 0.563, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.42742118665289014;  // std dev = 0.177, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.3370404267556938;  // std dev = 0.743, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.009414733689040925;  // std dev = 1.021, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39157354941685163;  // std dev = 4.813, 207.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=180 */
%   | | | else return -0.14938777185676366;  // std dev = 0.261, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.19635626519755126;  // std dev = 2.551, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.14213302072408704;  // std dev = 3.543, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, E) )
%   | then if ( enzyme(F, D), interaction(C, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.2647495165085275;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.042602152012799675;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2702850875828422;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.26706905689615246;  // std dev = 0.144, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( interaction(A, A) )
%   | then return -0.0979497182615186;  // std dev = 0.079, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, I), phenotype(A, K) )
%   | | | then return 0.004168019017029967;  // std dev = 2.224, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.09235462303143638;  // std dev = 5.081, 241.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=114 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.15111630902195236;  // std dev = 2.789, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.1125822420077516;  // std dev = 4.909, 188.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=88 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then return 0.16458462847801075;  // std dev = 0.269, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.21148329461265766;  // std dev = 0.019, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.2657889270797578;  // std dev = 4.900, 232.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=203 */
%   | | else return -0.1419434768945979;  // std dev = 0.310, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.21167186618566414;  // std dev = 0.959, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3679208309060512;  // std dev = 0.340, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.155891826678686;  // std dev = 2.174, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.08184691107022994;  // std dev = 3.643, 56.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16906466507438617;  // std dev = 0.115, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.215097339868974;  // std dev = 0.756, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.013395155322792432;  // std dev = 3.525, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.09925035868382368;  // std dev = 1.801, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.05638001872334097;  // std dev = 3.994, 127.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=54 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.2785733526750997;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06503866561844873;  // std dev = 1.187, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.033450377837190834;  // std dev = 3.776, 126.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=61 */
%   | | | else return 0.07833919767791153;  // std dev = 2.668, 112.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=53 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then return 0.10746855716249623;  // std dev = 0.273, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1549198502746226;  // std dev = 0.015, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.19242521276871472;  // std dev = 4.871, 232.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=203 */
%   | | else return -0.1309508947056496;  // std dev = 0.301, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( interaction(F, G), interaction(A, F) )
%   | then if ( recursion_proteinclass(G, B), enzyme(A, H) )
%   | | then return -0.1892420512147835;  // std dev = 0.967, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.11939875518249542;  // std dev = 2.051, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.06576757552223345;  // std dev = 3.468, 54.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | else if ( complex(A, K) )
%   | | then return 0.0689199703636862;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.08936157295342494;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.11911465901350796;  // std dev = 0.157, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.059026940046521044;  // std dev = 2.667, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | | else return 0.00263284462336303;  // std dev = 2.451, 82.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=32 */
%   | else return 0.04940640500530171;  // std dev = 0.247, 304.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=152 */
%   else if ( interaction(H, I), interaction(A, H) )
%   | then if ( recursion_proteinclass(I, B), enzyme(A, J) )
%   | | then return -0.14573318757829734;  // std dev = 0.966, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.17608145780119763;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05015165172521231;  // std dev = 4.022, 66.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=31 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.07008027790786965;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.04946761285233246;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.912208
   AUC PR    = 0.872141
   CLL	      = -0.3822
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.875


Total learning time: 69.247 seconds
Total inference time: 3.803 seconds
AUC ROC: 0.912208


Results scoring model
   AUC ROC   = 0.963564
   AUC PR    = 0.961481
   CLL	      = -0.331226
   Precision = 0.882979 at threshold = 0.5
   Recall    = 0.882979
   F1        = 0.882979


Total scoring time: 7.965 seconds
Refined model CLL: -0.331226


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.932818
   AUC PR    = 0.919297
   CLL	      = -0.361794
   Precision = 0.805825 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.873684


Total learning time: 93.075 seconds
Total inference time: 3.632 seconds
AUC ROC: 0.932818
Total revision time: 93.075
Best scored revision CLL: -0.3269


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 18:26:06
{'AUC ROC': 0.932818, 'AUC PR': 0.919297, 'CLL': -0.361794, 'Precision': [0.805825, 0.5], 'Recall': 0.954023, 'F1': 0.873684, 'Learning time': 93.075, 'Inference time': 3.632, 'parameter_1.0': {'AUC ROC': 0.932818, 'AUC PR': 0.919297, 'CLL': -0.361794, 'Precision': [0.805825, 0.5], 'Recall': 0.954023, 'F1': 0.873684, 'Learning time': 11.069, 'Inference time': 3.632}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 265

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 104

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.42957750652808374;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.09446743783575555;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.368876976597706;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2564123687585864;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.08754947716536465;  // std dev = 1.654, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.2538770026125191;  // std dev = 3.291, 60.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0931244879417447;  // std dev = 1.111, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, C), complex(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.20613740734453978;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5099244966986453;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.14080331162344514;  // std dev = 3.543, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07935380437858698;  // std dev = 1.089, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.33837142451585334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.6616285754841467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44411734619909854;  // std dev = 0.219, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.14473346622856403;  // std dev = 0.069, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.16620440700829725;  // std dev = 3.065, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(C, F) )
%   | | then if ( complex(D, E), interaction(D, C) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.11752194236481614;  // std dev = 0.544, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.01313741332888808;  // std dev = 1.454, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.13143616389340454;  // std dev = 3.034, 60.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04421515602985375;  // std dev = 0.862, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.12632826071024783;  // std dev = 0.457, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3200417946042576;  // std dev = 0.281, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.13691249410855474;  // std dev = 0.098, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.10619752540961043;  // std dev = 3.052, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1813632139438107;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return -0.0030228334255305925;  // std dev = 1.401, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.1920073745248646;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07793366939824983;  // std dev = 2.944, 57.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=28 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return -0.3175440629012612;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, J) )
%   | | | then return 2.43053968707517E-4;  // std dev = 0.368, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03565798858866805;  // std dev = 0.601, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.09389215930194866;  // std dev = 0.380, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.1521925065595906;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.241612606734089;  // std dev = 0.271, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.12648411290215214;  // std dev = 0.112, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( recursion_proteinclass(F, B), complex(A, H) )
%   | | | then return 0.1521925065595906;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.02444202127456646;  // std dev = 1.309, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.08803735469928102;  // std dev = 2.748, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.04876630854331064;  // std dev = 0.951, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(C, F), interaction(E, F) )
%   | | | then return 0.14215759916624782;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1971870325746502;  // std dev = 0.203, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.11504341007367419;  // std dev = 0.073, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( recursion_proteinclass(G, B), complex(A, I) )
%   | | | then return 0.13357645110728733;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.019387122910372322;  // std dev = 1.309, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.06728988969965803;  // std dev = 2.748, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.857896
   AUC PR    = 0.863347
   CLL	      = -0.458536
   Precision = 0.728972 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.739336


Total learning time: 7.022 seconds
Total inference time: 3.525 seconds
AUC ROC: 0.857896


Results scoring model
   AUC ROC   = 0.949626
   AUC PR    = 0.951977
   CLL	      = -0.345059
   Precision = 0.824561 at threshold = 0.5
   Recall    = 0.886792
   F1        = 0.854545


Total scoring time: 3.097 seconds
Parameter learned model CLL: -0.345059


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), complex(D, E)', 'true,true,false': 'interaction(F, C), interaction(F, D)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), complex(A, K)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [2.98e-08, 0, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.707, 1, 1], 'false,false,true,true': [5.96e-08, 0, 22], 'false,false,true,false': [2.79e-08, 31, 0], 'false,false,false,true': [1.5, 9, 3], 'false,false,false,false': [2.619, 12, 16]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), complex(D, E)', 'true,true,false': 'interaction(F, C), interaction(F, D)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), complex(A, K)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.707, 1, 1], 'false,false,true,true': [7.3e-08, 0, 22], 'false,false,true,false': [0.0, 31, 0], 'false,false,false,true': [1.5, 9, 3], 'false,false,false,false': [2.619, 12, 16]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), complex(D, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.49e-08, 0, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.707, 1, 1], 'false,false,true,true': [1.654, 14, 6], 'false,false,true,false': [3.291, 29, 31], 'false,false,false,true': [1.111, 9, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, C), complex(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.707, 1, 1], 'false,false,true,true': [0.054, 0, 7], 'false,false,true,false': [3.543, 43, 30], 'false,false,false,true': [1.089, 9, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.219, 0, 22], 'false,false,true,false': [0.069, 31, 0], 'false,false,false,true': [3.065, 21, 19], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'complex(A, E), complex(C, F)', 'true,true,true': 'complex(D, E), interaction(D, C)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 2], 'true,true,false': [7.45e-09, 0, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.544, 1, 1], 'false,false,true,true': [1.454, 14, 6], 'false,false,true,false': [3.034, 29, 31], 'false,false,false,true': [0.862, 9, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'recursion_proteinclass(C, B), complex(C, D)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)'}, {'true,true': [0.457, 1, 5], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.281, 0, 24], 'true,false,false': [0.098, 31, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [3.052, 21, 19], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(H, I)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.029, 0, 11], 'true,false': [0.0, 0, 0], 'false,true,true': [1.401, 14, 6], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [2.944, 29, 28], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.368, 3, 1], 'false,false,false,false': [0.601, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'complex(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false,true,true': 'recursion_proteinclass(F, B), complex(A, H)'}, {'true,true': [0.38, 1, 5], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.271, 0, 24], 'true,false,false': [0.112, 31, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.309, 6, 4], 'false,true,false': [2.748, 15, 18], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(C, F), interaction(E, F)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false,true,true': 'recursion_proteinclass(G, B), complex(A, I)'}, {'true,true': [0.951, 16, 19], 'true,false,true,true': [0.012, 0, 2], 'true,false,true,false': [0.203, 0, 9], 'true,false,false': [0.073, 16, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.309, 6, 4], 'false,true,false': [2.748, 15, 18], 'false,false': [0.0, 0, 0]}]]
[{'': [-1.6148698540002277e-16, 0.2466481994459846], 'false': [0.25, 0.24650248583651332], 'false,false': [0.24279102883588566, 0.2493749999999996], 'false,false,false': [0.1874999999999999, 0.24489795918367302], 'false,false,true': [1.6148698540002277e-16, 2.5069552168955147e-17], 'true': [-1.6148698540002277e-16, nan], 'true,true': [0.0, -2.5376526277146434e-16], 'true,true,false': [0.0, 1.4802973661668753e-16]}, {'': [8.074349270001139e-17, 0.20545146314336407], 'false': [0.25000000000000006, 0.20442476842988092], 'false,false': [0.17332524083348105, 0.24349169637091622], 'false,false,false': [0.18750000000000014, 0.24489795918367352], 'false,false,true': [2.4223047810003414e-16, -7.162729191130042e-18], 'true': [8.074349270001139e-17, nan], 'true,true': [0.0, -6.344131569286608e-17], 'true,true,false': [0.0, 0.0]}, {'': [-2.0185873175002846e-16, 0.16714304311294242], 'false': [0.24999999999999997, 0.16528341175905267], 'false,false': [0.17472524042988102, 0.09496338632649728], 'false,false,true': [0.13676429139581628, 0.18046267867755994], 'false,false,false': [0.09496338632649728, nan], 'true': [-2.0185873175002846e-16, nan], 'true,true': [0.0, -6.344131569286608e-17], 'true,true,false': [0.0, 3.700743415417188e-17]}, {'': [1.6148698540002277e-16, 0.160162139504017], 'false': [0.25, 0.15818532260003432], 'false,false': [0.1678468606033684, 0.09116960557452963], 'false,false,true': [0.0004223908277530354, 0.17197934750348828], 'false,false,false': [0.09116960557452963, nan], 'true': [1.6148698540002277e-16, nan], 'true,true': [0.0, 9.516197353929913e-17], 'true,true,false': [0.0, 7.401486830834377e-17]}, {'': [-6.055761952500853e-17, 0.1527577064649744], 'false': [0.24999999999999997, 0.15064309102766185], 'false,true': [0.0, 0.0], 'false,false': [0.0851785979159462, 0.23486263745657174], 'false,false,false': [0.23486263745657174, nan], 'false,false,true': [0.0021750485131980424, 0.00015233992644081787], 'false,true,true': [nan, 0.0], 'true': [-6.055761952500853e-17, nan]}, {'': [4.0371746350005693e-17, 0.1327119206335225], 'false': [0.14800250518088126, 0.13237124728360677], 'false,false': [0.14413555802957018, 0.05711690971986759], 'false,false,true': [0.10566907880502807, 0.15345906917480273], 'false,false,false': [0.05711690971986759, nan], 'true': [4.0371746350005693e-17, nan], 'true,true': [0.0, 9.25185853854297e-18], 'true,true,true': [0.0, 0.0]}, {'': [0.0510228663821893, 0.2126097228362157], 'false': [0.2126097228362157, nan], 'false,true': [0.0, 0.23289572121083646], 'true': [0.03480236974315019, 0.05239816478945727], 'true,false': [0.0036176005554215784, 0.0003109458028417803], 'true,false,true': [0.0, 0.003281830788911866], 'false,true,true': [0.0, 0.0]}, {'': [7.453010732741153e-05, 0.1205865850050107], 'false': [0.13332097734261755, 0.04349619379828416], 'false,true': [0.09816979346685398, 0.14291483022928833], 'false,true,false': [0.0, 0.15209064209297735], 'false,false': [0.0, 0.038472568094683086], 'false,false,false': [0.03386387504167417, 0.04013496301235457], 'true': [7.453010732741153e-05, nan], 'false,false,true': [0.0, nan]}, {'': [0.0337895426885881, 0.21139662121303335], 'false': [0.21139662121303335, nan], 'false,true': [0.15719827744183112, 0.22878721274272976], 'false,true,true': [0.0, 0.17143445186869063], 'true': [0.02406815205467625, 0.0345095541283884], 'true,false': [0.0032411257385799087, 0.0004069353816718633], 'true,false,true': [0.0, 0.0030563344717453775]}, {'': [0.025427713861889127, 0.2110800833233897], 'false': [0.2110800833233897, nan], 'false,true': [0.15676076401102718, 0.22883454949710572], 'false,true,true': [0.0, 0.17125145835085148], 'true': [0.02583140250272754, 0.023970172346272748], 'true,false': [0.0042185815545474825, 0.00033679609987090006], 'true,false,true': [7.551283741616052e-05, 0.004588674666005987]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, A), complex(D, E).;true;true
0;true,false;interaction(F, C), interaction(F, D).;true;true
0;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H).;true;true
0;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), complex(D, E).;true;true
1;true,false;interaction(F, C), interaction(F, D).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(A, H).;true;true
1;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), complex(D, E).;true;true
2;true,false;interaction(A, F), interaction(F, C).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(A, E).;true;true
3;true,false;interaction(A, C), complex(C, F).;true;true
3;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(A, F), interaction(E, F).;true;true
4;false,false;interaction(A, H).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;complex(A, E), complex(C, F).;true;true
5;true,true;complex(D, E), interaction(D, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;recursion_proteinclass(C, B), complex(C, D).;true;true
6;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(E, A).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(F, G), interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), interaction(F, A).;true;true
7;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C).;true;true
8;true;complex(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(E, A).;true;true
8;false;interaction(F, G), interaction(G, A).;true;true
8;false,true;recursion_proteinclass(F, B), complex(A, H).;true;true
9;;proteinclass(A, B) :- interaction(A, C).;true;true
9;true;interaction(C, D), interaction(A, D).;true;true
9;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,false,true;interaction(C, F), interaction(E, F).;true;true
9;false;interaction(G, H), interaction(H, A).;true;true
9;false,true;recursion_proteinclass(G, B), complex(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, C), interaction(F, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.5724346493852266;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, C), interaction(G, D) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.308741135785635;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.17756999884231595;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.4876778839172629;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7196623837680415;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.12106779506346016;  // std dev = 0.127, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.19495534432295353;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(J, A), phenotype(H, K) )
%   | | | then return 0.28357708263006726;  // std dev = 1.297, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.04176427140790688;  // std dev = 1.014, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.12269692525361227;  // std dev = 1.577, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.4384993437547963;  // std dev = 1.955, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C), complex(C, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2392456722674906;  // std dev = 0.652, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4655073926377834;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1330797583519159;  // std dev = 3.273, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.18791368007574552;  // std dev = 0.858, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.11024907497519724;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then return -0.2660157502250592;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.6480063076185076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.40363688840671513;  // std dev = 0.260, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.12749712601119886;  // std dev = 0.128, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.00729273822630994;  // std dev = 1.077, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.22678690496843396;  // std dev = 2.523, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, E) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), interaction(G, H) )
%   | | then if ( phenotype(H, I), enzyme(H, J) )
%   | | | then return 0.03813040678023818;  // std dev = 0.935, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.09143682458091469;  // std dev = 0.362, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return 0.24359856603187566;  // std dev = 0.793, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.30889089884186094;  // std dev = 1.298, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.19259137108592622;  // std dev = 0.359, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(M, A), location(A, N) )
%   | | | then return 0.2708961200778604;  // std dev = 1.853, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.071564632233943;  // std dev = 0.484, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.13747377001736813;  // std dev = 0.396, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27947649071236164;  // std dev = 0.236, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return -0.10048696894323525;  // std dev = 0.062, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.12238093838404103;  // std dev = 0.126, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( recursion_proteinclass(H, B) )
%   | then if ( interaction(H, I), interaction(I, A) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08516481857844806;  // std dev = 2.378, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.11160435637182547;  // std dev = 1.182, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.18337834222589727;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.18654299618634124;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.13462513523292868;  // std dev = 0.956, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.09418934858300622;  // std dev = 0.640, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.18106835799236923;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07280229153778482;  // std dev = 2.535, 57.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=28 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.248739999503872;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07409067341207694;  // std dev = 0.474, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.07518431830914056;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.10036816988434183;  // std dev = 0.335, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.1515253629243798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21503038117893003;  // std dev = 0.209, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(F, A), location(A, G) )
%   | | | then return -0.11062877249301584;  // std dev = 0.129, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.08345208845274997;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(H, I), interaction(I, A) )
%   | then if ( recursion_proteinclass(H, B), complex(A, J) )
%   | | then return 0.15193267685964573;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.022784551346285077;  // std dev = 1.512, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.1304385288927967;  // std dev = 1.727, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else return 0.07040532770211137;  // std dev = 0.416, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then return 0.07828751451222615;  // std dev = 0.132, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.024220977115919147;  // std dev = 0.317, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10850095855411616;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | then return 0.17261040542223116;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.09354772597338472;  // std dev = 0.027, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( interaction(I, J), interaction(J, A) )
%   | then if ( recursion_proteinclass(I, B), complex(A, K) )
%   | | then return 0.1333734343913756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.018319461156146438;  // std dev = 1.512, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.10146190803406231;  // std dev = 1.719, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else return 0.054403460614654134;  // std dev = 0.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Results
   AUC ROC   = 0.874861
   AUC PR    = 0.86343
   CLL	      = -0.447752
   Precision = 0.769231 at threshold = 0.5
   Recall    = 0.673077
   F1        = 0.717949


Total learning time: 30.941 seconds
Total inference time: 5.536 seconds
AUC ROC: 0.874861


Results scoring model
   AUC ROC   = 0.981488
   AUC PR    = 0.980923
   CLL	      = -0.27922
   Precision = 0.941176 at threshold = 0.5
   Recall    = 0.90566
   F1        = 0.923077


Total scoring time: 6.026 seconds
Refined model CLL: -0.27922


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.874861
   AUC PR    = 0.86343
   CLL	      = -0.447752
   Precision = 0.769231 at threshold = 0.5
   Recall    = 0.673077
   F1        = 0.717949


Total learning time: 47.086 seconds
Total inference time: 5.536 seconds
AUC ROC: 0.874861
Total revision time: 47.086
Best scored revision CLL: -0.27922


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 18:27:04
{'AUC ROC': 0.874861, 'AUC PR': 0.86343, 'CLL': -0.447752, 'Precision': [0.769231, 0.5], 'Recall': 0.673077, 'F1': 0.717949, 'Learning time': 47.086, 'Inference time': 5.536, 'parameter_0.2': {'AUC ROC': 0.857896, 'AUC PR': 0.863347, 'CLL': -0.458536, 'Precision': [0.728972, 0.5], 'Recall': 0.75, 'F1': 0.739336, 'Learning time': 7.022, 'Inference time': 3.525}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.27675358626230306;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.3487149728353603;  // std dev = 3.639, 53.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109546;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109548;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.2396206853161997;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.3007621598712969;  // std dev = 3.639, 53.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5553664367462843;  // std dev = 3.65e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.15463649738647875;  // std dev = 3.020, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.217973140728289;  // std dev = 4.656, 112.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=52 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16588479469801504;  // std dev = 1.613, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, C), phenotype(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4175135841583098;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5098942870107807;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.14270342881426254;  // std dev = 5.398, 152.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=61 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.13841293360063414;  // std dev = 1.556, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.98e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.42879372175020847;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09546038841687514;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.42879372175020847;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4491562446676063;  // std dev = 0.228, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.1492724912817179;  // std dev = 0.028, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1624167122758443;  // std dev = 4.875, 96.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(C, F) )
%   | | then if ( phenotype(D, E), interaction(D, C) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.20031215787464776;  // std dev = 0.875, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.07068892619034346;  // std dev = 2.833, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.10948471053310929;  // std dev = 4.392, 112.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=52 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07918729158456579;  // std dev = 1.205, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then return 0.1666030852822864;  // std dev = 0.862, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.30923687174535697;  // std dev = 0.310, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.14193270575118083;  // std dev = 0.042, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10543405063701068;  // std dev = 4.875, 96.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=44 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17557680885374904;  // std dev = 0.034, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.04757017435236637;  // std dev = 2.781, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.20207630451372993;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06470082788813918;  // std dev = 4.298, 111.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=51 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return -0.19412581717291022;  // std dev = 0.686, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.06310831970903295;  // std dev = 0.672, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.034653016448759386;  // std dev = 0.714, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.12269284365062161;  // std dev = 0.812, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.15294062965611288;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23492355674622614;  // std dev = 0.310, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.13169215930783135;  // std dev = 0.047, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( recursion_proteinclass(F, B), phenotype(A, H) )
%   | | | then return 0.15294062965611288;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0964952780930892;  // std dev = 2.647, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else return 0.05967789700717086;  // std dev = 4.095, 71.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.03589080320375959;  // std dev = 1.405, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(C, F), interaction(E, F) )
%   | | | then return 0.14175606606142982;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1890218851182205;  // std dev = 0.213, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.11819436707613376;  // std dev = 0.030, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(A, I) )
%   | | | then return 0.13416062778049864;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07412995884304023;  // std dev = 2.647, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else return 0.04557325081340022;  // std dev = 4.095, 71.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.861039
   AUC PR    = 0.871823
   CLL	      = -0.443257
   Precision = 0.904762 at threshold = 0.5
   Recall    = 0.548077
   F1        = 0.682635


Total learning time: 8.223 seconds
Total inference time: 3.54 seconds
AUC ROC: 0.861039


Results scoring model
   AUC ROC   = 0.901433
   AUC PR    = 0.914096
   CLL	      = -0.40324
   Precision = 0.984127 at threshold = 0.5
   Recall    = 0.584906
   F1        = 0.733728


Total scoring time: 3.704 seconds
Parameter learned model CLL: -0.40324


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), phenotype(D, E)', 'true,true,false': 'interaction(F, C), interaction(F, D)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), phenotype(A, K)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false,true': [0.0, 0, 5], 'true,true,false,false': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.913, 1, 5], 'false,false,true,true': [2.53e-07, 0, 36], 'false,false,true,false': [5.58e-08, 53, 0], 'false,false,false,true': [3.235, 25, 18], 'false,false,false,false': [3.639, 27, 26]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), phenotype(D, E)', 'true,true,false': 'interaction(F, C), interaction(F, D)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), phenotype(A, K)'}, {'true,true,true': [2.11e-08, 0, 6], 'true,true,false,true': [0.0, 0, 5], 'true,true,false,false': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.913, 1, 5], 'false,false,true,true': [0.0, 0, 36], 'false,false,true,false': [0.0, 53, 0], 'false,false,false,true': [3.235, 25, 18], 'false,false,false,false': [3.639, 27, 26]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), phenotype(D, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false,true': [0.0, 0, 4], 'true,true,false,false': [3.65e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false,true': [0.913, 1, 5], 'false,false,true,true': [3.02, 31, 18], 'false,false,true,false': [4.656, 60, 52], 'false,false,false,true': [1.613, 14, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, C), phenotype(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [2.98e-08, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.21e-08, 0, 13], 'true,false': [0.0, 0, 0], 'false,true': [0.913, 1, 5], 'false,false,true,true': [0.024, 0, 9], 'false,false,true,false': [5.398, 91, 61], 'false,false,false,true': [1.556, 14, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [2.98e-08, 0, 21], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.816, 1, 2], 'false,true,false': [0.0, 0, 2], 'false,false,true,true': [0.228, 0, 36], 'false,false,true,false': [0.028, 53, 0], 'false,false,false,true': [4.875, 52, 44], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'phenotype(A, E), phenotype(C, F)', 'true,true,true': 'phenotype(D, E), interaction(D, C)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [7.45e-09, 0, 6], 'true,true,false': [2.11e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false,true': [0.875, 1, 5], 'false,false,true,true': [2.833, 31, 18], 'false,false,true,false': [4.392, 60, 52], 'false,false,false,true': [1.205, 14, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'recursion_proteinclass(C, B), phenotype(C, D)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)'}, {'true,true': [0.862, 1, 10], 'true,false,true,true': [0.0, 0, 4], 'true,false,true,false': [0.31, 0, 42], 'true,false,false': [0.042, 53, 0], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [0.0, 0, 3], 'false,true,false': [4.875, 52, 44], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(H, I)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.034, 0, 21], 'true,false': [0.0, 0, 0], 'false,true,true': [2.781, 31, 19], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [4.298, 60, 51], 'false,false,true,true': [0.686, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [0.672, 6, 5], 'false,false,false,false': [0.714, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'phenotype(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false,true,true': 'recursion_proteinclass(F, B), phenotype(A, H)'}, {'true,true': [0.812, 1, 10], 'true,false,true,true': [0.0, 0, 4], 'true,false,true,false': [0.31, 0, 42], 'true,false,false': [0.047, 53, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [2.647, 15, 14], 'false,true,false': [4.095, 37, 34], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(C, F), interaction(E, F)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false,true,true': 'recursion_proteinclass(G, B), phenotype(A, I)'}, {'true,true': [1.405, 29, 32], 'true,false,true,true': [0.002, 0, 2], 'true,false,true,false': [0.213, 0, 22], 'true,false,false': [0.03, 25, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [2.647, 15, 14], 'false,true,false': [4.095, 37, 34], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0, 0.24697787889586328], 'false': [0.1388888888888887, 0.24543462381300332], 'false,false': [0.24087867693473203, 0.24826388888888953], 'false,false,false': [0.24337479718766852, 0.24991100035599992], 'false,false,true': [1.7763568394002505e-15, 5.86532918669894e-17], 'true': [0.0, nan], 'true,true': [-1.4802973661668753e-16, -2.3684757858670006e-16], 'true,true,false': [0.0, 0.0]}, {'': [2.5376526277146434e-16, 0.21338299416395626], 'false': [0.13888888888888884, 0.21218342460875994], 'false,false': [0.17196003860416134, 0.24790775526461253], 'false,false,false': [0.24337479718766883, 0.24991100035599842], 'false,false,true': [-6.908054375445419e-16, -3.561092720495785e-17], 'true': [2.5376526277146434e-16, nan], 'true,true': [7.401486830834377e-17, 5.921189464667501e-17], 'true,true,false': [0.0, -8.881784197001253e-17]}, {'': [-2.1147105230955362e-16, 0.18220554485681725], 'false': [0.13888888888888887, 0.18137398688219633], 'false,false': [0.1921192462850514, 0.10835424963758312], 'false,false,true': [0.18608948240679574, 0.19353636742836847], 'false,false,false': [0.10835424963758312, nan], 'true': [-2.1147105230955362e-16, nan], 'true,true': [-7.401486830834377e-17, 0.0], 'true,true,false': [0.0, 1.2111523905001707e-16]}, {'': [1.0573552615477681e-16, 0.1767569002939381], 'false': [0.13888888888888898, 0.1768648709791998], 'false,false': [0.1881200686927779, 0.10082528118644667], 'false,false,true': [6.185574149217586e-05, 0.19171806255225304], 'false,false,false': [0.10082528118644667, nan], 'true': [1.0573552615477681e-16, nan], 'true,true': [1.1102230246251565e-16, 1.3664283380001927e-16], 'true,true,false': [nan, 1.3664283380001927e-16]}, {'': [4.229421046191072e-17, 0.17096708066320684], 'false': [0.13888888888888884, 0.17145004697306698], 'false,false': [0.08685333251031177, 0.24754593233635802], 'false,false,false': [0.24754593233635802, nan], 'false,true': [0.1875, 0.0], 'false,true,true': [0.0, 0.2222222222222222], 'false,false,true': [0.0014387614060564274, 1.4481838938593797e-05], 'true': [4.229421046191072e-17, nan]}, {'': [1.057355261547768e-17, 0.15528571178895575], 'false': [0.12750983259301485, 0.15583999458670517], 'false,false': [0.17000496742913465, 0.06051910681157555], 'false,false,true': [0.16381282307574238, 0.1722559527498568], 'false,false,false': [0.06051910681157555, nan], 'true': [1.057355261547768e-17, nan], 'true,true': [3.3306690738754695e-17, 4.0371746350005693e-17], 'true,true,true': [0.0, 9.25185853854297e-18]}, {'': [0.052771597696171214, 0.23364224385942953], 'false': [0.23364224385942953, nan], 'false,true': [-9.25185853854297e-18, 0.24760468250781456], 'true': [0.06762183603635585, 0.05006230207091793], 'true,false': [0.002869457273942239, 3.3545749440368906e-05], 'true,false,true': [0.0, 0.0022822082668257863], 'false,true,true': [0.0, 0.0]}, {'': [5.620964996770154e-05, 0.14588223842743092], 'false': [0.15935705803835223, 0.05938515100566642], 'false,true': [0.1546997342185682, 0.1612365265119417], 'false,true,false': [0.0, 0.166390433649804], 'false,false': [0.2350966451623692, 0.04024427092786149], 'false,false,true': [0.2350966451623692, nan], 'false,false,false': [0.04105200718025068, 0.03918968732789216], 'true': [5.620964996770154e-05, nan]}, {'': [0.03672904473983712, 0.23349829314725085], 'false': [0.23349829314725085, nan], 'false,true': [0.226170385263037, 0.23620030327317676], 'false,true,true': [0.0, 0.24156278946654092], 'true': [0.05991260492953358, 0.03339007828813383], 'true,false': [0.002628802664601449, 4.193985782144727e-05], 'true,false,true': [0.0, 0.00229471262015557]}, {'': [0.02864209169039534, 0.23343186901754948], 'false': [0.23343186901754948, nan], 'false,true': [0.22627128900731047, 0.23623869045391588], 'false,true,true': [0.0, 0.24164370992843914], 'true': [0.03234873898903092, 0.024010667257088468], 'true,false': [0.0020565947701459606, 3.651875296067253e-05], 'true,false,true': [1.3510475739345051e-06, 0.0020572636376358293]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, A), phenotype(D, E).;true;true
0;true,false;interaction(F, C), interaction(F, D).;true;true
0;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H).;true;true
0;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), phenotype(D, E).;true;true
1;true,false;interaction(F, C), interaction(F, D).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(A, H).;true;true
1;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), phenotype(D, E).;true;true
2;true,false;interaction(A, F), interaction(F, C).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(A, E).;true;true
3;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A).;true;true
3;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(A, F), interaction(E, F).;true;true
4;false,true,true;interaction(G, A), interaction(G, E).;true;true
4;false,false;interaction(A, H).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, E), phenotype(C, F).;true;true
5;true,true;phenotype(D, E), interaction(D, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;recursion_proteinclass(C, B), phenotype(C, D).;true;true
6;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(E, A).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(F, G), interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), interaction(F, A).;true;true
7;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C).;true;true
8;true;phenotype(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(E, A).;true;true
8;false;interaction(F, G), interaction(G, A).;true;true
8;false,true;recursion_proteinclass(F, B), phenotype(A, H).;true;true
9;;proteinclass(A, B) :- interaction(A, C).;true;true
9;true;interaction(C, D), interaction(A, D).;true;true
9;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,false,true;interaction(C, F), interaction(E, F).;true;true
9;false;interaction(G, H), interaction(H, A).;true;true
9;false,true;recursion_proteinclass(G, B), phenotype(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(F, C), interaction(F, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.25159155805033095;  // std dev = 3.815, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
%   | | | else return 0.4295775065280833;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109548;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.218126365476285;  // std dev = 3.815, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
%   | | | else return 0.3688769765977062;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6249655920524906;  // std dev = 0.828, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.15103491103009253;  // std dev = 0.150, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.11024456011969057;  // std dev = 0.545, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1038837916809808;  // std dev = 0.901, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6289129750226817;  // std dev = 0.364, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16164961191315794;  // std dev = 0.295, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.18147636889952015;  // std dev = 3.470, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | | else return 0.311458505305777;  // std dev = 3.340, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4207191815233888;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4806411067356878;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1375013002235179;  // std dev = 5.112, 152.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=61 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.0502642892500592;  // std dev = 1.025, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.20834241366306874;  // std dev = 1.019, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.4802942573392259;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16465181786413166;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.46413585916543115;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4162737052642206;  // std dev = 0.322, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.1376627538618052;  // std dev = 0.170, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.12287966751143328;  // std dev = 3.621, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
%   | | | else return 0.21672886340032485;  // std dev = 2.847, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, E) )
%   | then return 0.2551722425694894;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2551722425694894;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( interaction(G, H), interaction(H, G) )
%   | | then if ( recursion_proteinclass(G, B), interaction(I, A) )
%   | | | then return 0.29395590898001933;  // std dev = 0.187, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.04455081382288123;  // std dev = 1.781, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.12636465155881133;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04731915118610262;  // std dev = 0.669, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.2087127650794496;  // std dev = 4.229, 89.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=50 */
%   | | | else return -0.28689490365848075;  // std dev = 0.328, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.03701743353150987;  // std dev = 0.485, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.35961208363722413;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.017151889223975075;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.28125006626332016;  // std dev = 0.063, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return -0.12513534547654792;  // std dev = 0.021, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( recursion_proteinclass(H, B) )
%   | then if ( interaction(H, I), interaction(I, A) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.06000311979517996;  // std dev = 2.780, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.12117060514922433;  // std dev = 3.464, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.16895290733291923;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.18337865318993926;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.007160514749238376;  // std dev = 1.754, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.10976669101699181;  // std dev = 1.610, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.19772815005444652;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06503046483344412;  // std dev = 3.985, 111.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=51 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then return -0.11345933590347247;  // std dev = 0.512, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.02057482471318293;  // std dev = 0.704, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.10804537295973322;  // std dev = 0.627, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.1442725240587497;  // std dev = 0.200, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.03710934130808462;  // std dev = 0.171, 99.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=46 */
%   else if ( interaction(E, F), interaction(F, A) )
%   | then if ( recursion_proteinclass(E, B), phenotype(A, G) )
%   | | then return 0.15193263679220115;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.09823465731183727;  // std dev = 2.726, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.035898007226660214;  // std dev = 2.956, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.25828051666205737;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.3627307062087707;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.03124316807222825;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.25008679828679964;  // std dev = 1.002, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.044489127965287145;  // std dev = 0.180, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | else return 0.03688074928916258;  // std dev = 0.169, 49.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   else if ( interaction(E, F), interaction(F, A) )
%   | then if ( recursion_proteinclass(E, B), phenotype(A, G) )
%   | | then return 0.13337340307980583;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.0434872159885801;  // std dev = 3.881, 79.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=38 */
%   | | | else return 0.16356947796202395;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.19519022189276472;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.28515980747337966;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.024514911406569695;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18997862169039306;  // std dev = 0.997, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.899686
   AUC PR    = 0.866564
   CLL	      = -0.442066
   Precision = 0.841463 at threshold = 0.5
   Recall    = 0.663462
   F1        = 0.741935


Total learning time: 74.729 seconds
Total inference time: 5.025 seconds
AUC ROC: 0.899686


Results scoring model
   AUC ROC   = 0.968761
   AUC PR    = 0.970396
   CLL	      = -0.362128
   Precision = 0.926316 at threshold = 0.5
   Recall    = 0.830189
   F1        = 0.875622


Total scoring time: 7.954 seconds
Refined model CLL: -0.362128


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899686
   AUC PR    = 0.866564
   CLL	      = -0.442066
   Precision = 0.841463 at threshold = 0.5
   Recall    = 0.663462
   F1        = 0.741935


Total learning time: 94.61 seconds
Total inference time: 5.025 seconds
AUC ROC: 0.899686
Total revision time: 94.61
Best scored revision CLL: -0.362128


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 18:28:48
{'AUC ROC': 0.899686, 'AUC PR': 0.866564, 'CLL': -0.442066, 'Precision': [0.841463, 0.5], 'Recall': 0.663462, 'F1': 0.741935, 'Learning time': 94.61, 'Inference time': 5.025, 'parameter_0.4': {'AUC ROC': 0.861039, 'AUC PR': 0.871823, 'CLL': -0.443257, 'Precision': [0.904762, 0.5], 'Recall': 0.548077, 'F1': 0.682635, 'Learning time': 8.223, 'Inference time': 3.54}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7519542448340241;  // std dev = 3.275, 113.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=101 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.2510060779566552;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6465415686654066;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6342047637286707;  // std dev = 3.275, 113.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=101 */
%   | | | else return -0.12544463852839105;  // std dev = 8.16e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.4285227559352605;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.2176255182773883;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.4419486100244409;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5044629797645588;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.12891703919646522;  // std dev = 3.335, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | | else return 0.2027881368646717;  // std dev = 3.535, 73.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=32 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.20861418581794727;  // std dev = 4.342, 138.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4469880368564681;  // std dev = 0.204, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(C, A), enzyme(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.33732247604854926;  // std dev = 0.841, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.37956420580342304;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.28114196232908334;  // std dev = 1.681, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.12251978818947162;  // std dev = 4.466, 126.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=47 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17190340226839146;  // std dev = 4.198, 138.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3084872044623024;  // std dev = 0.893, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37805579433516623;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2669446832240552;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4063443706969985;  // std dev = 3.284, 113.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=101 */
%   | | | else return -0.15121014158662824;  // std dev = 0.071, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1821267104364798;  // std dev = 3.171, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(C, F) )
%   | | then if ( enzyme(D, E), interaction(C, D) )
%   | | | then return 0.18522634854924228;  // std dev = 0.880, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2731302595981866;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25972648896364453;  // std dev = 0.045, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2224188667600483;  // std dev = 0.949, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.03875276777634024;  // std dev = 3.090, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | | else return 0.10923959258416613;  // std dev = 3.194, 73.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=32 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0990290458863461;  // std dev = 3.513, 138.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then return 0.2725298683092999;  // std dev = 0.114, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.20925410555589372;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2727260054038726;  // std dev = 3.428, 126.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=113 */
%   | | else return -0.14354293143381436;  // std dev = 0.096, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.07213092468631281;  // std dev = 0.727, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2223664460134428;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.12604335323585605;  // std dev = 3.158, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16381281005017334;  // std dev = 0.843, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return -9.99059116395867E-4;  // std dev = 3.100, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.297673932951251;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06279997924147675;  // std dev = 3.013, 72.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=31 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.20245683343898913;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2209981785076221;  // std dev = 3.02e-05, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.05117650226322065;  // std dev = 2.066, 53.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=25 */
%   | | | else return 0.06338717644905245;  // std dev = 2.321, 85.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then return 0.1977290194668301;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.15415234482066817;  // std dev = 0.019, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.198985353911877;  // std dev = 3.410, 126.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=113 */
%   | | else return -0.13232824670140944;  // std dev = 0.117, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), enzyme(A, H) )
%   | | | then return -0.6858600033005512;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.03999240337370055;  // std dev = 2.073, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return 0.1503343784070898;  // std dev = 2.349, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.0048004025671705055;  // std dev = 2.804, 97.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=50 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return -0.7324617450358042;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.21872944551134224;  // std dev = 1.790, 88.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=85 */
%   | | else return -0.11909570428990694;  // std dev = 0.080, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), enzyme(A, I) )
%   | | | then return -0.5237258660382663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.03130189779422119;  // std dev = 2.073, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return 0.11459798056314836;  // std dev = 2.349, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.911335
   AUC PR    = 0.890133
   CLL	      = -0.37018
   Precision = 0.782946 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.866953


Total learning time: 9.008 seconds
Total inference time: 3.508 seconds
AUC ROC: 0.911335


Results scoring model
   AUC ROC   = 0.970867
   AUC PR    = 0.964314
   CLL	      = -0.295601
   Precision = 0.900621 at threshold = 0.5
   Recall    = 0.91195
   F1        = 0.90625


Total scoring time: 4.486 seconds
Parameter learned model CLL: -0.295601


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false,true': [0.0, 0, 16], 'true,true,false,false': [0.0, 0, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.953, 1, 10], 'false,false,true,true': [3.275, 12, 101], 'false,false,true,false': [0.0, 123, 0], 'false,false,false,true': [1.793, 5, 9], 'false,false,false,false': [2.584, 17, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false,true': [5.96e-08, 0, 16], 'true,true,false,false': [0.0, 0, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.953, 1, 10], 'false,false,true,true': [3.275, 12, 101], 'false,false,true,false': [8.16e-08, 123, 0], 'false,false,false,true': [1.793, 5, 9], 'false,false,false,false': [2.584, 17, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false,true': [0.0, 0, 10], 'true,true,false,false': [0.0, 0, 14], 'true,false': [0.0, 0, 0], 'false,true': [0.953, 1, 10], 'false,false,true,true': [3.335, 42, 25], 'false,false,true,false': [3.535, 41, 32], 'false,false,false,true': [4.342, 74, 64], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), enzyme(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.204, 0, 16], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.841, 1, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.953, 1, 10], 'false,false,true,true': [1.681, 4, 10], 'false,false,true,false': [4.466, 79, 47], 'false,false,false,true': [4.198, 74, 64], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.893, 1, 28], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.943, 1, 8], 'false,false,true,true': [3.284, 12, 101], 'false,false,true,false': [0.071, 123, 0], 'false,false,false,true': [3.171, 22, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'enzyme(A, E), enzyme(C, F)', 'true,true,true': 'enzyme(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.88, 1, 6], 'true,true,true,false': [5.27e-09, 0, 3], 'true,true,false': [0.045, 0, 19], 'true,false': [0.0, 0, 0], 'false,true': [0.949, 1, 10], 'false,false,true,true': [3.09, 42, 25], 'false,false,true,false': [3.194, 41, 32], 'false,false,false,true': [3.513, 74, 64], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), enzyme(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [0.114, 0, 10], 'true,false,true,true': [0.024, 0, 12], 'true,false,true,false': [3.428, 13, 113], 'true,false,false': [0.096, 123, 0], 'false,true,true,true': [0.727, 1, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [3.158, 22, 20], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.843, 1, 28], 'true,false': [0.0, 0, 0], 'false,true,true': [3.1, 43, 26], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [3.013, 41, 31], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [3.02e-05, 0, 5], 'false,false,false,true': [2.066, 28, 25], 'false,false,false,false': [2.321, 46, 39]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'enzyme(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), enzyme(A, H)'}, {'true,true': [0.093, 0, 10], 'true,false,true,true': [0.019, 0, 12], 'true,false,true,false': [3.41, 13, 113], 'true,false,false': [0.117, 123, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.073, 12, 10], 'false,true,false': [2.349, 10, 14], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), enzyme(A, I)'}, {'true,true': [2.804, 47, 50], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [1.79, 3, 85], 'true,false,false': [0.08, 85, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.073, 12, 10], 'false,true,false': [2.349, 10, 14], 'false,false': [0.0, 0, 0]}]]
[{'': [0.033293697978597984, 0.24781791405754217], 'false': [0.0826446280991734, 0.2458076704104365], 'false,false': [0.24481111749497536, 0.24943310657596351], 'false,false,false': [0.22959183673469377, 0.23852040816326484], 'false,false,true': [0.09491737802490641, -3.6104813808948184e-18], 'true': [0.033293697978597984, nan], 'true,true': [0.15999999999999986, -1.4802973661668753e-16], 'true,true,false': [-2.220446049250313e-16, 0.0]}, {'': [0.03130569595769056, 0.19970880581355852], 'false': [0.08264462809917372, 0.19822782263381974], 'false,false': [0.18945550577082834, 0.24542813876523545], 'false,false,false': [0.22959183673469366, 0.23852040816326517], 'false,false,true': [0.09491737802490408, 5.415722071342227e-17], 'true': [0.03130569595769056, nan], 'true,true': [0.16, 7.401486830834377e-17], 'true,true,false': [2.220446049250313e-16, 0.0]}, {'': [0.029421679441375304, 0.15482942413470943], 'false': [0.08264462809917372, 0.15387079433499687], 'false,false': [0.17005035022078321, 0.13660281212996314], 'false,false,true': [0.1659944741345876, 0.1711613315019681], 'false,false,false': [0.13660281212996314, nan], 'true': [0.029421679441375304, nan], 'true,true': [0.15999999999999998, -2.590520390792032e-16], 'true,true,false': [-1.7763568394002506e-16, -1.2688263138573217e-16]}, {'': [0.02854802893783237, 0.14613234819363985], 'false': [0.08264462809917356, 0.14672538435554117], 'false,false': [0.16491308431979793, 0.12770821049064546], 'false,false,true': [0.20191060484445136, 0.15828614929306922], 'false,false,false': [0.12770821049064546, nan], 'true': [0.02854802893783237, nan], 'true,true': [0.0026062300855680953, 0.05525000749380567], 'true,true,false': [0.0, 0.06430613819871325]}, {'': [0.02752102909317693, 0.14011091262511208], 'false': [0.08264462809917347, 0.14139367073125947], 'false,false': [0.123287906035444, 0.23939110099079694], 'false,false,false': [0.23939110099079694, nan], 'false,false,true': [0.09542203043675057, 4.091218699701452e-05], 'false,true': [0.0, 0.09876543209876536], 'true': [0.02752102909317693, nan], 'false,true,true': [nan, 0.0]}, {'': [0.027859709197721332, 0.11556059080573398], 'false': [0.08194784607425955, 0.11619448252155473], 'false,false': [0.14227948958005043, 0.0894527891324784], 'false,false,true': [0.14248310903255795, 0.13971487529017], 'false,false,false': [0.0894527891324784, nan], 'true': [0.027859709197721332, nan], 'true,true': [0.07907639259948497, 0.00010480228921363583], 'true,true,true': [0.11064814586881114, 9.25185853854297e-18]}, {'': [0.08550114964611712, 0.2263099826540574], 'false': [0.2263099826540574, nan], 'false,true': [0.1265401073972595, 0.2375000941161526], 'false,true,true': [0.17620869845580478, 0.0], 'true': [0.0012987640786041531, 0.08726754735056766], 'true,false': [0.08547260829786706, 7.560765952458322e-05], 'true,false,true': [4.7670924483831735e-05, 0.0932579964391146]}, {'': [0.02451178327349226, 0.10010060165105729], 'false': [0.13223242054692852, 0.06776686792072815], 'false,true': [0.1393056297255907, 0.12315799923037457], 'false,true,false': [0.0, 0.12608295156638982], 'false,false': [7.015961540763576e-05, 0.07001076048358355], 'false,false,false': [0.08053097001194143, 0.06339383716461028], 'true': [0.02451178327349226, nan], 'false,false,true': [0.0, 1.8244092903074716e-10]}, {'': [0.06968252109294089, 0.22456272668690128], 'false': [0.22456272668690128, nan], 'false,true': [0.20876505259009742, 0.2298484603021346], 'false,true,true': [0.0, 0.1953473420199918], 'true': [0.0008566494394213698, 0.07141065109098238], 'true,false': [0.08443953904355099, 0.00011207971544596966], 'true,false,true': [2.984308190626117e-05, 0.0923037752105498]}, {'': [0.06176713854347073, 0.2179776773857771], 'false': [0.2179776773857771, nan], 'false,true': [0.19971422014346454, 0.22983257280337713], 'false,true,true': [0.0, 0.1953984079963342], 'true': [0.08106851704038424, 0.050331962759727476], 'true,false': [0.04605139491972511, 7.435807469497882e-05], 'true,false,true': [0.0, 0.036408810933782815]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D), enzyme(D, E).;true;true
0;true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), enzyme(D, E).;true;true
1;true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(A, D), enzyme(D, E).;true;true
2;true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(E, A).;true;true
3;true,false;interaction(C, A), enzyme(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, E), enzyme(C, F).;true;true
5;true,true;enzyme(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), enzyme(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(A, E).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), interaction(A, F).;true;true
7;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;enzyme(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(A, E).;true;true
8;false;interaction(G, F), interaction(A, G).;true;true
8;false,true;recursion_proteinclass(F, B), enzyme(A, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
9;true,false,true;interaction(F, C), interaction(F, E).;true;true
9;false;interaction(H, G), interaction(A, H).;true;true
9;false,true;recursion_proteinclass(G, B), enzyme(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7519542448340241;  // std dev = 3.275, 113.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=101 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.2510060779566552;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7194734122109542;  // std dev = 1.49e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.40685858799906804;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7350122940520396;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6342047637286707;  // std dev = 3.275, 113.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=101 */
%   | | | else return -0.12544463852839105;  // std dev = 8.16e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.4285227559352605;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.2176255182773883;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5358116390356219;  // std dev = 0.172, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(D, E) )
%   | | then if ( complex(A, E), phenotype(A, F) )
%   | | | then return -0.18373515415884445;  // std dev = 0.247, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09643030170281269;  // std dev = 0.819, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(D, D), location(D, G) )
%   | | | then return -0.040874746147257134;  // std dev = 0.749, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.27546391218149574;  // std dev = 1.435, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(A, J), phenotype(H, K) )
%   | | | then return 0.29309683002498604;  // std dev = 1.641, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.03669169578643965;  // std dev = 1.637, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.5716077055298369;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.21671524250086516;  // std dev = 5.670, 211.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=99 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then return 0.4222767638219842;  // std dev = 2.98e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(C, A), enzyme(C, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3120027164482321;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G) )
%   | | then return 0.4976892391081602;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.26718457557461106;  // std dev = 0.638, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( complex(I, J) )
%   | | | then return -0.1064925488742727;  // std dev = 0.861, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.14434549608881103;  // std dev = 1.661, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.1263090540744089;  // std dev = 3.545, 97.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=40 */
%   | | | else return 0.19527303356800788;  // std dev = 4.768, 148.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3239427957694938;  // std dev = 2.11e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.23438494395652426;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.3337735234541537;  // std dev = 0.052, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.14031572824832242;  // std dev = 0.619, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36815051407098137;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.40788068290922924;  // std dev = 3.141, 113.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=101 */
%   | | | else return -0.1491687150226929;  // std dev = 0.207, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.07208755679125076;  // std dev = 1.900, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.21695663806951027;  // std dev = 2.484, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2436771688852797;  // std dev = 0.169, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( enzyme(A, G), phenotype(D, H) )
%   | | | then return 0.07158628901692275;  // std dev = 0.400, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10634716816209086;  // std dev = 1.338, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39798953935282855;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13078592597036628;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.03807850037682404;  // std dev = 1.871, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.11018237502229407;  // std dev = 3.788, 171.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=84 */
%   | | else if ( enzyme(A, N), phenotype(A, P) )
%   | | | then return 0.25675480685503926;  // std dev = 1.428, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.09959132353538948;  // std dev = 2.834, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.21360499678333061;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.30551691366455885;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.21360499678333064;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.27406708058360296;  // std dev = 3.157, 126.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=113 */
%   | | else return -0.14000194745939176;  // std dev = 0.249, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return -0.010776155567446896;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.025517773376264378;  // std dev = 1.897, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.15110002723096946;  // std dev = 2.479, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return 0.08935596516100279;  // std dev = 0.316, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.191106927416088;  // std dev = 0.042, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.08303929114554097;  // std dev = 1.516, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return -0.039634186133175056;  // std dev = 2.384, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2523900418360828;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.054221612561104165;  // std dev = 2.956, 72.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=31 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1961527684279108;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.03371606383244806;  // std dev = 2.266, 62.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | | | else return 0.0740794593728686;  // std dev = 2.093, 76.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then return 0.18151229154652915;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.15341776686204378;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2012044052179092;  // std dev = 3.136, 126.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=113 */
%   | | else return -0.12971388050634122;  // std dev = 0.247, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( interaction(F, G), interaction(A, F) )
%   | then if ( recursion_proteinclass(G, B), enzyme(A, H) )
%   | | then return -0.6943688981523899;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.1289292915256471;  // std dev = 1.683, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.027823439420626588;  // std dev = 2.175, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( complex(A, J) )
%   | | then return 0.056777475933260727;  // std dev = 0.958, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.1980893906307464;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, E), phenotype(A, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.13515198251400534;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.15479768665136395;  // std dev = 1.494, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else return 0.05716180520903585;  // std dev = 0.240, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | else return 0.04523971826012871;  // std dev = 0.216, 174.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=85 */
%   else if ( interaction(G, H), interaction(A, G) )
%   | then if ( recursion_proteinclass(H, B), enzyme(A, I) )
%   | | then return -0.5315220504175479;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.007376652058864069;  // std dev = 1.966, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.11960950695942883;  // std dev = 1.908, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then return 0.18774252530419283;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.035706748652675785;  // std dev = 1.167, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.89645
   AUC PR    = 0.874796
   CLL	      = -0.38928
   Precision = 0.77686 at threshold = 0.5
   Recall    = 0.903846
   F1        = 0.835556


Total learning time: 49.239 seconds
Total inference time: 3.85 seconds
AUC ROC: 0.89645


Results scoring model
   AUC ROC   = 0.977968
   AUC PR    = 0.976042
   CLL	      = -0.294478
   Precision = 0.907407 at threshold = 0.5
   Recall    = 0.924528
   F1        = 0.915888


Total scoring time: 6.54 seconds
Refined model CLL: -0.294478


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.89645
   AUC PR    = 0.874796
   CLL	      = -0.38928
   Precision = 0.77686 at threshold = 0.5
   Recall    = 0.903846
   F1        = 0.835556


Total learning time: 69.273 seconds
Total inference time: 3.85 seconds
AUC ROC: 0.89645
Total revision time: 69.273
Best scored revision CLL: -0.294478


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 18:30:06
{'AUC ROC': 0.89645, 'AUC PR': 0.874796, 'CLL': -0.38928, 'Precision': [0.77686, 0.5], 'Recall': 0.903846, 'F1': 0.835556, 'Learning time': 69.273, 'Inference time': 3.85, 'parameter_0.6': {'AUC ROC': 0.911335, 'AUC PR': 0.890133, 'CLL': -0.37018, 'Precision': [0.782946, 0.5], 'Recall': 0.971154, 'F1': 0.866953, 'Learning time': 9.008, 'Inference time': 3.508}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.758811186755139;  // std dev = 3.676, 151.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=136 */
%   | | | else return -0.14185106490048816;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.41370449065506787;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.2727830814409758;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.7194734122109543;  // std dev = 2.98e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.657810671461647;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6397415749162687;  // std dev = 3.676, 151.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=136 */
%   | | | else return -0.12544463852839138;  // std dev = 2.11e-08, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.3555557392714991;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.23623289754561083;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5123505661168763;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.1393401882632228;  // std dev = 3.972, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | | | else return 0.17522036920503684;  // std dev = 4.146, 103.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=42 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.22736566003402756;  // std dev = 4.881, 175.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=86 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4420134362091096;  // std dev = 0.190, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(C, A), enzyme(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.36113854717100974;  // std dev = 0.873, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3853022650638632;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.35178235225345655;  // std dev = 1.794, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.10885767754878946;  // std dev = 5.290, 178.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=63 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.18638772331766665;  // std dev = 4.704, 175.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=86 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.31120047383156796;  // std dev = 0.915, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3689580568327028;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2780489659236118;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4051268054229511;  // std dev = 3.686, 151.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=136 */
%   | | | else return -0.15155239203470153;  // std dev = 0.120, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1761445288086019;  // std dev = 3.798, 59.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(C, F) )
%   | | then if ( enzyme(D, E), interaction(C, D) )
%   | | | then return 0.19185774761311533;  // std dev = 0.903, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.26789520172520276;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25891759114853063;  // std dev = 0.039, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22703703456711055;  // std dev = 0.958, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.05139824850055201;  // std dev = 3.677, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | | | else return 0.09010139804956369;  // std dev = 3.750, 103.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=42 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10750749378632787;  // std dev = 3.921, 175.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=86 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then return 0.2643709322142019;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.17468442004140416;  // std dev = 0.382, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.27210850523432323;  // std dev = 3.818, 170.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=154 */
%   | | else return -0.1440112874890155;  // std dev = 0.146, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.08331365198891712;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2192186627110182;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12355906470204893;  // std dev = 3.795, 59.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1678114262323661;  // std dev = 0.864, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.09242321196380171;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.013536931180146197;  // std dev = 3.657, 95.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.29051334134996887;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0470275000050669;  // std dev = 3.543, 101.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=40 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.19705664291287472;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.21202262483610676;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.041236198784124385;  // std dev = 2.339, 68.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=32 */
%   | | | else return 0.0786618643769286;  // std dev = 2.541, 107.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=54 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then return 0.1922703445080148;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.12901961598453265;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.19859122613444521;  // std dev = 3.799, 170.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=154 */
%   | | else return -0.13280660665547844;  // std dev = 0.164, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), enzyme(A, H) )
%   | | | then return -0.708192714954241;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.08835337538114921;  // std dev = 2.595, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.10251906241211467;  // std dev = 2.773, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.009011390484380431;  // std dev = 3.176, 126.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=62 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return -0.7454141836312452;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.22320349056147698;  // std dev = 1.828, 121.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=118 */
%   | | else return -0.1197468547169669;  // std dev = 0.114, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), enzyme(A, I) )
%   | | | then return -0.544489511380553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.06891682527175236;  // std dev = 2.596, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.0784565167650773;  // std dev = 2.773, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.913092
   AUC PR    = 0.88992
   CLL	      = -0.370391
   Precision = 0.787402 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.865801


Total learning time: 10.938 seconds
Total inference time: 3.036 seconds
AUC ROC: 0.913092


Results scoring model
   AUC ROC   = 0.970964
   AUC PR    = 0.96605
   CLL	      = -0.295482
   Precision = 0.920398 at threshold = 0.5
   Recall    = 0.872642
   F1        = 0.895884


Total scoring time: 4.778 seconds
Parameter learned model CLL: -0.295482


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.913, 1, 5], 'true,true,false,true': [0.0, 0, 19], 'true,true,false,false': [0.0, 0, 13], 'true,false': [0.0, 2, 0], 'false,true': [0.961, 1, 12], 'false,false,true,true': [3.676, 15, 136], 'false,false,true,false': [0.0, 161, 0], 'false,false,false,true': [2.108, 8, 10], 'false,false,false,false': [3.155, 24, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.913, 1, 5], 'true,true,false,true': [7.3e-08, 0, 19], 'true,true,false,false': [2.98e-08, 0, 13], 'true,false': [0.0, 2, 0], 'false,true': [0.961, 1, 12], 'false,false,true,true': [3.676, 15, 136], 'false,false,true,false': [2.11e-08, 161, 0], 'false,false,false,true': [2.108, 8, 10], 'false,false,false,false': [3.155, 24, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.913, 1, 5], 'true,true,false,true': [0.0, 0, 13], 'true,true,false,false': [0.0, 0, 19], 'true,false': [0.0, 2, 0], 'false,true': [0.961, 1, 12], 'false,false,true,true': [3.972, 58, 35], 'false,false,true,false': [4.146, 61, 42], 'false,false,false,true': [4.881, 89, 86], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), enzyme(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.19, 0, 20], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.873, 1, 15], 'true,false': [0.0, 2, 0], 'false,true': [0.961, 1, 12], 'false,false,true,true': [1.794, 4, 14], 'false,false,true,false': [5.29, 115, 63], 'false,false,false,true': [4.704, 89, 86], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.915, 1, 37], 'true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.953, 1, 10], 'false,false,true,true': [3.686, 15, 136], 'false,false,true,false': [0.12, 161, 0], 'false,false,false,true': [3.798, 32, 27], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'enzyme(A, E), enzyme(C, F)', 'true,true,true': 'enzyme(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.903, 1, 7], 'true,true,true,false': [0.0, 0, 4], 'true,true,false': [0.039, 0, 26], 'true,false': [0.0, 2, 0], 'false,true': [0.958, 1, 12], 'false,false,true,true': [3.677, 58, 35], 'false,false,true,false': [3.75, 61, 42], 'false,false,false,true': [3.921, 89, 86], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), enzyme(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [0.098, 0, 11], 'true,false,true,true': [0.382, 2, 15], 'true,false,true,false': [3.818, 16, 154], 'true,false,false': [0.146, 161, 0], 'false,true,true,true': [0.744, 1, 2], 'false,true,true,false': [0.001, 0, 3], 'false,true,false': [3.795, 32, 27], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.864, 1, 37], 'true,false': [0.0, 2, 0], 'false,true,true': [3.657, 59, 36], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [3.543, 61, 40], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.001, 0, 7], 'false,false,false,true': [2.339, 36, 32], 'false,false,false,false': [2.541, 53, 54]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'enzyme(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), enzyme(A, H)'}, {'true,true': [0.08, 0, 11], 'true,false,true,true': [0.322, 2, 15], 'true,false,true,false': [3.799, 16, 154], 'true,false,false': [0.164, 161, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.595, 16, 16], 'false,true,false': [2.773, 16, 16], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), enzyme(A, I)'}, {'true,true': [3.176, 64, 62], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [1.828, 3, 118], 'true,false,false': [0.114, 111, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.596, 16, 16], 'false,true,false': [2.773, 16, 16], 'false,false': [0.0, 0, 0]}]]
[{'': [0.06937500000000182, 0.24804009331597351], 'false': [0.07100591715976314, 0.24632195348769942], 'false,false': [0.24589086127548015, 0.2482045389255975], 'false,false,false': [0.24691358024691354, 0.24271267102914884], 'false,false,true': [0.0894697600982462, -1.5170749404815803e-16], 'true': [0.025623268698062793, 0.0], 'true,true': [0.1388888888888887, -2.220446049250313e-16], 'true,true,false': [-2.8047739569477637e-16, -2.7328566760003855e-16]}, {'': [0.05534023618599866, 0.19990587666916107], 'false': [0.07100591715976333, 0.1987729441056117], 'false,false': [0.18952818375425382, 0.24701286227325478], 'false,false,false': [0.24691358024691368, 0.24271267102914876], 'false,false,true': [0.0894697600982398, 2.7583180736028732e-18], 'true': [0.0243275786465271, 0.0], 'true,true': [0.13888888888888884, 2.220446049250313e-16], 'true,true,false': [2.8047739569477637e-16, 6.832141690000964e-17]}, {'': [0.042195495772184934, 0.15499247740920344], 'false': [0.07100591715976351, 0.1544355593628875], 'false,false': [0.16850866412134677, 0.13614602236318693], 'false,false,true': [0.16960110423175268, 0.16691143398028047], 'false,false,false': [0.13614602236318693, nan], 'true': [0.023107360524079187, 0.0], 'true,true': [0.13888888888888887, -2.220446049250313e-16], 'true,true,false': [-2.7328566760003855e-16, -2.337311630789803e-16]}, {'': [0.03369989990940827, 0.14622395650625758], 'false': [0.0710059171597632, 0.14709839978525438], 'false,false': [0.16411088587709502, 0.12643345452070875], 'false,false,true': [0.1788171125729367, 0.15720423345705326], 'false,false,false': [0.12643345452070875, nan], 'true': [0.02255677534942166, 0.0], 'true,true': [0.0018007282515333455, 0.042689154781574944], 'true,true,false': [0.0, 0.04767217192979187]}, {'': [0.02866553562361206, 0.13960436367973358], 'false': [0.07100591715976336, 0.14108750982412738], 'false,false': [0.12098228826678573, 0.24455039329366812], 'false,false,false': [0.24455039329366812, nan], 'false,false,true': [0.08996861757194038, 8.99931744737985e-05], 'false,true': [0.0, 0.0826446280991736], 'true': [0.02201782073811042, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.02634684445677209, 0.11539761934066241], 'false': [0.07060338737021582, 0.1163185130777975], 'false,false': [0.14111685064149174, 0.08786840344389535], 'false,false,true': [0.14537509058893833, 0.13656127775221757], 'false,false,false': [0.08786840344389535, nan], 'true': [0.022257804034480147, 0.0], 'true,true': [0.06916441833429696, 5.910482722198535e-05], 'true,true,true': [0.10181939602549613, 0.0]}, {'': [0.08254968544276996, 0.23245648187922457], 'false': [0.23245648187922457, nan], 'false,true': [0.11502892280024124, 0.24411284390749732], 'false,true,true': [0.18429441928826687, 5.255933652655494e-07], 'true': [0.0008792564820188188, 0.08403048005435844], 'true,false': [0.07952817628525823, 0.000132225837131599], 'true,false,true': [0.008584464033186278, 0.08575968820358566]}, {'': [0.021873799189722008, 0.10032481102836527], 'false': [0.13120320873771893, 0.0661159340722298], 'false,true': [0.14075735954195548, 0.12169022601357521], 'false,true,false': [0.0, 0.12425115119337549], 'false,false': [3.887235751026674e-05, 0.06849177012159663], 'false,false,false': [0.08048233103107973, 0.0603273361701338], 'true': [0.01963894843280024, 0.0], 'false,false,true': [0.0, 2.0527538668879686e-07]}, {'': [0.06692270149653877, 0.23174812392462057], 'false': [0.23174812392462057, nan], 'false,true': [0.22276267766331995, 0.24026950254176066], 'false,true,true': [0.0, 0.21049717273337157], 'true': [0.0005852002029114986, 0.06832650880231296], 'true,false': [0.07812030011519404, 0.00016730027846244494], 'true,false,true': [0.006117040100335268, 0.08488060712223892]}, {'': [0.05914723585680515, 0.22777878366634663], 'false': [0.22777878366634663, nan], 'false,true': [0.21525220710154477, 0.2402951443119068], 'false,true,true': [0.0, 0.21057679815391642], 'true': [0.08003353049525999, 0.04638429023427453], 'true,false': [0.03501296167280271, 0.00011711066355363482], 'true,false,true': [0.0, 0.027611995494392104]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(A, D), enzyme(D, E).;true;true
0;true,true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(A, D), enzyme(D, E).;true;true
1;true,true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(A, D), enzyme(D, E).;true;true
2;true,true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(A, D), interaction(E, A).;true;true
3;true,true,false;interaction(C, A), enzyme(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;true,true;enzyme(A, E), enzyme(C, F).;true;true
5;true,true,true;enzyme(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), enzyme(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), interaction(A, F).;true;true
7;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;enzyme(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;false;interaction(G, F), interaction(A, G).;true;true
8;false,true;recursion_proteinclass(F, B), enzyme(A, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
9;true,false,true;interaction(F, C), interaction(F, E).;true;true
9;false;interaction(H, G), interaction(A, H).;true;true
9;false,true;recursion_proteinclass(G, B), enzyme(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995123;  // std dev = 3.80e-08, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.758811186755139;  // std dev = 3.676, 151.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=136 */
%   | | | else return -0.14185106490048816;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.41370449065506787;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.2727830814409758;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7194734122109542;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7319045176838225;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6397415749162687;  // std dev = 3.676, 151.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=136 */
%   | | | else return -0.12544463852839138;  // std dev = 2.11e-08, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.3833335170492769;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.2443734021631001;  // std dev = 3.387, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.540507500276885;  // std dev = 0.152, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.16042442766854134;  // std dev = 0.108, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(E, F) )
%   | | | then return -0.0011193413541813965;  // std dev = 1.229, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.19425566047240891;  // std dev = 1.713, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.29577956014701495;  // std dev = 0.726, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.576185976373705;  // std dev = 0.115, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.16530880907192536;  // std dev = 4.126, 127.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=52 */
%   | | | else return 0.2414835959613552;  // std dev = 5.753, 199.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=99 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.40659072960769144;  // std dev = 0.152, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.5635360779730966;  // std dev = 0.072, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.08747666662939298;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.16583778945197805;  // std dev = 0.655, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0.14602406222564565;  // std dev = 3.397, 93.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4277442859966139;  // std dev = 0.103, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.1545152064677291;  // std dev = 3.639, 87.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=38 */
%   | | | else return 0.20784186798923193;  // std dev = 4.824, 147.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3109745622447393;  // std dev = 0.152, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.3490727378941835;  // std dev = 0.053, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.4729687405807694;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2324697519843784;  // std dev = 0.674, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4037722967787157;  // std dev = 3.470, 151.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=136 */
%   | | | else return -0.14546963865739163;  // std dev = 0.292, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.09632511960357891;  // std dev = 2.847, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.20674600601295265;  // std dev = 2.486, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22894922072670668;  // std dev = 0.166, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.11257354108045887;  // std dev = 1.364, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.08908848031996038;  // std dev = 1.501, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else if ( recursion_proteinclass(E, B), phenotype(A, H) )
%   | | | then return 0.3592069672266047;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08748346234940553;  // std dev = 2.480, 85.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=35 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return -0.12982955250900372;  // std dev = 0.708, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10718491676054254;  // std dev = 1.357, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.07523159350874074;  // std dev = 2.846, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.1336628189317377;  // std dev = 4.373, 183.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=97 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then return 0.26040741510608273;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.10913836681065256;  // std dev = 1.668, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2977472364355281;  // std dev = 2.958, 153.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=143 */
%   | | else return -0.13777990764903847;  // std dev = 0.351, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   else if ( recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0.09404791032539822;  // std dev = 1.010, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.15700774216344449;  // std dev = 2.093, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.05074399783799884;  // std dev = 3.089, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17106435742288517;  // std dev = 0.151, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.11549385869373346;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.07744647020525239;  // std dev = 1.261, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.05086853709740133;  // std dev = 3.043, 70.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=31 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.28852745717552;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0402307507924468;  // std dev = 3.475, 101.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=40 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19819172743946353;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0378886656924267;  // std dev = 2.437, 79.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=35 */
%   | | | else return 0.08017314988349618;  // std dev = 2.379, 96.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then return 0.19014710877352;  // std dev = 0.099, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.19312082324434665;  // std dev = 0.252, 187.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=169 */
%   | | else return -0.1274068844999956;  // std dev = 0.358, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   else if ( interaction(F, G), interaction(A, F) )
%   | then if ( recursion_proteinclass(G, B), enzyme(A, H) )
%   | | then return -0.7736089237782428;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0572267318459524;  // std dev = 3.314, 49.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return 0.20532667896869974;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.5214936092817339;  // std dev = 0.407, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.36772969468904;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.20702840102088324;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1390427740945037;  // std dev = 0.058, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else if ( interaction(A, F), phenotype(A, G) )
%   | | | then return -0.09478328378811908;  // std dev = 1.537, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.013371544224946998;  // std dev = 2.284, 71.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=32 */
%   | else return 0.049881734578346576;  // std dev = 0.208, 233.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=118 */
%   else if ( interaction(H, I), interaction(A, H) )
%   | then if ( recursion_proteinclass(I, B), enzyme(A, J) )
%   | | then return -0.6118733531701684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.09669727637122146;  // std dev = 1.849, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.03153179310820707;  // std dev = 2.868, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | else if ( complex(A, L) )
%   | | then return -0.0030797068580492673;  // std dev = 0.951, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.11560550017917726;  // std dev = 0.972, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */


Results
   AUC ROC   = 0.917437
   AUC PR    = 0.886769
   CLL	      = -0.366301
   Precision = 0.793651 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.869565


Total learning time: 74.959 seconds
Total inference time: 4.008 seconds
AUC ROC: 0.917437


Results scoring model
   AUC ROC   = 0.978584
   AUC PR    = 0.976438
   CLL	      = -0.290162
   Precision = 0.923077 at threshold = 0.5
   Recall    = 0.90566
   F1        = 0.914286


Total scoring time: 8.491 seconds
Refined model CLL: -0.290162


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.917437
   AUC PR    = 0.886769
   CLL	      = -0.366301
   Precision = 0.793651 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.869565


Total learning time: 99.16600000000001 seconds
Total inference time: 4.008 seconds
AUC ROC: 0.917437
Total revision time: 99.16600000000001
Best scored revision CLL: -0.290162


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 18:31:54
{'AUC ROC': 0.917437, 'AUC PR': 0.886769, 'CLL': -0.366301, 'Precision': [0.793651, 0.5], 'Recall': 0.961538, 'F1': 0.869565, 'Learning time': 99.16600000000001, 'Inference time': 4.008, 'parameter_0.8': {'AUC ROC': 0.913092, 'AUC PR': 0.88992, 'CLL': -0.370391, 'Precision': [0.787402, 0.5], 'Recall': 0.961538, 'F1': 0.865801, 'Learning time': 10.938, 'Inference time': 3.036}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7405018762759829;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.740801996323999;  // std dev = 4.506, 196.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=173 */
%   | | | else return -0.14185106490048838;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.30642479716847787;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.337315601766178;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.6694131893798132;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.7194734122109544;  // std dev = 2.98e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6249475655895571;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6251903141595525;  // std dev = 4.506, 196.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=173 */
%   | | | else return -0.12544463852839163;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.2648901467342408;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.29110956985202097;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.5204603507259603;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.4893127157293236;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.1494899128509388;  // std dev = 4.527, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | | else return 0.2038554727918305;  // std dev = 4.704, 128.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=57 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2161588450472247;  // std dev = 5.667, 224.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=107 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4379961413301346;  // std dev = 0.086, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( interaction(C, A), complex(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3650850612843546;  // std dev = 0.941, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3686658221249617;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39380753626014425;  // std dev = 1.975, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return 0.1161675075489495;  // std dev = 5.984, 218.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=80 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17724485832676368;  // std dev = 5.491, 224.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=107 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.31165161647882933;  // std dev = 0.962, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.395696756382595;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25283961352545203;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39357561062174756;  // std dev = 4.513, 196.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=173 */
%   | | | else return -0.15197553437151756;  // std dev = 0.095, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.17680604723432763;  // std dev = 4.376, 77.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(C, F) )
%   | | then if ( complex(D, E), interaction(C, D) )
%   | | | then return 0.2804500605096822;  // std dev = 0.041, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.1625358866415502;  // std dev = 0.918, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.26043261147049096;  // std dev = 0.037, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21395154675774983;  // std dev = 1.321, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.05694302932858215;  // std dev = 4.179, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | | else return 0.1047984162136244;  // std dev = 4.250, 128.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=57 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10062495808401657;  // std dev = 4.702, 224.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=107 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.20371735052757795;  // std dev = 0.942, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1663595646641617;  // std dev = 0.379, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.2676011447463811;  // std dev = 4.613, 214.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=190 */
%   | | else return -0.14446881227049144;  // std dev = 0.116, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.00825719536070929;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2307077166957633;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1208789566150515;  // std dev = 4.375, 77.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16972851438485298;  // std dev = 0.921, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.09172727875546181;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.020125910090359463;  // std dev = 4.134, 119.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=46 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.19430498286148562;  // std dev = 0.693, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.05675369805513624;  // std dev = 3.978, 122.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=52 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.21952281120494654;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.14378924044971952;  // std dev = 0.941, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.05380379377284659;  // std dev = 2.470, 77.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
%   | | | else return 0.05959255561974301;  // std dev = 3.451, 147.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=71 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.14312548369213474;  // std dev = 0.947, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.12275747329611253;  // std dev = 0.320, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.1943744138861023;  // std dev = 4.602, 214.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=190 */
%   | | else return -0.13315759892448104;  // std dev = 0.130, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), complex(A, H) )
%   | | | then return -0.11304935955051398;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08841075465856107;  // std dev = 3.058, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else return 0.08740788470807048;  // std dev = 3.139, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.008758404526382874;  // std dev = 3.839, 164.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=82 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return -0.2255714122732;  // std dev = 0.708, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.22029718192970996;  // std dev = 2.485, 146.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=140 */
%   | | else return -0.12034020584126305;  // std dev = 0.082, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), complex(A, I) )
%   | | | then return -0.09303161456265718;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06829846224017184;  // std dev = 3.059, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else return 0.06648356405549949;  // std dev = 3.139, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.928486
   AUC PR    = 0.911922
   CLL	      = -0.366875
   Precision = 0.787402 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.865801


Total learning time: 13.99 seconds
Total inference time: 3.234 seconds
AUC ROC: 0.928486


Results scoring model
   AUC ROC   = 0.95812
   AUC PR    = 0.948717
   CLL	      = -0.320437
   Precision = 0.894531 at threshold = 0.5
   Recall    = 0.864151
   F1        = 0.879079


Total scoring time: 4.748 seconds
Parameter learned model CLL: -0.320437


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), complex(A, K)'}, {'true,true,true': [0.968, 1, 15], 'true,true,false,true': [0.0, 0, 12], 'true,true,false,false': [0.0, 0, 14], 'true,false': [0.0, 2, 0], 'false,true': [1.328, 2, 15], 'false,false,true,true': [4.506, 23, 173], 'false,false,true,false': [0.0, 196, 0], 'false,false,false,true': [2.678, 16, 13], 'false,false,false,false': [3.461, 25, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), complex(A, K)'}, {'true,true,true': [0.968, 1, 15], 'true,true,false,true': [4.21e-08, 0, 12], 'true,true,false,false': [2.98e-08, 0, 14], 'true,false': [0.0, 2, 0], 'false,true': [1.328, 2, 15], 'false,false,true,true': [4.506, 23, 173], 'false,false,true,false': [0.0, 196, 0], 'false,false,false,true': [2.678, 16, 13], 'false,false,false,false': [3.461, 25, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.968, 1, 15], 'true,true,false,true': [0.0, 0, 11], 'true,true,false,false': [0.0, 0, 15], 'true,false': [0.0, 2, 0], 'false,true': [1.328, 2, 15], 'false,false,true,true': [4.527, 72, 45], 'false,false,true,false': [4.704, 71, 57], 'false,false,false,true': [5.667, 117, 107], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), complex(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.086, 0, 23], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.941, 1, 16], 'true,false': [0.0, 2, 0], 'false,true': [1.328, 2, 15], 'false,false,true,true': [1.975, 5, 22], 'false,false,true,false': [5.984, 138, 80], 'false,false,false,true': [5.491, 117, 107], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.962, 1, 41], 'true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 3], 'false,true,false': [1.309, 2, 12], 'false,false,true,true': [4.513, 23, 173], 'false,false,true,false': [0.095, 196, 0], 'false,false,false,true': [4.376, 41, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'complex(A, E), complex(C, F)', 'true,true,true': 'complex(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.041, 0, 14], 'true,true,true,false': [0.918, 1, 8], 'true,true,false': [0.037, 0, 19], 'true,false': [0.0, 2, 0], 'false,true': [1.321, 2, 15], 'false,false,true,true': [4.179, 72, 45], 'false,false,true,false': [4.25, 71, 57], 'false,false,false,true': [4.702, 117, 107], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), complex(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [0.942, 1, 22], 'true,false,true,true': [0.379, 2, 11], 'true,false,true,false': [4.613, 24, 190], 'true,false,false': [0.116, 196, 0], 'false,true,true,true': [0.84, 1, 3], 'false,true,true,false': [0.014, 0, 3], 'false,true,false': [4.375, 41, 36], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.921, 1, 41], 'true,false': [0.0, 2, 0], 'false,true,true': [4.134, 73, 46], 'false,true,false,true': [0.693, 1, 8], 'false,true,false,false': [3.978, 70, 52], 'false,false,true,true': [0.008, 0, 2], 'false,false,true,false': [0.941, 1, 9], 'false,false,false,true': [2.47, 41, 36], 'false,false,false,false': [3.451, 76, 71]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'complex(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), complex(A, H)'}, {'true,true': [0.947, 1, 22], 'true,false,true,true': [0.32, 2, 11], 'true,false,true,false': [4.602, 24, 190], 'true,false,false': [0.13, 196, 0], 'false,true,true,true': [0.8, 1, 2], 'false,true,true,false': [3.058, 21, 20], 'false,true,false': [3.139, 20, 20], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), complex(A, I)'}, {'true,true': [3.839, 82, 82], 'true,false,true,true': [0.708, 1, 1], 'true,false,true,false': [2.485, 6, 140], 'true,false,false': [0.082, 134, 0], 'false,true,true,true': [0.799, 1, 2], 'false,true,true,false': [3.059, 21, 20], 'false,true,false': [3.139, 20, 20], 'false,false': [0.0, 0, 0]}]]
[{'': [0.06353305785124083, 0.24847160832529225], 'false': [0.10380622837370206, 0.2470437941271444], 'false,false': [0.2465574239900082, 0.2489458593354714], 'false,false,false': [0.24732461355529084, 0.24956597222222343], 'false,false,true': [0.10357663473553333, -2.333734112987574e-16], 'true': [0.023242630385488926, 0.0], 'true,true': [0.05859374999999978, -2.7328566760003855e-16], 'true,true,false': [-1.4802973661668753e-16, 0.0]}, {'': [0.05146289894498437, 0.20320247738473773], 'false': [0.10380622837370226, 0.202018564817674], 'false,false': [0.1926515254169679, 0.24888322434562138], 'false,false,false': [0.24732461355529115, 0.24956597222222232], 'false,false,true': [0.10357663473552528, -2.945489657168783e-17], 'true': [0.022912418808683725, 0.0], 'true,true': [0.05859375, 2.049642507000289e-16], 'true,true,false': [1.4802973661668753e-16, 6.344131569286608e-17]}, {'': [0.04016089415402282, 0.16103744246090865], 'false': [0.10380622837370232, 0.16010603242599086], 'false,false': [0.17470673850606597, 0.14337159619218423], 'false,false,true': [0.17516657842874506, 0.1728749595436809], 'false,false,false': [0.14337159619218423, nan], 'true': [0.022608769214265495, 0.0], 'true,true': [0.05859375000000022, -1.3664283380001927e-16], 'true,true,false': [-2.0185873175002846e-16, -1.7763568394002506e-16]}, {'': [0.032707846677949244, 0.15286630619779543], 'false': [0.10380622837370244, 0.15314079139101908], 'false,false': [0.1696451295130604, 0.13460384806193348], 'false,false,true': [0.14443226847708707, 0.16427285347576845], 'false,false,false': [0.13460384806193348, nan], 'true': [0.022484072589083498, 0.0], 'true,true': [0.0003227193448438856, 0.04682384122777866], 'true,true,false': [0.0, 0.05204318632465254]}, {'': [0.02811768005736981, 0.1461302372468525], 'false': [0.10380622837370246, 0.14689761459097792], 'false,false': [0.12639591278634885, 0.24864821780435936], 'false,false,false': [0.24864821780435936, nan], 'false,false,true': [0.1039329521646505, 4.584750631458798e-05], 'false,true': [-3.700743415417188e-17, 0.12244897959183679], 'true': [0.02202510925517711, 0.0], 'false,true,true': [nan, -3.700743415417188e-17]}, {'': [0.02589178342846671, 0.12307122086634188], 'false': [0.10265396915666472, 0.12328135850192816], 'false,false': [0.14557032379182144, 0.0987205207251276], 'false,false,true': [0.14924339025141428, 0.14111925371657627], 'false,false,false': [0.0987205207251276, nan], 'true': [0.02213528796843817, 0.0], 'true,true': [0.040053132793340065, 7.156739025697923e-05], 'true,true,true': [0.00011920174384288147, 0.09370942745838141]}, {'': [0.0900983542633114, 0.23745289274002152], 'false': [0.23745289274002152, nan], 'false,true': [0.11491338917390846, 0.24853333941588024], 'false,true,true': [0.17657578989624914, 6.586676650697602e-05], 'true': [0.03859401841085395, 0.0920251130300785], 'true,false': [0.09494302451309429, 6.904873274623456e-05], 'true,false,true': [0.011056074368885368, 0.09945196449016451]}, {'': [0.022236845934203, 0.10854340797591917], 'false': [0.134762020225896, 0.0805961274235329], 'false,true': [0.1436277906269036, 0.12569775222183865], 'false,true,false': [0.05339220064858568, 0.12973189653855127], 'false,false': [0.07464809638480109, 0.08041833877842654], 'false,false,false': [0.07923079006025074, 0.08102886912571645], 'false,false,true': [2.994039965914519e-05, 0.08861579862527333], 'true': [0.020188510097521633, 0.0]}, {'': [0.07508560601988687, 0.2376307943260953], 'false': [0.2376307943260953, nan], 'false,true': [0.22963765106814032, 0.2463383264181979], 'false,true,true': [0.21321970274589053, 0.22807172497702588], 'true': [0.03901158887495122, 0.07650298612997862], 'true,false': [0.09401298718405848, 8.673893409208602e-05], 'true,false,true': [0.007887169317919128, 0.0989511989048311]}, {'': [0.06750935247943823, 0.2371760140228815], 'false': [0.2371760140228815, nan], 'false,true': [0.22875527935178688, 0.24639463253336405], 'false,true,true': [0.2126671613990615, 0.22815786369046281], 'true': [0.08986018772671578, 0.05300341818367105], 'true,false': [0.04774463509557811, 4.970537769709687e-05], 'true,false,true': [0.25057665350170755, 0.042279643980676934]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(A, D), complex(D, E).;true;true
0;true,true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(A, D), complex(D, E).;true;true
1;true,true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(A, D), complex(D, E).;true;true
2;true,true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(A, D), interaction(E, A).;true;true
3;true,true,false;interaction(C, A), complex(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;true,true;complex(A, E), complex(C, F).;true;true
5;true,true,true;complex(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), complex(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;complex(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.7956489350995123;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.8581489350995123;  // std dev = 2.98e-08, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.740801996323999;  // std dev = 4.506, 196.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=173 */
%   | | | else return -0.14185106490048838;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.26555634250691973;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.3581489350995113;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.6694131893798132;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.7194734122109542;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6251903141595525;  // std dev = 4.506, 196.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=173 */
%   | | | else return -0.12544463852839163;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.2300629516988654;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.3087411357856347;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.5829603507259603;  // std dev = 5.16e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.24962701739262708;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, A) )
%   | then return -0.15666164576643302;  // std dev = 0.102, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( complex(A, I), complex(G, I) )
%   | | | then return 0.12568370724935266;  // std dev = 1.844, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.2149483138108883;  // std dev = 4.265, 124.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=60 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5272194477279039;  // std dev = 0.877, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.22085589872390937;  // std dev = 7.157, 301.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=143 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.38441224389283035;  // std dev = 0.173, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, D), interaction(E, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.1623350573707898;  // std dev = 0.317, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.004827257061299047;  // std dev = 1.654, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.49522553682319265;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.12181144006886456;  // std dev = 3.886, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( recursion_proteinclass(H, B), complex(A, I) )
%   | | | then return 0.46926143316046287;  // std dev = 0.155, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16734101543093766;  // std dev = 3.961, 108.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=52 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.47567388148022777;  // std dev = 0.215, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1849703498463965;  // std dev = 5.816, 194.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=91 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.317021396375645;  // std dev = 0.141, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.14243639063923627;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.4012671648392412;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.361653494513562;  // std dev = 0.227, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.046609475161440234;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39480424983876855;  // std dev = 4.409, 196.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=173 */
%   | | | else return -0.14868517032086895;  // std dev = 0.252, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.11805975998748856;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.1742089121737978;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.23284133627136214;  // std dev = 0.159, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D), location(D, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.20862345825316053;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.047355759876251735;  // std dev = 1.483, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( phenotype(D, G), phenotype(A, H) )
%   | | | then return 0.001967678794542797;  // std dev = 1.604, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.10231044073646732;  // std dev = 2.147, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.44117607809103415;  // std dev = 1.150, 76.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=75 */
%   | | | else return -0.18188567291668248;  // std dev = 0.909, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.06737737260435557;  // std dev = 2.495, 62.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=28 */
%   | | | else return 0.10874217958879097;  // std dev = 4.880, 182.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.23955103521412235;  // std dev = 0.098, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.10609577915406158;  // std dev = 0.655, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.15683381846059793;  // std dev = 2.893, 57.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=44 */
%   | | | else return 0.27743381385579874;  // std dev = 3.121, 170.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=157 */
%   | | else return -0.1307342425326366;  // std dev = 0.321, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( recursion_proteinclass(H, B) )
%   | then if ( interaction(I, H), interaction(A, I) )
%   | | then return 0.07607749107032082;  // std dev = 1.108, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.05895692137367183;  // std dev = 2.374, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.11572867904783751;  // std dev = 3.349, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15655834573888064;  // std dev = 0.157, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return -0.17161188018466045;  // std dev = 0.394, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.009843437902135772;  // std dev = 2.175, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.07362457845919977;  // std dev = 2.591, 80.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=38 */
%   | | | else return 0.05041569356135927;  // std dev = 4.115, 120.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=53 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.2673601992488651;  // std dev = 0.087, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.14572498742362497;  // std dev = 0.714, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.037525622007611545;  // std dev = 2.804, 100.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=46 */
%   | | | else return 0.06555505012099562;  // std dev = 2.915, 124.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=61 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.15115385512226806;  // std dev = 0.149, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.11414674539804488;  // std dev = 2.868, 57.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=44 */
%   | | | else return 0.20603933176807437;  // std dev = 3.119, 170.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=157 */
%   | | else return -0.12158204397743867;  // std dev = 0.318, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.44643978664975337;  // std dev = 0.143, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.39007762052666595;  // std dev = 0.134, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then return 0.11436934492809853;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.21846381207192622;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04780562718146956;  // std dev = 3.594, 56.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1403512359002485;  // std dev = 0.082, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return -0.011383500327100369;  // std dev = 0.309, 137.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=56 */
%   | else return 0.045791749918170734;  // std dev = 0.207, 282.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=141 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( phenotype(F, H), recursion_proteinclass(F, B) )
%   | | then return -0.13754378351408578;  // std dev = 0.648, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, F), enzyme(F, I) )
%   | | | then return 0.17570401127975463;  // std dev = 0.822, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03099991592834524;  // std dev = 3.119, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.11802214999389272;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.05734224591248127;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.05015812103534067;  // std dev = 1.309, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Results
   AUC ROC   = 0.939858
   AUC PR    = 0.934192
   CLL	      = -0.356506
   Precision = 0.793651 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.869565


Total learning time: 32.486 seconds
Total inference time: 3.224 seconds
AUC ROC: 0.939858


Results scoring model
   AUC ROC   = 0.974724
   AUC PR    = 0.972453
   CLL	      = -0.29999
   Precision = 0.909774 at threshold = 0.5
   Recall    = 0.913208
   F1        = 0.911488


Total scoring time: 4.285 seconds
Refined model CLL: -0.29999


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.939858
   AUC PR    = 0.934192
   CLL	      = -0.356506
   Precision = 0.793651 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.869565


Total learning time: 55.509 seconds
Total inference time: 3.224 seconds
AUC ROC: 0.939858
Total revision time: 55.509
Best scored revision CLL: -0.29999


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 18:32:57
{'AUC ROC': 0.939858, 'AUC PR': 0.934192, 'CLL': -0.356506, 'Precision': [0.793651, 0.5], 'Recall': 0.961538, 'F1': 0.869565, 'Learning time': 55.509, 'Inference time': 3.224, 'parameter_1.0': {'AUC ROC': 0.928486, 'AUC PR': 0.911922, 'CLL': -0.366875, 'Precision': [0.787402, 0.5], 'Recall': 0.961538, 'F1': 0.865801, 'Learning time': 13.99, 'Inference time': 3.234}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 277

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 92

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(D, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8055173561521439;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.37737970433028045;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6773408397065112;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.3249796367064403;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.2261233961487609;  // std dev = 2.623, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.21550300397429492;  // std dev = 3.316, 54.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14678758753881377;  // std dev = 0.946, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, C), location(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.40991599707189835;  // std dev = 0.881, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.15034804406155786;  // std dev = 4.015, 80.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=34 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12355412413084041;  // std dev = 0.918, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4141764668767856;  // std dev = 0.967, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.155437078467435;  // std dev = 0.060, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.17358384576395916;  // std dev = 3.642, 55.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( location(A, E), location(C, F) )
%   | | then if ( location(D, E), interaction(D, C) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.11022808722936425;  // std dev = 2.438, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.10306269154606415;  // std dev = 3.156, 54.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07575763124347684;  // std dev = 0.730, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), location(C, D) )
%   | then return 0.13762409804162873;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.13762409804162873;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2912434179385752;  // std dev = 0.970, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return -0.1484172180879918;  // std dev = 0.062, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1108580565593668;  // std dev = 3.635, 55.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1830732697732972;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0893611517537139;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.0669013192965172;  // std dev = 2.375, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.21307247734963838;  // std dev = 0.488, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.044458241221564034;  // std dev = 3.039, 50.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1878546873957131;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J) )
%   | | | then return 0.04871448095634079;  // std dev = 0.604, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( location(C, D), recursion_proteinclass(C, B) )
%   | then return 0.10037818394934034;  // std dev = 0.211, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.10053979708258698;  // std dev = 0.211, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2152240834761115;  // std dev = 0.972, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return -0.13803749464063933;  // std dev = 0.076, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( recursion_proteinclass(F, B), location(A, H) )
%   | | | then return 0.15197198935648448;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13171246605484152;  // std dev = 2.062, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else return 0.047764434795274154;  // std dev = 2.968, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return -0.02227294372703685;  // std dev = 1.148, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(C, F), interaction(E, F) )
%   | | | then return 0.1731108719215733;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2367019863836916;  // std dev = 0.114, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.11916720122706599;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( recursion_proteinclass(G, B), location(A, I) )
%   | | | then return 0.13340415523869575;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09958736558302532;  // std dev = 2.061, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else return 0.0365104751219271;  // std dev = 2.968, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.897921
   AUC PR    = 0.892531
   CLL	      = -0.405794
   Precision = 0.965517 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.746667


Total learning time: 6.98 seconds
Total inference time: 2.55 seconds
AUC ROC: 0.897921


Results scoring model
   AUC ROC   = 0.893719
   AUC PR    = 0.901342
   CLL	      = -0.428177
   Precision = 0.966667 at threshold = 0.5
   Recall    = 0.527273
   F1        = 0.682353


Total scoring time: 3.262 seconds
Parameter learned model CLL: -0.428177


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), location(D, E)', 'true,true,false': 'interaction(F, C), interaction(F, D)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), location(A, K)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false,true': [2.11e-08, 0, 3], 'true,true,false,false': [2.11e-08, 0, 3], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.973, 1, 18], 'false,false,true,false': [1.49e-08, 24, 0], 'false,false,false,true': [3.603, 25, 27], 'false,false,false,false': [0.0, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), location(D, E)', 'true,true,false': 'interaction(F, C), interaction(F, D)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), location(A, K)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.973, 1, 18], 'false,false,true,false': [0.0, 24, 0], 'false,false,false,true': [3.603, 25, 27], 'false,false,false,false': [0.0, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), location(D, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [1.05e-08, 0, 3], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 5], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [2.623, 19, 17], 'false,false,true,false': [3.316, 29, 25], 'false,false,false,true': [0.946, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, C), location(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.49e-08, 0, 5], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.881, 2, 8], 'false,false,true,false': [4.015, 46, 34], 'false,false,false,true': [0.918, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 2, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.967, 1, 18], 'false,false,true,false': [0.06, 24, 0], 'false,false,false,true': [3.642, 28, 27], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'location(A, E), location(C, F)', 'true,true,true': 'location(D, E), interaction(D, C)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 2], 'true,true,true,false': [7.45e-09, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [2.438, 19, 17], 'false,false,true,false': [3.156, 29, 25], 'false,false,false,true': [0.73, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'recursion_proteinclass(C, B), location(C, D)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)'}, {'true,true': [0.25, 1, 3], 'true,false,true,true': [0.25, 1, 3], 'true,false,true,false': [0.97, 1, 18], 'true,false,false': [0.062, 24, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [3.635, 28, 27], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(H, I)', 'false,false,false': 'location(A, J)'}, {'true,true': [0.016, 0, 9], 'true,false': [0.0, 2, 0], 'false,true,true': [2.375, 19, 17], 'false,true,false,true': [0.488, 1, 3], 'false,true,false,false': [3.039, 28, 22], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.604, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'location(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false,true,true': 'recursion_proteinclass(F, B), location(A, H)'}, {'true,true': [0.211, 1, 3], 'true,false,true,true': [0.211, 1, 3], 'true,false,true,false': [0.972, 1, 18], 'true,false,false': [0.076, 24, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [2.062, 8, 10], 'false,true,false': [2.968, 20, 19], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(C, F), interaction(E, F)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false,true,true': 'recursion_proteinclass(G, B), location(A, I)'}, {'true,true': [1.148, 20, 12], 'true,false,true,true': [0.033, 0, 3], 'true,false,true,false': [0.114, 0, 9], 'true,false,false': [0.013, 7, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [2.061, 8, 10], 'false,true,false': [2.968, 20, 19], 'false,false': [0.0, 0, 0]}]]
[{'': [0.14876033057851218, 0.24875012753800713], 'false': [0.0, 0.24833402748854697], 'false,false': [0.24337479718766852, 0.24991735537190224], 'false,false,false': [0.24963017751479433, 0.0], 'false,false,true': [0.04986149584487499, 9.25185853854297e-18], 'true': [-2.9605947323337506e-16, 0.0], 'true,true': [1.4802973661668753e-16, -1.4802973661668753e-16], 'true,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}, {'': [0.1061979935898608, 0.21879522426756315], 'false': [0.0, 0.21897987026394566], 'false,false': [0.18096953222219006, 0.24647666248487696], 'false,false,false': [0.24963017751479166, 0.0], 'false,false,true': [0.04986149584487499, -4.625929269271485e-18], 'true': [0.0, 0.0], 'true,true': [0.0, 7.401486830834377e-17], 'true,true,false': [0.0, 0.0]}, {'': [0.06631740615362812, 0.19116884987446628], 'false': [0.0, 0.19194105666636382], 'false,false': [0.1986219916212852, 0.11189144176377855], 'false,false,true': [0.1911013521275079, 0.20359063419182796], 'false,false,false': [0.11189144176377855, nan], 'true': [-1.4802973661668753e-16, 0.0], 'true,true': [3.700743415417188e-17, -7.401486830834377e-17], 'true,true,false': [0.0, -4.4408920985006264e-17]}, {'': [0.040087205322502296, 0.18603603746777886], 'false': [0.0, 0.1873385661323835], 'false,false': [0.194378008682833, 0.105302278017073], 'false,false,true': [0.07754065514639927, 0.2014965087382226], 'false,false,false': [0.105302278017073, nan], 'true': [1.2335811384723962e-16, 0.0], 'true,true': [0.0, 4.4408920985006264e-17], 'true,true,false': [nan, 4.4408920985006264e-17]}, {'': [0.025423459199263334, 0.1799947878038395], 'false': [0.0, 0.18150033417898565], 'false,false': [0.10183632868377038, 0.2411591730920373], 'false,false,false': [0.2411591730920373, nan], 'false,false,true': [0.0491900175923094, 0.00014879248964283498], 'true': [-3.700743415417188e-17, 0.0], 'false,true': [nan, 0.0]}, {'': [0.01723282562023866, 0.16636553360104314], 'false': [0.0, 0.16783066819344752], 'false,false': [0.17674572042085082, 0.06670033860728374], 'false,false,true': [0.16516498051995926, 0.18444567652999244], 'false,false,false': [0.06670033860728374, nan], 'true': [3.700743415417188e-17, 0.0], 'true,true': [2.7755575615628914e-17, 0.0], 'true,true,true': [0.0, 9.25185853854297e-18]}, {'': [0.06227538959619738, 0.22452699528379258], 'false': [0.22452699528379258, nan], 'false,true': [0.0, 0.24019310299495483], 'true': [0.015609776360253548, 0.06569401703122098], 'true,false': [0.04700040417672558, 0.0001613335666364781], 'true,false,true': [0.015609776360253548, 0.04950480167157639], 'false,true,true': [0.0, 0.0]}, {'': [0.01106444974757458, 0.15759438843010448], 'false': [0.1691130476506601, 0.04239822308872952], 'false,true': [0.15666405542782919, 0.17737274984340537], 'false,true,false': [0.05948200594238763, 0.18469802708696414], 'false,false': [0.0, 0.045546890191710585], 'false,false,false': [0.045546890191710585, nan], 'true': [2.8577443099956728e-05, 0.0], 'false,false,true': [nan, 0.0]}, {'': [0.04723714073220549, 0.223112727794743], 'false': [0.223112727794743, nan], 'false,true': [0.21270538135992392, 0.22594422654604338], 'false,true,true': [0.0, 0.23629826779369673], 'true': [0.011130080981191219, 0.049865329402600245], 'true,false': [0.0449163529240506, 0.00024007260487809295], 'true,false,true': [0.011149707684668832, 0.049737731552330036]}, {'': [0.03954566164373392, 0.2223409611133096], 'false': [0.2223409611133096, nan], 'false,true': [0.21246272888888268, 0.22590952073679388], 'false,true,true': [0.0, 0.23595534123916362], 'true': [0.04115442877507665, 0.02812549608363722], 'true,false': [0.0019348999965439855, 2.541305645230109e-05], 'true,false,true': [0.0003692342213929047, 0.0014458311286274445]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(D, A), location(D, E).;true;true
0;true,true,false;interaction(F, C), interaction(F, D).;true;true
0;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H).;true;true
0;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
0;false,false,false;interaction(J, A), location(A, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(D, A), location(D, E).;true;true
1;true,true,false;interaction(F, C), interaction(F, D).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(A, H).;true;true
1;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;false,false,false;interaction(J, A), location(A, K).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(D, A), location(D, E).;true;true
2;true,true,false;interaction(A, F), interaction(F, C).;true;true
2;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(D, A), interaction(A, E).;true;true
3;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,false;interaction(A, G).;true;true
4;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;true,true;location(A, E), location(C, F).;true;true
5;true,true,true;location(D, E), interaction(D, C).;true;true
5;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;recursion_proteinclass(C, B), location(C, D).;true;true
6;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(F, G), interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C).;true;true
8;true;location(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(F, G), interaction(G, A).;true;true
8;false,true;recursion_proteinclass(F, B), location(A, H).;true;true
9;;proteinclass(A, B) :- interaction(A, C).;true;true
9;true;interaction(C, D), interaction(A, D).;true;true
9;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,false,true;interaction(C, F), interaction(E, F).;true;true
9;false;interaction(G, H), interaction(H, A).;true;true
9;false,true;recursion_proteinclass(G, B), location(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(D, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8055173561521439;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.37737970433028045;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6773408397065112;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.3249796367064403;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B), interaction(A, H) )
%   | | | then return 0.5786275304261804;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2137059845602466;  // std dev = 3.978, 78.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=35 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.22008789505426052;  // std dev = 1.153, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.1582716604020981;  // std dev = 0.159, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( complex(A, H), interaction(G, A) )
%   | | | then return -0.2201299991138172;  // std dev = 0.293, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.12637041839616153;  // std dev = 1.644, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( location(A, I) )
%   | | | then return 0.23311227647461716;  // std dev = 3.722, 62.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=33 */
%   | | | else return -0.1227939527848368;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.40912614709505185;  // std dev = 0.869, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.14325105314428985;  // std dev = 0.096, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1968324730853553;  // std dev = 3.439, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | | else return -0.10814852638991675;  // std dev = 0.863, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( location(A, E), location(C, F) )
%   | | then if ( location(D, E), interaction(D, C) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.1010193910950234;  // std dev = 1.105, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.06564919511933835;  // std dev = 0.810, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.14253903189412725;  // std dev = 3.642, 62.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=33 */
%   | | | else return -0.12256030668063111;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), location(C, D) )
%   | then return 0.13762409804162873;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.1543011001541525;  // std dev = 0.773, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.35023442396802146;  // std dev = 0.172, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.12603568773651933;  // std dev = 0.095, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.16526122482683525;  // std dev = 0.000763, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( recursion_proteinclass(I, B) )
%   | then if ( interaction(I, J), interaction(J, A) )
%   | | then return 0.3322515997814552;  // std dev = 0.300, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.11425574004844802;  // std dev = 3.399, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | | else return -0.11151561722503506;  // std dev = 0.863, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18658913878064814;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1720650182680441;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09004436638970523;  // std dev = 0.000966, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(H, H), complex(H, I) )
%   | | | then return -0.02018173828027423;  // std dev = 1.959, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.11278244990039911;  // std dev = 3.044, 56.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=29 */
%   | | else return -0.09069732628842815;  // std dev = 0.864, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.1878546873957131;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03506206543364985;  // std dev = 0.337, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1573700049513055;  // std dev = 0.292, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( location(C, D), recursion_proteinclass(C, B) )
%   | then return 0.10015331137482202;  // std dev = 0.211, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.12189959056188178;  // std dev = 0.766, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.260928147351158;  // std dev = 0.171, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.1186173779693838;  // std dev = 0.099, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.15345657988318945;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(I, J), interaction(J, A) )
%   | then if ( recursion_proteinclass(I, B), location(A, K) )
%   | | then return 0.24765428647121604;  // std dev = 0.268, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.2567232578409536;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.047040945234251993;  // std dev = 3.224, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | else return -0.07447745663085184;  // std dev = 0.865, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.09933676410377688;  // std dev = 0.212, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.2095106496603673;  // std dev = 0.416, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.014244172948918214;  // std dev = 0.803, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.19872805336266497;  // std dev = 0.037, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.12753391656657576;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(G, H), interaction(H, A) )
%   | then if ( recursion_proteinclass(G, B), location(A, I) )
%   | | then return 0.2094216489688107;  // std dev = 0.241, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.19897164068884005;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.035687158026154554;  // std dev = 3.224, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | else return -0.06165460151006924;  // std dev = 0.865, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.893017
   AUC PR    = 0.884113
   CLL	      = -0.424698
   Precision = 0.884058 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.757764


Total learning time: 58.998 seconds
Total inference time: 4.537 seconds
AUC ROC: 0.893017


Results scoring model
   AUC ROC   = 0.923636
   AUC PR    = 0.926496
   CLL	      = -0.397219
   Precision = 0.941176 at threshold = 0.5
   Recall    = 0.581818
   F1        = 0.719101


Total scoring time: 7.208 seconds
Refined model CLL: -0.397219


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.893017
   AUC PR    = 0.884113
   CLL	      = -0.424698
   Precision = 0.884058 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.757764


Total learning time: 76.448 seconds
Total inference time: 4.537 seconds
AUC ROC: 0.893017
Total revision time: 76.448
Best scored revision CLL: -0.397219


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 18:34:22
{'AUC ROC': 0.893017, 'AUC PR': 0.884113, 'CLL': -0.424698, 'Precision': [0.884058, 0.5], 'Recall': 0.663043, 'F1': 0.757764, 'Learning time': 76.448, 'Inference time': 4.537, 'parameter_0.2': {'AUC ROC': 0.897921, 'AUC PR': 0.892531, 'CLL': -0.405794, 'Precision': [0.965517, 0.5], 'Recall': 0.608696, 'F1': 0.746667, 'Learning time': 6.98, 'Inference time': 2.55}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6603467372973153;  // std dev = 3.800, 91.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=73 */
%   | | | else return -0.14185106490048766;  // std dev = 7.74e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6465415686654066;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5598137741285405;  // std dev = 3.800, 91.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=73 */
%   | | | else return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.42312069605298835;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.24811816884741303;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5044629797645588;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.07051478461972488;  // std dev = 2.890, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.3163246224858506;  // std dev = 2.433, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.21063235171685613;  // std dev = 4.080, 102.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, A), phenotype(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.37956420580342304;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.33614801534117256;  // std dev = 1.982, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.07874580870868982;  // std dev = 3.115, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1727753031537683;  // std dev = 3.985, 102.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return -0.12194420566483377;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.37805579433516623;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.37805579433516623;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3507885044509136;  // std dev = 3.782, 91.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=73 */
%   | | | else return -0.14850376662251477;  // std dev = 0.119, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.23112673932251968;  // std dev = 2.024, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(C, F) )
%   | | then if ( phenotype(D, E), interaction(C, D) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22368809811426063;  // std dev = 0.863, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return -0.004788448789538142;  // std dev = 2.674, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.1898952478809019;  // std dev = 2.122, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09898885236712278;  // std dev = 3.573, 102.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then return 0.12779255305430928;  // std dev = 0.861, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2420968892664806;  // std dev = 3.756, 98.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=80 */
%   | | else return -0.14082434825508783;  // std dev = 0.174, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.15925576967038926;  // std dev = 1.992, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1811501858140197;  // std dev = 0.025, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.08856432591634343;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return -0.03726072314563472;  // std dev = 2.691, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.28396802931548387;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10826461942451177;  // std dev = 1.938, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.2137081139411718;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21500194683922266;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.04709752968641411;  // std dev = 2.682, 55.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=27 */
%   | | | else return 0.06389653858333191;  // std dev = 1.972, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.08212032777529617;  // std dev = 0.819, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.15221999560463062;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1722092686948486;  // std dev = 3.735, 98.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=80 */
%   | | else return -0.1293645969820365;  // std dev = 0.208, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), phenotype(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04776313944904919;  // std dev = 1.460, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.2157657116034374;  // std dev = 1.270, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.005477047861860496;  // std dev = 3.115, 92.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=47 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return -0.2603581655836512;  // std dev = 0.581, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.23959756145626745;  // std dev = 1.938, 53.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | | else return -0.11912898087891219;  // std dev = 0.136, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03749191126691276;  // std dev = 1.459, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.16585528338889954;  // std dev = 1.269, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.949197
   AUC PR    = 0.922102
   CLL	      = -0.337263
   Precision = 0.864583 at threshold = 0.5
   Recall    = 0.902174
   F1        = 0.882979


Total learning time: 9.031 seconds
Total inference time: 2.562 seconds
AUC ROC: 0.949197


Results scoring model
   AUC ROC   = 0.955372
   AUC PR    = 0.951116
   CLL	      = -0.324303
   Precision = 0.834646 at threshold = 0.5
   Recall    = 0.963636
   F1        = 0.894515


Total scoring time: 4.144 seconds
Parameter learned model CLL: -0.324303


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false,true': [0.0, 0, 8], 'true,true,false,false': [0.0, 0, 4], 'true,false': [0.0, 1, 0], 'false,true': [0.953, 1, 10], 'false,false,true,true': [3.8, 18, 73], 'false,false,true,false': [7.74e-08, 82, 0], 'false,false,false,true': [1.595, 4, 7], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false,true': [2.98e-08, 0, 8], 'true,true,false,false': [0.0, 0, 4], 'true,false': [0.0, 1, 0], 'false,true': [0.953, 1, 10], 'false,false,true,true': [3.8, 18, 73], 'false,false,true,false': [0.0, 82, 0], 'false,false,false,true': [1.595, 4, 7], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false,true': [0.0, 0, 4], 'true,true,false,false': [0.0, 0, 8], 'true,false': [0.0, 1, 0], 'false,true': [0.953, 1, 10], 'false,false,true,true': [2.89, 38, 16], 'false,false,true,false': [2.433, 15, 20], 'false,false,false,true': [4.08, 55, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), phenotype(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [3.33e-08, 0, 9], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [2.58e-08, 0, 7], 'true,false': [0.0, 1, 0], 'false,true': [0.953, 1, 10], 'false,false,true,true': [1.982, 6, 14], 'false,false,true,false': [3.115, 47, 22], 'false,false,false,true': [3.985, 55, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.49e-08, 0, 17], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [0.0, 0, 4], 'false,true,false': [0.0, 0, 5], 'false,false,true,true': [3.782, 18, 73], 'false,false,true,false': [0.119, 82, 0], 'false,false,false,true': [2.024, 8, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'phenotype(A, E), phenotype(C, F)', 'true,true,true': 'phenotype(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 5], 'true,true,false': [1.29e-08, 0, 7], 'true,false': [0.0, 1, 0], 'false,true': [0.863, 1, 10], 'false,false,true,true': [2.674, 38, 16], 'false,false,true,false': [2.122, 15, 20], 'false,false,false,true': [3.573, 55, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), phenotype(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [0.861, 2, 10], 'true,false,true,true': [0.0, 0, 7], 'true,false,true,false': [3.756, 18, 80], 'true,false,false': [0.174, 82, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [1.992, 8, 10], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.025, 0, 17], 'true,false': [0.0, 1, 0], 'false,true,true': [2.691, 39, 16], 'false,true,false,true': [0.064, 0, 5], 'false,true,false,false': [1.938, 15, 17], 'false,false,true,true': [0.016, 0, 3], 'false,false,true,false': [0.021, 0, 5], 'false,false,false,true': [2.682, 28, 27], 'false,false,false,false': [1.972, 27, 20]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), phenotype(A, H)'}, {'true,true': [0.819, 2, 10], 'true,false,true,true': [0.0, 0, 7], 'true,false,true,false': [3.735, 18, 80], 'true,false,false': [0.208, 82, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.46, 6, 6], 'false,true,false': [1.27, 2, 7], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), phenotype(A, I)'}, {'true,true': [3.115, 45, 47], 'true,false,true,true': [0.581, 1, 1], 'true,false,true,false': [1.938, 4, 49], 'true,false,false': [0.136, 52, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.459, 6, 6], 'false,true,false': [1.269, 2, 7], 'false,false': [0.0, 0, 0]}]]
[{'': [0.05246913580246885, 0.24843152632094967], 'false': [0.0826446280991734, 0.24571694854855927], 'false,false': [0.24391058839252872, 0.24691358024691354], 'false,false,false': [0.23140495867768587, 0.24489795918367335], 'false,false,true': [0.15867648834681683, 7.311224796312007e-17], 'true': [-2.0898315757650005e-16, 0.0], 'true,true': [0.0, -1.4802973661668753e-16], 'true,true,false': [-2.220446049250313e-16, 0.0]}, {'': [0.0374570083700864, 0.20739948467503275], 'false': [0.08264462809917372, 0.20586193618952484], 'false,false': [0.20054272249061952, 0.2439306104444651], 'false,false,false': [0.23140495867768598, 0.2448979591836735], 'false,false,true': [0.15867648834681722, -2.166288828536891e-17], 'true': [1.0449157878825003e-16, 0.0], 'true,true': [0.0, 2.220446049250313e-16], 'true,true,false': [1.1102230246251565e-16, 0.0]}, {'': [0.02339075865192249, 0.16943701214573248], 'false': [0.08264462809917372, 0.1690637926087112], 'false,false': [0.17480083449663705, 0.16317820761473786], 'false,false,true': [0.154706384953063, 0.1691428711341884], 'false,false,false': [0.16317820761473786, nan], 'true': [-2.0898315757650005e-16, 0.0], 'true,true': [-4.4408920985006264e-17, -7.401486830834377e-17], 'true,true,false': [0.0, 0.0]}, {'': [0.014139125745608347, 0.15854203546616624], 'false': [0.08264462809917356, 0.160189251656876], 'false,false': [0.16467199105790606, 0.1556676799449293], 'false,false,true': [0.19640983453782895, 0.14058365074758883], 'false,false,false': [0.1556676799449293, nan], 'true': [1.5673736818237505e-16, 0.0], 'true,true': [1.2335811384723962e-16, 1.1102230246251565e-16], 'true,true,false': [0.0, 9.516197353929913e-17]}, {'': [0.008967087718258703, 0.15133057217993331], 'false': [0.08264462809917347, 0.1538573360529178], 'false,false': [0.14489452200391603, 0.2276016365786297], 'false,false,false': [0.2276016365786297, nan], 'false,false,true': [0.15714107083704917, 0.0001729597172781647], 'false,true': [0.13888888888888884, -4.4408920985006264e-17], 'false,true,true': [0.25, 0.0], 'true': [1.3061447348531253e-17, 0.0]}, {'': [0.006078175977508741, 0.12969227910649567], 'false': [0.06772395855126866, 0.13223336551034953], 'false,false': [0.13994232705189555, 0.12516176324860265], 'false,false,true': [0.13237186760647418, 0.1286259020723066], 'false,false,false': [0.12516176324860265, nan], 'true': [2.6122894697062506e-17, 0.0], 'true,true': [3.3306690738754695e-17, 2.3790493384824782e-17], 'true,true,true': [0.0, 0.0]}, {'': [0.10852417650016977, 0.18919127323156112], 'false': [0.18919127323156112, nan], 'false,true': [0.0, 0.22035880259692175], 'true': [0.0617176519776716, 0.11134659554824013], 'true,false': [0.13443968213964666, 0.00036905761912942037], 'true,false,true': [-1.586032892321652e-17, 0.1439727951014376], 'false,true,true': [0.0, 0.0]}, {'': [0.0038527293415918868, 0.11440891817895521], 'false': [0.12792037126030714, 0.10253003699698636], 'false,true': [0.13167365031061792, 0.1052122535665259], 'false,true,false': [0.0008214410666755767, 0.11735146825647691], 'false,false': [8.827753191041621e-05, 0.10871034104795306], 'false,false,false': [0.13075312794925342, 0.08276342013940372], 'true': [3.792059944656929e-05, 0.0], 'false,false,true': [8.370017840394113e-05, 9.039619267625087e-05]}, {'': [0.09467726173265185, 0.18519306632310248], 'false': [0.18519306632310248, nan], 'false,true': [0.17752471318259266, 0.17928904331969236], 'false,true,true': [nan, 0.17752471318259266], 'true': [0.05594098927706337, 0.09705203095739133], 'true,false': [0.13290311723972742, 0.000529084257695592], 'true,false,true': [0.0, 0.1423695589733201]}, {'': [0.0883709385056857, 0.1820652501920073], 'false': [0.1820652501920073, nan], 'false,true': [0.17744593819096743, 0.1788088155443304], 'false,true,true': [nan, 0.17744593819096743], 'true': [0.10548231337096337, 0.07191572819547146], 'true,false': [0.0832118547815727, 0.00035622619477971597], 'true,false,true': [0.16899625891468217, 0.07088540821943089]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(A, D), phenotype(D, E).;true;true
0;true,true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(A, D), phenotype(D, E).;true;true
1;true,true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(A, D), phenotype(D, E).;true;true
2;true,true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(A, D), interaction(E, A).;true;true
3;true,true,false;interaction(C, A), phenotype(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;true,true;phenotype(A, E), phenotype(C, F).;true;true
5;true,true,true;phenotype(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), phenotype(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(A, E).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), interaction(A, F).;true;true
7;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;phenotype(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(A, E).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6603467372973153;  // std dev = 3.800, 91.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=73 */
%   | | | else return -0.14185106490048766;  // std dev = 7.74e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then return 0.40685858799906804;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5598137741285405;  // std dev = 3.800, 91.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=73 */
%   | | | else return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.230510777059987;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.5999920946354708;  // std dev = 0.867, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.19453409485520132;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), enzyme(A, J) )
%   | | | then return 0.2691477688375903;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5914416962175074;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1993475267227708;  // std dev = 5.161, 163.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=73 */
%   | | | else return 0.288217703590273;  // std dev = 1.994, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4175135841583098;  // std dev = 1.29e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.5856564173811993;  // std dev = 0.057, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(H, A), complex(H, F) )
%   | | | then return -0.1337793141453927;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.24349472478268078;  // std dev = 0.338, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.1704880086957593;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10055884298767497;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.35709525895791416;  // std dev = 0.763, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.16083894541531044;  // std dev = 5.037, 157.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=70 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return -0.02209507310328565;  // std dev = 0.591, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.36031288336104156;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.34697246275485394;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3492011622623613;  // std dev = 3.688, 91.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=73 */
%   | | | else return -0.14266633004056442;  // std dev = 0.199, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.09758746436075787;  // std dev = 1.677, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.3530389436540316;  // std dev = 0.739, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2551722425694894;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( enzyme(A, F), complex(E, G) )
%   | | then return -0.2478049455451859;  // std dev = 0.770, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10666608273717806;  // std dev = 0.262, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.09612080833898658;  // std dev = 1.755, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(A, I), interaction(A, J) )
%   | | | then return -0.03289103067348807;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.23215933143502976;  // std dev = 1.368, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.13729990094843092;  // std dev = 2.543, 54.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=30 */
%   | | | else return 0.0816631632055927;  // std dev = 3.160, 88.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then if ( interaction(A, E), enzyme(A, F) )
%   | | then return -0.008497537321519144;  // std dev = 0.484, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2375142841743062;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2394334384638037;  // std dev = 3.629, 98.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=80 */
%   | | else return -0.13620872991870545;  // std dev = 0.026, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( recursion_proteinclass(H, B) )
%   | then if ( interaction(I, H), interaction(A, I) )
%   | | then return 0.4985902453344961;  // std dev = 0.354, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -4.769835666421085E-5;  // std dev = 1.615, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.3024545872717018;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17881006911636815;  // std dev = 0.017, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.0781622832523597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.011070031701189436;  // std dev = 1.853, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.12612531844773814;  // std dev = 1.485, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3585891507092168;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11327727849174518;  // std dev = 1.769, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20658537186826814;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06565368506639069;  // std dev = 3.081, 89.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=44 */
%   | | | else return -0.047521634748404575;  // std dev = 0.975, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.10617308082525685;  // std dev = 0.152, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.15252223132008633;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16847680596329911;  // std dev = 3.590, 98.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=80 */
%   | | else return -0.12468650993016768;  // std dev = 0.027, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then return 0.2256877948342085;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.2505154686119856;  // std dev = 0.361, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3331856715339422;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.2643444517472461;  // std dev = 0.792, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.021549425696434327;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.11224466989410123;  // std dev = 0.137, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.10883731808345964;  // std dev = 2.056, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.03969256505697249;  // std dev = 1.863, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | then return 0.21378989756282288;  // std dev = 0.280, 55.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | | else return -0.11739707463037366;  // std dev = 0.012, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( complex(A, I), phenotype(A, J) )
%   | then return 0.17548976839183314;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( complex(A, K) )
%   | | then return -0.10530097789134117;  // std dev = 0.422, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.025592250818576467;  // std dev = 0.683, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.18939879328195527;  // std dev = 1.045, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */


Results
   AUC ROC   = 0.957644
   AUC PR    = 0.910071
   CLL	      = -0.320322
   Precision = 0.89011 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.885246


Total learning time: 19.737 seconds
Total inference time: 2.478 seconds
AUC ROC: 0.957644


Results scoring model
   AUC ROC   = 0.973884
   AUC PR    = 0.969708
   CLL	      = -0.295576
   Precision = 0.850394 at threshold = 0.5
   Recall    = 0.981818
   F1        = 0.911392


Total scoring time: 4.4 seconds
Refined model CLL: -0.295576


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.957644
   AUC PR    = 0.910071
   CLL	      = -0.320322
   Precision = 0.89011 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.885246


Total learning time: 37.312 seconds
Total inference time: 2.478 seconds
AUC ROC: 0.957644
Total revision time: 37.312
Best scored revision CLL: -0.295576


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 18:35:06
{'AUC ROC': 0.957644, 'AUC PR': 0.910071, 'CLL': -0.320322, 'Precision': [0.89011, 0.5], 'Recall': 0.880435, 'F1': 0.885246, 'Learning time': 37.312, 'Inference time': 2.478, 'parameter_0.4': {'AUC ROC': 0.949197, 'AUC PR': 0.922102, 'CLL': -0.337263, 'Precision': [0.864583, 0.5], 'Recall': 0.902174, 'F1': 0.882979, 'Learning time': 9.031, 'Inference time': 2.562}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.724815601766179;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6975649934936707;  // std dev = 4.297, 137.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=115 */
%   | | | else return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6122482608191132;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.590132132779238;  // std dev = 4.297, 137.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=115 */
%   | | | else return -0.12544463852839105;  // std dev = 8.30e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.3087411357856348;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.22373365448410584;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.48037714466292364;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.11648726752149027;  // std dev = 3.566, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   | | | else return 0.2449470771296163;  // std dev = 3.232, 64.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.20919022985628957;  // std dev = 4.846, 150.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=70 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(C, A), phenotype(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3623065253795405;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39020739608964056;  // std dev = 2.101, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return 0.08607074997183965;  // std dev = 4.041, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17134640035683768;  // std dev = 4.725, 150.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=70 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.07285445723568977;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4061877905690231;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.28118779056902315;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3706218801115537;  // std dev = 4.299, 137.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=115 */
%   | | | else return -0.14941612532120507;  // std dev = 0.105, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.17768793843301697;  // std dev = 2.598, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(C, F) )
%   | | then if ( phenotype(D, E), interaction(C, D) )
%   | | | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20950877185757288;  // std dev = 1.287, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.027054004525664605;  // std dev = 3.247, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   | | | else return 0.14189924576915663;  // std dev = 2.787, 64.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09569592835013467;  // std dev = 4.189, 150.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=70 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then return 0.12735028783848504;  // std dev = 1.262, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.2097577156325357;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2574616722072982;  // std dev = 4.282, 147.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=125 */
%   | | else return -0.14193858571996665;  // std dev = 0.140, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.20975771563253576;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20975771563253576;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.12202933594173866;  // std dev = 2.588, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1812073182094605;  // std dev = 0.035, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08852863246018249;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return -0.017981572428172082;  // std dev = 3.303, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.28409212069076817;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08292079442750501;  // std dev = 2.544, 61.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=28 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.22996280201307392;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2528236251038127;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.04979515461302112;  // std dev = 2.955, 74.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | | else return 0.05297445418521486;  // std dev = 2.512, 76.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.0807605831202734;  // std dev = 1.215, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.15221262286871018;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1848306205851953;  // std dev = 4.264, 147.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=125 */
%   | | else return -0.13031172448511047;  // std dev = 0.169, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), phenotype(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07336214788479468;  // std dev = 1.853, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.12337284287711495;  // std dev = 1.795, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -2.1162430722979685E-4;  // std dev = 3.736, 141.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=72 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return -0.07281244252493362;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22974385153215615;  // std dev = 2.209, 80.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | | else return -0.11880311663383558;  // std dev = 0.103, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05796093188203008;  // std dev = 1.853, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0.09422599073111584;  // std dev = 1.796, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.956049
   AUC PR    = 0.933209
   CLL	      = -0.327807
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.862275


Total learning time: 10.572 seconds
Total inference time: 2.674 seconds
AUC ROC: 0.956049


Results scoring model
   AUC ROC   = 0.956198
   AUC PR    = 0.949239
   CLL	      = -0.31925
   Precision = 0.864407 at threshold = 0.5
   Recall    = 0.921687
   F1        = 0.892128


Total scoring time: 4.177 seconds
Parameter learned model CLL: -0.31925


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false,true': [0.0, 0, 10], 'true,true,false,false': [0.0, 0, 6], 'true,false': [0.0, 1, 0], 'false,true': [1.317, 2, 13], 'false,false,true,true': [4.297, 22, 115], 'false,false,true,false': [0.0, 126, 0], 'false,false,false,true': [2.121, 9, 9], 'false,false,false,false': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true,true': [2.98e-08, 0, 9], 'true,true,false,true': [2.98e-08, 0, 10], 'true,true,false,false': [2.11e-08, 0, 6], 'true,false': [0.0, 1, 0], 'false,true': [1.317, 2, 13], 'false,false,true,true': [4.297, 22, 115], 'false,false,true,false': [8.3e-08, 126, 0], 'false,false,false,true': [2.121, 9, 9], 'false,false,false,false': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false,true': [0.0, 0, 5], 'true,true,false,false': [0.0, 0, 11], 'true,false': [0.0, 1, 0], 'false,true': [1.317, 2, 13], 'false,false,true,true': [3.566, 50, 27], 'false,false,true,false': [3.232, 33, 31], 'false,false,false,true': [4.846, 80, 70], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), phenotype(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [4.21e-08, 0, 14], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [3.33e-08, 0, 9], 'true,false': [0.0, 1, 0], 'false,true': [1.317, 2, 13], 'false,false,true,true': [2.101, 6, 21], 'false,false,true,false': [4.041, 77, 37], 'false,false,false,true': [4.725, 80, 70], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [2.11e-08, 0, 25], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [0.0, 0, 4], 'false,true,false': [0.935, 1, 7], 'false,false,true,true': [4.299, 22, 115], 'false,false,true,false': [0.105, 126, 0], 'false,false,false,true': [2.598, 15, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'phenotype(A, E), phenotype(C, F)', 'true,true,true': 'phenotype(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [1.49e-08, 0, 8], 'true,true,true,false': [7.45e-09, 0, 6], 'true,true,false': [2.11e-08, 0, 11], 'true,false': [0.0, 1, 0], 'false,true': [1.287, 2, 13], 'false,false,true,true': [3.247, 50, 27], 'false,false,true,false': [2.787, 33, 31], 'false,false,false,true': [4.189, 80, 70], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), phenotype(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [1.262, 3, 16], 'true,false,true,true': [1.49e-08, 0, 8], 'true,false,true,false': [4.282, 22, 125], 'true,false,false': [0.14, 126, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [2.588, 15, 13], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.035, 0, 25], 'true,false': [0.0, 1, 0], 'false,true,true': [3.303, 52, 27], 'false,true,false,true': [0.042, 0, 7], 'false,true,false,false': [2.544, 33, 28], 'false,false,true,true': [0.019, 0, 3], 'false,false,true,false': [0.029, 0, 6], 'false,false,false,true': [2.955, 37, 37], 'false,false,false,false': [2.512, 43, 33]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), phenotype(A, H)'}, {'true,true': [1.215, 3, 16], 'true,false,true,true': [0.0, 0, 8], 'true,false,true,false': [4.264, 22, 125], 'true,false,false': [0.169, 126, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.853, 9, 9], 'false,true,false': [1.795, 6, 8], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), phenotype(A, I)'}, {'true,true': [3.736, 69, 72], 'true,false,true,true': [0.768, 1, 2], 'true,false,true,false': [2.209, 5, 75], 'true,false,false': [0.103, 76, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.853, 9, 9], 'false,true,false': [1.796, 6, 8], 'false,false': [0.0, 0, 0]}]]
[{'': [0.03698224852071082, 0.24846212995001932], 'false': [0.11555555555555533, 0.2463834862602028], 'false,false': [0.24606398820281067, 0.2487244897959179], 'false,false,false': [0.25, 0.23999999999999985], 'false,false,true': [0.13479673930417546, -1.76225876924628e-17], 'true': [7.105427357601002e-16, 0.0], 'true,true': [-2.9605947323337506e-16, -1.1102230246251565e-16], 'true,true,false': [-8.881784197001253e-17, -1.4802973661668753e-16]}, {'': [0.026401128419569986, 0.20473386809155475], 'false': [0.11555555555555573, 0.2029087324455415], 'false,false': [0.19800590452313216, 0.24808766446160918], 'false,false,false': [0.25000000000000017, 0.2399999999999999], 'false,false,true': [0.13479673930416722, 5.4630021846634684e-17], 'true': [-1.4210854715202004e-16, 0.0], 'true,true': [9.868649107779169e-17, 0.0], 'true,true,false': [8.881784197001253e-17, 7.401486830834377e-17]}, {'': [0.016486699015016572, 0.1641127661270189], 'false': [0.11555555555555544, 0.16255399596755213], 'false,false': [0.1683497266393602, 0.15653279639746687], 'false,false,true': [0.16512783955529686, 0.1632143712628318], 'false,false,false': [0.15653279639746687, nan], 'true': [-2.842170943040401e-16, 0.0], 'true,true': [-1.4802973661668753e-16, -1.1102230246251565e-16], 'true,true,false': [-4.4408920985006264e-17, -4.0371746350005693e-17]}, {'': [0.009965795208791005, 0.15510362397634359], 'false': [0.11555555555555555, 0.15510097621508553], 'false,false': [0.16141488578558913, 0.1488117130329334], 'false,false,true': [0.16344715448054753, 0.14322096546588184], 'false,false,false': [0.1488117130329334, nan], 'true': [-3.552713678800501e-17, 0.0], 'true,true': [1.2688263138573217e-16, 1.6148698540002277e-16], 'true,true,false': [0.0, 1.2335811384723962e-16]}, {'': [0.006320345502775467, 0.14743050603545066], 'false': [0.11555555555555562, 0.14802910414170864], 'false,false': [0.1378206991537749, 0.2410596690513425], 'false,false,false': [0.2410596690513425, nan], 'false,false,true': [0.13493009085768978, 8.831913118169586e-05], 'false,true': [0.12244897959183669, 0.10937499999999996], 'false,true,true': [0.2222222222222222, 0.0], 'true': [1.7763568394002505e-17, 0.0]}, {'': [0.004284130300889366, 0.12486794080321083], 'false': [0.11040490101634916, 0.12488607023121649], 'false,false': [0.1331441296811821, 0.11699136205244184], 'false,false,true': [0.1369236247505225, 0.12139418661493624], 'false,false,false': [0.11699136205244184, nan], 'true': [0.0, 0.0], 'true,true': [3.172065784643304e-17, 4.0371746350005693e-17], 'true,true,true': [2.7755575615628914e-17, 9.25185853854297e-18]}, {'': [0.10320716154713393, 0.2101035834843557], 'false': [0.2101035834843557, nan], 'false,true': [0.0, 0.2391563475495814], 'true': [0.0838346681760973, 0.10435656903496128], 'true,false': [0.1184119208001704, 0.00015600694096426813], 'true,false,true': [2.7755575615628914e-17, 0.12473865316111385], 'false,true,true': [0.0, 0.0]}, {'': [0.00273837193909815, 0.10974749669000688], 'false': [0.12364245340415572, 0.09662215951689072], 'false,true': [0.13807232243812884, 0.09893036094412434], 'false,true,false': [0.0002483112078328631, 0.10608851120991092], 'false,false': [0.0002476559083246017, 0.10027873841687229], 'false,false,false': [0.11796782289414147, 0.08305016957611014], 'true': [4.9542082675309017e-05, 0.0], 'false,false,true': [0.00012059852822255783, 0.000136978854246933]}, {'': [0.08849036807372064, 0.20869194094196689], 'false': [0.20869194094196689, nan], 'false,true': [0.19083335692297415, 0.23024612588015647], 'false,true,true': [nan, 0.19083335692297415], 'true': [0.07769888960609857, 0.08912777739016439], 'true,false': [0.11733776552506782, 0.0002266211771580387], 'true,false,true': [0.0, 0.12366858155015653]}, {'': [0.08156475930454032, 0.20843960461793448], 'false': [0.20843960461793448, nan], 'false,true': [0.1908468019490512, 0.23031914793257346], 'false,true,true': [nan, 0.1908468019490512], 'true': [0.09897518733141852, 0.06456349515014448], 'true,false': [0.06907325040759388, 0.00013868422410635338], 'true,false,true': [0.19684175045220287, 0.060973245713503266]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(A, D), phenotype(D, E).;true;true
0;true,true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(A, D), phenotype(D, E).;true;true
1;true,true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(A, D), phenotype(D, E).;true;true
2;true,true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(A, D), interaction(E, A).;true;true
3;true,true,false;interaction(C, A), phenotype(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;true,true;phenotype(A, E), phenotype(C, F).;true;true
5;true,true,true;phenotype(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), phenotype(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(A, E).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), interaction(A, F).;true;true
7;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;phenotype(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(A, E).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6975649934936707;  // std dev = 4.297, 137.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=115 */
%   | | | else return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.25814893509951237;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7194734122109545;  // std dev = 1.49e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109543;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.590132132779238;  // std dev = 4.297, 137.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=115 */
%   | | | else return -0.12544463852839105;  // std dev = 8.30e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.22373365448410584;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.4136573287083126;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.21725136032621215;  // std dev = 0.287, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.11231637819360643;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360643;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2726104823722791;  // std dev = 6.310, 240.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=132 */
%   | | | else return -0.13171160777247806;  // std dev = 0.321, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.297049430101474;  // std dev = 1.249, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.6540992356382084;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13158462222651887;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( enzyme(A, F), phenotype(E, G) )
%   | | | then return -0.025948480975607563;  // std dev = 1.233, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.19773915943890505;  // std dev = 2.128, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.22588461925937584;  // std dev = 0.641, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5083661178541942;  // std dev = 0.205, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.12075572529681705;  // std dev = 3.014, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | | | else return 0.18987657539904726;  // std dev = 5.106, 175.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=85 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3048117270313261;  // std dev = 0.080, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.19032279604981162;  // std dev = 0.591, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.43646436153576734;  // std dev = 0.258, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.4196874760793418;  // std dev = 0.193, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1862875542718448;  // std dev = 0.615, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3595888540934531;  // std dev = 4.187, 137.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=115 */
%   | | | else return -0.14376694553326802;  // std dev = 0.317, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.211808132467917;  // std dev = 1.621, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.10971739242761491;  // std dev = 1.920, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.243594053798704;  // std dev = 0.073, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( location(F, G), location(A, G) )
%   | | | then return 0.31432909788068675;  // std dev = 2.894, 89.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=79 */
%   | | | else return -0.05347500317738485;  // std dev = 1.342, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(H, D), interaction(A, I) )
%   | | | then return -0.1312966517928977;  // std dev = 0.543, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.18394864088343554;  // std dev = 0.923, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.43174381528620137;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13981516018570941;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.10375158750907368;  // std dev = 3.577, 103.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=47 */
%   | | | else return 0.2241102931517247;  // std dev = 0.639, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.22138104767760092;  // std dev = 0.185, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.034497624148755554;  // std dev = 0.530, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.21434883103333963;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.21944442816211027;  // std dev = 4.026, 147.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=125 */
%   | | else return -0.12057762093805348;  // std dev = 0.030, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0.4347953546688532;  // std dev = 0.441, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.16692526677846797;  // std dev = 1.295, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.018794759438747845;  // std dev = 1.966, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1806703211869083;  // std dev = 0.013, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14587839003472233;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.08519513483683523;  // std dev = 1.707, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.016222643551932474;  // std dev = 2.393, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.32269466284525444;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07997651109798186;  // std dev = 2.348, 61.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=28 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21403716576160642;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 7.966501921384511E-4;  // std dev = 2.066, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.058948051921975775;  // std dev = 2.931, 110.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=53 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.15463675327978604;  // std dev = 0.171, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.04101299276184197;  // std dev = 0.498, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.15526005973551138;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1601978741320345;  // std dev = 3.994, 147.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=125 */
%   | | else return -0.11214114013238578;  // std dev = 0.029, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.33806557733945264;  // std dev = 0.419, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return -0.09464942699347684;  // std dev = 1.473, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.15328306162208744;  // std dev = 1.450, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.13728417473701562;  // std dev = 0.938, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.11809164518031338;  // std dev = 0.149, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.03547427354319725;  // std dev = 3.180, 100.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=42 */
%   | | | else return 0.08382957497067631;  // std dev = 0.842, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else return 0.051815936430289554;  // std dev = 0.233, 159.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=77 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.13283510201645513;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5240953260910908;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.42889777417224817;  // std dev = 0.221, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.137977532796055;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.017639540413061643;  // std dev = 1.513, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */


Results
   AUC ROC   = 0.961189
   AUC PR    = 0.917243
   CLL	      = -0.319923
   Precision = 0.917647 at threshold = 0.5
   Recall    = 0.847826
   F1        = 0.881356


Total learning time: 34.058 seconds
Total inference time: 2.908 seconds
AUC ROC: 0.961189


Results scoring model
   AUC ROC   = 0.977537
   AUC PR    = 0.97334
   CLL	      = -0.28767
   Precision = 0.884615 at threshold = 0.5
   Recall    = 0.96988
   F1        = 0.925287


Total scoring time: 4.711 seconds
Refined model CLL: -0.28767


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.961189
   AUC PR    = 0.917243
   CLL	      = -0.319923
   Precision = 0.917647 at threshold = 0.5
   Recall    = 0.847826
   F1        = 0.881356


Total learning time: 53.518 seconds
Total inference time: 2.908 seconds
AUC ROC: 0.961189
Total revision time: 53.518
Best scored revision CLL: -0.28767


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 18:36:06
{'AUC ROC': 0.961189, 'AUC PR': 0.917243, 'CLL': -0.319923, 'Precision': [0.917647, 0.5], 'Recall': 0.847826, 'F1': 0.881356, 'Learning time': 53.518, 'Inference time': 2.908, 'parameter_0.6': {'AUC ROC': 0.956049, 'AUC PR': 0.933209, 'CLL': -0.327807, 'Precision': [0.96, 0.5], 'Recall': 0.782609, 'F1': 0.862275, 'Learning time': 10.572, 'Inference time': 2.674}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6914822684328457;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6632771402277143;  // std dev = 5.531, 195.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=157 */
%   | | | else return -0.14185106490048818;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.40360348055405776;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5851860008555358;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5622056492556832;  // std dev = 5.531, 195.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=157 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.34706599335169397;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.19258789115538322;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.46125983910675533;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.1201353643663412;  // std dev = 4.304, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
%   | | | else return 0.22832507803076782;  // std dev = 3.691, 79.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=37 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2264351424221359;  // std dev = 5.763, 200.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=97 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4175135841583098;  // std dev = 5.58e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(C, A), phenotype(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4175135841583098;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3488463256948421;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3981880928025189;  // std dev = 2.562, 40.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=31 */
%   | | | else return 0.06650080869347935;  // std dev = 4.641, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.18468060648736057;  // std dev = 5.625, 200.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=97 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3207118471601495;  // std dev = 2.98e-08, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.17879372175020847;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4287937217502085;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20657149952798634;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3480450932224905;  // std dev = 5.509, 195.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=157 */
%   | | | else return -0.14920464199514766;  // std dev = 0.158, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.19338896407201056;  // std dev = 2.830, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(C, F) )
%   | | then if ( phenotype(D, E), interaction(C, D) )
%   | | | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2551722425694894;  // std dev = 2.11e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.19980345652398995;  // std dev = 1.556, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.030851941775579855;  // std dev = 3.898, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
%   | | | else return 0.13071215612407028;  // std dev = 3.272, 79.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=37 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10495146424141484;  // std dev = 5.068, 200.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=97 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then return 0.1308001204919861;  // std dev = 1.520, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.2097577156325357;  // std dev = 1.97e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2408580334807203;  // std dev = 5.497, 206.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=168 */
%   | | else return -0.14184329221540656;  // std dev = 0.194, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.20975771563253576;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20975771563253576;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1350222325114484;  // std dev = 2.822, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.18155932852661097;  // std dev = 0.037, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.0888073994243032;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return -0.008725593926559003;  // std dev = 3.907, 113.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.30910944579844557;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.07207831654858977;  // std dev = 3.040, 76.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=34 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.24965698178344847;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14903248684103027;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.04721341816984709;  // std dev = 3.767, 106.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=54 */
%   | | | else return 0.06901864750351537;  // std dev = 2.880, 94.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=43 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.08281639369540751;  // std dev = 1.491, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.15216720363126343;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.17091897933377945;  // std dev = 5.476, 206.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=168 */
%   | | else return -0.13041528558762266;  // std dev = 0.220, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), phenotype(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0945174007914082;  // std dev = 2.073, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else return 0.11811971463225288;  // std dev = 1.910, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.015701236791551887;  // std dev = 4.750, 198.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=97 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return 0.04635108625540202;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24041789138649122;  // std dev = 2.739, 108.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=100 */
%   | | else return -0.12028740049874774;  // std dev = 0.130, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07444596384226594;  // std dev = 2.074, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else return 0.0902074741733076;  // std dev = 1.910, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.955577
   AUC PR    = 0.933992
   CLL	      = -0.335408
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.862275


Total learning time: 11.554 seconds
Total inference time: 2.756 seconds
AUC ROC: 0.955577


Results scoring model
   AUC ROC   = 0.942968
   AUC PR    = 0.932336
   CLL	      = -0.342167
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.927602
   F1        = 0.877944


Total scoring time: 5.005 seconds
Parameter learned model CLL: -0.342167


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true,true': [0.0, 0, 12], 'true,true,false,true': [0.0, 0, 13], 'true,true,false,false': [0.0, 0, 8], 'true,false': [0.0, 1, 0], 'false,true': [1.581, 3, 15], 'false,false,true,true': [5.531, 38, 157], 'false,false,true,false': [0.0, 162, 0], 'false,false,false,true': [2.335, 10, 12], 'false,false,false,false': [1.595, 7, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true,true': [4.21e-08, 0, 12], 'true,true,false,true': [4.21e-08, 0, 13], 'true,true,false,false': [2.98e-08, 0, 8], 'true,false': [0.0, 1, 0], 'false,true': [1.581, 3, 15], 'false,false,true,true': [5.531, 38, 157], 'false,false,true,false': [0.0, 162, 0], 'false,false,false,true': [2.335, 10, 12], 'false,false,false,false': [1.595, 7, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 12], 'true,true,false,true': [0.0, 0, 7], 'true,true,false,false': [0.0, 0, 14], 'true,false': [0.0, 1, 0], 'false,true': [1.581, 3, 15], 'false,false,true,true': [4.304, 72, 39], 'false,false,true,false': [3.691, 42, 37], 'false,false,false,true': [5.763, 103, 97], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), phenotype(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [5.58e-08, 0, 18], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [4.21e-08, 0, 13], 'true,false': [0.0, 1, 0], 'false,true': [1.581, 3, 15], 'false,false,true,true': [2.562, 9, 31], 'false,false,true,false': [4.641, 105, 45], 'false,false,false,true': [5.625, 103, 97], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [2.98e-08, 0, 33], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.866, 1, 3], 'false,true,true,false': [0.0, 0, 5], 'false,true,false': [1.247, 2, 7], 'false,false,true,true': [5.509, 38, 157], 'false,false,true,false': [0.158, 162, 0], 'false,false,false,true': [2.83, 17, 16], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'phenotype(A, E), phenotype(C, F)', 'true,true,true': 'phenotype(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [2.11e-08, 0, 11], 'true,true,true,false': [7.45e-09, 0, 6], 'true,true,false': [2.11e-08, 0, 16], 'true,false': [0.0, 1, 0], 'false,true': [1.556, 3, 15], 'false,false,true,true': [3.898, 72, 39], 'false,false,true,false': [3.272, 42, 37], 'false,false,false,true': [5.068, 103, 97], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), phenotype(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [1.52, 4, 22], 'true,false,true,true': [1.97e-08, 0, 10], 'true,false,true,false': [5.497, 38, 168], 'true,false,false': [0.194, 162, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 3], 'false,true,false': [2.822, 17, 16], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.037, 0, 33], 'true,false': [0.0, 1, 0], 'false,true,true': [3.907, 74, 39], 'false,true,false,true': [0.053, 0, 8], 'false,true,false,false': [3.04, 42, 34], 'false,false,true,true': [0.021, 0, 4], 'false,false,true,false': [0.912, 1, 6], 'false,false,false,true': [3.767, 52, 54], 'false,false,false,false': [2.88, 51, 43]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), phenotype(A, H)'}, {'true,true': [1.491, 4, 22], 'true,false,true,true': [0.0, 0, 10], 'true,false,true,false': [5.476, 38, 168], 'true,false,false': [0.22, 162, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.073, 10, 12], 'false,true,false': [1.91, 7, 9], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), phenotype(A, I)'}, {'true,true': [4.75, 101, 97], 'true,false,true,true': [0.841, 1, 3], 'true,false,true,false': [2.739, 8, 100], 'true,false,false': [0.13, 94, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.074, 10, 12], 'false,true,false': [1.91, 7, 9], 'false,false': [0.0, 0, 0]}]]
[{'': [0.028546712802769686, 0.2484621299500209], 'false': [0.1388888888888886, 0.24681788297173266], 'false,false': [0.24637305902753645, 0.24977043158861298], 'false,false,false': [0.24793388429752028, 0.2314049586776858], 'false,false,true': [0.15689677843524572, -1.507710280355151e-16], 'true': [1.5072118637335459e-15, 0.0], 'true,true': [-1.4802973661668753e-16, -3.383536836952858e-16], 'true,true,false': [-2.7328566760003855e-16, -2.220446049250313e-16]}, {'': [0.020379113245112886, 0.20848462082960162], 'false': [0.13888888888888898, 0.2068578731787734], 'false,false': [0.20290554511636028, 0.24772723888161483], 'false,false,false': [0.24793388429752092, 0.23140495867768582], 'false,false,true': [0.15689677843524183, 0.0], 'true': [-4.306319610667274e-16, 0.0], 'true,true': [1.4802973661668753e-16, 1.691768418476429e-16], 'true,true,false': [1.3664283380001927e-16, 1.1102230246251565e-16]}, {'': [0.01272613431235298, 0.17150419599813788], 'false': [0.1388888888888892, 0.16991845054712368], 'false,false': [0.17205525127010204, 0.16605688646607863], 'false,false,true': [0.1669132145571475, 0.1724419458242689], 'false,false,false': [0.16605688646607863, nan], 'true': [1.0765799026668185e-16, 0.0], 'true,true': [-2.590520390792032e-16, -2.1147105230955362e-16], 'true,true,false': [-6.344131569286608e-17, -1.2688263138573217e-16]}, {'': [0.007692628357013983, 0.16312516168438135], 'false': [0.1388888888888891, 0.1626890847543285], 'false,false': [0.16621584272615075, 0.15819973202703158], 'false,false,true': [0.16410171602333612, 0.14361825101750486], 'false,false,false': [0.15819973202703158, nan], 'true': [-2.691449756667046e-16, 0.0], 'true,true': [1.7270135938613546e-16, 1.4802973661668753e-16], 'true,true,false': [0.0, 1.3664283380001927e-16]}, {'': [0.004878694376329236, 0.15495669164598996], 'false': [0.13888888888888884, 0.15490943515018996], 'false,false': [0.14636946215974356, 0.24268370244776463], 'false,false,false': [0.24268370244776463, nan], 'false,false,true': [0.1556401645141113, 0.00015377544766620934], 'false,true': [0.09876543209876537, 0.17283950617283947], 'false,true,true': [0.1875, -6.661338147750939e-17], 'true': [2.6914497566670462e-17, 0.0]}, {'': [0.0033069335208387534, 0.1342692772712842], 'false': [0.1345130900531788, 0.13371715393349942], 'false,false': [0.13875114969266364, 0.12841777955595962], 'false,false,true': [0.1369209214413806, 0.13549695239410792], 'false,false,false': [0.12841777955595962, nan], 'true': [0.0, 0.0], 'true,true': [2.6122894697062506e-17, 2.7755575615628914e-17], 'true,true,true': [4.0371746350005693e-17, 9.25185853854297e-18]}, {'': [0.11412338204763486, 0.21021255809523573], 'false': [0.21021255809523573, nan], 'false,true': [5.551115123125783e-18, 0.24132802562787795], 'true': [0.08890695206977917, 0.11566472368927777], 'true,false': [0.13994167125060986, 0.00023241544055334026], 'true,false,true': [3.8857805861880476e-17, 0.1466901771067449], 'false,true,true': [0.0, -9.25185853854297e-18]}, {'': [0.002127098657456906, 0.12021294383775377], 'false': [0.12906787261297603, 0.11154536852223983], 'false,true': [0.13505822767374476, 0.114879269917061], 'false,true,false': [0.000345082645690456, 0.12158466622915647], 'false,false': [0.07801460100906597, 0.11253326400847458], 'false,false,false': [0.1338528926993784, 0.08823998253713757], 'false,false,true': [0.00010617094744634625, 0.11885178063508668], 'true': [4.161008715242501e-05, 0.0]}, {'': [0.10065167846419966, 0.20929136879423835], 'false': [0.20929136879423835, nan], 'false,true': [0.19542205655556816, 0.22803915936424857], 'false,true,true': [nan, 0.19542205655556819], 'true': [0.08545752927599791, 0.10158574441427588], 'true,false': [0.1388596839488446, 0.0002986477573474505], 'true,false,true': [0.0, 0.1455841661809551]}, {'': [0.09431866995116267, 0.20924650055512667], 'false': [0.20924650055512667, nan], 'false,true': [0.19547859872042253, 0.22803354045747265], 'false,true,true': [nan, 0.19547859872042253], 'true': [0.11392927673009069, 0.07169523092475527], 'true,false': [0.07460709539732917, 0.00017964268010885689], 'true,false,true': [0.17695267244298413, 0.06947144972493408]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(A, D), phenotype(D, E).;true;true
0;true,true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(A, D), phenotype(D, E).;true;true
1;true,true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(A, D), phenotype(D, E).;true;true
2;true,true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(A, D), interaction(E, A).;true;true
3;true,true,false;interaction(C, A), phenotype(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;true,true;phenotype(A, E), phenotype(C, F).;true;true
5;true,true,true;phenotype(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), phenotype(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(A, E).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), interaction(A, F).;true;true
7;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;phenotype(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(A, E).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995116;  // std dev = 3.80e-08, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6632771402277143;  // std dev = 5.531, 195.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=157 */
%   | | | else return -0.14185106490048818;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.2581489350995123;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109547;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.10328116252396158;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.7497580623987586;  // std dev = 0.120, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5373269569258905;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5622056492556832;  // std dev = 5.531, 195.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=157 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.40564015880039006;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.22373365448410584;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5357287068951111;  // std dev = 0.113, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(D, A) )
%   | | | then return 0.6114971653058686;  // std dev = 0.834, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.1393371944460828;  // std dev = 1.031, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.15362950796317054;  // std dev = 0.640, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.20073929185260017;  // std dev = 3.856, 84.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=37 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), phenotype(G, I) )
%   | | | then return 0.3037130413546822;  // std dev = 0.663, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.599771801703615;  // std dev = 0.139, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.1685670375184089;  // std dev = 3.169, 59.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=25 */
%   | | | else return 0.2507878489501384;  // std dev = 5.290, 169.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.422296996002625;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1777645311678006;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13390879856718366;  // std dev = 0.083, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.037133335256895314;  // std dev = 1.649, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.18001180584672102;  // std dev = 2.008, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5094387598973198;  // std dev = 0.153, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1559375225440889;  // std dev = 5.300, 170.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=78 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.16790733406470423;  // std dev = 2.626, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.2238522238368764;  // std dev = 4.037, 116.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=60 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30992102841759445;  // std dev = 0.081, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.1858319228713756;  // std dev = 0.601, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4106860667253505;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.37353993063971297;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1529259237783048;  // std dev = 0.879, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3435328288582058;  // std dev = 5.234, 195.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=157 */
%   | | | else return -0.14490684825776878;  // std dev = 0.343, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.21167116485971216;  // std dev = 2.291, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.08548696487985744;  // std dev = 1.621, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2600768666580662;  // std dev = 8.33e-09, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.19790967296623216;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return -0.27409061189632844;  // std dev = 0.243, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.1504587622682842;  // std dev = 0.257, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07587634882022694;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(I, K), phenotype(A, K) )
%   | | | then return 0.032296249548913254;  // std dev = 3.129, 68.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=30 */
%   | | | else return 0.09930526341829016;  // std dev = 4.424, 165.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=79 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.15341202297704185;  // std dev = 2.838, 94.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=50 */
%   | | | else return 0.11489849894953805;  // std dev = 3.322, 62.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.24447768158427938;  // std dev = 0.053, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.07618620460808694;  // std dev = 0.292, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.21321634710325427;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2370487189462745;  // std dev = 5.164, 206.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=168 */
%   | | else return -0.13918359579329836;  // std dev = 0.397, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0.309850439287448;  // std dev = 0.819, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.13536205507480736;  // std dev = 2.191, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.013180541946474977;  // std dev = 1.478, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17193625588376132;  // std dev = 0.062, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.07048826529120879;  // std dev = 1.855, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.036499413107205454;  // std dev = 2.774, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.31715965922636935;  // std dev = 0.116, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0659401573911907;  // std dev = 2.988, 76.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=34 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.24126616623356284;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15761090576959877;  // std dev = 0.616, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.01936173397746003;  // std dev = 2.668, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.07089907121925389;  // std dev = 3.875, 148.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=74 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.1072232778947828;  // std dev = 0.217, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1556708521226824;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.16921456526522252;  // std dev = 5.130, 206.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=168 */
%   | | else return -0.12846574053116164;  // std dev = 0.407, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.23650754359780754;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, F), phenotype(F, H) )
%   | | | then return 0.1048881581631552;  // std dev = 1.800, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.07748895260537281;  // std dev = 1.415, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( complex(A, I) )
%   | | then return 0.3809957125367214;  // std dev = 0.242, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.01628940858906338;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.11189294449667266;  // std dev = 0.164, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | else return -0.024123957590834102;  // std dev = 0.327, 167.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=69 */
%   | else return 0.06269897157470428;  // std dev = 0.260, 206.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=103 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( phenotype(F, H), interaction(F, I) )
%   | | then if ( phenotype(I, J), interaction(I, F) )
%   | | | then return 0.15043434524216956;  // std dev = 1.080, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.04566438512084501;  // std dev = 1.743, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(K, F), recursion_proteinclass(K, B) )
%   | | | then return 0.33589339515740874;  // std dev = 0.422, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3401851421266807;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then return -0.0076320684913663145;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.19807426962347194;  // std dev = 1.054, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 0.965678
   AUC PR    = 0.91939
   CLL	      = -0.34178
   Precision = 0.961039 at threshold = 0.5
   Recall    = 0.804348
   F1        = 0.87574


Total learning time: 37.229 seconds
Total inference time: 2.524 seconds
AUC ROC: 0.965678


Results scoring model
   AUC ROC   = 0.96935
   AUC PR    = 0.966048
   CLL	      = -0.327904
   Precision = 0.851406 at threshold = 0.5
   Recall    = 0.959276
   F1        = 0.902128


Total scoring time: 4.788 seconds
Refined model CLL: -0.327904


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.965678
   AUC PR    = 0.91939
   CLL	      = -0.34178
   Precision = 0.961039 at threshold = 0.5
   Recall    = 0.804348
   F1        = 0.87574


Total learning time: 58.57599999999999 seconds
Total inference time: 2.524 seconds
AUC ROC: 0.965678
Total revision time: 58.57599999999999
Best scored revision CLL: -0.327904


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 18:37:12
{'AUC ROC': 0.965678, 'AUC PR': 0.91939, 'CLL': -0.34178, 'Precision': [0.961039, 0.5], 'Recall': 0.804348, 'F1': 0.87574, 'Learning time': 58.57599999999999, 'Inference time': 2.524, 'parameter_0.8': {'AUC ROC': 0.955577, 'AUC PR': 0.933992, 'CLL': -0.335408, 'Precision': [0.96, 0.5], 'Recall': 0.782609, 'F1': 0.862275, 'Learning time': 11.554, 'Inference time': 2.756}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6676727446233218;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6655259842798367;  // std dev = 6.160, 244.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=197 */
%   | | | else return -0.1418510649004884;  // std dev = 0.000, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.34090755578916754;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.7194734122109543;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5657919395956513;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.564040666657195;  // std dev = 6.160, 244.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=197 */
%   | | | else return -0.12544463852839163;  // std dev = 0.000, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.29415244793700734;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.202334239218108;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.4474871431303646;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.1421228356398682;  // std dev = 4.891, 138.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=52 */
%   | | | else return 0.21298772946216643;  // std dev = 4.223, 105.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=47 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.22205518651108688;  // std dev = 6.392, 245.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=118 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(C, A), phenotype(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4175135841583098;  // std dev = 5.16e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.33925075229931;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.42959462838850215;  // std dev = 2.618, 48.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=39 */
%   | | | else return 0.07216382142297383;  // std dev = 5.380, 195.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=60 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1810581441008675;  // std dev = 6.245, 245.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=118 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.19517072842989514;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.44517072842989514;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1724434557026224;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.34892219953542214;  // std dev = 6.136, 244.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=197 */
%   | | | else return -0.14949990059149368;  // std dev = 0.150, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16839377562081423;  // std dev = 3.308, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(C, F) )
%   | | then if ( phenotype(D, E), interaction(C, D) )
%   | | | then return 0.2551722425694894;  // std dev = 2.11e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.25517224256948945;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.193408790049076;  // std dev = 1.764, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.04482178293205318;  // std dev = 4.408, 138.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=52 */
%   | | | else return 0.1210653953627137;  // std dev = 3.738, 105.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=47 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10169626847286257;  // std dev = 5.644, 245.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=118 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then return 0.1272586545673084;  // std dev = 1.718, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.19372802283455637;  // std dev = 0.280, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.24150597762538145;  // std dev = 6.129, 257.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=210 */
%   | | else return -0.14224861660913563;  // std dev = 0.176, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.20975771563253576;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20975771563253576;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.11687082801458251;  // std dev = 3.304, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.18169214518745536;  // std dev = 0.040, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return -0.09127714838069736;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.006782471250986588;  // std dev = 4.395, 141.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=53 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.308886408342341;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.06722004667137312;  // std dev = 3.473, 101.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=43 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.2628912558642922;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0665140842517075;  // std dev = 1.205, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.03193119186296336;  // std dev = 4.146, 129.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=62 */
%   | | | else return 0.07968969566035423;  // std dev = 3.277, 116.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=56 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.0805391985070341;  // std dev = 1.689, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.14085337882053425;  // std dev = 0.234, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.17172615653930715;  // std dev = 6.107, 257.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=210 */
%   | | else return -0.13103624589392546;  // std dev = 0.197, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), phenotype(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08742615841071048;  // std dev = 2.491, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.09416381210503566;  // std dev = 2.173, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.008015743994156622;  // std dev = 5.044, 234.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=117 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return -0.022821718483617377;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.22490259210974928;  // std dev = 3.428, 144.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=131 */
%   | | else return -0.12489471315447755;  // std dev = 0.592, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06870030061362281;  // std dev = 2.491, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return 0.07227250023217816;  // std dev = 2.173, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.956758
   AUC PR    = 0.936325
   CLL	      = -0.33717
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.862275


Total learning time: 12.706 seconds
Total inference time: 2.268 seconds
AUC ROC: 0.956758


Results scoring model
   AUC ROC   = 0.945197
   AUC PR    = 0.936958
   CLL	      = -0.346279
   Precision = 0.834416 at threshold = 0.5
   Recall    = 0.927798
   F1        = 0.878632


Total scoring time: 5.219 seconds
Parameter learned model CLL: -0.346279


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true,true': [0.0, 0, 13], 'true,true,false,true': [0.0, 0, 19], 'true,true,false,false': [0.0, 0, 11], 'true,false': [0.0, 2, 0], 'false,true': [1.799, 4, 17], 'false,false,true,true': [6.16, 47, 197], 'false,false,true,false': [0.0, 199, 0], 'false,false,false,true': [2.691, 15, 14], 'false,false,false,false': [1.936, 10, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true,true': [4.21e-08, 0, 13], 'true,true,false,true': [7.3e-08, 0, 19], 'true,true,false,false': [2.98e-08, 0, 11], 'true,false': [0.0, 2, 0], 'false,true': [1.799, 4, 17], 'false,false,true,true': [6.16, 47, 197], 'false,false,true,false': [0.0, 199, 0], 'false,false,false,true': [2.691, 15, 14], 'false,false,false,false': [1.936, 10, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), phenotype(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 13], 'true,true,false,true': [0.0, 0, 12], 'true,true,false,false': [0.0, 0, 18], 'true,false': [0.0, 2, 0], 'false,true': [1.799, 4, 17], 'false,false,true,true': [4.891, 86, 52], 'false,false,true,false': [4.223, 58, 47], 'false,false,false,true': [6.392, 127, 118], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), phenotype(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 24], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [5.16e-08, 0, 17], 'true,false': [0.0, 2, 0], 'false,true': [1.799, 4, 17], 'false,false,true,true': [2.618, 9, 39], 'false,false,true,false': [5.38, 135, 60], 'false,false,false,true': [6.245, 127, 118], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [2.98e-08, 0, 43], 'true,false': [0.0, 2, 0], 'false,true,true,true': [0.866, 1, 3], 'false,true,true,false': [1.49e-08, 0, 6], 'false,true,false': [1.477, 3, 8], 'false,false,true,true': [6.136, 47, 197], 'false,false,true,false': [0.15, 199, 0], 'false,false,false,true': [3.308, 25, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'phenotype(A, E), phenotype(C, F)', 'true,true,true': 'phenotype(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [2.11e-08, 0, 12], 'true,true,true,false': [1.83e-08, 0, 9], 'true,true,false': [1.49e-08, 0, 22], 'true,false': [0.0, 2, 0], 'false,true': [1.764, 4, 17], 'false,false,true,true': [4.408, 86, 52], 'false,false,true,false': [3.738, 58, 47], 'false,false,false,true': [5.644, 127, 118], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), phenotype(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [1.718, 5, 25], 'true,false,true,true': [0.28, 1, 17], 'true,false,true,false': [6.129, 47, 210], 'true,false,false': [0.176, 199, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 3], 'false,true,false': [3.304, 25, 20], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.04, 0, 43], 'true,false': [0.004, 2, 0], 'false,true,true': [4.395, 88, 53], 'false,true,false,true': [0.039, 0, 9], 'false,true,false,false': [3.473, 58, 43], 'false,false,true,true': [0.024, 0, 5], 'false,false,true,false': [1.205, 2, 6], 'false,false,false,true': [4.146, 67, 62], 'false,false,false,false': [3.277, 60, 56]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'phenotype(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), phenotype(A, H)'}, {'true,true': [1.689, 5, 25], 'true,false,true,true': [0.234, 1, 17], 'true,false,true,false': [6.107, 47, 210], 'true,false,false': [0.197, 199, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.491, 15, 15], 'false,true,false': [2.173, 10, 10], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), phenotype(A, I)'}, {'true,true': [5.044, 117, 117], 'true,false,true,true': [1.139, 2, 4], 'true,false,true,false': [3.428, 13, 131], 'true,false,false': [0.592, 120, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.491, 15, 15], 'false,true,false': [2.173, 10, 10], 'false,false': [0.0, 0, 0]}]]
[{'': [0.04246913580247025, 0.24837792041871398], 'false': [0.15419501133786812, 0.24693882692824828], 'false,false': [0.24694138568859303, 0.2469135802469133], 'false,false,true': [0.15551934963719974, -2.410132395166169e-16], 'false,false,false': [0.2497027348394764, 0.23437500000000006], 'true': [1.2393187251629655e-15, 0.0], 'true,true': [-2.7328566760003855e-16, -2.3684757858670006e-16], 'true,true,false': [-2.8047739569477637e-16, -1.6148698540002277e-16]}, {'': [0.03031814324543392, 0.20887308461613283], 'false': [0.15419501133786861, 0.2072404035623087], 'false,false': [0.20327967889999943, 0.2461846220678553], 'false,false,false': [0.24970273483947725, 0.23437500000000008], 'false,false,true': [0.1555193496371967, -5.1326893600761006e-17], 'true': [-8.262124834419769e-16, 0.0], 'true,true': [1.3664283380001927e-16, 2.3684757858670006e-16], 'true,true,false': [2.8047739569477637e-16, 8.074349270001139e-17]}, {'': [0.01893275523826282, 0.17231547436282063], 'false': [0.15419501133786886, 0.170516935899233], 'false,false': [0.17305397721885143, 0.16678976524799735], 'false,false,true': [0.17331691071683739, 0.16985650221794243], 'false,false,false': [0.16678976524799735, nan], 'true': [6.196593625814827e-16, 0.0], 'true,true': [-2.7328566760003855e-16, -2.3684757858670006e-16], 'true,true,false': [-2.590520390792032e-16, -1.9737298215558337e-16]}, {'': [0.01144437472115077, 0.16458751625994353], 'false': [0.15419501133786856, 0.16373838988841094], 'false,false': [0.16757717547220832, 0.15920085669167394], 'false,false,true': [0.14283602740157866, 0.14843139671832115], 'false,false,false': [0.15920085669167394, nan], 'true': [-3.7179561754888965e-16, 0.0], 'true,true': [0.0, 1.6361181415528622e-16], 'true,true,false': [0.0, 1.5673736818237505e-16]}, {'': [0.007258066294308228, 0.1561474220560608], 'false': [0.1541950113378685, 0.1555798702246104], 'false,false': [0.14650421807476416, 0.2432172940342656], 'false,false,false': [0.2432172940342656, nan], 'false,true': [0.09000000000000004, 0.1983471074380166], 'false,false,true': [0.15430191639159876, 0.00011342445200733457], 'false,true,true': [0.1875, 3.700743415417188e-17], 'true': [2.0655312086049424e-17, 0.0]}, {'': [0.004919747144148228, 0.13557405463129804], 'false': [0.1481930409874864, 0.13458796848586563], 'false,false': [0.13889035582953174, 0.13003556047251574], 'false,false,true': [0.14080982144096887, 0.13306636949762934], 'false,false,false': [0.13003556047251574, nan], 'true': [-2.0655312086049424e-17, 0.0], 'true,true': [1.057355261547768e-17, 1.0092936587501423e-17], 'true,true,true': [3.700743415417188e-17, 3.700743415417188e-17]}, {'': [0.11401203249049113, 0.21914197316940048], 'false': [0.21914197316940048, nan], 'false,true': [5.551115123125783e-18, 0.2426282839101988], 'true': [0.0983979741898708, 0.11485921262432197], 'true,false': [0.1370387379944018, 0.00015591645815743544], 'true,false,true': [0.004368167870359059, 0.14618142493352554], 'false,true,true': [0.0, -9.25185853854297e-18]}, {'': [0.003200303019397335, 0.12186875751368575], 'false': [0.12853331607061586, 0.11524220677108656], 'false,true': [0.13701952767954115, 0.11404139190944913], 'false,false': [0.12084987992891838, 0.11455887333999448], 'false,false,true': [0.00011625390242212542, 0.18147609099141757], 'false,false,false': [0.13326853936321328, 0.09255148405605178], 'false,true,false': [0.00017290185429381163, 0.11940969201335368], 'true': [3.7146165883735215e-05, 7.595038003163981e-06]}, {'': [0.10066700886717862, 0.2185312881285633], 'false': [0.2185312881285633, nan], 'false,true': [0.2068504303471582, 0.23602533721428806], 'false,true,true': [nan, 0.2068504303471582], 'true': [0.09510111666536979, 0.10093737549056485], 'true,false': [0.13586687000490036, 0.00019429913564698718], 'true,false,true': [0.0030416307730154035, 0.14510741846193034]}, {'': [0.0943213910416872, 0.2185757674938048], 'false': [0.2185757674938048, nan], 'false,true': [0.20689988274002452, 0.23608193825840643], 'false,true,true': [nan, 0.2068998827400245], 'true': [0.10870913458083348, 0.07944863933643379], 'true,false': [0.08932689407681266, 0.0029207771325770312], 'true,false,true': [0.21628566892831477, 0.08158225176230835]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(A, D), phenotype(D, E).;true;true
0;true,true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(A, D), phenotype(D, E).;true;true
1;true,true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(A, D), phenotype(D, E).;true;true
2;true,true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(A, D), interaction(E, A).;true;true
3;true,true,false;interaction(C, A), phenotype(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;true,true;phenotype(A, E), phenotype(C, F).;true;true
5;true,true,true;phenotype(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), phenotype(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), interaction(A, F).;true;true
7;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;phenotype(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995118;  // std dev = 3.65e-08, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6655259842798367;  // std dev = 6.160, 244.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=197 */
%   | | | else return -0.1418510649004884;  // std dev = 0.000, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.34090755578916754;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109551;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.10869035769135049;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.7470222473391919;  // std dev = 0.119, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5039094561212515;  // std dev = 1.147, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.564040666657195;  // std dev = 6.160, 244.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=197 */
%   | | | else return -0.12544463852839163;  // std dev = 0.000, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.29415244793700734;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.202334239218108;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.555366436746284;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15160381918890584;  // std dev = 0.091, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( complex(E, F), phenotype(A, G) )
%   | | | then return 0.16331791762819062;  // std dev = 3.042, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | | else return 0.23609671057885231;  // std dev = 2.794, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H) )
%   | | | then return 0.6042907515892948;  // std dev = 0.185, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23825643083352807;  // std dev = 0.961, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, J), complex(A, K) )
%   | | | then return 0.1755708186346966;  // std dev = 4.714, 128.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=53 */
%   | | | else return 0.23260664310388124;  // std dev = 6.447, 253.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=121 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13420479935615245;  // std dev = 0.083, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( phenotype(E, F), interaction(A, G) )
%   | | | then return 0.11423281941537826;  // std dev = 2.485, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.1852415024486118;  // std dev = 3.224, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H) )
%   | | | then return 0.4566239069403274;  // std dev = 0.195, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.18292587994803516;  // std dev = 0.953, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.14042040925733368;  // std dev = 4.032, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   | | | else return 0.18906666951279122;  // std dev = 6.691, 274.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=130 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30233837501128674;  // std dev = 0.085, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.1776012764901449;  // std dev = 0.486, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.39870557420211417;  // std dev = 0.259, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.3212642101852351;  // std dev = 0.714, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.13280993056965543;  // std dev = 0.606, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3565446133876043;  // std dev = 6.070, 244.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=197 */
%   | | | else return -0.1512982582433066;  // std dev = 0.283, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.19003918683005797;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.11208860176938697;  // std dev = 2.543, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25867997336856324;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return -0.12143934424746428;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return -0.2769245690542495;  // std dev = 0.247, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.1510655374779049;  // std dev = 0.262, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07555011853209817;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.3273377549144035;  // std dev = 1.770, 40.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | | | else return 0.04649786376357423;  // std dev = 5.775, 249.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=103 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.14043253221248336;  // std dev = 3.326, 116.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=58 */
%   | | | else return 0.11102005145725918;  // std dev = 3.947, 85.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then return 0.19431469368606188;  // std dev = 0.131, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.04056033696596289;  // std dev = 0.284, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.13528511372319707;  // std dev = 3.582, 75.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=54 */
%   | | | else return 0.28013373287484095;  // std dev = 4.694, 200.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=173 */
%   | | else return -0.14218998062754387;  // std dev = 0.339, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else if ( recursion_proteinclass(I, B) )
%   | then if ( interaction(J, I), interaction(A, J) )
%   | | then return 0.27027660688143856;  // std dev = 0.842, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.04169405496767249;  // std dev = 2.216, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.12153945978167573;  // std dev = 2.284, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16815807034060065;  // std dev = 0.064, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.015049026394669169;  // std dev = 3.062, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
%   | | | else return 0.053754241356847574;  // std dev = 2.784, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.32592870762264986;  // std dev = 0.236, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.05009871267261474;  // std dev = 3.380, 101.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=43 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.25087585460752887;  // std dev = 0.176, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11070201910272431;  // std dev = 0.885, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.0384297932944572;  // std dev = 4.132, 129.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=62 */
%   | | | else return 0.07981735959479636;  // std dev = 3.244, 116.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=56 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.09217589160925899;  // std dev = 0.210, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.13439820453129228;  // std dev = 5.389, 188.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=147 */
%   | | | else return 0.25340329206985446;  // std dev = 2.297, 87.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=80 */
%   | | else return -0.130632015465216;  // std dev = 0.333, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.16448719325959324;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.23180184010123295;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0077746523673675304;  // std dev = 2.552, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.08973743913050615;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.1424433634862991;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.12682540066324974;  // std dev = 0.065, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G), interaction(H, F) )
%   | | | then return 0.007642933143750994;  // std dev = 1.114, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.2443354934275402;  // std dev = 1.003, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.17235047359816283;  // std dev = 1.098, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.01253786932611371;  // std dev = 5.170, 230.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=103 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.0483740583082843;  // std dev = 1.372, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.06620160944852563;  // std dev = 2.054, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( location(A, K) )
%   | | | then return 0.054932715870889076;  // std dev = 3.605, 150.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=73 */
%   | | | else return -0.008038633211374333;  // std dev = 1.287, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */


Results
   AUC ROC   = 0.955104
   AUC PR    = 0.928436
   CLL	      = -0.352348
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.862275


Total learning time: 34.746 seconds
Total inference time: 2.648 seconds
AUC ROC: 0.955104


Results scoring model
   AUC ROC   = 0.958725
   AUC PR    = 0.953086
   CLL	      = -0.338853
   Precision = 0.851485 at threshold = 0.5
   Recall    = 0.931408
   F1        = 0.889655


Total scoring time: 5.053 seconds
Refined model CLL: -0.338853


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.955104
   AUC PR    = 0.928436
   CLL	      = -0.352348
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.862275


Total learning time: 57.724000000000004 seconds
Total inference time: 2.648 seconds
AUC ROC: 0.955104
Total revision time: 57.724000000000004
Best scored revision CLL: -0.338853


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 18:38:16
{'AUC ROC': 0.955104, 'AUC PR': 0.928436, 'CLL': -0.352348, 'Precision': [0.96, 0.5], 'Recall': 0.782609, 'F1': 0.862275, 'Learning time': 57.724000000000004, 'Inference time': 2.648, 'parameter_1.0': {'AUC ROC': 0.956758, 'AUC PR': 0.936325, 'CLL': -0.33717, 'Precision': [0.96, 0.5], 'Recall': 0.782609, 'F1': 0.862275, 'Learning time': 12.706, 'Inference time': 2.268}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 283

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 86

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.34201990284144784;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.16653882456488167;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.29509450923344677;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.41257245288266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.2025729292158423;  // std dev = 2.576, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.21559511331812334;  // std dev = 3.310, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.25861851899522187;  // std dev = 0.995, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, C), phenotype(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3151786576185065;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4480851273530769;  // std dev = 0.700, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.1261855037787818;  // std dev = 3.952, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2101679523101453;  // std dev = 0.942, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.48676009386434205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.48676009386434205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.013239906135657953;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4216398609913216;  // std dev = 0.152, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.15365290490248076;  // std dev = 0.033, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.13393189072463618;  // std dev = 3.732, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(C, F) )
%   | | then if ( phenotype(D, E), interaction(D, C) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.17915909276353942;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.09005051311949375;  // std dev = 2.299, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.11548409899656889;  // std dev = 3.211, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12261897456181872;  // std dev = 0.726, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then return 0.10709605576433684;  // std dev = 0.782, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.29876213598406987;  // std dev = 0.159, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.1472359228251067;  // std dev = 0.038, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0654904804507219;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.08297692421223925;  // std dev = 3.730, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18064956600684784;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08366249539491133;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.038418376294718115;  // std dev = 2.303, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.23964541704235942;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06235596468916158;  // std dev = 3.168, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return 0.2654847552913694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41921730611039953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11958334267742392;  // std dev = 0.458, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.0125589824768745;  // std dev = 0.324, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.03850271104206507;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.15228461137305538;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22441616526616734;  // std dev = 0.158, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.1352200146948374;  // std dev = 0.043, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( recursion_proteinclass(F, B), phenotype(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04268569579269877;  // std dev = 2.054, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.058591493791244904;  // std dev = 3.118, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.023786374776403857;  // std dev = 1.046, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(C, F), interaction(E, F) )
%   | | | then return 0.14915419710241518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20449378263670384;  // std dev = 0.177, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.12198261113858498;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03355441552906231;  // std dev = 2.053, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return 0.045038031698091285;  // std dev = 3.119, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.926514
   AUC PR    = 0.933157
   CLL	      = -0.384752
   Precision = 0.982143 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.774648


Total learning time: 6.991 seconds
Total inference time: 2.781 seconds
AUC ROC: 0.926514


Results scoring model
   AUC ROC   = 0.878508
   AUC PR    = 0.896757
   CLL	      = -0.434582
   Precision = 0.969697 at threshold = 0.5
   Recall    = 0.571429
   F1        = 0.719101


Total scoring time: 3.05 seconds
Parameter learned model CLL: -0.434582


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), phenotype(D, E)', 'true,true,false': 'interaction(F, C), interaction(F, D)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), phenotype(A, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 4], 'true,false': [0.0, 1, 0], 'false,true': [0.866, 1, 3], 'false,false,true,true': [5.96e-08, 0, 22], 'false,false,true,false': [7.45e-09, 20, 0], 'false,false,false,true': [2.449, 18, 9], 'false,false,false,false': [2.782, 16, 15]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), phenotype(D, E)', 'true,true,false': 'interaction(F, C), interaction(F, D)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), phenotype(A, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 4], 'true,false': [0.0, 1, 0], 'false,true': [0.866, 1, 3], 'false,false,true,true': [7.3e-08, 0, 22], 'false,false,true,false': [0.0, 20, 0], 'false,false,false,true': [2.449, 18, 9], 'false,false,false,false': [2.782, 16, 15]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), phenotype(D, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 5], 'true,false': [0.0, 1, 0], 'false,true': [0.866, 1, 3], 'false,false,true,true': [2.576, 22, 18], 'false,false,true,false': [3.31, 28, 23], 'false,false,false,true': [0.995, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, C), phenotype(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.49e-08, 0, 5], 'true,false': [0.0, 1, 0], 'false,true': [0.866, 1, 3], 'false,false,true,true': [0.7, 1, 12], 'false,false,true,false': [3.952, 49, 29], 'false,false,false,true': [0.942, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.707, 1, 1], 'false,false,true,true': [0.152, 0, 22], 'false,false,true,false': [0.033, 20, 0], 'false,false,false,true': [3.732, 34, 24], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'phenotype(A, E), phenotype(C, F)', 'true,true,true': 'phenotype(D, E), interaction(D, C)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 5], 'true,false': [0.0, 1, 0], 'false,true': [0.802, 1, 3], 'false,false,true,true': [2.299, 22, 18], 'false,false,true,false': [3.211, 28, 23], 'false,false,false,true': [0.726, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'recursion_proteinclass(C, B), phenotype(C, D)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)'}, {'true,true': [0.782, 1, 3], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false': [0.159, 0, 24], 'true,false,false': [0.038, 20, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.204, 1, 1], 'false,true,false': [3.73, 34, 24], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(H, I)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.028, 0, 7], 'true,false': [0.0, 1, 0], 'false,true,true': [2.303, 23, 18], 'false,true,false,true': [0.075, 0, 4], 'false,true,false,false': [3.168, 28, 20], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.458, 2, 4], 'false,false,false,false': [0.324, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'phenotype(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false,true,true': 'recursion_proteinclass(F, B), phenotype(A, H)'}, {'true,true': [0.734, 1, 3], 'true,false,true,true': [3.73e-09, 0, 3], 'true,false,true,false': [0.158, 0, 24], 'true,false,false': [0.043, 20, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.054, 12, 8], 'false,true,false': [3.118, 23, 18], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(C, F), interaction(E, F)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false,true,true': 'recursion_proteinclass(G, B), phenotype(A, I)'}, {'true,true': [1.046, 15, 17], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.177, 0, 12], 'true,false,false': [0.011, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.053, 12, 8], 'false,true,false': [3.119, 23, 18], 'false,false': [0.0, 0, 0]}]]
[{'': [0.10937499999999978, 0.2491678994082848], 'false': [0.18750000000000006, 0.2484000000000012], 'false,false': [0.24943310657596487, 0.24256837098692158], 'false,false,true': [1.6148698540002277e-16, 2.7755575615628915e-18], 'false,false,false': [0.2222222222222223, 0.24973985431841786], 'true': [-2.5376526277146434e-16, 0.0], 'true,true': [0.0, 1.4802973661668753e-16], 'true,true,false': [0.0, 0.0]}, {'': [0.07808133730087852, 0.2173849849509725], 'false': [0.18750000000000006, 0.21622566995607406], 'false,false': [0.17806693054686878, 0.2410419120639836], 'false,false,false': [0.22222222222222207, 0.24973985431841852], 'false,false,true': [2.4223047810003414e-16, 0.0], 'true': [-6.344131569286608e-17, 0.0], 'true,true': [0.0, 0.0], 'true,true,false': [0.0, 0.0]}, {'': [0.04875941233691242, 0.18757048525580464], 'false': [0.18750000000000003, 0.1860606706308815], 'false,false': [0.19336195201113696, 0.11007415836198932], 'false,false,true': [0.16591960927123067, 0.21481081861844628], 'false,false,false': [0.11007415836198932, nan], 'true': [-6.344131569286608e-17, 0.0], 'true,true': [0.0, 3.700743415417188e-17], 'true,true,false': [0.0, -4.4408920985006264e-17]}, {'': [0.02947383932999953, 0.18257802953344937], 'false': [0.18750000000000003, 0.18163173729181153], 'false,false': [0.18971949304079033, 0.09854172240545547], 'false,false,true': [0.03770381385292643, 0.20025267276391923], 'false,false,false': [0.09854172240545547, nan], 'true': [9.516197353929913e-17, 0.0], 'true,true': [0.0, 4.4408920985006264e-17], 'true,true,false': [nan, 4.4408920985006264e-17]}, {'': [0.018692421824458363, 0.17506217359593956], 'false': [0.1875, 0.17420240716478966], 'false,true': [0.0, 0.25], 'false,false': [0.08313153024484235, 0.24007077292665352], 'false,false,false': [0.24007077292665352, nan], 'false,false,true': [0.0010563457955974757, 5.330783486151569e-05], 'true': [-3.172065784643304e-17, 0.0], 'false,true,true': [0.0, 0.0]}, {'': [0.012670315364880329, 0.16159015686708583], 'false': [0.1607553350590404, 0.16141742817034788], 'false,false': [0.17156685733435292, 0.05849019002528934], 'false,false,true': [0.1321698067418975, 0.2021821675872688], 'false,false,false': [0.05849019002528934, nan], 'true': [2.3790493384824782e-17, 0.0], 'true,true': [0.0, 0.0], 'true,true,true': [0.0, 0.0]}, {'': [0.05577384114961483, 0.2290157611040845], 'false': [0.2290157611040845, nan], 'false,true': [0.018500475686226422, 0.23985842434167254], 'true': [0.15285195902051982, 0.04751074025118347], 'true,false': [0.001717394681608393, 7.322375175533858e-05], 'false,true,true': [0.0, 0.02081303514700473], 'true,false,true': [0.0, 0.0010518704787969013]}, {'': [0.007740274252706642, 0.15399479874480068], 'false': [0.16663271820699754, 0.04341290643090862], 'false,true': [0.12941652778620197, 0.1953538030617038], 'false,true,false': [0.0014017887762013126, 0.20909865938685235], 'false,false': [0.0059084242953314214, 0.03880354243818739], 'false,false,false': [0.034923188194368654, 0.03492318819436866], 'true': [0.00011341949207311195, 0.0], 'false,false,true': [0.0, 0.0]}, {'': [0.03928087570511483, 0.22863279511515247], 'false': [0.22863279511515247, nan], 'false,true': [0.21091361087746852, 0.23719335063446415], 'false,true,true': [nan, 0.21091361087746852], 'true': [0.1347779034880769, 0.03109077558083704], 'true,false': [0.0014419884016842609, 9.071202434112469e-05], 'true,false,true': [4.625929269271485e-18, 0.0010441301666686924]}, {'': [0.0317762467986681, 0.22859725418896337], 'false': [0.22859725418896337, nan], 'false,true': [0.21084030775458049, 0.2372159420853595], 'false,true,true': [nan, 0.21084030775458049], 'true': [0.03417836327953143, 0.02422962619385544], 'true,false': [0.0026164810733777097, 1.96703429285137e-05], 'true,false,true': [0.0, 0.002598946568432986]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(D, A), phenotype(D, E).;true;true
0;true,true,false;interaction(F, C), interaction(F, D).;true;true
0;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H).;true;true
0;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(D, A), phenotype(D, E).;true;true
1;true,true,false;interaction(F, C), interaction(F, D).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(A, H).;true;true
1;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(D, A), phenotype(D, E).;true;true
2;true,true,false;interaction(A, F), interaction(F, C).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(D, A), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(A, F), interaction(E, F).;true;true
4;false,true,true;interaction(G, A), interaction(G, E).;true;true
4;false,false;interaction(A, H).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;true,true;phenotype(A, E), phenotype(C, F).;true;true
5;true,true,true;phenotype(D, E), interaction(D, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;recursion_proteinclass(C, B), phenotype(C, D).;true;true
6;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
6;true,false,true;interaction(E, A).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(F, G), interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), interaction(F, A).;true;true
7;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(A, I), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C).;true;true
8;true;phenotype(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
8;true,false,true;interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C).;true;true
9;true;interaction(C, D), interaction(A, D).;true;true
9;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,false,true;interaction(C, F), interaction(E, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.18167834686421824;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.399815601766179;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.15809294695114431;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.34387981480959035;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(E, G), interaction(E, F) )
%   | | then if ( phenotype(E, H), interaction(A, I) )
%   | | | then return 0.3604218930711362;  // std dev = 1.388, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.1875762426416747;  // std dev = 2.489, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( interaction(F, F), phenotype(A, J) )
%   | | | then return -0.15387724675126424;  // std dev = 0.152, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.18885057721820903;  // std dev = 2.468, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | else if ( complex(A, K) )
%   | | then return 0.6728957538147858;  // std dev = 0.154, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.3328054984329875;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.16210668279088689;  // std dev = 1.279, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, A), phenotype(A, H) )
%   | | | then return 0.3753203575604246;  // std dev = 0.585, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5559130941895657;  // std dev = 0.267, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.148911576994552;  // std dev = 0.259, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.13838865167445094;  // std dev = 3.466, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | else if ( complex(A, I) )
%   | | then return 0.51591385576845;  // std dev = 0.170, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3225651743367825;  // std dev = 0.679, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15429210378292768;  // std dev = 1.289, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.4399029631291993;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3742491569491102;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.013917643061592655;  // std dev = 0.510, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3971154779515555;  // std dev = 0.239, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.1329714346411062;  // std dev = 0.132, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.054288337541230997;  // std dev = 2.272, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.1930956121314391;  // std dev = 2.739, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2551722425694894;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | then if ( interaction(G, E) )
%   | | | then return 0.28223568085188944;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3358414370655634;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, H), enzyme(F, I) )
%   | | | then return -0.0059315329636398725;  // std dev = 2.284, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.11361232574968474;  // std dev = 2.594, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.281557044719106;  // std dev = 0.700, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.316188765754777;  // std dev = 0.179, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09243297657421817;  // std dev = 1.176, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then return 0.10877075997268894;  // std dev = 0.532, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2624119800841902;  // std dev = 0.263, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.11616880784189092;  // std dev = 0.118, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.1540000735900323;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return -0.01171227000865295;  // std dev = 0.313, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.042459364825873695;  // std dev = 2.240, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.1317769227437476;  // std dev = 2.729, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1868072899787335;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08191370503996662;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.07467515604459356;  // std dev = 1.590, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.012079077251146096;  // std dev = 1.343, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.21734926442775884;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0576748663086464;  // std dev = 3.035, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.23636327503881616;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11817948255101622;  // std dev = 0.459, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.041563937712130385;  // std dev = 0.205, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.05884857240848489;  // std dev = 0.505, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.19495211596223688;  // std dev = 0.046, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.11597376881760058;  // std dev = 0.029, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.1939871517718367;  // std dev = 1.636, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.48831555269435084;  // std dev = 1.293, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(I, G), phenotype(A, J) )
%   | | | then return -0.24811147703758932;  // std dev = 0.207, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.37927901050934115;  // std dev = 0.158, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, K) )
%   | | then return 0.11201411114889498;  // std dev = 0.602, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15033566190179115;  // std dev = 1.059, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.026844160057556205;  // std dev = 0.147, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.18842015292310463;  // std dev = 0.047, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.11886812798959712;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H) )
%   | | | then return -0.015934466115050196;  // std dev = 1.093, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.41451627534463964;  // std dev = 0.854, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.2810304184402121;  // std dev = 0.083, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.21054684322222758;  // std dev = 0.994, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.010755913630630389;  // std dev = 1.333, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.08190866727103008;  // std dev = 1.595, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */


Results
   AUC ROC   = 0.982896
   AUC PR    = 0.979012
   CLL	      = -0.326346
   Precision = 0.961538 at threshold = 0.5
   Recall    = 0.872093
   F1        = 0.914634


Total learning time: 33.911 seconds
Total inference time: 2.89 seconds
AUC ROC: 0.982896


Results scoring model
   AUC ROC   = 0.99155
   AUC PR    = 0.991568
   CLL	      = -0.323112
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.785714
   F1        = 0.88


Total scoring time: 3.751 seconds
Refined model CLL: -0.323112


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982896
   AUC PR    = 0.979012
   CLL	      = -0.326346
   Precision = 0.961538 at threshold = 0.5
   Recall    = 0.872093
   F1        = 0.914634


Total learning time: 47.702999999999996 seconds
Total inference time: 2.89 seconds
AUC ROC: 0.982896
Total revision time: 47.702999999999996
Best scored revision CLL: -0.323112


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 18:39:10
{'AUC ROC': 0.982896, 'AUC PR': 0.979012, 'CLL': -0.326346, 'Precision': [0.961538, 0.5], 'Recall': 0.872093, 'F1': 0.914634, 'Learning time': 47.702999999999996, 'Inference time': 2.89, 'parameter_0.2': {'AUC ROC': 0.926514, 'AUC PR': 0.933157, 'CLL': -0.384752, 'Precision': [0.982143, 0.5], 'Recall': 0.639535, 'F1': 0.774648, 'Learning time': 6.991, 'Inference time': 2.781}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8105298874804642;  // std dev = 1.380, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.33037115732173455;  // std dev = 2.995, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.27481560176617775;  // std dev = 4.183, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, C), interaction(F, D) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5170719622367218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6813641993271586;  // std dev = 1.380, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.2852231876148793;  // std dev = 2.995, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.23796730798362217;  // std dev = 4.183, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.41257245288266;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.16198649185470987;  // std dev = 3.532, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   | | | else return 0.23450439882062388;  // std dev = 4.688, 103.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=48 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.20083275119914534;  // std dev = 1.668, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, C), complex(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3151786576185065;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5011697411619579;  // std dev = 0.808, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.12741510691796168;  // std dev = 5.567, 156.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=59 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16453349687237917;  // std dev = 1.616, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.48676009386434194;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.013239906135658064;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1534267605310086;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4090742049625545;  // std dev = 1.348, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return -0.14966154561216208;  // std dev = 0.032, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.14714653566475444;  // std dev = 5.141, 108.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(C, F) )
%   | | then if ( complex(D, E), interaction(D, C) )
%   | | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.17882930134158218;  // std dev = 1.165, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.05789888217514863;  // std dev = 3.184, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   | | | else return 0.13113333692293624;  // std dev = 4.513, 103.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=48 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08968875666871767;  // std dev = 1.371, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.14035454645301537;  // std dev = 1.136, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.1520508215598101;  // std dev = 0.258, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2945135313347238;  // std dev = 1.347, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | else return -0.1422014539512921;  // std dev = 0.055, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1520508215598101;  // std dev = 0.258, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.09195191768763901;  // std dev = 5.134, 108.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1841430191959343;  // std dev = 0.019, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09054211273713791;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.025197128529010127;  // std dev = 3.182, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.2957841810884281;  // std dev = 0.259, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07698389786434612;  // std dev = 4.424, 100.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=45 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return -0.08877799069428982;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3715477606396468;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.0848377682187414;  // std dev = 0.525, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0324699341882047;  // std dev = 1.105, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.09076576097552556;  // std dev = 1.101, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.11086119202379348;  // std dev = 0.217, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.22050000361457817;  // std dev = 1.345, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | else return -0.13114267778412114;  // std dev = 0.069, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then if ( recursion_proteinclass(F, B), complex(A, H) )
%   | | | then return 0.15183417511271113;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.020039108059697733;  // std dev = 2.781, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else return 0.07846108432478659;  // std dev = 4.305, 79.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.019224899881750197;  // std dev = 1.944, 67.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=35 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(C, F), interaction(E, F) )
%   | | | then return 0.17417840821427727;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2330496894678787;  // std dev = 0.176, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.12057154941451198;  // std dev = 0.038, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then if ( recursion_proteinclass(G, B), complex(A, I) )
%   | | | then return 0.13329645335843887;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.015679091044895923;  // std dev = 2.781, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else return 0.060075684801668756;  // std dev = 4.306, 79.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.921647
   AUC PR    = 0.927026
   CLL	      = -0.38351
   Precision = 0.982143 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.774648


Total learning time: 8.989 seconds
Total inference time: 2.757 seconds
AUC ROC: 0.921647


Results scoring model
   AUC ROC   = 0.883194
   AUC PR    = 0.899042
   CLL	      = -0.433021
   Precision = 0.943662 at threshold = 0.5
   Recall    = 0.59292
   F1        = 0.728261


Total scoring time: 3.739 seconds
Parameter learned model CLL: -0.433021


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), complex(D, E)', 'true,true,false': 'interaction(F, C), interaction(F, D)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), complex(A, K)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false,true': [0.0, 0, 7], 'true,true,false,false': [2.98e-08, 0, 6], 'true,false': [0.0, 2, 0], 'false,true': [1.225, 2, 6], 'false,false,true,true': [1.38, 2, 40], 'false,false,true,false': [4.94e-08, 46, 0], 'false,false,false,true': [2.995, 19, 17], 'false,false,false,false': [4.183, 42, 30]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), complex(D, E)', 'true,true,false': 'interaction(F, C), interaction(F, D)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), complex(A, K)'}, {'true,true,true': [2.11e-08, 0, 7], 'true,true,false,true': [2.11e-08, 0, 7], 'true,true,false,false': [0.0, 0, 6], 'true,false': [0.0, 2, 0], 'false,true': [1.225, 2, 6], 'false,false,true,true': [1.38, 2, 40], 'false,false,true,false': [0.0, 46, 0], 'false,false,false,true': [2.995, 19, 17], 'false,false,false,false': [4.183, 42, 30]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), complex(D, E)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false,true': [1.05e-08, 0, 3], 'true,true,false,false': [0.0, 0, 10], 'true,false': [0.0, 2, 0], 'false,true': [1.225, 2, 6], 'false,false,true,true': [3.532, 43, 29], 'false,false,true,false': [4.688, 55, 48], 'false,false,false,true': [1.668, 11, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(D, A), interaction(A, E)', 'true,true,false': 'interaction(A, C), complex(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [2.98e-08, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.21e-08, 0, 12], 'true,false': [0.0, 2, 0], 'false,true': [1.225, 2, 6], 'false,false,true,true': [0.808, 1, 18], 'false,false,true,false': [5.567, 97, 59], 'false,false,false,true': [1.616, 11, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(G, A), interaction(G, E)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [2.11e-08, 0, 20], 'true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [0.816, 1, 2], 'false,false,true,true': [1.348, 2, 40], 'false,false,true,false': [0.032, 46, 0], 'false,false,false,true': [5.141, 61, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'complex(A, E), complex(C, F)', 'true,true,true': 'complex(D, E), interaction(D, C)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [1.29e-08, 0, 7], 'true,true,true,false': [7.45e-09, 0, 6], 'true,true,false': [1.29e-08, 0, 7], 'true,false': [0.0, 2, 0], 'false,true': [1.165, 2, 6], 'false,false,true,true': [3.184, 43, 29], 'false,false,true,false': [4.513, 55, 48], 'false,false,false,true': [1.371, 11, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'recursion_proteinclass(C, B), complex(C, D)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)'}, {'true,true': [1.136, 2, 11], 'true,false,true,true': [0.258, 1, 4], 'true,false,true,false': [1.347, 2, 42], 'true,false,false': [0.055, 46, 0], 'false,true,true,true': [0.0, 0, 5], 'false,true,true,false': [0.258, 1, 4], 'false,true,false': [5.134, 61, 47], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(H, I)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.019, 0, 20], 'true,false': [0.0, 2, 0], 'false,true,true': [3.182, 44, 31], 'false,true,false,true': [0.259, 0, 5], 'false,true,false,false': [4.424, 55, 45], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.525, 3, 3], 'false,false,false,false': [1.105, 8, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'complex(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), interaction(G, A)', 'false,true,true': 'recursion_proteinclass(F, B), complex(A, H)'}, {'true,true': [1.101, 2, 11], 'true,false,true,true': [0.217, 1, 4], 'true,false,true,false': [1.345, 2, 42], 'true,false,false': [0.069, 46, 0], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [2.781, 22, 14], 'false,true,false': [4.305, 40, 39], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(E, C), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(C, F), interaction(E, F)', 'false': 'interaction(G, A)', 'false,true': 'interaction(G, H), interaction(H, A)', 'false,true,true': 'recursion_proteinclass(G, B), complex(A, I)'}, {'true,true': [1.944, 32, 35], 'true,false,true,true': [0.042, 0, 2], 'true,false,true,false': [0.176, 0, 20], 'true,false,false': [0.038, 19, 0], 'false,true,true,true': [2.63e-09, 0, 3], 'false,true,true,false': [2.781, 22, 14], 'false,true,false': [4.306, 40, 39], 'false,false': [0.0, 0, 0]}]]
[{'': [0.08264462809917356, 0.2480536332179936], 'false': [0.1874999999999999, 0.2468502707205339], 'false,false': [0.2479338842975219, 0.24579903978052162], 'false,false,true': [0.045351473922903854, 5.3097622916855314e-17], 'false,false,false': [0.2492283950617279, 0.243055555555557], 'true': [-8.881784197001253e-17, 0.0], 'true,true': [-2.5376526277146434e-16, -2.7328566760003855e-16], 'true,true,false': [-2.5376526277146434e-16, 1.4802973661668753e-16]}, {'': [0.05899888532770057, 0.21934202684786563], 'false': [0.18749999999999994, 0.21797638758313628], 'false,false': [0.1840439172579359, 0.2456094172042184], 'false,false,false': [0.24922839506172897, 0.24305555555555478], 'false,false,true': [0.04535147392290208, -3.137586808723268e-17], 'true': [2.6645352591003756e-16, 0.0], 'true,true': [6.344131569286608e-17, 0.0], 'true,true,false': [6.344131569286608e-17, 0.0]}, {'': [0.03684300341868208, 0.19258076782129868], 'false': [0.18749999999999992, 0.191086376559415], 'false,false': [0.1981226463144673, 0.1324376589622599], 'false,false,true': [0.17324534313342962, 0.2133489659807347], 'false,false,false': [0.1324376589622599, nan], 'true': [-2.6645352591003756e-16, 0.0], 'true,true': [-6.344131569286608e-17, -6.832141690000964e-17], 'true,true,false': [3.700743415417188e-17, 0.0]}, {'': [0.022270669623612512, 0.18768551142772763], 'false': [0.18749999999999997, 0.1868392576025688], 'false,false': [0.1943446105262463, 0.12428395674628837], 'false,false,true': [0.034370223733620926, 0.19866205328035533], 'false,false,false': [0.12428395674628837, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,true': [1.1102230246251565e-16, 7.401486830834377e-17], 'true,true,false': [nan, 1.4802973661668753e-16]}, {'': [0.014124143999590782, 0.18003761234703058], 'false': [0.18750000000000003, 0.17931581174178057], 'false,true': [0.15999999999999998, 0.2222222222222222], 'false,false': [0.0985496627492794, 0.24471743855943068], 'false,false,false': [0.24471743855943068, nan], 'false,true,true': [0.0, 0.25], 'false,false,true': [0.043273119081588984, 2.185911913641659e-05], 'true': [2.2204460492503132e-17, 0.0]}, {'': [0.009573792011243693, 0.16676416169122976], 'false': [0.1697119783284373, 0.1663988564108553], 'false,false': [0.17561704965297684, 0.08946629116038424], 'false,false,true': [0.1407651673155358, 0.19777292167548102], 'false,false,false': [0.08946629116038424, nan], 'true': [1.1102230246251566e-17, 0.0], 'true,true': [3.416070845000482e-17, 2.3790493384824782e-17], 'true,true,true': [2.3790493384824782e-17, 9.25185853854297e-18]}, {'': [0.06982852669116607, 0.22463960991752727], 'false': [0.22463960991752727, nan], 'false,true': [0.007492692652921684, 0.24407525335612643], 'true': [0.09928523526533538, 0.06529215236815882], 'true,false': [0.04022249464122259, 6.544200133544392e-05], 'true,false,true': [0.013320342494083023, 0.04120857537741866], 'false,true,true': [-5.551115123125783e-18, 0.013320342494083023]}, {'': [0.0062512771017609985, 0.15837677007980985], 'false': [0.16753393159936397, 0.08957315653277108], 'false,true': [0.13496654708020503, 0.18918403022101338], 'false,true,false': [0.013414065892226735, 0.19569283491655087], 'false,false': [0.21375551052025624, 0.07179570358088772], 'false,false,true': [0.25, 0.0], 'false,false,false': [0.0460027383201124, 0.08132934967346932], 'true': [1.7139202383525953e-05, 0.0]}, {'': [0.0546389780061057, 0.22352689928449318], 'false': [0.22352689928449318, nan], 'false,true': [0.19951095018074394, 0.23461234836980396], 'false,true,true': [-4.625929269271485e-18, 0.2148007134881514], 'true': [0.09326637040253027, 0.049095028371814585], 'true,false': [0.03896267578677199, 0.00010321465347235475], 'true,false,true': [0.009430248982757811, 0.04109203449986791]}, {'': [0.04734956600624652, 0.22325619019758092], 'false': [0.22325619019758092, nan], 'false,true': [0.19927629408522593, 0.2346813768614941], 'false,true,true': [2.3129646346357427e-18, 0.2148185100858464], 'true': [0.056423457860514496, 0.03114644538617263], 'true,false': [0.0017733670742607697, 7.412983163096758e-05], 'true,false,true': [0.0008820329172031828, 0.0015474252393809951]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(D, A), complex(D, E).;true;true
0;true,true,false;interaction(F, C), interaction(F, D).;true;true
0;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H).;true;true
0;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(D, A), complex(D, E).;true;true
1;true,true,false;interaction(F, C), interaction(F, D).;true;true
1;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(A, H).;true;true
1;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(D, A), complex(D, E).;true;true
2;true,true,false;interaction(A, F), interaction(F, C).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(D, A), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
4;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(A, F), interaction(E, F).;true;true
4;false,true,true;interaction(G, A), interaction(G, E).;true;true
4;false,false;interaction(A, H).;true;true
4;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
5;true,true;complex(A, E), complex(C, F).;true;true
5;true,true,true;complex(D, E), interaction(D, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;recursion_proteinclass(C, B), complex(C, D).;true;true
6;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(F, G), interaction(G, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(A, I), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C).;true;true
8;true;complex(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
8;false;interaction(F, G), interaction(G, A).;true;true
8;false,true;recursion_proteinclass(F, B), complex(A, H).;true;true
9;;proteinclass(A, B) :- interaction(A, C).;true;true
9;true;interaction(C, D), interaction(A, D).;true;true
9;true,false;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,false,true;interaction(C, F), interaction(E, F).;true;true
9;false;interaction(G, H), interaction(H, A).;true;true
9;false,true;recursion_proteinclass(G, B), complex(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8105298874804642;  // std dev = 1.380, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.24148226843284482;  // std dev = 3.766, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.3581489350995113;  // std dev = 3.464, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7194734122109543;  // std dev = 1.49e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6813641993271586;  // std dev = 1.380, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.2094738875442563;  // std dev = 3.766, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.3087411357856347;  // std dev = 3.464, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.6893970580878191;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.23578480955120526;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( phenotype(I, J), phenotype(A, J) )
%   | | | then return -0.06513156643797494;  // std dev = 0.744, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.21708065299107987;  // std dev = 1.650, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.20391622386736227;  // std dev = 5.569, 148.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=65 */
%   | | | else return 0.3139995906348992;  // std dev = 1.488, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), interaction(A, E) )
%   | | then return 0.41751358415830986;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4175135841583099;  // std dev = 1.29e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, F) )
%   | | then return -0.11345049959443515;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.25197256379573746;  // std dev = 0.272, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.568711470153474;  // std dev = 0.214, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.17218657353645456;  // std dev = 2.702, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.2736392743138185;  // std dev = 1.439, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.15564153775169673;  // std dev = 5.069, 131.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3207118471601496;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return 0.40177384051019455;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0967362896470749;  // std dev = 0.630, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.22466398244789895;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.41834765712664906;  // std dev = 1.244, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return -0.1501244886914485;  // std dev = 0.136, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.10985634391584921;  // std dev = 3.751, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.18312901323511657;  // std dev = 3.457, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.25517224256948945;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B), interaction(G, A) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.34315439926934516;  // std dev = 0.191, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.16815674295553065;  // std dev = 0.664, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.12167985107073656;  // std dev = 0.095, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.07291580272735385;  // std dev = 1.761, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( enzyme(H, J), interaction(K, H) )
%   | | | then return 0.22413752563863562;  // std dev = 2.280, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.08308439650534435;  // std dev = 4.580, 98.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=41 */
%   | | else return 0.5258911216482202;  // std dev = 0.198, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.2190176116242425;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.032930416566913964;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.26923037656467297;  // std dev = 0.180, 49.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   | | else return -0.13173156879709472;  // std dev = 0.024, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( recursion_proteinclass(H, B) )
%   | then if ( interaction(H, I), interaction(I, A) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.29739591062037074;  // std dev = 0.304, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03625014765619624;  // std dev = 0.425, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.1786469952143615;  // std dev = 1.903, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.07115209636920347;  // std dev = 4.656, 94.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15369622280014703;  // std dev = 0.079, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.140222341256184;  // std dev = 0.433, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.04795668633922925;  // std dev = 2.261, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | else if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.1379821801938715;  // std dev = 2.022, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.06019779726906401;  // std dev = 4.342, 112.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=50 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return 0.04781036300485031;  // std dev = 0.628, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3512812853562758;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.013531098156694605;  // std dev = 0.956, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.11661304275012181;  // std dev = 0.568, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.16383504495861967;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.0029607651241511934;  // std dev = 0.776, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.04626595626406273;  // std dev = 0.206, 95.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=46 */
%   else if ( interaction(G, H), interaction(H, A) )
%   | then if ( recursion_proteinclass(G, B), complex(A, I) )
%   | | then return 0.12494772232837703;  // std dev = 0.567, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.016905954990253387;  // std dev = 2.124, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.06542405481898883;  // std dev = 4.221, 80.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=39 */
%   | else if ( phenotype(A, K) )
%   | | then return 0.08156233106331562;  // std dev = 0.978, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.05125429613851412;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19290530261662345;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), complex(E, G) )
%   | | | then return 0.0040488727413608705;  // std dev = 0.633, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.22434727185284192;  // std dev = 0.319, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.009855257732291484;  // std dev = 0.207, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   | else return 0.0710832602334724;  // std dev = 0.199, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   else if ( interaction(H, I), interaction(I, A) )
%   | then if ( recursion_proteinclass(H, B), complex(A, J) )
%   | | then return 0.10311064771429908;  // std dev = 0.569, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( location(A, K) )
%   | | | then return 0.03399957788043359;  // std dev = 4.676, 98.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=44 */
%   | | | else return 0.14263878970150987;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.10237871034603131;  // std dev = 0.931, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.05593196898907932;  // std dev = 0.497, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Results
   AUC ROC   = 0.91705
   AUC PR    = 0.918434
   CLL	      = -0.413535
   Precision = 0.981481 at threshold = 0.5
   Recall    = 0.616279
   F1        = 0.757143


Total learning time: 80.02 seconds
Total inference time: 4.17 seconds
AUC ROC: 0.91705


Results scoring model
   AUC ROC   = 0.906453
   AUC PR    = 0.918715
   CLL	      = -0.428128
   Precision = 0.971831 at threshold = 0.5
   Recall    = 0.610619
   F1        = 0.75


Total scoring time: 9.529 seconds
Refined model CLL: -0.428128


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.91705
   AUC PR    = 0.918434
   CLL	      = -0.413535
   Precision = 0.981481 at threshold = 0.5
   Recall    = 0.616279
   F1        = 0.757143


Total learning time: 102.27699999999999 seconds
Total inference time: 4.17 seconds
AUC ROC: 0.91705
Total revision time: 102.27699999999999
Best scored revision CLL: -0.428128


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 18:41:01
{'AUC ROC': 0.91705, 'AUC PR': 0.918434, 'CLL': -0.413535, 'Precision': [0.981481, 0.5], 'Recall': 0.616279, 'F1': 0.757143, 'Learning time': 102.27699999999999, 'Inference time': 4.17, 'parameter_0.4': {'AUC ROC': 0.921647, 'AUC PR': 0.927026, 'CLL': -0.38351, 'Precision': [0.982143, 0.5], 'Recall': 0.639535, 'F1': 0.774648, 'Learning time': 8.989, 'Inference time': 2.757}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5914822684328456;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6757165026670775;  // std dev = 4.698, 148.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=121 */
%   | | | else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5033699069850941;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5723499640827495;  // std dev = 4.698, 148.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=121 */
%   | | | else return -0.12544463852839105;  // std dev = 8.02e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.1377866547829789;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.28858739689073243;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.40266145464691844;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.15130832688625917;  // std dev = 3.765, 77.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=31 */
%   | | | else return 0.251827262273865;  // std dev = 3.182, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.20739877587176575;  // std dev = 5.078, 161.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=74 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.44559552742568254;  // std dev = 0.257, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(C, A), enzyme(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.33717094444547074;  // std dev = 0.762, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3083835511481342;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.34278046139414564;  // std dev = 2.225, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | | else return 0.11028249837464785;  // std dev = 4.195, 107.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=39 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17013336550334113;  // std dev = 4.957, 161.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=74 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.30734491289767835;  // std dev = 0.830, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return -0.0014742910306634327;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.49852570896933657;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.12352570896933653;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3583087330163243;  // std dev = 4.685, 148.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=121 */
%   | | | else return -0.15271063961150258;  // std dev = 0.064, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14209471883628763;  // std dev = 2.727, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(C, F) )
%   | | then if ( enzyme(D, E), interaction(C, D) )
%   | | | then return 0.14240710899973397;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.27338719785115084;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2585625453275356;  // std dev = 0.039, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.1747875115568198;  // std dev = 1.641, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.04311261989734117;  // std dev = 3.485, 77.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=31 */
%   | | | else return 0.14607403842306033;  // std dev = 2.827, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09672616463141565;  // std dev = 4.424, 161.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=74 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then return 0.10511209209451508;  // std dev = 1.380, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1957192787259998;  // std dev = 0.284, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.2469348866465136;  // std dev = 4.756, 157.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=129 */
%   | | else return -0.14552612261512662;  // std dev = 0.094, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.17739357215679707;  // std dev = 0.569, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2225457953621578;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.09394712985919691;  // std dev = 2.716, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17307023972024355;  // std dev = 0.769, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.09420283198400682;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 5.237898486940039E-4;  // std dev = 3.453, 78.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=31 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.14069980968735463;  // std dev = 0.591, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1031449189601845;  // std dev = 2.611, 57.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=28 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.2896437323511952;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04384363647359314;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.04482092283280037;  // std dev = 2.757, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   | | | else return 0.05881254130097989;  // std dev = 3.049, 98.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=44 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then return 0.06549974594987172;  // std dev = 1.342, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.14326702823558835;  // std dev = 0.238, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.17593923328795819;  // std dev = 4.738, 157.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=129 */
%   | | else return -0.1345247109851049;  // std dev = 0.122, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), enzyme(A, H) )
%   | | | then return -0.5788548455014302;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.02287797818960997;  // std dev = 2.012, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.13506858052388923;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.02272051855352076;  // std dev = 3.971, 132.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=65 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return 0.39389267436140074;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.23783780913423103;  // std dev = 2.536, 95.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=88 */
%   | | else return -0.12863520665990025;  // std dev = 0.485, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), enzyme(A, I) )
%   | | | then return -0.4351718150424506;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.017943031056068058;  // std dev = 2.012, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.10334159642653629;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.975257
   AUC PR    = 0.97382
   CLL	      = -0.308227
   Precision = 0.948718 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.902439


Total learning time: 10.786 seconds
Total inference time: 2.987 seconds
AUC ROC: 0.975257


Results scoring model
   AUC ROC   = 0.953135
   AUC PR    = 0.948026
   CLL	      = -0.349813
   Precision = 0.834225 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.876404


Total scoring time: 4.304 seconds
Parameter learned model CLL: -0.349813


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.0, 0, 16], 'true,true,false,false': [0.0, 0, 6], 'true,false': [0.0, 1, 0], 'false,true': [1.713, 4, 11], 'false,false,true,true': [4.698, 27, 121], 'false,false,true,false': [5.16e-08, 118, 0], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [2.289, 11, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.816, 1, 2], 'true,true,false,true': [5.96e-08, 0, 16], 'true,true,false,false': [2.11e-08, 0, 6], 'true,false': [0.0, 1, 0], 'false,true': [1.713, 4, 11], 'false,false,true,true': [4.698, 27, 121], 'false,false,true,false': [8.02e-08, 118, 0], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [2.289, 11, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.816, 1, 2], 'true,true,false,true': [0.0, 0, 10], 'true,true,false,false': [0.0, 0, 12], 'true,false': [0.0, 1, 0], 'false,true': [1.713, 4, 11], 'false,false,true,true': [3.765, 46, 31], 'false,false,true,false': [3.182, 30, 29], 'false,false,false,true': [5.078, 87, 74], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), enzyme(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.257, 0, 14], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.762, 1, 9], 'true,false': [0.0, 1, 0], 'false,true': [1.713, 4, 11], 'false,false,true,true': [2.225, 8, 21], 'false,false,true,false': [4.195, 68, 39], 'false,false,false,true': [4.957, 87, 74], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.83, 1, 24], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [1.49e-08, 0, 5], 'false,true,false': [1.369, 3, 5], 'false,false,true,true': [4.685, 27, 121], 'false,false,true,false': [0.064, 118, 0], 'false,false,false,true': [2.727, 18, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'enzyme(A, E), enzyme(C, F)', 'true,true,true': 'enzyme(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.806, 1, 3], 'true,true,true,false': [0.0, 0, 4], 'true,true,false': [0.039, 0, 17], 'true,false': [0.0, 1, 0], 'false,true': [1.641, 4, 11], 'false,false,true,true': [3.485, 46, 31], 'false,false,true,false': [2.827, 30, 29], 'false,false,false,true': [4.424, 87, 74], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), enzyme(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [1.38, 3, 8], 'true,false,true,true': [0.284, 1, 17], 'true,false,true,false': [4.756, 28, 129], 'true,false,false': [0.094, 118, 0], 'false,true,true,true': [0.569, 1, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [2.716, 18, 13], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.769, 1, 24], 'true,false': [0.0, 1, 0], 'false,true,true': [3.453, 47, 31], 'false,true,false,true': [0.591, 1, 3], 'false,true,false,false': [2.611, 29, 28], 'false,false,true,true': [0.027, 0, 5], 'false,false,true,false': [1.303, 3, 4], 'false,false,false,true': [2.757, 33, 30], 'false,false,false,false': [3.049, 54, 44]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'enzyme(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), enzyme(A, H)'}, {'true,true': [1.342, 3, 8], 'true,false,true,true': [0.238, 1, 17], 'true,false,true,false': [4.738, 28, 129], 'true,false,false': [0.122, 118, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.012, 12, 7], 'false,true,false': [1.793, 6, 8], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), enzyme(A, I)'}, {'true,true': [3.971, 67, 65], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [2.536, 7, 88], 'true,false,false': [0.485, 76, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.012, 12, 7], 'false,true,false': [1.793, 6, 8], 'false,false': [0.0, 0, 0]}]]
[{'': [0.07100591715976402, 0.2487569855358322], 'false': [0.1955555555555553, 0.247616456370668], 'false,false': [0.24796483690429408, 0.24349635796045738], 'false,false,true': [0.14915084002922252, 2.258080728051166e-17], 'false,false,false': [0.20999999999999988, 0.2494331065759637], 'true': [0.0384000000000006, 0.0], 'true,true': [0.22222222222222224, -1.6148698540002277e-16], 'true,true,false': [-2.220446049250313e-16, -1.4802973661668753e-16]}, {'': [0.05751455440042165, 0.20937589756298225], 'false': [0.19555555555555593, 0.20723607549041106], 'false,false': [0.20316713956815127, 0.24168213713132633], 'false,false,false': [0.20999999999999996, 0.24943310657596401], 'false,false,true': [0.149150840029216, 5.457028426123651e-17], 'true': [0.03443221636540322, 0.0], 'true,true': [0.2222222222222222, 1.6148698540002277e-16], 'true,true,false': [2.220446049250313e-16, 7.401486830834377e-17]}, {'': [0.04478611848853602, 0.17289441097437355], 'false': [0.19555555555555554, 0.16980796293143252], 'false,false': [0.1811469720792794, 0.16015831549549844], 'false,false,true': [0.18405956619125877, 0.17162511095812302], 'false,false,false': [0.16015831549549844, nan], 'true': [0.030600287038288057, 0.0], 'true,true': [0.22222222222222224, -2.0185873175002846e-16], 'true,true,false': [-1.7763568394002506e-16, -1.1102230246251565e-16]}, {'': [0.036885759394520705, 0.16534663397838628], 'false': [0.19555555555555557, 0.1628384269675952], 'false,false': [0.17484643303874864, 0.15264668222861802], 'false,false,true': [0.17069822956012545, 0.16444421409329812], 'false,false,false': [0.15264668222861802, nan], 'true': [0.028641727107968366, 0.0], 'true,true': [0.004731573226031761, 0.05334660955394285], 'true,true,false': [0.0, 0.05809445780424376]}, {'': [0.03241549423220253, 0.15902406651703854], 'false': [0.1955555555555556, 0.15670641695485932], 'false,true': [0.12244897959183676, 0.234375], 'false,false': [0.14699744128103862, 0.2399173481796509], 'false,false,false': [0.2399173481796509, nan], 'false,false,true': [0.14832565972305242, 3.515566645974849e-05], 'false,true,true': [0.25, 4.4408920985006264e-17], 'true': [0.02755715428690596, 0.0]}, {'': [0.03085446363068866, 0.13736339291652802], 'false': [0.1796160699355838, 0.13490490279895553], 'false,false': [0.15065059967640693, 0.12156753899656073], 'false,false,true': [0.1576995620680732, 0.135449039214473], 'false,false,false': [0.12156753899656073, nan], 'true': [0.02796253585331452, 0.0], 'true,true': [0.08544278851839252, 9.157096768576972e-05], 'true,true,true': [0.16230768519902253, 0.0]}, {'': [0.11587148879762174, 0.2311111158110417], 'false': [0.2311111158110417, nan], 'false,true': [0.14355692043288462, 0.23790307781007317], 'false,true,true': [0.16201821475217304, 0.0], 'true': [0.17316293335030386, 0.11370702589187318], 'true,false': [0.12995124951289405, 7.424365132113941e-05], 'true,false,true': [0.0044914932395779695, 0.14406537236912756]}, {'': [0.025408614576412483, 0.12315518187099286], 'false': [0.14009465473493068, 0.10950383523920336], 'false,true': [0.15283134986297645, 0.11761182560730038], 'false,true,false': [0.08732574830088602, 0.11964468109892198], 'false,false': [0.16851301641939112, 0.10498460260663575], 'false,false,true': [0.00014095988775683077, 0.24243967726581067], 'false,false,false': [0.1206110938774017, 0.0948623972282015], 'true': [0.023677463203383407, 0.0]}, {'': [0.10192679524033893, 0.22864129746182751], 'false': [0.22864129746182751, nan], 'false,true': [0.2196200338992213, 0.22962127917620467], 'false,true,true': [0.0, 0.21307486349645244], 'true': [0.16365035711140113, 0.09959955636248255], 'true,false': [0.12868990555326784, 0.00012710820912328468], 'true,false,true': [0.0031418641899736977, 0.14297415129100993]}, {'': [0.09521565022163023, 0.22223316941831706], 'false': [0.22223316941831706, nan], 'false,true': [0.21220520231313023, 0.22969075823661259], 'false,true,true': [0.0, 0.2131082439839719], 'true': [0.11944707828678888, 0.07231756109965347], 'true,false': [0.06724824856940907, 0.0030949106976244207], 'true,false,true': [0.0, 0.06770244652679522]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(A, D), enzyme(D, E).;true;true
0;true,true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(A, D), enzyme(D, E).;true;true
1;true,true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(A, D), enzyme(D, E).;true;true
2;true,true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(A, D), interaction(E, A).;true;true
3;true,true,false;interaction(C, A), enzyme(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;true,true;enzyme(A, E), enzyme(C, F).;true;true
5;true,true,true;enzyme(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), enzyme(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;enzyme(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;false;interaction(G, F), interaction(A, G).;true;true
8;false,true;recursion_proteinclass(F, B), enzyme(A, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
9;true,false,true;interaction(F, C), interaction(F, E).;true;true
9;false;interaction(H, G), interaction(A, H).;true;true
9;false,true;recursion_proteinclass(G, B), enzyme(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8181489350995119;  // std dev = 0.196, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), complex(G, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6757165026670775;  // std dev = 4.698, 148.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=121 */
%   | | | else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.221785298735876;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6874753536316645;  // std dev = 0.196, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), complex(G, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.30874113578563506;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5723499640827495;  // std dev = 4.698, 148.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=121 */
%   | | | else return -0.12544463852839105;  // std dev = 8.02e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12605639313871198;  // std dev = 1.435, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.294112920355943;  // std dev = 2.287, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5082446012394793;  // std dev = 0.229, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( location(A, F), location(D, F) )
%   | | | then return -0.1773032351532759;  // std dev = 0.924, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.09082164501260848;  // std dev = 1.556, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return 0.036237163852591146;  // std dev = 1.447, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.30744236235470185;  // std dev = 2.118, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6213811303312521;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2442720806966439;  // std dev = 2.536, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.1870742530832686;  // std dev = 3.901, 96.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=42 */
%   | | | else return 0.24936026413220214;  // std dev = 4.265, 105.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.44673564842178065;  // std dev = 3.65e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(C, A), enzyme(C, F) )
%   | | | then return 0.4467356484217808;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3467356484217807;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.17378284984507478;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, A) )
%   | then return -0.15722870531155742;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), phenotype(H, I) )
%   | | | then return 0.5024446074848368;  // std dev = 0.869, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.10813704406272913;  // std dev = 0.963, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.22644966812252706;  // std dev = 2.744, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | | | else return 0.16436865369618933;  // std dev = 6.193, 241.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=109 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.29203491670360127;  // std dev = 0.209, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.008534578177471108;  // std dev = 0.533, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.468207637112026;  // std dev = 0.280, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.4850360048988356;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.032124463387091795;  // std dev = 0.932, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3596045296046439;  // std dev = 4.548, 148.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=121 */
%   | | | else return -0.153021457190165;  // std dev = 0.191, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.05678628117009508;  // std dev = 1.949, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.19744750937182592;  // std dev = 1.854, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2297187595067367;  // std dev = 0.208, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( location(A, F), location(D, F) )
%   | | | then return -0.20841005500950355;  // std dev = 0.948, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.007293576422303583;  // std dev = 1.471, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.019463481200117885;  // std dev = 1.314, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.15280190612167643;  // std dev = 1.776, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return 0.40345786607716083;  // std dev = 0.301, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.07307316652599626;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.18517942297412787;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return 0.09800113328523025;  // std dev = 5.001, 206.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=93 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.2653132353449373;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.004150264842855078;  // std dev = 0.724, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.1967648213001801;  // std dev = 4.230, 124.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=98 */
%   | | | else return 0.3647658614319998;  // std dev = 1.373, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | else return -0.1452428699165788;  // std dev = 0.236, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( recursion_proteinclass(I, B) )
%   | then if ( interaction(J, I), interaction(A, J) )
%   | | then return -0.28175378678110335;  // std dev = 0.711, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.04666942978600214;  // std dev = 1.922, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.1603852047733114;  // std dev = 1.795, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15867827325897624;  // std dev = 0.198, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.141164887894501;  // std dev = 0.471, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.04144627034710146;  // std dev = 3.974, 110.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=51 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.2766756897492991;  // std dev = 0.693, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.07926956296017831;  // std dev = 0.775, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.2768374103630877;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04096958318883866;  // std dev = 0.816, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.023429213515820994;  // std dev = 3.090, 79.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=36 */
%   | | | else return 0.07939934004572119;  // std dev = 2.485, 82.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.2031099390244238;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.027100414238662784;  // std dev = 0.684, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.13734901171996966;  // std dev = 4.204, 124.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=98 */
%   | | | else return 0.26746687602732877;  // std dev = 1.343, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | else return -0.13388645991043624;  // std dev = 0.251, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(I, J), interaction(A, I) )
%   | then if ( recursion_proteinclass(J, B), enzyme(A, K) )
%   | | then return -0.41899714915210223;  // std dev = 0.372, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.029839852041069814;  // std dev = 1.462, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.09426469527831019;  // std dev = 2.112, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.3723553502470542;  // std dev = 0.221, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.26761474872162927;  // std dev = 0.734, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.2817271085825588;  // std dev = 0.993, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.17593439924452764;  // std dev = 0.231, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.01867715934706605;  // std dev = 3.087, 86.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=38 */
%   | else return 0.06777887826523336;  // std dev = 0.253, 172.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=89 */
%   else if ( interaction(I, J), interaction(A, I) )
%   | then if ( recursion_proteinclass(J, B), enzyme(A, K) )
%   | | then return -0.339482647126731;  // std dev = 0.358, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.10486860347651078;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.02060342682860783;  // std dev = 1.864, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else return 0.29776098881348373;  // std dev = 0.195, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.97404
   AUC PR    = 0.972121
   CLL	      = -0.318599
   Precision = 0.905882 at threshold = 0.5
   Recall    = 0.895349
   F1        = 0.900585


Total learning time: 54.675 seconds
Total inference time: 3.095 seconds
AUC ROC: 0.97404


Results scoring model
   AUC ROC   = 0.969696
   AUC PR    = 0.968332
   CLL	      = -0.331864
   Precision = 0.868852 at threshold = 0.5
   Recall    = 0.940828
   F1        = 0.903409


Total scoring time: 6.758 seconds
Refined model CLL: -0.331864


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97404
   AUC PR    = 0.972121
   CLL	      = -0.318599
   Precision = 0.905882 at threshold = 0.5
   Recall    = 0.895349
   F1        = 0.900585


Total learning time: 76.523 seconds
Total inference time: 3.095 seconds
AUC ROC: 0.97404
Total revision time: 76.523
Best scored revision CLL: -0.331864


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 18:42:25
{'AUC ROC': 0.97404, 'AUC PR': 0.972121, 'CLL': -0.318599, 'Precision': [0.905882, 0.5], 'Recall': 0.895349, 'F1': 0.900585, 'Learning time': 76.523, 'Inference time': 3.095, 'parameter_0.6': {'AUC ROC': 0.975257, 'AUC PR': 0.97382, 'CLL': -0.308227, 'Precision': [0.948718, 0.5], 'Recall': 0.860465, 'F1': 0.902439, 'Learning time': 10.786, 'Inference time': 2.987}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6228548174524535;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6693734248954276;  // std dev = 5.479, 196.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=159 */
%   | | | else return -0.14185106490048813;  // std dev = 0.000, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.12130682983635446;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.37666745361803083;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5291399941450576;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.567179002569832;  // std dev = 5.479, 196.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=159 */
%   | | | else return -0.12544463852839133;  // std dev = 4.21e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.1058893024861437;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.32437884151130014;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.4419486100244409;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.4212666781024635;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.16398685981025846;  // std dev = 4.346, 103.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=42 */
%   | | | else return 0.21698789396265447;  // std dev = 3.806, 84.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=38 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.21124528525045538;  // std dev = 5.870, 210.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=98 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4423341759041273;  // std dev = 0.210, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(C, A), enzyme(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35450628492921216;  // std dev = 0.850, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3211489039020865;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3777489524112561;  // std dev = 2.441, 38.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   | | | else return 0.09764563698742283;  // std dev = 4.915, 149.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=51 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17282579322104522;  // std dev = 5.736, 210.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=98 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3108493486015152;  // std dev = 0.898, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return -0.023585082548668423;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.4764149174513315;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.14308158411799818;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3531118639972885;  // std dev = 5.467, 196.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=159 */
%   | | | else return -0.15167578329838918;  // std dev = 0.085, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14085790080162838;  // std dev = 3.287, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(C, F) )
%   | | then if ( enzyme(D, E), interaction(C, D) )
%   | | | then return 0.19378059223152333;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.26926705312041943;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25822750283610724;  // std dev = 0.039, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.18229536198599874;  // std dev = 1.680, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.05741505656765674;  // std dev = 3.996, 103.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=42 */
%   | | | else return 0.12120437662852537;  // std dev = 3.409, 84.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=38 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09720005652580052;  // std dev = 5.163, 210.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=98 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then return 0.12405997020388658;  // std dev = 1.402, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.18363211296432605;  // std dev = 0.391, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.2428923473739229;  // std dev = 5.534, 210.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=172 */
%   | | else return -0.1443302164592413;  // std dev = 0.099, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.22521863208158316;  // std dev = 0.632, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.22029912920711414;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.09365986943473517;  // std dev = 3.285, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17498449288822526;  // std dev = 0.832, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.0931764969502358;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.01645883243753019;  // std dev = 3.946, 104.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=42 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20941585866027898;  // std dev = 0.612, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.07366685074780308;  // std dev = 3.167, 80.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=35 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.2737320856445831;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.021284515587234543;  // std dev = 1.360, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.051302104311277526;  // std dev = 3.092, 78.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=38 */
%   | | | else return 0.053181886509053686;  // std dev = 3.712, 132.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=60 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then return 0.0783026345378579;  // std dev = 1.371, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.13447204527007692;  // std dev = 0.328, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.1725767940924841;  // std dev = 5.520, 210.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=172 */
%   | | else return -0.13298687708973758;  // std dev = 0.111, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), enzyme(A, H) )
%   | | | then return -0.6608353348623683;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09694401440365381;  // std dev = 2.394, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else return 0.042239498917760104;  // std dev = 2.259, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.015613037077418233;  // std dev = 4.581, 174.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=88 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return 2.4871282931441624E-4;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23658700719559153;  // std dev = 2.895, 122.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=113 */
%   | | else return -0.12583928713058223;  // std dev = 0.526, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), enzyme(A, I) )
%   | | | then return -0.501545902937157;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07623469061271286;  // std dev = 2.394, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else return 0.032616333463065784;  // std dev = 2.259, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.969984
   AUC PR    = 0.962459
   CLL	      = -0.310237
   Precision = 0.948718 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.902439


Total learning time: 11.956 seconds
Total inference time: 2.996 seconds
AUC ROC: 0.969984


Results scoring model
   AUC ROC   = 0.946384
   AUC PR    = 0.935898
   CLL	      = -0.354432
   Precision = 0.834677 at threshold = 0.5
   Recall    = 0.915929
   F1        = 0.873418


Total scoring time: 4.95 seconds
Parameter learned model CLL: -0.354432


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false,true': [5.96e-08, 0, 22], 'true,true,false,false': [0.0, 0, 9], 'true,false': [0.0, 2, 0], 'false,true': [1.749, 4, 13], 'false,false,true,true': [5.479, 37, 159], 'false,false,true,false': [0.0, 155, 0], 'false,false,false,true': [1.919, 14, 5], 'false,false,false,false': [2.596, 13, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), enzyme(A, K)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false,true': [7.3e-08, 0, 22], 'true,true,false,false': [0.0, 0, 9], 'true,false': [0.0, 2, 0], 'false,true': [1.749, 4, 13], 'false,false,true,true': [5.479, 37, 159], 'false,false,true,false': [4.21e-08, 155, 0], 'false,false,false,true': [1.919, 14, 5], 'false,false,false,false': [2.596, 13, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), enzyme(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false,true': [0.0, 0, 12], 'true,true,false,false': [0.0, 0, 19], 'true,false': [0.0, 2, 0], 'false,true': [1.749, 4, 13], 'false,false,true,true': [4.346, 61, 42], 'false,false,true,false': [3.806, 46, 38], 'false,false,false,true': [5.87, 112, 98], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), enzyme(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.21, 0, 19], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.85, 1, 13], 'true,false': [0.0, 2, 0], 'false,true': [1.749, 4, 13], 'false,false,true,true': [2.441, 9, 29], 'false,false,true,false': [4.915, 98, 51], 'false,false,false,true': [5.736, 112, 98], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.898, 1, 35], 'true,false': [0.0, 2, 0], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [1.49e-08, 0, 6], 'false,true,false': [1.414, 3, 6], 'false,false,true,true': [5.467, 37, 159], 'false,false,true,false': [0.085, 155, 0], 'false,false,false,true': [3.287, 27, 19], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'enzyme(A, E), enzyme(C, F)', 'true,true,true': 'enzyme(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.887, 1, 7], 'true,true,true,false': [1.05e-08, 0, 5], 'true,true,false': [0.039, 0, 23], 'true,false': [0.0, 2, 0], 'false,true': [1.68, 4, 13], 'false,false,true,true': [3.996, 61, 42], 'false,false,true,false': [3.409, 46, 38], 'false,false,false,true': [5.163, 112, 98], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), enzyme(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [1.402, 3, 12], 'true,false,true,true': [0.391, 2, 19], 'true,false,true,false': [5.534, 38, 172], 'true,false,false': [0.099, 155, 0], 'false,true,true,true': [0.632, 1, 1], 'false,true,true,false': [0.002, 0, 3], 'false,true,false': [3.285, 27, 19], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.832, 1, 35], 'true,false': [0.0, 2, 0], 'false,true,true': [3.946, 62, 42], 'false,true,false,true': [0.612, 1, 5], 'false,true,false,false': [3.167, 45, 35], 'false,false,true,true': [0.022, 0, 6], 'false,false,true,false': [1.36, 3, 5], 'false,false,false,true': [3.092, 40, 38], 'false,false,false,false': [3.712, 72, 60]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'enzyme(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), enzyme(A, H)'}, {'true,true': [1.371, 3, 12], 'true,false,true,true': [0.328, 2, 19], 'true,false,true,false': [5.52, 38, 172], 'true,false,false': [0.111, 155, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.394, 14, 13], 'false,true,false': [2.259, 13, 10], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), enzyme(A, I)'}, {'true,true': [4.581, 86, 88], 'true,false,true,true': [0.829, 1, 2], 'true,false,true,false': [2.895, 9, 113], 'true,false,false': [0.526, 102, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.394, 14, 13], 'false,true,false': [2.259, 13, 10], 'false,false': [0.0, 0, 0]}]]
[{'': [0.0727146814404449, 0.24850638287941568], 'false': [0.17993079584775054, 0.247333591355827], 'false,false': [0.2477901965081492, 0.24243856332703168], 'false,false,true': [0.15313931695127608, -1.3179421711679277e-16], 'false,false,false': [0.19390581717451505, 0.24965706447187883], 'true': [0.027006172839507927, 0.0], 'true,true': [0.15999999999999986, -4.584146682323227e-16], 'true,true,false': [1.6148698540002277e-16, 0.0]}, {'': [0.05773728792947156, 0.20961401646865804], 'false': [0.1799307958477509, 0.2078700497522467], 'false,false': [0.20380917483091412, 0.23820282960252262], 'false,false,false': [0.19390581717451527, 0.24965706447187902], 'false,false,true': [0.15313931695127372, 1.1460366705808068e-17], 'true': [0.02533985337297266, 0.0], 'true,true': [0.16, 1.1460366705808067e-16], 'true,true,false': [2.4223047810003414e-16, 0.0]}, {'': [0.0437019227605104, 0.1735916845198562], 'false': [0.1799307958477511, 0.17131346583412643], 'false,false': [0.17915170480492862, 0.16407466809357238], 'false,false,true': [0.18335228254117372, 0.1724537328020857], 'false,false,false': [0.16407466809357238, nan], 'true': [0.023760693310059908, 0.0], 'true,true': [0.15999999999999998, -1.71905500587121e-16], 'true,true,false': [-2.590520390792032e-16, -2.337311630789803e-16]}, {'': [0.034668998013909165, 0.1663904932145841], 'false': [0.1799307958477507, 0.16479949762493], 'false,false': [0.17372006805936613, 0.15669887355375856], 'false,false,true': [0.15673804548594647, 0.1621077437471742], 'false,false,false': [0.15669887355375856, nan], 'true': [0.023028409929212377, 0.0], 'true,true': [0.0023102316547972505, 0.04307843721547021], 'true,true,false': [-3.700743415417188e-17, 0.05160895682988572]}, {'': [0.029346309699049552, 0.15946803291452039], 'false': [0.17993079584775076, 0.15809776697122538], 'false,true': [0.10937500000000004, 0.22222222222222227], 'false,false': [0.1480142910098194, 0.23493864235620365], 'false,false,false': [0.23493864235620365, nan], 'false,false,true': [0.15250648784392576, 4.6452475933341174e-05], 'false,true,true': [0.24999999999999997, 3.700743415417188e-17], 'true': [0.02240586887701564, 0.0]}, {'': [0.026938458522459546, 0.1386485130897332], 'false': [0.16599767048408604, 0.137142276172528], 'false,false': [0.14855246408260595, 0.1269234152221359], 'false,false,true': [0.1550288733658074, 0.1383698961892367], 'false,false,false': [0.1269234152221359, nan], 'true': [0.02268176468981791, 0.0], 'true,true': [0.06189479597680355, 6.49982242559951e-05], 'true,true,true': [0.09838742585556315, 2.2204460492503132e-17]}, {'': [0.11564289754143231, 0.22429622591480758], 'false': [0.22429622591480758, nan], 'false,true': [0.1274832345210554, 0.23455866709331302], 'false,true,true': [0.1996152399013721, 8.006847005045022e-07], 'true': [0.13108161265088855, 0.11498344805034799], 'true,false': [0.13354845738110896, 6.332076361033558e-05], 'true,false,true': [0.007287593193856417, 0.14585529149235388]}, {'': [0.02180054483712244, 0.12515873936237626], 'false': [0.13834952146660776, 0.11393182700881906], 'false,true': [0.14968628912527848, 0.12220630204277244], 'false,true,false': [0.0624211361160458, 0.1254045295001222], 'false,false': [0.15344329489184821, 0.11112436262535128], 'false,false,true': [8.024237318114229e-05, 0.2311649578512599], 'false,false,false': [0.12253123098639584, 0.10438262793902332], 'true': [0.019226932718481343, 0.0]}, {'': [0.10219936262017318, 0.2234659449603104], 'false': [0.2234659449603104, nan], 'false,true': [0.22438853946281306, 0.22192332278751542], 'false,true,true': [0.0, 0.2121910281747969], 'true': [0.12530001783106773, 0.10126687290148378], 'true,false': [0.1325152676703289, 8.004385440192759e-05], 'true,false,true': [0.005122974602800923, 0.1451224995331891]}, {'': [0.09570643509799089, 0.21887305821117864], 'false': [0.21887305821117864, nan], 'false,true': [0.21616176888488117, 0.22188374758448995], 'false,true,true': [0.0, 0.21224524552924623], 'true': [0.12061314641904959, 0.07338894908537523], 'true,false': [0.07387294858256678, 0.0027112631259389453], 'true,false,true': [0.22915115702485375, 0.06871409303631194]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(A, D), enzyme(D, E).;true;true
0;true,true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(A, D), enzyme(D, E).;true;true
1;true,true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(A, D), enzyme(D, E).;true;true
2;true,true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(A, D), interaction(E, A).;true;true
3;true,true,false;interaction(C, A), enzyme(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;true,true;enzyme(A, E), enzyme(C, F).;true;true
5;true,true,true;enzyme(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), enzyme(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;enzyme(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
8;false;interaction(G, F), interaction(A, G).;true;true
8;false,true;recursion_proteinclass(F, B), enzyme(A, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;false;interaction(H, G), interaction(A, H).;true;true
9;false,true;recursion_proteinclass(G, B), enzyme(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7792015666784589;  // std dev = 0.270, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(F, A), complex(F, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6693734248954276;  // std dev = 5.479, 196.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=159 */
%   | | | else return -0.14185106490048813;  // std dev = 0.000, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12130682983635446;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.37666745361803083;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7073503176399212;  // std dev = 0.164, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.2648719045823017;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then return 0.2763394517212514;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5188978823565983;  // std dev = 1.220, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.567179002569832;  // std dev = 5.479, 196.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=159 */
%   | | | else return -0.12544463852839133;  // std dev = 4.21e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1058893024861437;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.32437884151130014;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5499489053764117;  // std dev = 0.164, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.2165865525999236;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, E) )
%   | | | then return 0.6372498661668348;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.3126633827052535;  // std dev = 0.224, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(F, H), complex(H, E) )
%   | | | then return -0.08453033524141526;  // std dev = 1.185, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | | else return 0.22731395691701045;  // std dev = 2.836, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | else if ( interaction(A, A) )
%   | | then return -0.16240312932151818;  // std dev = 0.224, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.21400762579917001;  // std dev = 5.654, 180.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=88 */
%   | | | else return 0.25839995822994277;  // std dev = 4.717, 134.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=67 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4411488554460748;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(C, A), enzyme(C, F) )
%   | | | then return 0.4411488554460747;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3697202840175033;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.1820891578216511;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( complex(A, G), phenotype(A, H) )
%   | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.5716020808599862;  // std dev = 0.069, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return -0.19089997108646253;  // std dev = 0.108, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12906293584244777;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.22214611599465495;  // std dev = 3.746, 81.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=42 */
%   | | | else return 0.1826668211549425;  // std dev = 5.908, 220.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=106 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.29045147136204386;  // std dev = 0.190, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.03274396603833887;  // std dev = 0.456, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5290070967797702;  // std dev = 0.229, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.5085521014609967;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.038232674951590856;  // std dev = 1.034, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3340493424177369;  // std dev = 5.075, 196.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=159 */
%   | | | else return -0.14159143445886452;  // std dev = 0.350, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.03166406346086072;  // std dev = 1.812, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.18376076610803566;  // std dev = 2.538, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22932670114330564;  // std dev = 0.188, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), phenotype(A, H) )
%   | | | then return 0.059978202202468;  // std dev = 1.179, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.42941270090578465;  // std dev = 0.209, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(D, D), phenotype(A, I) )
%   | | | then return -0.07699874444311633;  // std dev = 2.172, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.06946622113056414;  // std dev = 4.477, 182.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=78 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.44033808625497783;  // std dev = 1.076, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return -0.18056292713226277;  // std dev = 0.479, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return 0.05003877689823654;  // std dev = 1.414, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.1510150494698891;  // std dev = 3.373, 91.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), enzyme(C, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.30264922828860724;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05788802999883375;  // std dev = 0.305, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.18411669237385372;  // std dev = 4.655, 165.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=130 */
%   | | | else return 0.31667706694665443;  // std dev = 1.613, 66.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=61 */
%   | | else return -0.13153246761329665;  // std dev = 0.391, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( recursion_proteinclass(I, B) )
%   | then if ( interaction(J, I), interaction(A, J) )
%   | | then return -0.2396672678238292;  // std dev = 0.708, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.07755182241865025;  // std dev = 2.794, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.20762987551016956;  // std dev = 0.983, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15711145143506702;  // std dev = 0.183, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( enzyme(A, F), complex(E, G) )
%   | | | then return -0.22313854450157075;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0030107830823561136;  // std dev = 1.834, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.10629404759237673;  // std dev = 2.139, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.04987255226419592;  // std dev = 3.212, 103.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=45 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.29529923503883077;  // std dev = 0.175, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.052662782717749004;  // std dev = 1.064, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.02444995898939553;  // std dev = 3.411, 103.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=48 */
%   | | | else return 0.07290164855588555;  // std dev = 2.958, 107.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=50 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), recursion_proteinclass(C, B) )
%   | then return 0.10393959562953989;  // std dev = 0.252, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.08404783638306308;  // std dev = 3.090, 68.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=50 */
%   | | | else return 0.19303520849055372;  // std dev = 3.791, 163.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=141 */
%   | | else return -0.12250991053744921;  // std dev = 0.386, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( interaction(G, H), interaction(A, G) )
%   | then if ( recursion_proteinclass(H, B), enzyme(A, I) )
%   | | then return -0.3781177755258492;  // std dev = 0.443, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.222917140497684;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03505300925133802;  // std dev = 2.768, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then return 0.14142978912694967;  // std dev = 0.549, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16220088022090748;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.24003746449350558;  // std dev = 0.135, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else return -0.25679352530804966;  // std dev = 0.235, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then return 0.01794996929917894;  // std dev = 0.236, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | else return 0.050685920516853375;  // std dev = 0.275, 254.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=130 */
%   else if ( interaction(I, J), interaction(A, I) )
%   | then if ( recursion_proteinclass(J, B), enzyme(A, K) )
%   | | then return -0.31630664470345965;  // std dev = 0.422, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.09672218867409252;  // std dev = 1.827, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return -0.002243516333829939;  // std dev = 2.071, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(A, M), phenotype(M, N) )
%   | | then return 0.11339137201479683;  // std dev = 0.545, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1273293293831949;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.984248
   AUC PR    = 0.984942
   CLL	      = -0.293997
   Precision = 0.927711 at threshold = 0.5
   Recall    = 0.895349
   F1        = 0.911243


Total learning time: 67.322 seconds
Total inference time: 3.464 seconds
AUC ROC: 0.984248


Results scoring model
   AUC ROC   = 0.980451
   AUC PR    = 0.981039
   CLL	      = -0.310542
   Precision = 0.869388 at threshold = 0.5
   Recall    = 0.942478
   F1        = 0.904459


Total scoring time: 7.847 seconds
Refined model CLL: -0.310542


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984248
   AUC PR    = 0.984942
   CLL	      = -0.293997
   Precision = 0.927711 at threshold = 0.5
   Recall    = 0.895349
   F1        = 0.911243


Total learning time: 92.075 seconds
Total inference time: 3.464 seconds
AUC ROC: 0.984248
Total revision time: 92.075
Best scored revision CLL: -0.310542


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 18:44:05
{'AUC ROC': 0.984248, 'AUC PR': 0.984942, 'CLL': -0.293997, 'Precision': [0.927711, 0.5], 'Recall': 0.895349, 'F1': 0.911243, 'Learning time': 92.075, 'Inference time': 3.464, 'parameter_0.8': {'AUC ROC': 0.969984, 'AUC PR': 0.962459, 'CLL': -0.310237, 'Precision': [0.948718, 0.5], 'Recall': 0.860465, 'F1': 0.902439, 'Learning time': 11.956, 'Inference time': 2.996}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;true;false
0;true,true;follows(D, A), tweets(D, E).;false;true
0;true,true,false;follows(F, C), follows(F, D).;false;false
0;false;follows(A, G), recursion_accounttype(G, B).;false;true
0;false,false;follows(A, H).;true;true
0;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(J, A), tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(C, D), recursion_accounttype(D, B).;true;false
1;true,true;follows(D, A), tweets(D, E).;false;true
1;true,true,false;follows(F, C), follows(F, D).;false;false
1;false;follows(A, G), recursion_accounttype(G, B).;false;true
1;false,false;follows(A, H).;true;true
1;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
1;false,false,false;follows(J, A), tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), recursion_accounttype(D, B).;true;false
2;true,true;follows(D, A), tweets(D, E).;false;true
2;true,true,false;follows(A, F), follows(F, C).;false;false
2;false;follows(A, G), recursion_accounttype(G, B).;false;true
2;false,false;follows(H, A).;true;true
2;false,false,true;follows(H, I), follows(I, A).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), recursion_accounttype(D, B).;true;false
3;true,true;follows(D, A), follows(A, E).;false;true
3;true,true,false;follows(A, C), tweets(C, F).;false;false
3;false;follows(A, G), recursion_accounttype(G, B).;false;true
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;follows(A, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(C, D), recursion_accounttype(D, B).;false;false
4;false;follows(A, E), recursion_accounttype(E, B).;true;true
4;false,true;follows(A, F), follows(E, F).;true;false
4;false,true,true;follows(G, A), follows(G, E).;false;false
4;false,false;follows(A, H).;true;true
4;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(J, A).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), recursion_accounttype(D, B).;true;false
5;true,true;tweets(A, E), tweets(C, F).;true;false
5;true,true,true;tweets(D, E), follows(D, C).;false;false
5;false;follows(A, G), recursion_accounttype(G, B).;false;true
5;false,false;follows(H, A).;true;true
5;false,false,true;follows(H, I), follows(I, A).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;recursion_accounttype(C, B), tweets(C, D).;false;true
6;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
6;true,false,true;follows(E, A).;false;false
6;false;follows(F, A).;true;true
6;false,true;recursion_accounttype(F, B).;true;false
6;false,true,true;follows(F, G), follows(G, A).;false;false
6;false,false;tweets(A, H).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), recursion_accounttype(D, B).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), follows(F, A).;false;true
7;false,true,false;follows(G, E), recursion_accounttype(G, B).;false;false
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(A, I), follows(H, I).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;true
8;true;tweets(C, D), recursion_accounttype(C, B).;false;true
8;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
8;true,false,true;follows(E, A).;false;false
8;false;follows(F, A).;true;true
8;false,true;follows(F, G), follows(G, A).;true;false
8;false,true,true;recursion_accounttype(F, B), tweets(A, H).;false;false
8;false,false;tweets(A, I).;false;false
9;;accounttype(A, B) :- follows(A, C).;true;true
9;true;follows(C, D), follows(A, D).;false;true
9;true,false;follows(E, C), recursion_accounttype(E, B).;true;false
9;true,false,true;follows(C, F), follows(E, F).;false;false
9;false;follows(G, A).;true;true
9;false,true;follows(G, H), follows(H, A).;true;false
9;false,true,true;recursion_accounttype(G, B), tweets(A, I).;false;false
9;false,false;tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.7914822684328456;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6676727446233218;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.675576320991625;  // std dev = 5.997, 241.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=197 */
%   | | | else return -0.1418510649004884;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.2929315437951645;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.35814893509951234;  // std dev = 3.000, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.6660633000779167;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(C, F), interaction(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.7194734122109542;  // std dev = 5.16e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5657919395956513;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5722357271364499;  // std dev = 5.997, 241.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=197 */
%   | | | else return -0.12544463852839166;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.2534089544781908;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.3087411357856347;  // std dev = 3.000, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(D, E) )
%   | | then return 0.5181199435476403;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.4474871431303646;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.15642436950200803;  // std dev = 4.865, 131.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=52 */
%   | | | else return 0.20357970697612454;  // std dev = 4.470, 114.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=50 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.22186329899591653;  // std dev = 6.453, 256.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=123 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), interaction(E, A) )
%   | | then return 0.4414599696696217;  // std dev = 0.086, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(C, A), complex(C, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3689538602371563;  // std dev = 0.939, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.33925075229931;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3929299006103556;  // std dev = 2.674, 46.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=36 */
%   | | | else return 0.09017407818395815;  // std dev = 5.654, 199.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=66 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.18117105491756266;  // std dev = 6.294, 256.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=123 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3116414520959851;  // std dev = 0.960, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.19517072842989514;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.44517072842989514;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1724434557026224;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3544781600476134;  // std dev = 5.980, 241.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=197 */
%   | | | else return -0.15147108077581192;  // std dev = 0.127, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.18406225207055238;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(C, F) )
%   | | then if ( complex(D, E), interaction(C, D) )
%   | | | then return 0.2802823506708789;  // std dev = 0.039, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.19440471382170357;  // std dev = 0.933, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.26037312315313965;  // std dev = 0.036, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.193408790049076;  // std dev = 1.764, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.052958548427545854;  // std dev = 4.446, 131.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=52 */
%   | | | else return 0.11161963396714744;  // std dev = 4.044, 114.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=50 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10279422405559166;  // std dev = 5.638, 256.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=123 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.18363794428478322;  // std dev = 1.541, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.18355316808382396;  // std dev = 0.396, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.24467571300856156;  // std dev = 5.973, 252.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=208 */
%   | | else return -0.1466354401560632;  // std dev = 0.519, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.2489735384391763;  // std dev = 0.696, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.2300571012507503;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12644220437081855;  // std dev = 3.841, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17226690081378043;  // std dev = 0.881, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.09316982674541384;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.01383241943394855;  // std dev = 4.384, 132.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=52 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20669435388256946;  // std dev = 0.732, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.06813067474380212;  // std dev = 3.779, 111.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=48 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.25681973190742174;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.020162461890178694;  // std dev = 1.406, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.0442424031476121;  // std dev = 2.942, 81.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=37 */
%   | | | else return 0.06237189316174684;  // std dev = 4.353, 175.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.12645314573200558;  // std dev = 1.521, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.13458235007776181;  // std dev = 0.332, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.17426932479366006;  // std dev = 5.962, 252.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=208 */
%   | | else return -0.13499358270621925;  // std dev = 0.505, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(F, B), complex(A, H) )
%   | | | then return -0.2342835965724731;  // std dev = 0.695, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.10358691732855113;  // std dev = 2.730, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.07742701827401673;  // std dev = 2.712, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.013050700311138945;  // std dev = 4.902, 212.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=106 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, C), interaction(F, E) )
%   | | | then return -0.0922446340600473;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2258916093116336;  // std dev = 3.320, 154.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=142 */
%   | | else return -0.12414990540737174;  // std dev = 0.468, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then if ( recursion_proteinclass(G, B), complex(A, I) )
%   | | | then return -0.1861693261987194;  // std dev = 0.694, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.07992310924246235;  // std dev = 2.731, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else return 0.058923310883284924;  // std dev = 2.712, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.969173
   AUC PR    = 0.959906
   CLL	      = -0.307302
   Precision = 0.948718 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.902439


Total learning time: 14.409 seconds
Total inference time: 2.531 seconds
AUC ROC: 0.969173


Results scoring model
   AUC ROC   = 0.9435
   AUC PR    = 0.933572
   CLL	      = -0.352273
   Precision = 0.836066 at threshold = 0.5
   Recall    = 0.90106
   F1        = 0.867347


Total scoring time: 5.161 seconds
Parameter learned model CLL: -0.352273


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), complex(A, K)'}, {'true,true,true': [0.966, 1, 14], 'true,true,false,true': [0.0, 0, 15], 'true,true,false,false': [0.0, 0, 12], 'true,false': [0.0, 2, 0], 'false,true': [1.799, 4, 17], 'false,false,true,true': [5.997, 44, 197], 'false,false,true,false': [0.0, 201, 0], 'false,false,false,true': [2.377, 13, 10], 'false,false,false,false': [3.0, 18, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(C, F), interaction(D, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), complex(A, K)'}, {'true,true,true': [0.966, 1, 14], 'true,true,false,true': [5.16e-08, 0, 15], 'true,true,false,false': [5.16e-08, 0, 12], 'true,false': [0.0, 2, 0], 'false,true': [1.799, 4, 17], 'false,false,true,true': [5.997, 44, 197], 'false,false,true,false': [0.0, 201, 0], 'false,false,false,true': [2.377, 13, 10], 'false,false,false,false': [3.0, 18, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), complex(D, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.966, 1, 14], 'true,true,false,true': [0.0, 0, 9], 'true,true,false,false': [0.0, 0, 18], 'true,false': [0.0, 2, 0], 'false,true': [1.799, 4, 17], 'false,false,true,true': [4.865, 79, 52], 'false,false,true,false': [4.47, 64, 50], 'false,false,false,true': [6.453, 133, 123], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, D), interaction(E, A)', 'true,true,false': 'interaction(C, A), complex(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.086, 0, 21], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.939, 1, 18], 'true,false': [0.0, 2, 0], 'false,true': [1.799, 4, 17], 'false,false,true,true': [2.674, 10, 36], 'false,false,true,false': [5.654, 133, 66], 'false,false,false,true': [6.294, 133, 123], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(A, G), interaction(E, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.96, 1, 41], 'true,false': [0.0, 2, 0], 'false,true,true,true': [0.866, 1, 3], 'false,true,true,false': [1.49e-08, 0, 6], 'false,true,false': [1.477, 3, 8], 'false,false,true,true': [5.98, 44, 197], 'false,false,true,false': [0.127, 201, 0], 'false,false,false,true': [3.84, 31, 28], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'complex(A, E), complex(C, F)', 'true,true,true': 'complex(D, E), interaction(C, D)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.039, 0, 13], 'true,true,true,false': [0.933, 1, 12], 'true,true,false': [0.036, 0, 16], 'true,false': [0.0, 2, 0], 'false,true': [1.764, 4, 17], 'false,false,true,true': [4.446, 79, 52], 'false,false,true,false': [4.044, 64, 50], 'false,false,false,true': [5.638, 133, 123], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'recursion_proteinclass(C, B), complex(C, D)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)'}, {'true,true': [1.541, 3, 27], 'true,false,true,true': [0.396, 2, 16], 'true,false,true,false': [5.973, 44, 208], 'true,false,false': [0.519, 202, 0], 'false,true,true,true': [0.696, 1, 1], 'false,true,true,false': [0.0, 0, 3], 'false,true,false': [3.841, 31, 28], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(I, H)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.881, 1, 41], 'true,false': [0.0, 2, 0], 'false,true,true': [4.384, 80, 52], 'false,true,false,true': [0.732, 1, 6], 'false,true,false,false': [3.779, 63, 48], 'false,false,true,true': [0.013, 0, 6], 'false,false,true,false': [1.406, 3, 7], 'false,false,false,true': [2.942, 44, 37], 'false,false,false,false': [4.353, 89, 86]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'complex(C, D), recursion_proteinclass(C, B)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), interaction(A, G)', 'false,true,true': 'recursion_proteinclass(F, B), complex(A, H)'}, {'true,true': [1.521, 3, 27], 'true,false,true,true': [0.332, 2, 16], 'true,false,true,false': [5.962, 44, 208], 'true,false,false': [0.505, 202, 0], 'false,true,true,true': [0.695, 1, 1], 'false,true,true,false': [2.73, 16, 16], 'false,true,false': [2.712, 15, 15], 'false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(C, E), recursion_proteinclass(E, B)', 'true,false,true': 'interaction(F, C), interaction(F, E)', 'false': 'interaction(A, G)', 'false,true': 'interaction(H, G), interaction(A, H)', 'false,true,true': 'recursion_proteinclass(G, B), complex(A, I)'}, {'true,true': [4.902, 106, 106], 'true,false,true,true': [1.084, 2, 3], 'true,false,true,false': [3.32, 12, 142], 'true,false,false': [0.468, 131, 0], 'false,true,true,true': [0.694, 1, 1], 'false,true,true,false': [2.731, 16, 16], 'false,true,false': [2.712, 15, 15], 'false,false': [0.0, 0, 0]}]]
[{'': [0.06353305785124083, 0.24867515156853578], 'false': [0.15419501133786812, 0.2474093728710277], 'false,false': [0.2470516574189753, 0.24935363401321603], 'false,false,false': [0.2457466918714556, 0.2499999999999995], 'false,false,true': [0.149239854685703, -2.386150978298844e-16], 'true': [0.023242630385488926, 0.0], 'true,true': [0.06222222222222188, -3.9474596431116675e-16], 'true,true,false': [-2.3684757858670006e-16, -1.4802973661668753e-16]}, {'': [0.051428926693029856, 0.20919598485868385], 'false': [0.15419501133786861, 0.2077089385543457], 'false,false': [0.20206571772651827, 0.24907018308193907], 'false,false,false': [0.24574669187145567, 0.25000000000000006], 'false,false,true': [0.14923985468569273, -5.3025577295529864e-17], 'true': [0.022877165097287506, 0.0], 'true,true': [0.0622222222222223, 3.9474596431116675e-16], 'true,true,false': [1.7763568394002506e-16, 2.220446049250313e-16]}, {'': [0.04009568222214354, 0.17264875657441262], 'false': [0.15419501133786886, 0.1709699688633824], 'false,false': [0.17869294873673067, 0.16265360045825528], 'false,false,true': [0.1806444383797226, 0.1752614883511193], 'false,false,false': [0.16265360045825528, nan], 'true': [0.02254073526559915, 0.0], 'true,true': [0.062222222222222415, -2.631639762074445e-16], 'true,true,false': [-1.4802973661668753e-16, -1.9737298215558337e-16]}, {'': [0.03262996849968786, 0.16507028286571573], 'false': [0.15419501133786856, 0.16429717013417913], 'false,false': [0.17366737765699114, 0.15475917922081706], 'false,false,true': [0.15547039559823228, 0.16066387828524406], 'false,false,false': [0.15475917922081706, nan], 'true': [0.02240201713104468, 0.0], 'true,true': [0.00035287961788098087, 0.042147214188301044], 'true,true,false': [0.0, 0.04635918716572283]}, {'': [0.028040716047463256, 0.15768329007821222], 'false': [0.1541950113378685, 0.1572181830915137], 'false,false': [0.1444222831274085, 0.24993830335370068], 'false,false,false': [0.24993830335370068, nan], 'false,true': [0.09000000000000004, 0.1983471074380166], 'false,false,true': [0.14839806686200857, 7.996637846879404e-05], 'false,true,true': [0.1875, 3.700743415417188e-17], 'true': [0.021944853914627332, 0.0]}, {'': [0.02582388411023595, 0.13698399813679885], 'false': [0.1481930409874864, 0.13609857785379925], 'false,false': [0.14831538809089023, 0.1241582533858789], 'false,false,true': [0.1509167755370565, 0.14348612706977237], 'false,false,false': [0.1241582533858789, nan], 'true': [0.022064472052742663, 0.0], 'true,true': [0.035391397814096164, 7.989832171574618e-05], 'true,true,true': [0.00011502803252406456, 0.06698028334026893]}, {'': [0.11194953126031024, 0.24292438213930262], 'false': [0.24292438213930262, nan], 'false,true': [0.15187059714985116, 0.25003584090929537], 'false,true,true': [0.24199428061758368, -9.25185853854297e-18], 'true': [0.07912490991973563, 0.11332893117098403], 'true,false': [0.1329456553402002, 0.0013309501399625038], 'true,false,true': [0.008725069751024586, 0.1415694899443171]}, {'': [0.020691923768283462, 0.12315679634652728], 'false': [0.1376187370297748, 0.10973623736546426], 'false,true': [0.14561223874081689, 0.12661315670382314], 'false,true,false': [0.07663807295544973, 0.12862576184797045], 'false,false': [0.13670585020383208, 0.10788990121495368], 'false,false,true': [2.9854549871061176e-05, 0.19770894880170337], 'false,false,false': [0.10683854627834409, 0.10827253245445576], 'true': [0.018474678183474418, 0.0]}, {'': [0.0982489518029108, 0.242315806244592], 'false': [0.242315806244592, nan], 'false,true': [0.2398100963865336, 0.24513462463649546], 'false,true,true': [0.24169444292817446, 0.2329772374239315], 'true': [0.07706427294965684, 0.09915291563683998], 'true,false': [0.13215336185297386, 0.0012641838601495058], 'true,false,true': [0.006138978210458529, 0.14104938552520394]}, {'': [0.09149771694170906, 0.24108277569398182], 'false': [0.24108277569398182, nan], 'false,true': [0.23743863473183832, 0.2451976117463058], 'false,true,true': [0.24084098422636305, 0.2330609770531941], 'true': [0.11334139067299398, 0.07313247166474325], 'true,false': [0.07978065721897319, 0.0016687289736483555], 'true,false,true': [0.23493349192555474, 0.07156050206955539]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,true;interaction(A, D), complex(D, E).;true;true
0;true,true,false;interaction(C, F), interaction(D, F).;true;true
0;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;true,true;interaction(A, D), complex(D, E).;true;true
1;true,true,false;interaction(C, F), interaction(D, F).;true;true
1;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;true,true;interaction(A, D), complex(D, E).;true;true
2;true,true,false;interaction(F, A), interaction(C, F).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
3;true,true;interaction(A, D), interaction(E, A).;true;true
3;true,true,false;interaction(C, A), complex(C, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
4;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;false,true;interaction(F, A), interaction(F, E).;true;true
4;false,true,true;interaction(A, G), interaction(E, G).;true;true
4;false,false;interaction(H, A).;true;true
4;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
5;true,true;complex(A, E), complex(C, F).;true;true
5;true,true,true;complex(D, E), interaction(C, D).;true;true
6;;proteinclass(A, B) :- interaction(C, A).;true;true
6;true;recursion_proteinclass(C, B), complex(C, D).;true;true
6;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
6;false;recursion_proteinclass(F, B).;true;true
6;false,true;interaction(G, F), interaction(A, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
7;false;interaction(A, E).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, A), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A).;true;true
8;true;complex(C, D), recursion_proteinclass(C, B).;true;true
8;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A).;true;true
9;true;interaction(D, C), interaction(D, A).;true;true
9;true,false;interaction(C, E), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.834339411289988;  // std dev = 0.152, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.675576320991625;  // std dev = 5.997, 241.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=197 */
%   | | | else return -0.1418510649004884;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.2929315437951645;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.35814893509951234;  // std dev = 3.000, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7004441928528997;  // std dev = 0.152, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then return 0.2641072739982947;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5887391682035253;  // std dev = 1.294, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5722357271364499;  // std dev = 5.997, 241.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=197 */
%   | | | else return -0.12544463852839166;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.2534089544781908;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.3087411357856347;  // std dev = 3.000, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.542108638524146;  // std dev = 0.152, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then return 0.0944609781542048;  // std dev = 1.022, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return 0.6117710057327396;  // std dev = 0.175, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.38414303170761127;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1439464479904658;  // std dev = 0.335, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.19593151258234112;  // std dev = 4.040, 87.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=42 */
%   | | else if ( location(A, J), complex(A, K) )
%   | | | then return 0.18558581233315258;  // std dev = 5.036, 152.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=64 */
%   | | | else return 0.23392171399000403;  // std dev = 6.454, 246.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=119 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3842698401903055;  // std dev = 0.183, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, E), interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1279860186200048;  // std dev = 0.309, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.12644577509771582;  // std dev = 2.368, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.4851102278565351;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15350228739598054;  // std dev = 4.511, 139.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=60 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(F, H), phenotype(A, I) )
%   | | | then return 0.15174135213241027;  // std dev = 3.554, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | | | else return 0.1978587410717312;  // std dev = 3.719, 94.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=47 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.16918750215949221;  // std dev = 1.979, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.20985685982569383;  // std dev = 5.101, 155.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2958014499399037;  // std dev = 0.177, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.17090368728895305;  // std dev = 0.522, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.49175363929678834;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.4716199009611136;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04881846725614507;  // std dev = 1.056, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.36068225276147464;  // std dev = 5.929, 241.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=197 */
%   | | | else return -0.15250347727916183;  // std dev = 0.261, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.18224715829954513;  // std dev = 2.347, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.14191592527908334;  // std dev = 3.021, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2338510769420757;  // std dev = 0.174, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E), complex(D, F) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return -0.12860160888172462;  // std dev = 1.094, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.020130532194272063;  // std dev = 2.655, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | else if ( interaction(A, D), enzyme(D, I) )
%   | | | then return -0.015534464513201174;  // std dev = 0.846, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.09371039648479051;  // std dev = 2.448, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.26295219439177897;  // std dev = 0.833, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.0836808654793763;  // std dev = 4.990, 206.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=91 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.14597089127251564;  // std dev = 3.369, 76.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   | | | else return 0.11739928352923978;  // std dev = 4.102, 121.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=58 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.2204954907387423;  // std dev = 0.164, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return -0.0011907731861088289;  // std dev = 0.629, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.14999923059896977;  // std dev = 3.622, 72.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=52 */
%   | | | else return 0.2830379172576461;  // std dev = 4.590, 198.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=172 */
%   | | else return -0.1465987393710764;  // std dev = 0.432, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else if ( recursion_proteinclass(H, B) )
%   | then if ( interaction(I, H), interaction(A, I) )
%   | | then return -0.15122379174550854;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2331132751261139;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10070758898574607;  // std dev = 3.727, 56.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17550823600750262;  // std dev = 0.143, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.27236592611606086;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.112568010040853;  // std dev = 0.117, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.03896653277360719;  // std dev = 3.894, 137.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=60 */
%   | | | else return 0.07726057456300817;  // std dev = 4.171, 97.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=46 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.2970561379064705;  // std dev = 0.184, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.049055522592825265;  // std dev = 1.083, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.03959537844658197;  // std dev = 4.552, 170.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=82 */
%   | | | else return 0.0849587428989057;  // std dev = 2.478, 86.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.1331870150365561;  // std dev = 0.197, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | else return 0.04391268335474081;  // std dev = 0.312, 472.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=224 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then return -0.10415867191693153;  // std dev = 1.119, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08630067192468864;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.010471251055659422;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5887070318903859;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3990879349770259;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.07159705165643467;  // std dev = 1.872, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.044710420949263745;  // std dev = 2.172, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.01741035612182748;  // std dev = 0.336, 212.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=106 */
%   | else return 0.05777553270195027;  // std dev = 0.280, 290.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=145 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then return -0.08366746059573689;  // std dev = 1.118, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.06526479933454891;  // std dev = 1.583, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.008095032344981129;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.44292176952994733;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3082754959929501;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.05400494978346999;  // std dev = 1.872, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.03394521619393;  // std dev = 2.173, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */


Results
   AUC ROC   = 0.969646
   AUC PR    = 0.956779
   CLL	      = -0.333852
   Precision = 0.962025 at threshold = 0.5
   Recall    = 0.883721
   F1        = 0.921212


Total learning time: 34.548 seconds
Total inference time: 2.692 seconds
AUC ROC: 0.969646


Results scoring model
   AUC ROC   = 0.948907
   AUC PR    = 0.939319
   CLL	      = -0.369943
   Precision = 0.855263 at threshold = 0.5
   Recall    = 0.918728
   F1        = 0.88586


Total scoring time: 4.73 seconds
Refined model CLL: -0.369943


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969173
   AUC PR    = 0.959906
   CLL	      = -0.307302
   Precision = 0.948718 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.902439


Total learning time: 58.848 seconds
Total inference time: 2.531 seconds
AUC ROC: 0.969173
Total revision time: 58.848
Best scored revision CLL: -0.352273


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 18:45:10
{'AUC ROC': 0.969173, 'AUC PR': 0.959906, 'CLL': -0.307302, 'Precision': [0.948718, 0.5], 'Recall': 0.860465, 'F1': 0.902439, 'Learning time': 58.848, 'Inference time': 2.531, 'parameter_1.0': {'AUC ROC': 0.969173, 'AUC PR': 0.959906, 'CLL': -0.307302, 'Precision': [0.948718, 0.5], 'Recall': 0.860465, 'F1': 0.902439, 'Learning time': 14.409, 'Inference time': 2.531}}


