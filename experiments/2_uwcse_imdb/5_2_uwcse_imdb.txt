Starting experiment #5 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( ta(H, E, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( publication(I, K), professor(K) )
%   | | | then return 0.043334120284697505;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(L, B), ta(M, A, N) )
%   | | | then return 0.6460277229782995;  // std dev = 2.348, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.45464016316968736;  // std dev = 3.704, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   else if ( professor(B) )
%   | then return -0.08921948595311938;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, B) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.7249655525985428;  // std dev = 0.078, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.6425503352878773;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.32187832944988803;  // std dev = 1.879, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.1769192119306451;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.5524266285283534;  // std dev = 3.472, 70.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=54 */
%   | | | else return 0.30089963573324563;  // std dev = 2.238, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return -0.1262859028481232;  // std dev = 0.030, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.5799969024395492;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3245593956270013;  // std dev = 1.260, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.563458182049202;  // std dev = 0.074, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(I, A) )
%   | | then if ( projectmember(J, B) )
%   | | | then return 0.5069561091674644;  // std dev = 0.792, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08616205402208701;  // std dev = 2.860, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.39895713871220734;  // std dev = 3.543, 64.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=47 */
%   | | | else return 0.6386730097239572;  // std dev = 0.957, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.11279295055175113;  // std dev = 0.023, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), publication(C, G) )
%   | | | then return 0.5170068133323502;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4466027916752263;  // std dev = 0.124, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.4142137857318034;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3084068472609922;  // std dev = 1.332, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( tempadvisedby(K, B), publication(L, A) )
%   | | then if ( publication(M, B), ta(N, K, P) )
%   | | | then return -0.21083407854048813;  // std dev = 0.191, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1184693872667103;  // std dev = 1.966, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( tempadvisedby(Q, B) )
%   | | | then return 0.23268862474597743;  // std dev = 3.299, 49.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   | | | else return 0.3608303746161546;  // std dev = 2.837, 43.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=32 */
%   else return -0.1021419415000742;  // std dev = 0.023, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(G, A, F) )
%   | | | then return 0.11361359511073962;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3174712247579407;  // std dev = 0.040, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.38592854129122206;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3492903477588379;  // std dev = 0.058, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then if ( publication(K, B) )
%   | | | then return 0.17740509391672699;  // std dev = 0.965, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.23214673383858386;  // std dev = 0.839, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( tempadvisedby(L, B), ta(M, A, N) )
%   | | | then return 0.36688058873786256;  // std dev = 1.826, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.21802202146723432;  // std dev = 3.840, 75.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=49 */
%   else return -0.09300998210508381;  // std dev = 0.017, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, E, G), publication(H, E) )
%   | | | then return 0.1949922657553972;  // std dev = 2.091, 37.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | | else return 0.28410613974430216;  // std dev = 2.636, 78.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=67 */
%   | | else return 0.04486908818346182;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( ta(I, A, J) )
%   | | then if ( ta(I, K, L), tempadvisedby(K, M) )
%   | | | then return -0.49993405830859877;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06442672460017994;  // std dev = 1.130, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tempadvisedby(N, B) )
%   | | | then return 0.36194710941700187;  // std dev = 0.945, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07300844679792941;  // std dev = 1.573, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.085479797959528;  // std dev = 0.017, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, B), ta(H, F, I) )
%   | | | then return 0.36467974380545715;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0025515107840824907;  // std dev = 1.611, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( sameperson(B, D), publication(J, A) )
%   | | | then return 0.466993794586773;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15287291473236678;  // std dev = 3.839, 110.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=84 */
%   | else if ( ta(K, A, L), publication(M, B) )
%   | | then return 0.410775368634483;  // std dev = 0.243, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(N, A), publication(N, B) )
%   | | | then return 0.2226064561348745;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3075741788336428;  // std dev = 1.551, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   else if ( professor(A), professor(B) )
%   | then return -0.08249426453828822;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.07806085922453126;  // std dev = 0.060, 165.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), sameperson(A, D) )
%   | | | then return 0.14062604202367232;  // std dev = 0.944, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.041926489686168425;  // std dev = 1.195, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.1935046634396914;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2120459199734894;  // std dev = 0.056, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( ta(K, A, L), publication(M, B) )
%   | | then if ( tempadvisedby(N, B) )
%   | | | then return 0.09263933298598158;  // std dev = 2.088, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0.22811318243010528;  // std dev = 1.233, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else if ( publication(P, A), publication(Q, B) )
%   | | | then return -0.12084737571068105;  // std dev = 1.492, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.04494150283513408;  // std dev = 3.481, 57.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=35 */
%   else return -0.07342628910209872;  // std dev = 0.012, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, E, G), tempadvisedby(H, B) )
%   | | | then return 0.18788157371797393;  // std dev = 1.781, 63.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=54 */
%   | | | else return 0.025108970746357796;  // std dev = 3.125, 63.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   | | else return -0.22297125001217935;  // std dev = 1.038, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( ta(I, A, J), tempadvisedby(K, B) )
%   | | then return 0.43406728236356007;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(L, A), tempadvisedby(M, B) )
%   | | | then return 0.05887340969970456;  // std dev = 0.672, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2911303815349321;  // std dev = 1.252, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06863027471450246;  // std dev = 0.013, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A), publication(C, A) )
%   | then return 0.14622828762687712;  // std dev = 0.146, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( student(A), ta(F, E, G) )
%   | | | then return -0.2463701290175369;  // std dev = 0.383, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.040518489114579725;  // std dev = 1.147, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.2217982954226909;  // std dev = 0.994, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.041884058425730564;  // std dev = 3.078, 55.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=35 */
%   else if ( tempadvisedby(K, B), student(A) )
%   | then if ( publication(L, A), projectmember(M, B) )
%   | | then return 0.3044989634736282;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(N, B), ta(P, K, Q) )
%   | | | then return -0.04342213331590857;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.32986329672451425;  // std dev = 1.621, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return -0.059799712517262356;  // std dev = 0.114, 174.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=5 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.731833558552064;  // std dev = 0.249, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.13741086138038658;  // std dev = 0.084, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8.02e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5686635476152896;  // std dev = 0.041, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then return -0.13503732594919543;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11598595314479426;  // std dev = 0.155, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4284555397949758;  // std dev = 0.345, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11471369258623225;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10400443124031333;  // std dev = 0.121, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3288421265451833;  // std dev = 0.040, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10363068976206798;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0934727803927622;  // std dev = 0.088, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21047079452826184;  // std dev = 1.114, 76.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08548771034743578;  // std dev = 0.067, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.167171986949864;  // std dev = 0.856, 65.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.12279261298773943;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.051614244177645735;  // std dev = 1.117, 121.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20166892429810426;  // std dev = 0.046, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12214548897296401;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07618857922859386;  // std dev = 0.078, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1315574224954658;  // std dev = 0.104, 76.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07137761960321332;  // std dev = 0.079, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1537966272668805;  // std dev = 0.305, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.13037104260769658;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09651113543589411;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06504451593146171;  // std dev = 4.53e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06504451593146186;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065768
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.876 seconds
Total inference time: 1.747 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071398
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.503 seconds
Parameter learned model CLL: -0.071398


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.121, 9, 9], 'false,false': [0.0, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.249, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.084, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.02e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.041, 0, 65], 'true,false,true': [0.029, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.155, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.345, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.078, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.121, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.04, 0, 65], 'true,false,true,true': [0.072, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.088, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.114, 11, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.067, 114, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [0.856, 9, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [1.117, 112, 9]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.046, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.014, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.078, 113, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.104, 11, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.079, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.305, 0, 65], 'true,false,true,true': [0.045, 8, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [4.53e-08, 95, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [2.63e-09, 13, 0]}]]
[{'': [0.14532871972318304, 0.06015306122448968], 'true': [-1.2688263138573217e-16, -1.1564823173178714e-17], 'false': [0.25, 0.0], 'true,false': [-1.1564823173178714e-17, nan], 'true,false,true': [-1.1564823173178714e-17, nan]}, {'': [0.09443879550994354, 5.648503107742025e-17], 'true': [0.0009505889093471882, 0.0006443572020462554], 'true,true': [0.0009505889093471882, nan], 'true,false': [0.0006443572020462554, nan], 'true,false,true': [0.0006443572020462554, nan]}, {'': [0.0587786392816353, 0.0002077577535454533], 'true': [0.0016636064212219774, 0.0008574226796286444], 'true,false': [0.0008574226796286444, nan]}, {'': [0.03576417918026403, 0.00014441446114204343], 'true': [0.0018339774478862891, 0.0006153841025407613], 'true,true': [0.0018339774478862891, nan], 'true,true,true': [0.0018339774478862891, nan], 'true,false': [0.0006153841025407613, nan], 'true,false,true': [0.0006153841025407613, nan]}, {'': [0.02307085591449642, 6.448201022045116e-05], 'true': [0.0016030141609734234, 0.0005167887136343308], 'true,false': [0.0005167887136343308, nan], 'true,false,true': [0.0005167887136343308, nan]}, {'': [0.016327766619324207, 3.913486942750477e-05], 'true': [0.016327766619324207, nan], 'true,true': [0.016327766619324207, nan], 'true,true,true': [0.016327766619324207, nan]}, {'': [0.01128181217454442, 0.010184985189404085], 'true': [0.01128181217454442, nan], 'true,true': [0.01128181217454442, nan], 'true,true,true': [0.01128181217454442, nan], 'false': [-2.3129646346357427e-18, 0.010314932253038516]}, {'': [0.014787648006723364, 5.344974708143055e-05], 'true': [0.0020803224485020904, 0.00019710933988307204], 'true,true': [0.0020803224485020904, nan], 'true,false': [0.00019710933988307204, nan]}, {'': [0.010867581332882938, 5.851291672938198e-05], 'true': [0.010867581332882938, nan], 'true,true': [0.010867581332882938, nan]}, {'': [0.010185481049963656, 2.6727591333568582e-17], 'true': [0.0014334680497051307, 0.0003849799817852384], 'true,false': [0.0003849799817852356, nan], 'true,false,true': [0.00025192631449492617, 0.0], 'false': [2.162013258480568e-17, 5.337610695313253e-19], 'false,true': [2.162013258480568e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B) )
%   | then if ( director(A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7242466241749395;  // std dev = 0.100, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.15475829286517873;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.560213236371772;  // std dev = 0.127, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.22452886267135394;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.13714065141807072;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1123163781936062;  // std dev = 8.69e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42125859603241267;  // std dev = 0.128, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.1034544590324488;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1345180887596297;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783641;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3233442426787845;  // std dev = 0.117, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.08433219753408674;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.09269127618926094;  // std dev = 5.27e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2570237601583132;  // std dev = 0.103, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.1094882259144945;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09422407326890313;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0851847513883968;  // std dev = 6.05e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20681441229467784;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07136447002529314;  // std dev = 0.007, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.2377606043989481;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1437024887760899;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.178044669802036;  // std dev = 0.067, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.0745738319726867;  // std dev = 0.060, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07757912444905969;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333718;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15347312414797487;  // std dev = 0.060, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.06962889326683606;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08125402029181515;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420265;  // std dev = 5.27e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13458328825036064;  // std dev = 0.054, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06388967001355393;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.058578568848756576;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return -0.06419184008202619;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063164
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.91 seconds
Total inference time: 1.496 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065084
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.369 seconds
Refined model CLL: -0.065084


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063164
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.6579999999999995 seconds
Total inference time: 1.496 seconds
AUC ROC: 1.0
Total revision time: 6.6579999999999995
Best scored revision CLL: -0.065084


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:27:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063164, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.6579999999999995, 'Inference time': 1.496, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065768, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.876, 'Inference time': 1.747}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995111;  // std dev = 5.05e-08, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.42225149920207555;  // std dev = 3.097, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.732868999651779;  // std dev = 0.338, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1618892170686248;  // std dev = 0.190, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.13046455292787293;  // std dev = 0.293, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5696222578454379;  // std dev = 0.039, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then return -0.12107093118873151;  // std dev = 0.026, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11667108715382911;  // std dev = 0.276, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42908166639276624;  // std dev = 0.462, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11566349888970391;  // std dev = 0.138, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1020299145531604;  // std dev = 0.141, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32918987389366217;  // std dev = 0.038, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10469278120354064;  // std dev = 0.135, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09338541731145801;  // std dev = 0.143, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21023797901501975;  // std dev = 1.582, 152.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08760682349127438;  // std dev = 0.200, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.17870430633409315;  // std dev = 1.005, 120.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=108 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.12921625163332642;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.048246819321330674;  // std dev = 1.678, 252.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20143351271524493;  // std dev = 0.045, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.1268390033504904;  // std dev = 0.018, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0750031592291976;  // std dev = 0.070, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12895270429625458;  // std dev = 0.107, 153.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.071237721069959;  // std dev = 0.125, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15394946856775701;  // std dev = 0.422, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.11981768242007697;  // std dev = 0.071, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.10125443852424823;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06497950356567918;  // std dev = 9.37e-08, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06497950356567948;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065705
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.766 seconds
Total inference time: 1.561 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071315
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.128 seconds
Parameter learned model CLL: -0.071315


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [5.05e-08, 0, 108], 'true,false,true,true': [0.0, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.097, 17, 22], 'false,false': [0.0, 261, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.338, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.19, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.293, 242, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.039, 0, 130], 'true,false,true': [0.026, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.276, 243, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.462, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.138, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.141, 248, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.038, 0, 130], 'true,false,true,true': [0.135, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.143, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.582, 22, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.2, 238, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.005, 12, 108], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.45e-09, 9, 0], 'false,false': [1.678, 230, 22]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.045, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.018, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.07, 222, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.107, 23, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.125, 236, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.422, 0, 130], 'true,false,true,true': [0.071, 25, 0], 'true,false,true,false': [7.45e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [9.37e-08, 204, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 32, 0]}]]
[{'': [0.11238293444329135, 0.06795555555555659], 'true': [2.500057773970723e-15, -6.938893903907228e-18], 'false': [0.2458908612754778, -8.847754372491668e-17], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.10927161799260317, 0.0003559435106658723], 'true': [0.0008808959268866199, 0.0014388912470565218], 'true,false': [0.0014388912470565218, nan], 'true,false,true': [0.0014388912470565218, nan], 'true,true': [0.0008808959268866199, nan]}, {'': [0.06044865365360812, 0.0003132563740713601], 'true': [0.0015147808489172777, 0.0006849197657671073], 'true,false': [0.0006849197657671073, nan]}, {'': [0.040547685912080286, 8.038187741698349e-05], 'true': [0.0016398870970272073, 0.0007972994320073224], 'true,true': [0.0016398870970272073, nan], 'true,true,true': [0.0016398870970272073, nan], 'true,false': [0.0007972994320073224, nan], 'true,false,true': [0.0007972994320073224, nan]}, {'': [0.028092880268782074, 8.730133206573031e-05], 'true': [0.0014123050667580836, 0.0006756695845808139], 'true,false': [0.0006756695845808139, nan], 'true,false,true': [0.0006756695845808139, nan]}, {'': [0.01646057296639897, 0.00016764500043186335], 'true': [0.01646057296639897, nan], 'true,true': [0.01646057296639897, nan], 'true,true,true': [0.01646057296639897, nan]}, {'': [0.00842489446180768, 0.011003590140380458], 'false': [6.1679056923619804e-18, 0.011170504848435995], 'true': [0.00842489446180768, nan], 'true,true': [0.00842489446180768, nan], 'true,true,true': [0.00842489446180768, nan]}, {'': [0.0155131427186431, 2.2310674239442914e-05], 'true': [0.001998441015833034, 0.0003373856582705484], 'true,true': [0.001998441015833034, nan], 'true,false': [0.0003373856582705484, nan]}, {'': [0.01153295468385992, 6.579815692008724e-05], 'true': [0.01153295468385992, nan], 'true,true': [0.01153295468385992, nan]}, {'': [0.012841236951968813, 4.8454648956097934e-17], 'true': [0.0013674439054794057, 0.0002151922027939588], 'true,false': [0.00021519220279394704, nan], 'true,false,true': [0.0002005157624914089, 6.938893903907228e-18], 'false': [4.2993930855582044e-17, -2.6020852139652106e-18], 'false,true': [4.2993930855582044e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995111;  // std dev = 5.20e-07, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.14185106490048835;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7207939461720098;  // std dev = 0.063, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.12544463852839183;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5566891391203134;  // std dev = 0.079, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11437675809611457;  // std dev = 0.239, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41852208815577585;  // std dev = 0.079, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.10295177529238257;  // std dev = 0.192, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32141296090009547;  // std dev = 0.072, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.0933531633063506;  // std dev = 0.146, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25566101458908647;  // std dev = 0.063, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.08647937568621178;  // std dev = 0.193, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20895629827021037;  // std dev = 1.58e-07, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( director(A), director(B) )
%   | then return -0.106410091974233;  // std dev = 0.152, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(B) )
%   | | then return -0.07838776018598866;  // std dev = 8.82e-08, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.21576947148265652;  // std dev = 0.047, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1773550804003765;  // std dev = 0.046, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.0735435144213161;  // std dev = 0.116, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1529424539373229;  // std dev = 0.041, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.06868570565743773;  // std dev = 0.109, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1341637585793496;  // std dev = 0.037, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202619;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.08365403047357613;  // std dev = 0.090, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then return -0.06385988609052429;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return -0.06385988609052416;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.197 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064667
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.921 seconds
Refined model CLL: -0.064667


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.012 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0
Total revision time: 9.012
Best scored revision CLL: -0.064667


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:27:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063174, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.012, 'Inference time': 1.328, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065705, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.766, 'Inference time': 1.561}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995097;  // std dev = 7.96e-08, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else return -0.1418510649004876;  // std dev = 2.06e-07, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7345802577389796;  // std dev = 0.467, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14937708423238166;  // std dev = 0.182, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12679566368910128;  // std dev = 0.172, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5716301104267439;  // std dev = 0.044, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then return -0.1288647250927795;  // std dev = 0.028, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11374836471753506;  // std dev = 0.178, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4308814699744265;  // std dev = 0.649, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10939363444265104;  // std dev = 0.127, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10541416257389939;  // std dev = 0.272, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3306205640828658;  // std dev = 0.043, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10193397627084488;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09337519445130589;  // std dev = 0.143, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.22081935693948937;  // std dev = 1.782, 221.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08690750088800449;  // std dev = 0.186, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.174374308065924;  // std dev = 1.259, 181.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=162 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.1225939777568155;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.04871998620572692;  // std dev = 2.105, 399.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20150179657497258;  // std dev = 0.049, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12311586217240797;  // std dev = 0.013, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07597404144467286;  // std dev = 0.125, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12797742736237736;  // std dev = 0.110, 230.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07041590326378469;  // std dev = 0.093, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15422649947044656;  // std dev = 0.570, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12615195272530422;  // std dev = 0.086, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.09647011861385056;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06517996599060882;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0651799659906085;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065903
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.852 seconds
Total inference time: 1.602 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071522
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.424 seconds
Parameter learned model CLL: -0.071522


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [7.96e-08, 0, 162], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.062, 33, 33], 'false,false': [2.06e-07, 340, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.467, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.182, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.172, 341, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.044, 0, 195], 'true,false,true': [0.028, 47, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.178, 346, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.649, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.127, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.272, 354, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.043, 0, 195], 'true,false,true,true': [0.12, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.143, 331, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.782, 26, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.186, 333, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.259, 19, 162], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.45e-09, 14, 0], 'false,false': [2.105, 366, 33]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.049, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.013, 41, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.125, 357, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.11, 35, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.093, 327, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.57, 0, 195], 'true,false,true,true': [0.086, 34, 0], 'true,false,true,false': [0.0, 20, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 266, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 48, 0]}]]
[{'': [0.09395317603248378, 0.07467422165061131], 'true': [6.315935428978668e-15, 0.0], 'false': [0.2500000000000016, 1.2538989454590003e-16], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09782886627530941, 8.709140584935384e-05], 'true': [0.0011203369288697565, 0.0010023334254053036], 'true,true': [0.0011203369288697565, nan], 'true,false': [0.0010023334254053036, nan], 'true,false,true': [0.0010023334254053036, nan]}, {'': [0.07852123784867096, 9.189925882601166e-05], 'true': [0.001963072369725675, 0.0007630481386696516], 'true,false': [0.0007630481386696516, nan]}, {'': [0.03805113692619472, 0.00020913379994634809], 'true': [0.002160119522780818, 0.0004855104059210632], 'true,true': [0.002160119522780818, nan], 'true,true,true': [0.002160119522780818, nan], 'true,false': [0.0004855104059210632, nan], 'true,false,true': [0.0004855104059210632, nan]}, {'': [0.02331539900632431, 6.183614134398846e-05], 'true': [0.001881276306851203, 0.0004808902230371152], 'true,false': [0.0004808902230371152, nan], 'true,false,true': [0.0004808902230371152, nan]}, {'': [0.014368538256460605, 0.00010378315723373381], 'true': [0.014368538256460605, nan], 'true,true': [0.014368538256460605, nan], 'true,true,true': [0.014368538256460605, nan]}, {'': [0.00875238375974156, 0.01091170338393994], 'false': [3.96508223080413e-18, 0.011109574690436596], 'true': [0.00875238375974156, nan], 'true,true': [0.00875238375974156, nan], 'true,true,true': [0.00875238375974156, nan]}, {'': [0.017156427880735466, 4.376667059213926e-05], 'true': [0.002418432861910807, 0.0001821016016042294], 'true,true': [0.002418432861910807, nan], 'true,false': [0.0001821016016042294, nan]}, {'': [0.01219335535792222, 2.627549281639167e-05], 'true': [0.01219335535792222, nan], 'true,true': [0.01219335535792222, nan]}, {'': [0.013702889803571174, -2.5457343239812507e-17], 'true': [0.0016649704210988075, 0.0003424988326398786], 'true,false': [0.0003424988326399053, nan], 'true,false,true': [0.00021766826151873244, -5.551115123125783e-18], 'false': [-2.337311630789803e-17, -5.782411586589357e-19], 'false,true': [-2.337311630789803e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995097;  // std dev = 1.01e-06, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.1418510649004876;  // std dev = 2.04e-07, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7210547833867884;  // std dev = 0.107, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.12611631591657516;  // std dev = 0.164, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5569737687716677;  // std dev = 0.135, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11444036667348875;  // std dev = 0.281, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41875963536524224;  // std dev = 0.136, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.10159632948783634;  // std dev = 1.05e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.10275570179667046;  // std dev = 0.220, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3215915355074304;  // std dev = 0.125, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.09286908163510892;  // std dev = 0.130, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25579361655684013;  // std dev = 0.110, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.08603140915580226;  // std dev = 0.191, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2087754931949451;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( director(A), director(B) )
%   | then return -0.12891681381632145;  // std dev = 0.156, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( actor(B) )
%   | | then return -0.07841614456538332;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.21724998890600272;  // std dev = 0.086, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1774312568492411;  // std dev = 0.083, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.07472965568020519;  // std dev = 0.207, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15300297615338948;  // std dev = 0.074, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06858892282931695;  // std dev = 0.114, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1342129140944636;  // std dev = 0.066, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08694104606161807;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06381656353859465;  // std dev = 1.29e-07, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   | else return -0.06381656353859498;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06312
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.503 seconds
Total inference time: 1.322 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0646
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.982 seconds
Refined model CLL: -0.0646


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06312
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.761 seconds
Total inference time: 1.322 seconds
AUC ROC: 1.0
Total revision time: 9.761
Best scored revision CLL: -0.0646


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:28:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06312, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.761, 'Inference time': 1.322, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065903, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.852, 'Inference time': 1.602}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995091;  // std dev = 7.38e-08, 213.000 (wgt'ed) examples reached here.  /* #pos=213 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.4110901115701012;  // std dev = 4.584, 85.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=47 */
%   | else return -0.14185106490048718;  // std dev = 2.89e-07, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7341057312844316;  // std dev = 0.502, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.15080736670863357;  // std dev = 0.217, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12826592753071553;  // std dev = 0.308, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5709736906632285;  // std dev = 0.041, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then return -0.12287494482720156;  // std dev = 0.026, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11406054465420173;  // std dev = 0.250, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4302015722954564;  // std dev = 0.687, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11580711860725823;  // std dev = 0.193, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1034695400974578;  // std dev = 0.253, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3300211759823403;  // std dev = 0.040, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1112029839900416;  // std dev = 0.178, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0943155246758479;  // std dev = 0.241, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21379111483653634;  // std dev = 2.207, 300.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08607391070512262;  // std dev = 0.198, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.16176411450143635;  // std dev = 1.733, 251.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=213 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.12840949903354199;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.04540768598490166;  // std dev = 2.435, 506.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=47 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20389661405496137;  // std dev = 0.045, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12415719428378727;  // std dev = 0.018, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0764862593330205;  // std dev = 0.170, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13222798890991563;  // std dev = 0.106, 304.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07105909351651078;  // std dev = 0.147, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15521017753979943;  // std dev = 0.604, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12635489271659636;  // std dev = 0.112, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.1005570690972289;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.0653148964484282;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06531489644842833;  // std dev = 3.25e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06597
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.259 seconds
Total inference time: 1.814 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071564
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.917 seconds
Parameter learned model CLL: -0.071564


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [7.38e-08, 0, 213], 'true,false,true,true': [3.16e-08, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.584, 38, 47], 'false,false': [2.89e-07, 453, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.502, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.217, 38, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.308, 473, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.041, 0, 260], 'true,false,true': [0.026, 46, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.25, 469, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.687, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.193, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.253, 464, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.04, 0, 260], 'true,false,true,true': [0.178, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.241, 481, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [2.207, 40, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.198, 497, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.733, 38, 213], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 17, 0], 'false,false': [2.435, 459, 47]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.045, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.018, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.17, 483, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.106, 44, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.147, 471, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.604, 0, 260], 'true,false,true,true': [0.112, 36, 0], 'true,false,true,false': [1.49e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 399, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [3.25e-08, 69, 0]}]]
[{'': [0.11615110053540076, 0.0797287212725097], 'true': [5.470845477213917e-15, 3.027880976250427e-17], 'false': [0.2471972318339102, 1.8430192373468383e-16], 'true,false': [3.027880976250427e-17, nan], 'true,false,true': [3.027880976250427e-17, nan]}, {'': [0.08812588353576734, 0.0002012028107641296], 'true': [0.0009703045572886884, 0.0012370538091247376], 'true,false': [0.0012370538091247376, nan], 'true,false,true': [0.0012370538091247376, nan], 'true,true': [0.0009703045572886884, nan]}, {'': [0.06302029148830926, 0.00013328945650951636], 'true': [0.0016747100583497324, 0.0007014756360261977], 'true,false': [0.0007014756360261977, nan]}, {'': [0.041428266603446146, 0.00013778820913458206], 'true': [0.0018169876799759958, 0.0007606356157649406], 'true,true': [0.0018169876799759958, nan], 'true,true,true': [0.0018169876799759958, nan], 'true,false': [0.0007606356157649406, nan], 'true,false,true': [0.0007606356157649406, nan]}, {'': [0.02476219793105652, 0.00012049006664978018], 'true': [0.0015659237998989375, 0.0007539507495153868], 'true,false': [0.0007539507495153868, nan], 'true,false,true': [0.0007539507495153868, nan]}, {'': [0.016235063587287376, 7.922611162608272e-05], 'true': [0.016235063587287376, nan], 'true,true': [0.016235063587287376, nan], 'true,true,true': [0.016235063587287376, nan]}, {'': [0.011964007655272621, 0.011551285783343322], 'true': [0.011964007655272621, nan], 'true,true': [0.011964007655272621, nan], 'true,true,true': [0.011964007655272621, nan], 'false': [-1.6326809185664067e-17, 0.011715437246705629]}, {'': [0.01426516564251485, 5.98286851651128e-05], 'true': [0.002060496664569439, 0.0003254529890114849], 'true,true': [0.002060496664569439, nan], 'true,false': [0.0003254529890114849, nan]}, {'': [0.011331634438240742, 4.5852123300763596e-05], 'true': [0.011331634438240742, nan], 'true,true': [0.011331634438240742, nan]}, {'': [0.012322898138397395, -9.489085680556894e-19], 'true': [0.001400937793271431, 0.0003709513474955632], 'true,false': [0.00037095134749555187, nan], 'true,false,true': [0.0003485050386710746, 9.654113257610057e-18], 'false': [-7.234536000063676e-18, 1.5285679324549257e-17], 'false,true': [-7.234536000063676e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995091;  // std dev = 1.08e-06, 213.000 (wgt'ed) examples reached here.  /* #pos=213 */
%   | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995121;  // std dev = 2.06e-07, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.14185106490048724;  // std dev = 2.98e-07, 427.000 (wgt'ed) examples reached here.  /* #neg=427 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.12544463852839127;  // std dev = 3.94e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.12544463852839224;  // std dev = 0.000, 433.000 (wgt'ed) examples reached here.  /* #neg=433 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3.77e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1123163781936061;  // std dev = 0.000, 442.000 (wgt'ed) examples reached here.  /* #neg=442 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1015963294878363;  // std dev = 2.24e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.1015963294878356;  // std dev = 3.07e-07, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601501;  // std dev = 5.96e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.09269127618926133;  // std dev = 0.000, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.15e-07, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.0851847513883968;  // std dev = 2.17e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.08518475138839678;  // std dev = 1.33e-07, 429.000 (wgt'ed) examples reached here.  /* #neg=429 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253495;  // std dev = 2.89e-07, 213.000 (wgt'ed) examples reached here.  /* #pos=213 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109175;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109165;  // std dev = 2.01e-07, 436.000 (wgt'ed) examples reached here.  /* #neg=436 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.20975771563253537;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527714;  // std dev = 8.43e-08, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07324622576333763;  // std dev = 0.000, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.06842697784420347;  // std dev = 0.000, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202623;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.06419184008202608;  // std dev = 8.33e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then return -0.06419184008202557;  // std dev = 2.01e-07, 407.000 (wgt'ed) examples reached here.  /* #neg=407 */
%   | else return -0.06419184008202616;  // std dev = 7.45e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.181 seconds
Total inference time: 1.593 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.337 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.693999999999999 seconds
Total inference time: 1.593 seconds
AUC ROC: 1.0
Total revision time: 11.693999999999999
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:28:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.693999999999999, 'Inference time': 1.593, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06597, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.259, 'Inference time': 1.814}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 6.58e-08, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.42005369700427514;  // std dev = 5.084, 105.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=59 */
%   | else return -0.14185106490048838;  // std dev = 0.000, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7338630713263786;  // std dev = 0.553, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1501215316989286;  // std dev = 0.248, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12807534371409635;  // std dev = 0.348, 632.000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5706898043432477;  // std dev = 0.040, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then return -0.13497053977608023;  // std dev = 0.033, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11459603726507947;  // std dev = 0.326, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42994830125591194;  // std dev = 0.754, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11732837207974545;  // std dev = 0.238, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10357851471199349;  // std dev = 0.300, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3298208582326156;  // std dev = 0.039, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1046706139799574;  // std dev = 0.194, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09387328636456464;  // std dev = 0.246, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21025896358452395;  // std dev = 2.514, 382.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08654079628313792;  // std dev = 0.247, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.17070339219494146;  // std dev = 1.759, 305.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=267 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.1293621485569236;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.047689873044247474;  // std dev = 2.732, 678.000 (wgt'ed) examples reached here.  /* #neg=619 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20329882234637867;  // std dev = 0.045, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12650393114245775;  // std dev = 0.019, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07596263338198475;  // std dev = 0.170, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13599146594121936;  // std dev = 0.102, 375.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07107882304371502;  // std dev = 0.180, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1543215320467934;  // std dev = 0.676, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12320625944984391;  // std dev = 0.127, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.1012862519575619;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.065177255163902;  // std dev = 0.000, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06517725516390155;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.879 seconds
Total inference time: 1.656 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071519
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.222 seconds
Parameter learned model CLL: -0.071519


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [6.58e-08, 0, 267], 'true,false,true,true': [4.34e-08, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [5.084, 46, 59], 'false,false': [0.0, 571, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.553, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.248, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.348, 632, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.04, 0, 326], 'true,false,true': [0.033, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.326, 626, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.754, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.238, 68, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.3, 603, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.039, 0, 326], 'true,false,true,true': [0.194, 56, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.246, 603, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [2.514, 56, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.247, 581, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.759, 38, 267], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 25, 0], 'false,false': [2.732, 619, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.045, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.019, 63, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.17, 595, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.102, 49, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.18, 614, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.676, 0, 326], 'true,false,true,true': [0.127, 55, 0], 'true,false,true,false': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 499, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 93, 0]}]]
[{'': [0.11539677854613326, 0.0796606386331021], 'true': [4.364382346990877e-15, 4.603363760640893e-17], 'false': [0.2461678004535144, -2.8309714953664236e-16], 'true,false': [4.603363760640893e-17, nan], 'true,false,true': [4.603363760640893e-17, nan]}, {'': [0.08974346827240545, 0.00019188963464494344], 'true': [0.0009370445980505652, 0.0012559574291345467], 'true,false': [0.0012559574291345467, nan], 'true,false,true': [0.0012559574291345467, nan], 'true,true': [0.0009370445980505652, nan]}, {'': [0.06461279699292972, 0.00016936750672717226], 'true': [0.0016130121042321423, 0.0010792466989146508], 'true,false': [0.0010792466989146508, nan]}, {'': [0.04435949554070036, 0.00014884494572523703], 'true': [0.001746053832404889, 0.0008339757464722352], 'true,true': [0.001746053832404889, nan], 'true,true,true': [0.001746053832404889, nan], 'true,false': [0.0008339757464722352, nan], 'true,false,true': [0.0008339757464722352, nan]}, {'': [0.02499900301977066, 0.00010067723853944874], 'true': [0.0015024520006013196, 0.0006746282520188666], 'true,false': [0.0006746282520188666, nan], 'true,false,true': [0.0006746282520188666, nan]}, {'': [0.01654162984765852, 0.0001048798366378627], 'true': [0.01654162984765852, nan], 'true,true': [0.01654162984765852, nan], 'true,true,true': [0.01654162984765852, nan]}, {'': [0.010148546526686291, 0.010843819521955367], 'false': [-1.7763568394002505e-17, 0.011006454827329232], 'true': [0.010148546526686291, nan], 'true,true': [0.010148546526686291, nan], 'true,true,true': [0.010148546526686291, nan]}, {'': [0.01655435336173308, 4.87099090632024e-05], 'true': [0.00206952172381885, 0.0003534365834147413], 'true,true': [0.00206952172381885, nan], 'true,false': [0.0003534365834147413, nan]}, {'': [0.010429481204828183, 5.2884757128790046e-05], 'true': [0.010429481204828183, nan], 'true,true': [0.010429481204828183, nan]}, {'': [0.012564984863348368, -9.151838446234399e-17], 'true': [0.001400527270841092, 0.0003076256967680679], 'true,false': [0.000307625696768065, nan], 'true,false,true': [0.0002933940530576667, -5.046468293750712e-18], 'false': [-7.653641692806691e-17, -1.4325458382260084e-17], 'false,true': [-7.653641692806691e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 1.08e-06, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( director(A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.8581489350995125;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.14185106490048854;  // std dev = 0.000, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.1254446385283923;  // std dev = 0.000, 583.000 (wgt'ed) examples reached here.  /* #neg=583 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360576;  // std dev = 0.000, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783504;  // std dev = 4.52e-07, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716015105;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.09269127618926178;  // std dev = 0.000, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694875;  // std dev = 3.77e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839679;  // std dev = 1.58e-07, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253479;  // std dev = 2.56e-07, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109179;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109252;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.20975771563253487;  // std dev = 4.71e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1770964977452765;  // std dev = 2.73e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07324622576333675;  // std dev = 1.98e-07, 561.000 (wgt'ed) examples reached here.  /* #neg=561 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367155;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420362;  // std dev = 0.000, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13400703000801142;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.06419184008202619;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A) )
%   | then return -0.06419184008202547;  // std dev = 2.25e-07, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.518 seconds
Total inference time: 1.495 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.97 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.589 seconds
Total inference time: 1.495 seconds
AUC ROC: 1.0
Total revision time: 13.589
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:28:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.589, 'Inference time': 1.495, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.879, 'Inference time': 1.656}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995123;  // std dev = 1.05e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.5248156017661789;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7311275735917682;  // std dev = 0.194, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1592360646725053;  // std dev = 0.148, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.13016971082820386;  // std dev = 0.222, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5675372029680502;  // std dev = 0.031, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then return -0.11733316848352263;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11833160889277276;  // std dev = 0.231, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4271809223035791;  // std dev = 0.257, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11454948717502421;  // std dev = 0.118, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10207018531207603;  // std dev = 0.110, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3276615822016504;  // std dev = 0.030, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10765317278452981;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09175246784125694;  // std dev = 7.15e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21153205961711638;  // std dev = 1.083, 74.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08826198558752145;  // std dev = 0.161, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.18331845050324433;  // std dev = 0.657, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.14115009379163762;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.05084081411818165;  // std dev = 1.180, 141.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20014003335081332;  // std dev = 0.039, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.14030802380795496;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07761882317010135;  // std dev = 0.138, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11799002632422262;  // std dev = 0.117, 78.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0711311531982979;  // std dev = 0.104, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15436357587086233;  // std dev = 0.258, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1363144437984431;  // std dev = 0.111, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.1095183455271095;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06464424779571677;  // std dev = 3.49e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06464424779571683;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066025
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.912 seconds
Total inference time: 1.621 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071689
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.442 seconds
Parameter learned model CLL: -0.071689


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [1.05e-08, 0, 52], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.0, 6, 12], 'false,false': [8.16e-08, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.194, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.148, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.222, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.031, 0, 64], 'true,false,true': [0.025, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.231, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.257, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.118, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.11, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.03, 0, 64], 'true,false,true,true': [0.104, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.15e-08, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.083, 10, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.161, 105, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [0.657, 5, 52], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 4, 0], 'false,false': [1.18, 129, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.039, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.026, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.138, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.117, 14, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.104, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.258, 0, 64], 'true,false,true,true': [0.111, 19, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [3.49e-08, 103, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [6.45e-09, 22, 0]}]]
[{'': [0.09274673008323427, 0.0843699296917247], 'true': [1.3664283380001927e-16, -6.938893903907228e-18], 'false': [0.22222222222222188, 6.00120553851436e-17], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.10001205007549094, 0.000416757753784503], 'true': [0.0005885510691238105, 0.001998255841492945], 'true,false': [0.001998255841492945, nan], 'true,false,true': [0.001998255841492945, nan], 'true,true': [0.0005885510691238105, nan]}, {'': [0.055752830129759505, 0.0005099927010248106], 'true': [0.0009815639075502758, 0.0006262955153905458], 'true,false': [0.0006262955153905458, nan]}, {'': [0.04424664187999838, 0.00011143027992158675], 'true': [0.0010343544115175574, 0.0009911230983136712], 'true,true': [0.0010343544115175574, nan], 'true,true,true': [0.0010343544115175574, nan], 'true,false': [0.0009911230983136712, nan], 'true,false,true': [0.0009911230983136712, nan]}, {'': [0.024607216516899514, 4.55984456542475e-17], 'true': [0.000874018495768486, 0.000985519088681141], 'true,false': [0.000985519088681141, nan], 'true,false,true': [0.000985519088681141, nan]}, {'': [0.01583908240515114, 0.000247702744524673], 'true': [0.01583908240515114, nan], 'true,true': [0.01583908240515114, nan], 'true,true,true': [0.01583908240515114, nan]}, {'': [0.00756469742761526, 0.00982873177922611], 'false': [0.0, 0.00988257440141702], 'true': [0.00756469742761526, nan], 'true,true': [0.00756469742761526, nan], 'true,true,true': [0.00756469742761526, nan]}, {'': [0.012866015279860124, 0.00015960862019961017], 'true': [0.0015125629901873439, 0.0006670739321935903], 'true,true': [0.0015125629901873439, nan], 'true,false': [0.0006670739321935903, nan]}, {'': [0.013574294332855933, 9.333356112400937e-05], 'true': [0.013574294332855933, nan], 'true,true': [0.013574294332855933, nan]}, {'': [0.016841793710908045, 8.881784197001253e-18], 'true': [0.0010390895482875924, 0.0006352634052640223], 'true,false': [0.0006352634052640223, nan], 'true,false,true': [0.0006441281334315331, 0.0], 'false': [1.1856750748424001e-17, 1.8924256101565167e-18], 'false,true': [1.1856750748424001e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995123;  // std dev = 8.43e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7217045942434119;  // std dev = 0.080, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.12798361646307344;  // std dev = 0.184, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5576561790738178;  // std dev = 0.102, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11291505923087596;  // std dev = 0.098, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41930774387789416;  // std dev = 0.104, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10412138529292718;  // std dev = 0.180, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3219908608975061;  // std dev = 0.096, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.0929533103221234;  // std dev = 0.084, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25608310667946493;  // std dev = 0.085, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0859141073391359;  // std dev = 0.111, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20835141802932536;  // std dev = 3.65e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(A), director(B) )
%   | then return -0.09312034521960262;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.0782952113133179;  // std dev = 7.07e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.2194089328790401;  // std dev = 0.066, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1775916763060755;  // std dev = 0.064, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07334839854690586;  // std dev = 0.068, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15312890003554908;  // std dev = 0.057, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06911180919464809;  // std dev = 0.090, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13431417355706185;  // std dev = 0.051, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06289556404625207;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then return -0.06377503615746152;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return -0.06377503615746141;  // std dev = 8.33e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063106
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.752 seconds
Total inference time: 1.342 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064494
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.147 seconds
Refined model CLL: -0.064494


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063106
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.253 seconds
Total inference time: 1.342 seconds
AUC ROC: 1.0
Total revision time: 6.253
Best scored revision CLL: -0.064494


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:28:56
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063106, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.253, 'Inference time': 1.342, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066025, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.912, 'Inference time': 1.621}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099511;  // std dev = 5.16e-08, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.4137044906550675;  // std dev = 2.981, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | else return -0.14185106490048852;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7319581829869226;  // std dev = 0.331, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1378705014876689;  // std dev = 0.118, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12870032314654303;  // std dev = 0.231, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5686699159481536;  // std dev = 0.038, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then return -0.12076423090030083;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11553543285022445;  // std dev = 0.230, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4283328716987664;  // std dev = 0.453, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1266118664668435;  // std dev = 0.169, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10245274258420274;  // std dev = 0.139, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32866128392119515;  // std dev = 0.037, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.11148234569621318;  // std dev = 0.124, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09583495472961016;  // std dev = 0.218, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.20694790633491988;  // std dev = 1.625, 152.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08624237756286643;  // std dev = 0.150, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.18692721747548613;  // std dev = 0.886, 118.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=109 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.12841330391690586;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.04976043540680805;  // std dev = 1.618, 241.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20005603827508014;  // std dev = 0.045, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.11915505911758147;  // std dev = 0.012, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07622817649427259;  // std dev = 0.131, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14607154748131168;  // std dev = 0.088, 141.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07072695246541284;  // std dev = 0.105, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15082749735705908;  // std dev = 0.414, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12715272120364784;  // std dev = 0.072, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.10061319664293265;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06492873510224582;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06492873510224577;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066465
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.47 seconds
Total inference time: 1.534 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071246
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.127 seconds
Parameter learned model CLL: -0.071246


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [5.16e-08, 0, 109], 'true,false,true,true': [0.0, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.981, 16, 20], 'false,false': [0.0, 225, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.331, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.118, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.231, 229, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.038, 0, 129], 'true,false,true': [0.024, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.23, 231, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.453, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.169, 30, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.139, 217, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.037, 0, 129], 'true,false,true,true': [0.124, 20, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.218, 232, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.625, 23, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.15, 231, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [0.886, 9, 109], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 8, 0], 'false,false': [1.618, 221, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.045, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.012, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.131, 248, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.088, 12, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.105, 221, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.414, 0, 129], 'true,false,true,true': [0.072, 19, 0], 'true,false,true,false': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 197, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 23, 0]}]]
[{'': [0.10086588670765056, 0.07075644808502579], 'true': [2.6074962780187164e-15, -1.1895246692412391e-17], 'false': [0.24691358024691348, -2.329001189435884e-16], 'true,false': [-1.1895246692412391e-17, nan], 'true,false,true': [-1.1895246692412391e-17, nan]}, {'': [0.08214083486625161, 0.00023212866308972558], 'true': [0.0008494887822387659, 0.0007720103514137273], 'true,true': [0.0008494887822387659, nan], 'true,false': [0.0007720103514137273, nan], 'true,false,true': [0.0007720103514137273, nan]}, {'': [0.043354438732808816, 0.00022912073042719676], 'true': [0.001463775722487548, 0.0005623042578656491], 'true,false': [0.0005623042578656491, nan]}, {'': [0.04861100204790487, 8.863879896854322e-05], 'true': [0.0015893928492741042, 0.0009466105838848474], 'true,true': [0.0015893928492741042, nan], 'true,true,true': [0.0015893928492741042, nan], 'true,false': [0.0009466105838848474, nan], 'true,false,true': [0.0009466105838848474, nan]}, {'': [0.023804415403342653, 0.0002043485341482618], 'true': [0.0013729174098750453, 0.0007647083647709163], 'true,false': [0.0007647083647709163, nan], 'true,false,true': [0.0007647083647709163, nan]}, {'': [0.017381572036486003, 9.751499068446095e-05], 'true': [0.017381572036486003, nan], 'true,true': [0.017381572036486003, nan], 'true,true,true': [0.017381572036486003, nan]}, {'': [0.006653709171728194, 0.010711609529591961], 'false': [0.0, 0.010868425847834276], 'true': [0.006653709171728194, nan], 'true,true': [0.006653709171728194, nan], 'true,true,true': [0.006653709171728194, nan]}, {'': [0.011781409048865007, 6.874359538325717e-05], 'true': [0.0019808977198494033, 0.0001459731140678426], 'true,true': [0.0019808977198494033, nan], 'true,false': [0.0001459731140678426, nan]}, {'': [0.007776215140293247, 4.9954123655463815e-05], 'true': [0.007776215140293247, nan], 'true,true': [0.007776215140293247, nan]}, {'': [0.011601898252674919, -5.046468293750712e-18], 'true': [0.001331605187069652, 0.00033628140259814413], 'true,false': [0.00033628140259814413, nan], 'true,false,true': [0.0002691783531772112, -1.734723475976807e-18], 'false': [-4.50851989695495e-18, -1.206764157201257e-18], 'false,true': [-4.50851989695495e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099511;  // std dev = 5.33e-07, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.1418510649004885;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7215632865295831;  // std dev = 0.118, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12584291881122672;  // std dev = 0.101, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5575254500360647;  // std dev = 0.151, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.1145738862019497;  // std dev = 0.225, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.419218672781814;  // std dev = 0.155, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10339122345464515;  // std dev = 0.208, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32193645548185795;  // std dev = 0.143, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.09231765349662559;  // std dev = 1.07e-07, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25604995712422396;  // std dev = 0.127, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839682;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.08558989583415276;  // std dev = 0.105, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2084254306536752;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( director(A), director(B) )
%   | then return -0.11097214273575377;  // std dev = 0.135, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( actor(B) )
%   | | then return -0.07845209031672705;  // std dev = 1.23e-07, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.2211864089813284;  // std dev = 0.099, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1775768960291003;  // std dev = 0.095, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.07407222230476262;  // std dev = 0.122, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15311874054026028;  // std dev = 0.085, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.06852159111341574;  // std dev = 0.082, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13430698817481168;  // std dev = 0.077, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( actor(A) )
%   | | then return -0.0641918400820262;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.08267335746024403;  // std dev = 0.091, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then return -0.06388746358027984;  // std dev = 8.16e-08, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else return -0.06388746358028018;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063189
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.133 seconds
Total inference time: 1.597 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064545
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.859 seconds
Refined model CLL: -0.064545


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063189
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.588999999999999 seconds
Total inference time: 1.597 seconds
AUC ROC: 1.0
Total revision time: 8.588999999999999
Best scored revision CLL: -0.064545


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:29:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063189, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.588999999999999, 'Inference time': 1.597, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066465, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.47, 'Inference time': 1.534}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995097;  // std dev = 7.96e-08, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.4619225200051716;  // std dev = 3.561, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   | else return -0.14185106490048768;  // std dev = 1.71e-07, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7314651967444437;  // std dev = 0.376, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14192098963366878;  // std dev = 0.195, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12783251550017147;  // std dev = 0.257, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5680345456977468;  // std dev = 0.035, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then return -0.1336821334431032;  // std dev = 0.034, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11468843100293939;  // std dev = 0.267, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42771268647208327;  // std dev = 0.507, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12082208599063464;  // std dev = 0.147, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10411321588810439;  // std dev = 0.255, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3281362662607523;  // std dev = 0.034, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10156693034354727;  // std dev = 0.145, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09467903663844644;  // std dev = 0.236, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.19862389638033123;  // std dev = 2.135, 234.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08666418408531082;  // std dev = 0.204, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.16670697199006562;  // std dev = 1.506, 190.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=162 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.1339988680530431;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.050027011701719803;  // std dev = 1.989, 401.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20383294558156412;  // std dev = 0.041, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12791907024781443;  // std dev = 0.021, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07679097886202679;  // std dev = 0.200, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13300206067830436;  // std dev = 0.104, 226.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07048092349859474;  // std dev = 0.131, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15497188416183197;  // std dev = 0.471, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12408992589430398;  // std dev = 0.127, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.10458139713030977;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06494118833097207;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06494118833097212;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066334
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.658 seconds
Total inference time: 1.578 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071335
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.431 seconds
Parameter learned model CLL: -0.071335


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [7.96e-08, 0, 162], 'true,false,true,true': [3.16e-08, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.561, 21, 32], 'false,false': [1.71e-07, 324, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.376, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.195, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.257, 345, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.035, 0, 194], 'true,false,true': [0.034, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.267, 376, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.507, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.147, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.255, 330, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.034, 0, 194], 'true,false,true,true': [0.145, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.236, 347, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [2.135, 40, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.204, 327, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.506, 28, 162], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.29e-08, 14, 0], 'false,false': [1.989, 369, 32]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.041, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.021, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.2, 406, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.104, 32, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.131, 373, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.471, 0, 194], 'true,false,true,true': [0.127, 41, 0], 'true,false,true,false': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 300, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 36, 0]}]]
[{'': [0.14059171597633724, 0.07767591413434377], 'true': [6.315935428978668e-15, 3.027880976250427e-17], 'false': [0.23923104307582932, 9.046261682130905e-17], 'true,false': [3.027880976250427e-17, nan], 'true,false,true': [3.027880976250427e-17, nan]}, {'': [0.09954960527869176, 0.0001910155404837502], 'true': [0.0007280021625034982, 0.001085880582977545], 'true,false': [0.001085880582977545, nan], 'true,false,true': [0.001085880582977545, nan], 'true,true': [0.0007280021625034982, nan]}, {'': [0.06985342269476597, 0.00019020126679202915], 'true': [0.0012369472082910749, 0.0011900437910960188], 'true,false': [0.0011900437910960188, nan]}, {'': [0.02781517416155003, 0.00019649758220944516], 'true': [0.0013259487109841708, 0.001024059608228452], 'true,true': [0.0013259487109841708, nan], 'true,true,true': [0.0013259487109841708, nan], 'true,false': [0.001024059608228452, nan], 'true,false,true': [0.001024059608228452, nan]}, {'': [0.023509554273546306, 0.00016053508510300684], 'true': [0.0011346206950635213, 0.0006571536446081556], 'true,false': [0.0006571536446081556, nan], 'true,false,true': [0.0006571536446081556, nan]}, {'': [0.019471586174537, 0.00012689255128809222], 'true': [0.019471586174537, nan], 'true,true': [0.019471586174537, nan], 'true,true,true': [0.019471586174537, nan]}, {'': [0.011938462357779825, 0.009765480519182058], 'true': [0.011938462357779825, nan], 'true,true': [0.011938462357779825, nan], 'true,true,true': [0.011938462357779825, nan], 'false': [1.1895246692412391e-17, 0.00986854573030081]}, {'': [0.014284464055993765, 9.808878744171665e-05], 'true': [0.0016821607967161256, 0.0004600566743362307], 'true,true': [0.0016821607967161256, nan], 'true,false': [0.0004600566743362307, nan]}, {'': [0.010907534191634418, 4.605345866079808e-05], 'true': [0.010907534191634418, nan], 'true,true': [0.010907534191634418, nan]}, {'': [0.014199518812603416, -3.105981080796569e-17], 'true': [0.0011416233536863127, 0.0003558291114522794], 'true,false': [0.00035582911145229856, nan], 'true,false,true': [0.0003918179112002402, -9.79608551139844e-18], 'false': [-1.4062824978585317e-17, 0.0], 'false,true': [-1.4062824978585317e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995097;  // std dev = 1.01e-06, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995116;  // std dev = 2.15e-07, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.14185106490048777;  // std dev = 1.37e-07, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.125444638528392;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6.08e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360642;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.92e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.10159632948783646;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.320711847160149;  // std dev = 4.00e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.09269127618926061;  // std dev = 1.87e-07, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948856;  // std dev = 3.82e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.0851847513883968;  // std dev = 2.04e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.08518475138839678;  // std dev = 1.07e-07, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253515;  // std dev = 2.76e-07, 162.000 (wgt'ed) examples reached here.  /* #pos=162 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109141;  // std dev = 6.99e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.209757715632536;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527797;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07324622576333713;  // std dev = 6.66e-08, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367155;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.06842697784420308;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1340070300080109;  // std dev = 9.42e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202623;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.06419184008202615;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A) )
%   | then return -0.06419184008202602;  // std dev = 1.00e-07, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | else return -0.06419184008202614;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.386 seconds
Total inference time: 1.566 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.148 seconds
Refined model CLL: -0.064221


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.623000000000001 seconds
Total inference time: 1.566 seconds
AUC ROC: 1.0
Total revision time: 9.623000000000001
Best scored revision CLL: -0.064221


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:29:21
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.623000000000001, 'Inference time': 1.566, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066334, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.658, 'Inference time': 1.578}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995091;  // std dev = 7.45e-08, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.49814893509951286;  // std dev = 4.157, 75.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=48 */
%   | else return -0.1418510649004875;  // std dev = 1.84e-07, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7318297866709939;  // std dev = 0.417, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14451324897487094;  // std dev = 0.260, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12956539756555527;  // std dev = 0.405, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5683357032431531;  // std dev = 0.034, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then return -0.13970840659350417;  // std dev = 0.039, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11486645124601293;  // std dev = 0.328, 465.000 (wgt'ed) examples reached here.  /* #neg=465 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42787182462587564;  // std dev = 0.557, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11720719585235777;  // std dev = 0.214, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10335842457882809;  // std dev = 0.294, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3281941793029286;  // std dev = 0.032, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1148571872381696;  // std dev = 0.204, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0944811895787539;  // std dev = 0.280, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21076751618798864;  // std dev = 2.200, 301.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08703417988500886;  // std dev = 0.275, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.16649199118152594;  // std dev = 1.674, 246.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=211 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.13810053401977024;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.04645926561374246;  // std dev = 2.367, 506.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=48 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2024956849502418;  // std dev = 0.039, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.1221344838472618;  // std dev = 0.021, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07580175584703899;  // std dev = 0.157, 450.000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13639457441183805;  // std dev = 0.100, 296.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0708685476109384;  // std dev = 0.172, 517.000 (wgt'ed) examples reached here.  /* #neg=517 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1535973611862913;  // std dev = 0.520, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.13155508894865264;  // std dev = 0.142, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.10755835932299412;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06511392330090149;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06511392330090116;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066449
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.376 seconds
Total inference time: 1.672 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071572
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.806 seconds
Parameter learned model CLL: -0.071572


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [7.45e-08, 0, 211], 'true,false,true,true': [2.79e-08, 31, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.157, 27, 48], 'false,false': [1.84e-07, 477, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.417, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.26, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.405, 472, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.034, 0, 259], 'true,false,true': [0.039, 52, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.328, 465, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.557, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.214, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.294, 504, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.032, 0, 259], 'true,false,true,true': [0.204, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.28, 471, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [2.2, 42, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.275, 463, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.674, 35, 211], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 18, 0], 'false,false': [2.367, 458, 48]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.039, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.021, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.157, 450, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.1, 37, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.172, 517, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.52, 0, 259], 'true,false,true,true': [0.142, 34, 0], 'true,false,true,false': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 376, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 63, 0]}]]
[{'': [0.1116897752885784, 0.07939508506616362], 'true': [5.522701832448172e-15, 2.5069552168955147e-17], 'false': [0.2304000000000001, 7.075635209351103e-17], 'true,false': [2.5069552168955147e-17, nan], 'true,false,true': [2.5069552168955147e-17, nan]}, {'': [0.10633716133288196, 0.00034733158041178047], 'true': [0.0006711557884756632, 0.0013222251067622171], 'true,false': [0.0013222251067622171, nan], 'true,false,true': [0.0013222251067622171, nan], 'true,true': [0.0006711557884756632, nan]}, {'': [0.0709964117921436, 0.0002309349081898904], 'true': [0.0011285051138724782, 0.0014889440634275586], 'true,false': [0.0014889440634275586, nan]}, {'': [0.03805449804971313, 0.00017122234475778402], 'true': [0.0011973702290335488, 0.0010426682335532768], 'true,true': [0.0011973702290335488, nan], 'true,true,true': [0.0011973702290335488, nan], 'true,false': [0.0010426682335532768, nan], 'true,false,true': [0.0010426682335532768, nan]}, {'': [0.023350651013322885, 0.00016646972856679683], 'true': [0.001016420331695691, 0.0010678866592745261], 'true,false': [0.0010678866592745261, nan], 'true,false,true': [0.0010678866592745261, nan]}, {'': [0.01607648804224623, 0.00016320263681269357], 'true': [0.01607648804224623, nan], 'true,true': [0.01607648804224623, nan], 'true,true,true': [0.01607648804224623, nan]}, {'': [0.011392408229494113, 0.010968664395820314], 'true': [0.011392408229494113, nan], 'true,true': [0.011392408229494113, nan], 'true,true,true': [0.011392408229494113, nan], 'false': [-9.25185853854297e-18, 0.011070368928910527]}, {'': [0.013618354054078784, 5.456908631305484e-05], 'true': [0.001556966690593695, 0.00042938458443218255], 'true,true': [0.001556966690593695, nan], 'true,false': [0.00042938458443218255, nan]}, {'': [0.010019186943376281, 5.7020796572067645e-05], 'true': [0.010019186943376281, nan], 'true,true': [0.010019186943376281, nan]}, {'': [0.011404243241864741, -4.9062247557467055e-17], 'true': [0.0010455287508753363, 0.0005290211706814607], 'true,false': [0.0005290211706814496, nan], 'true,false,true': [0.000593702539353049, 0.0], 'false': [-3.720428220818344e-17, -1.2335811384723961e-17], 'false,true': [-3.720428220818344e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995091;  // std dev = 1.08e-06, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( director(A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.8581489350995121;  // std dev = 1.69e-07, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.1418510649004872;  // std dev = 2.98e-07, 434.000 (wgt'ed) examples reached here.  /* #neg=434 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.12544463852839122;  // std dev = 4.71e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.12544463852839227;  // std dev = 0.000, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3.95e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.11231637819360639;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.11231637819360599;  // std dev = 0.000, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.10159632948783567;  // std dev = 2.87e-07, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716015017;  // std dev = 1.19e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.0926912761892613;  // std dev = 0.000, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694879;  // std dev = 3.26e-07, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839678;  // std dev = 1.48e-07, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253495;  // std dev = 2.89e-07, 211.000 (wgt'ed) examples reached here.  /* #pos=211 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(B) )
%   | | then return -0.0787767547310918;  // std dev = 1.80e-07, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.2097577156325354;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527714;  // std dev = 7.30e-08, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.07324622576333704;  // std dev = 9.13e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.07324622576333724;  // std dev = 0.000, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367153;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.0684269778442034;  // std dev = 0.000, 448.000 (wgt'ed) examples reached here.  /* #neg=448 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13400703000801112;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.06419184008202615;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A) )
%   | then return -0.06419184008202561;  // std dev = 1.91e-07, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
%   | else return -0.06419184008202616;  // std dev = 5.27e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.992 seconds
Total inference time: 1.506 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.339 seconds
Refined model CLL: -0.064223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.513 seconds
Total inference time: 1.506 seconds
AUC ROC: 1.0
Total revision time: 11.513
Best scored revision CLL: -0.064223


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:29:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.513, 'Inference time': 1.506, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066449, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.376, 'Inference time': 1.672}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 6.66e-08, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.4254566274072055;  // std dev = 5.053, 104.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=59 */
%   | else return -0.1418510649004882;  // std dev = 0.000, 551.000 (wgt'ed) examples reached here.  /* #neg=551 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7337936226773178;  // std dev = 0.546, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.15043534122060725;  // std dev = 0.259, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12852284588724397;  // std dev = 0.367, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5706010791199972;  // std dev = 0.040, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then return -0.13095742009659342;  // std dev = 0.032, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11546322342208307;  // std dev = 0.380, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4298624042724614;  // std dev = 0.745, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10857395438144823;  // std dev = 0.197, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10359004609575484;  // std dev = 0.289, 528.000 (wgt'ed) examples reached here.  /* #neg=528 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3297486328604705;  // std dev = 0.038, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10736416954233899;  // std dev = 0.189, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09334593938570868;  // std dev = 0.220, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21410716088736417;  // std dev = 2.451, 373.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08664052417017341;  // std dev = 0.261, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.17156971609375601;  // std dev = 1.721, 301.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=265 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.1298703078336201;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.04618628613170722;  // std dev = 2.706, 653.000 (wgt'ed) examples reached here.  /* #neg=594 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20249782502955402;  // std dev = 0.045, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12930620070998664;  // std dev = 0.020, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07699418320949106;  // std dev = 0.233, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14141511293885758;  // std dev = 0.096, 363.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07105356877563085;  // std dev = 0.182, 618.000 (wgt'ed) examples reached here.  /* #neg=618 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15307256850432704;  // std dev = 0.664, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1300669015400663;  // std dev = 0.151, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.10155873696955915;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06515280798530737;  // std dev = 1.67e-07, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.065152807985308;  // std dev = 2.58e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066543
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.63 seconds
Total inference time: 1.787 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.746 seconds
Parameter learned model CLL: -0.071432


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [6.66e-08, 0, 265], 'true,false,true,true': [4.08e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [5.053, 45, 59], 'false,false': [0.0, 551, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.546, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.259, 52, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.367, 596, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.04, 0, 324], 'true,false,true': [0.032, 62, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.38, 628, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.745, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.197, 69, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.289, 528, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.038, 0, 324], 'true,false,true,true': [0.189, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.22, 621, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [2.451, 49, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.261, 595, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.721, 36, 265], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 19, 0], 'false,false': [2.706, 594, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.045, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.02, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.233, 629, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.096, 39, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.182, 618, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.664, 0, 324], 'true,false,true,true': [0.151, 59, 0], 'true,false,true,false': [0.0, 20, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.67e-07, 506, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [2.58e-08, 65, 0]}]]
[{'': [0.11183128462604286, 0.0819625895926821], 'true': [4.397321081685148e-15, 4.2700885562506023e-17], 'false': [0.24546967455621266, -2.1922371157752638e-16], 'true,false': [4.2700885562506023e-17, nan], 'true,false,true': [4.2700885562506023e-17, nan]}, {'': [0.09414709945264205, 0.00022582942630055145], 'true': [0.0009210700570686172, 0.0012858078080455386], 'true,false': [0.0012858078080455386, nan], 'true,false,true': [0.0012858078080455386, nan], 'true,true': [0.0009210700570686172, nan]}, {'': [0.06784820174705213, 0.00022966857430383513], 'true': [0.0015830197255035376, 0.0010084034449331333], 'true,false': [0.0010084034449331333, nan]}, {'': [0.04347371945497604, 0.0001582841646898982], 'true': [0.0017111344297319375, 0.000563461085598864], 'true,true': [0.0017111344297319375, nan], 'true,true,true': [0.0017111344297319375, nan], 'true,false': [0.000563461085598864, nan], 'true,false,true': [0.000563461085598864, nan]}, {'': [0.023176554990736002, 7.826495178441985e-05], 'true': [0.0014708758104209133, 0.0007322528929877123], 'true,false': [0.0007322528929877123, nan], 'true,false,true': [0.0007322528929877123, nan]}, {'': [0.01610142237603725, 0.00011439603934313873], 'true': [0.01610142237603725, nan], 'true,true': [0.01610142237603725, nan], 'true,true,true': [0.01610142237603725, nan]}, {'': [0.009836823463614867, 0.011090551618728961], 'false': [-8.764918615461762e-18, 0.011215245681629439], 'true': [0.009836823463614867, nan], 'true,true': [0.009836823463614867, nan], 'true,true,true': [0.009836823463614867, nan]}, {'': [0.014373018644019152, 8.643404384210396e-05], 'true': [0.0020258086277325444, 0.000384622625111918], 'true,true': [0.0020258086277325444, nan], 'true,false': [0.000384622625111918, nan]}, {'': [0.009296631656228321, 5.341944819014742e-05], 'true': [0.009296631656228321, nan], 'true,true': [0.009296631656228321, nan]}, {'': [0.013179140403072902, 6.2219153744317e-17], 'true': [0.0013605365014955617, 0.0004416571905038908], 'true,false': [0.00044165719050389925, nan], 'true,false,true': [0.0003856207462483304, -5.551115123125783e-18], 'false': [5.5291739566312145e-17, 1.0248212535001446e-17], 'false,true': [5.5291739566312145e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 1.08e-06, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( director(A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.8581489350995125;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.14185106490048854;  // std dev = 0.000, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.12544463852839127;  // std dev = 3.94e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.1254446385283923;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.11231637819360568;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783624;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.10159632948783516;  // std dev = 4.17e-07, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.320711847160151;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926182;  // std dev = 0.000, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948745;  // std dev = 3.91e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253479;  // std dev = 2.53e-07, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109248;  // std dev = 0.000, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.20975771563253487;  // std dev = 4.71e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1770964977452765;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07324622576333659;  // std dev = 2.37e-07, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420361;  // std dev = 0.000, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13400703000801145;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A) )
%   | then return -0.06419184008202536;  // std dev = 2.43e-07, 516.000 (wgt'ed) examples reached here.  /* #neg=516 */
%   | else return -0.06419184008202618;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.483 seconds
Total inference time: 1.571 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.54 seconds
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.399000000000001 seconds
Total inference time: 1.571 seconds
AUC ROC: 1.0
Total revision time: 12.399000000000001
Best scored revision CLL: -0.064225


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:29:53
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.399000000000001, 'Inference time': 1.571, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066543, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.63, 'Inference time': 1.787}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995115;  // std dev = 4.21e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.722581188579172;  // std dev = 0.086, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5586059107354677;  // std dev = 0.017, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4200971991531156;  // std dev = 0.114, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12132292035638606;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5.27e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32258376462998994;  // std dev = 0.017, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.09104555415417767;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.23278113713428267;  // std dev = 0.576, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.1959270627936347;  // std dev = 0.434, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06873738369208457;  // std dev = 0.490, 70.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18611187888530237;  // std dev = 0.023, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12311333970670026;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07393063698067938;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14677275045668078;  // std dev = 0.061, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06902572016458954;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.14096670947275736;  // std dev = 0.120, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.138488506875751;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06471984851587143;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06471984851587144;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.085963
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.568 seconds
Total inference time: 1.814 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066913
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.439 seconds
Parameter learned model CLL: -0.066913


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [4.21e-08, 0, 38], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.816, 1, 2], 'false,false': [7.74e-08, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.086, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 71, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.017, 0, 40], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 56, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.114, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.068, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-08, 69, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.017, 0, 40], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [0.576, 3, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 72, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [0.434, 2, 38], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.49, 68, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.023, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 88, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.061, 2, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 70, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.12, 0, 40], 'true,false,true,true': [0.044, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 77, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [1.86e-09, 7, 0]}]]
[{'': [0.04750000000000139, 0.02324263038548745], 'true': [1.7763568394002505e-15, 0.0], 'false': [0.22222222222222224, 7.401486830834377e-17], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03278918162128974, -3.1273888017610045e-17], 'true': [0.00018350720514144215, 0.0], 'true,true': [0.00018350720514144215, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.06774142127354507, 2.7755575615628914e-17], 'true': [0.0003050684062871678, -1.5419764230904951e-18], 'true,false': [-1.5419764230904951e-18, nan]}, {'': [0.024626333106933386, 4.022547190670857e-17], 'true': [0.0003235207369214566, 0.0011674151618854493], 'true,false': [0.0011674151618854493, nan], 'true,false,true': [0.0011674151618854493, nan], 'true,true': [0.0003235207369214566, nan], 'true,true,true': [0.0003235207369214566, nan]}, {'': [0.008022432114049119, 0.0], 'true': [0.0002764483217584823, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0077203373336575355, 4.625929269271485e-18], 'true': [0.0077203373336575355, nan], 'true,true': [0.0077203373336575355, nan], 'true,true,true': [0.0077203373336575355, nan]}, {'': [0.004717969111938908, 0.003426825009201112], 'true': [0.004717969111938908, nan], 'true,true': [0.004717969111938908, nan], 'true,true,true': [0.004717969111938908, nan], 'false': [nan, 0.0034268250092011105]}, {'': [0.002792193033561832, -1.2616170734376778e-17], 'true': [0.0005297969859064444, 0.0], 'true,true': [0.0005297969859064444, nan], 'true,false': [0.0, nan]}, {'': [0.003716538527651578, -1.5860328923216522e-18], 'true': [0.003716538527651578, nan], 'true,true': [0.003716538527651578, nan]}, {'': [0.0068244307381722024, -6.60847038467355e-19], 'true': [0.0003581709647360737, 0.0004913757958137782], 'true,false': [0.0004913757958137782, nan], 'true,false,true': [0.0004913757958137782, nan], 'false': [-2.8836961678575496e-18, 4.956352788505163e-19], 'false,true': [-2.8836961678575496e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839155;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462842;  // std dev = 1.33e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1482167103184899;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11418133051178199;  // std dev = 0.143, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.09836609251354904;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1014262333003177;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.08998005302925931;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09404892927852647;  // std dev = 0.124, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2352868791891848;  // std dev = 0.080, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.24165019547088243;  // std dev = 0.066, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else return -0.08666117199865768;  // std dev = 0.116, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07844871222991114;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.1945034321841707;  // std dev = 0.074, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.1993997666782798;  // std dev = 0.062, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18127239072237714;  // std dev = 0.005, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12255800101257629;  // std dev = 0.000856, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07795438266707783;  // std dev = 0.205, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1559044689222806;  // std dev = 0.005, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1105272673424919;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06786125215810719;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13646973092426667;  // std dev = 0.004, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1001198278304548;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then return -0.06369246519358188;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.06369246519358183;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.092298
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.475 seconds
Total inference time: 1.416 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065626
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.233 seconds
Refined model CLL: -0.065626


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.092298
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.715 seconds
Total inference time: 1.416 seconds
AUC ROC: 1.0
Total revision time: 5.715
Best scored revision CLL: -0.065626


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:30:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.092298, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.715, 'Inference time': 1.416, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.085963, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.568, 'Inference time': 1.814}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.14185106490048804;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7220477391806611;  // std dev = 0.146, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12967978077734996;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1260321727132181;  // std dev = 0.071, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5581742101090309;  // std dev = 0.022, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then return -0.11189482132478501;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1122578135487049;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.41988011376847456;  // std dev = 0.208, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10124877480779984;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10154805822343571;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32251978038989415;  // std dev = 0.022, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.09240019560446852;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09291986520083428;  // std dev = 0.039, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.22895838228376986;  // std dev = 0.899, 88.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08539399196309694;  // std dev = 0.037, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.18672662391096334;  // std dev = 0.804, 86.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=79 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07330126363337551;  // std dev = 0.574, 151.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18698188004903735;  // std dev = 0.025, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12331673626835941;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07355616016333387;  // std dev = 1.49e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12535051308200768;  // std dev = 0.093, 93.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06894772632505383;  // std dev = 0.037, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.14420068762574917;  // std dev = 0.193, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12531133798752553;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06441604623108187;  // std dev = 4.94e-08, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06441604623108187;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081521
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.992 seconds
Total inference time: 1.856 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066459
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.872 seconds
Parameter learned model CLL: -0.066459


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [0.0, 0, 79], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.095, 3, 2], 'false,false': [0.0, 147, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.146, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.049, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.071, 173, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.022, 0, 81], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 143, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.208, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 157, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.022, 0, 81], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.039, 147, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [0.899, 7, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.037, 139, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [0.804, 7, 79], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.574, 149, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.025, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 138, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.093, 12, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.037, 149, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.193, 0, 81], 'true,false,true,true': [0.015, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [4.94e-08, 152, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 12, 0]}]]
[{'': [0.05598072562358247, 0.012984764542936183], 'true': [-8.99421184506456e-16, -2.7755575615628915e-18], 'false': [0.24000000000000005, -1.0573552615477681e-16], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.08178050373621723, 2.9514293768048017e-05], 'true': [0.00026177279420582487, 0.00019730072855805164], 'true,true': [0.00026177279420582487, nan], 'true,false': [0.00019730072855805164, nan], 'true,false,true': [0.00019730072855805164, nan]}, {'': [0.033305457175009524, -5.900486005000832e-17], 'true': [0.00046839351270271747, 0.0], 'true,false': [0.0, nan]}, {'': [0.029058213710741073, -1.2728671619906254e-17], 'true': [0.000533428885724821, 0.0], 'true,true': [0.000533428885724821, nan], 'true,true,true': [0.000533428885724821, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.01304887762227151, 1.0565305448032876e-05], 'true': [0.00048212538905519124, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.009182091772179274, 9.654359272940361e-06], 'true': [0.009182091772179274, nan], 'true,true': [0.009182091772179274, nan], 'true,true,true': [0.009182091772179274, nan]}, {'': [0.0075154522568519275, 0.0021795533292644042], 'true': [0.0075154522568519275, nan], 'true,true': [0.0075154522568519275, nan], 'true,true,true': [0.0075154522568519275, nan], 'false': [nan, 0.002179553329264397]}, {'': [0.0039336763395611775, 1.6090188762683428e-18], 'true': [0.0006406097955379645, -2.3129646346357427e-18], 'true,true': [0.0006406097955379645, nan], 'true,false': [-2.3129646346357427e-18, nan]}, {'': [0.008709159988046649, 9.214962596308894e-06], 'true': [0.008709159988046649, nan], 'true,true': [0.008709159988046649, nan]}, {'': [0.006954669408909551, 1.0831444142684454e-17], 'true': [0.0004609380851488892, 2.519256760217001e-05], 'true,false': [2.519256760217001e-05, nan], 'true,false,true': [2.519256760217001e-05, nan], 'false': [1.6069017461679898e-17, -5.782411586589357e-19], 'false,true': [1.6069017461679898e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109537;  // std dev = 2.38e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1642151258435549;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839147;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.10850861618730671;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360617;  // std dev = 9.54e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583104;  // std dev = 7.30e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.11030776331262993;  // std dev = 0.124, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.10159632948783642;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601501;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08908305637934126;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0941664633998059;  // std dev = 0.175, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08211392821693132;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08506986286743912;  // std dev = 6.14e-08, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2097577156325357;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return -0.07613347521250478;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07537362637303938;  // std dev = 0.419, 143.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17821818575341122;  // std dev = 0.063, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07094829444122719;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07338501647310042;  // std dev = 8.49e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1536017108455844;  // std dev = 0.057, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.06641176066736415;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06915060217254088;  // std dev = 0.098, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13468160078485872;  // std dev = 0.051, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.0861365089033358;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06426278555027957;  // std dev = 5.16e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return -0.06426278555027964;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080214
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.614 seconds
Total inference time: 1.578 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064147
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.609 seconds
Refined model CLL: -0.064147


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080214
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.087 seconds
Total inference time: 1.578 seconds
AUC ROC: 1.0
Total revision time: 7.087
Best scored revision CLL: -0.064147


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:30:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080214, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.087, 'Inference time': 1.578, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081521, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.992, 'Inference time': 1.856}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995107;  // std dev = 5.67e-08, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.1418510649004884;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7208460607976908;  // std dev = 0.067, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14663987652789656;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12698923077127075;  // std dev = 0.219, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5567461897006175;  // std dev = 0.008, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then return -0.1170278414381602;  // std dev = 0.027, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1131354049275765;  // std dev = 0.165, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.41856978516500826;  // std dev = 0.084, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.09925599414251692;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1017891949906631;  // std dev = 0.108, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32144883309189126;  // std dev = 0.007, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.09072828732046388;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09293008382193638;  // std dev = 0.101, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.23095978243788098;  // std dev = 1.051, 131.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0857651487287709;  // std dev = 0.133, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.18340976551624902;  // std dev = 1.042, 128.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=116 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.16723976434301666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.0707811471097028;  // std dev = 0.766, 245.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.187204092617097;  // std dev = 0.015, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12119805624895588;  // std dev = 1.32e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07450340004632956;  // std dev = 0.123, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13268305227998728;  // std dev = 0.083, 136.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06953868299399034;  // std dev = 0.116, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1433474505977666;  // std dev = 0.132, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1358812182821839;  // std dev = 0.104, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06432719551699682;  // std dev = 4.34e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06432719551699682;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087339
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.174 seconds
Total inference time: 1.88 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066625
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.552 seconds
Parameter learned model CLL: -0.066625


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [5.67e-08, 0, 116], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.926, 1, 6], 'false,false': [0.0, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.067, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.116, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.219, 247, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.008, 0, 122], 'true,false,true': [0.027, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.165, 241, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.084, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.108, 266, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.007, 0, 122], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.101, 223, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.051, 9, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.133, 237, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.042, 12, 116], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [0.766, 239, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.015, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [1.32e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.123, 228, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.083, 14, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.116, 226, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.132, 0, 122], 'true,false,true,true': [0.104, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [4.34e-08, 228, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [5.27e-09, 19, 0]}]]
[{'': [0.0730662635424576, 0.02427644152132361], 'true': [3.3076989423315008e-15, -1.1102230246251566e-17], 'false': [0.12244897959183662, -1.8978171361113786e-16], 'true,false': [-1.1102230246251566e-17, nan], 'true,false,true': [-1.1102230246251566e-17, nan]}, {'': [0.03376142800075632, 0.0001940422360032136], 'true': [3.642717342362254e-05, 0.0022461905692783466], 'true,false': [0.0022461905692783466, nan], 'true,false,true': [0.0022461905692783466, nan], 'true,true': [3.642717342362254e-05, nan]}, {'': [0.048872071898205575, 0.00011311843448733418], 'true': [5.7111502730752694e-05, 0.0007414419277157844], 'true,false': [0.0007414419277157844, nan]}, {'': [0.02338675515001122, 4.4199631536945116e-05], 'true': [5.7556878704201885e-05, 0.0], 'true,true': [5.7556878704201885e-05, nan], 'true,true,true': [5.7556878704201885e-05, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.013894751996831664, 4.567377482609261e-05], 'true': [4.742098099252421e-05, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan], 'true,false,true': [-1.1564823173178713e-18, nan]}, {'': [0.008426258176839707, 7.482021260165598e-05], 'true': [0.008426258176839707, nan], 'true,true': [0.008426258176839707, nan], 'true,true,true': [0.008426258176839707, nan]}, {'': [0.008484734702369032, 0.002421034275376389], 'true': [0.008484734702369032, nan], 'true,true': [0.008484734702369032, nan], 'true,true,true': [0.008484734702369032, nan], 'false': [0.0, 0.002393093833138023]}, {'': [0.006854378661928637, 6.668655500910301e-05], 'true': [0.00021076711293471865, 5.551115123125783e-18], 'true,true': [0.00021076711293471865, nan], 'true,false': [5.551115123125783e-18, nan]}, {'': [0.00684695905173295, 5.981415262167363e-05], 'true': [0.00684695905173295, nan], 'true,true': [0.00684695905173295, nan]}, {'': [0.006567442297867153, 7.191728094737856e-18], 'true': [0.00014212414157304594, 0.0009051278173157507], 'true,false': [0.0009051278173157507, nan], 'true,false,true': [0.0009051278173157507, nan], 'false': [8.277978692380553e-18, 1.460819769243627e-18], 'false,true': [8.277978692380553e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995107;  // std dev = 6.19e-07, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.1418510649004885;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7204923552825019;  // std dev = 0.087, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.13706044126543054;  // std dev = 0.087, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839172;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5564280674278237;  // std dev = 0.112, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1111634710891414;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11268133517474936;  // std dev = 0.085, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4183610988851865;  // std dev = 0.116, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.10064530673249997;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10299081837566881;  // std dev = 0.156, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32132705561663516;  // std dev = 0.107, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.09850825745626966;  // std dev = 0.069, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09254341349140781;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2556173148360903;  // std dev = 0.096, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08949935023423607;  // std dev = 0.113, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08535218465435189;  // std dev = 0.068, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20909737116692292;  // std dev = 1.23e-07, 116.000 (wgt'ed) examples reached here.  /* #pos=116 */
%   | else return -0.07736295378784865;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.07107675075385;  // std dev = 0.748, 244.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1798267286360887;  // std dev = 0.172, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07201836107817813;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.07456389828265277;  // std dev = 0.119, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1548489257720026;  // std dev = 0.155, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.07170812942865987;  // std dev = 0.054, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.0694852830683518;  // std dev = 0.112, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13567443264191723;  // std dev = 0.140, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( female(A) )
%   | | then return -0.06298413550388048;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09881213763867311;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06440512252991416;  // std dev = 8.82e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return -0.06440512252991439;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075993
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.841 seconds
Total inference time: 1.546 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064189
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.83 seconds
Refined model CLL: -0.064189


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075993
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.397 seconds
Total inference time: 1.546 seconds
AUC ROC: 1.0
Total revision time: 8.397
Best scored revision CLL: -0.064189


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:30:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075993, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.397, 'Inference time': 1.546, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.087339, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.174, 'Inference time': 1.88}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995098;  // std dev = 7.74e-08, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return -0.14185106490048788;  // std dev = 5.96e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7218960410229301;  // std dev = 0.146, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1451784999133296;  // std dev = 0.153, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12608743531617503;  // std dev = 0.139, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5578760024735616;  // std dev = 0.015, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then return -0.12257095457995856;  // std dev = 0.031, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11250852339576983;  // std dev = 0.091, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4195013583602252;  // std dev = 0.192, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1106211428420671;  // std dev = 0.108, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10206811821341162;  // std dev = 0.118, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32214321711441146;  // std dev = 0.014, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10282299572134784;  // std dev = 0.119, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09282704838014856;  // std dev = 0.078, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.2385335475789108;  // std dev = 0.999, 172.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08578690667198124;  // std dev = 0.125, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.19410101242772865;  // std dev = 0.911, 165.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=156 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.1466489847819408;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07034768720598822;  // std dev = 0.906, 278.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1848526586630437;  // std dev = 0.020, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12513822207622893;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07421836933063673;  // std dev = 0.096, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12956590932969744;  // std dev = 0.085, 183.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06914263540432515;  // std dev = 0.074, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.142161288554485;  // std dev = 0.212, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1270756655583523;  // std dev = 0.072, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.113937333528532;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06447454933257972;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0644745493325795;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083167
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.562 seconds
Total inference time: 1.844 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066547
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.771 seconds
Parameter learned model CLL: -0.066547


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [7.74e-08, 0, 156], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.449, 3, 7], 'false,false': [5.96e-08, 293, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.146, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.153, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.139, 307, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.015, 0, 163], 'true,false,true': [0.031, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.091, 354, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.192, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.108, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.118, 306, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.014, 0, 163], 'true,false,true,true': [0.119, 17, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.078, 317, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [0.999, 9, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.125, 305, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [0.911, 9, 156], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [0.906, 271, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.02, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.016, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.096, 310, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.085, 20, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.074, 283, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.212, 0, 163], 'true,false,true,true': [0.072, 17, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 287, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 21, 0]}]]
[{'': [0.05157024793389019, 0.022568593493012396], 'true': [6.012284687200848e-15, -9.25185853854297e-18], 'false': [0.20999999999999988, 1.2125302658022188e-17], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan]}, {'': [0.058267569527089655, 6.301112583349462e-05], 'true': [0.00013079776231945616, 0.0015577011406398258], 'true,false': [0.0015577011406398258, nan], 'true,false,true': [0.0015577011406398258, nan], 'true,true': [0.00013079776231945616, nan]}, {'': [0.0488145794356002, 2.3173440507689333e-05], 'true': [0.00021525539880719492, 0.0009437460892530472], 'true,false': [0.0009437460892530472, nan]}, {'': [0.020743890775007337, 4.5641594283933654e-05], 'true': [0.00022632319455486198, 0.0008254837574314726], 'true,false': [0.0008254837574314726, nan], 'true,false,true': [0.0008254837574314726, nan], 'true,true': [0.00022632319455486198, nan], 'true,true,true': [0.00022632319455486198, nan]}, {'': [0.015698206938840296, 1.9062353617454395e-05], 'true': [0.00019224254797598457, 0.0008330754558192615], 'true,false': [0.0008330754558192615, nan], 'true,false,true': [0.0008330754558192615, nan]}, {'': [0.005796881789927938, 5.139134405066182e-05], 'true': [0.005796881789927938, nan], 'true,true': [0.005796881789927938, nan], 'true,true,true': [0.005796881789927938, nan]}, {'': [0.005029222320472007, 0.0029820505571600655], 'true': [0.005029222320472007, nan], 'true,true': [0.005029222320472007, nan], 'true,true,true': [0.005029222320472007, nan], 'false': [0.0, 0.002952075570829969]}, {'': [0.006081476366944407, 2.9573493903145205e-05], 'true': [0.0004005857257418603, 0.0002425305644674005], 'true,true': [0.0004005857257418603, nan], 'true,false': [0.0002425305644674005, nan]}, {'': [0.007190122114158963, 1.9218573252015035e-05], 'true': [0.007190122114158963, nan], 'true,true': [0.007190122114158963, nan]}, {'': [0.007469253020657741, -2.955788572053988e-17], 'true': [0.0002760836149779628, 0.0002747672547138385], 'true,false': [0.00027476725471384375, nan], 'true,false,true': [0.0003065391794651203, 0.0], 'false': [-3.172065784643304e-17, 0.0], 'false,true': [-3.172065784643304e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995098;  // std dev = 9.68e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B) )
%   | then if ( director(A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.1418510649004878;  // std dev = 1.26e-07, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7205265988056622;  // std dev = 0.063, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.14176435691923986;  // std dev = 0.122, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839197;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5564213070989595;  // std dev = 0.079, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.12154014314245322;  // std dev = 0.114, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360658;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4183179963420116;  // std dev = 0.079, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.11663244504105563;  // std dev = 0.175, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.10159632948783638;  // std dev = 6.32e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32127121815224746;  // std dev = 0.072, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.10197972796378951;  // std dev = 0.095, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926046;  // std dev = 1.70e-07, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2555623043732346;  // std dev = 0.063, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09311392147258807;  // std dev = 0.124, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08518475138839678;  // std dev = 1.03e-07, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20911828654569128;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else return -0.07468315429891291;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(A), director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109143;  // std dev = 3.33e-08, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   | | else return 0.18144887030353393;  // std dev = 0.130, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17762832957707037;  // std dev = 0.060, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.08047580506963678;  // std dev = 0.113, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07324622576333696;  // std dev = 1.03e-07, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15315052060176174;  // std dev = 0.054, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( female(A) )
%   | | then return -0.06464347354344584;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08699542498210122;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06848995425802847;  // std dev = 0.010, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13432673860193098;  // std dev = 0.048, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( actor(A) )
%   | | then return -0.05992328423573357;  // std dev = 0.002, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0690856253887786;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then return -0.06418805711409589;  // std dev = 1.00e-07, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   | else return -0.06418805711409613;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0731
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.526 seconds
Total inference time: 1.64 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063747
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.98 seconds
Refined model CLL: -0.063747


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0731
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.839 seconds
Total inference time: 1.64 seconds
AUC ROC: 1.0
Total revision time: 9.839
Best scored revision CLL: -0.063747


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:30:40
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0731, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.839, 'Inference time': 1.64, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083167, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.562, 'Inference time': 1.844}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995093;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else return -0.14185106490048732;  // std dev = 3.01e-07, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7225202517876402;  // std dev = 0.192, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.15332256509728537;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1271700628076341;  // std dev = 0.244, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5585423488249553;  // std dev = 0.017, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then return -0.1148020932481227;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11256465463871633;  // std dev = 0.120, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42004657778266064;  // std dev = 0.255, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.09885823585866788;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1022102227842608;  // std dev = 0.157, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32254718866687215;  // std dev = 0.016, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.0988382565714635;  // std dev = 0.095, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0930102755659849;  // std dev = 0.126, 409.000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.2215537983077785;  // std dev = 1.584, 227.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08531273705423838;  // std dev = 0.096, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.19102097748913646;  // std dev = 1.174, 209.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.1424055493557784;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06949445007794648;  // std dev = 1.103, 390.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18844541323278854;  // std dev = 0.023, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.122648832258813;  // std dev = 0.012, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07405821630511014;  // std dev = 0.090, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1427661476509543;  // std dev = 0.072, 219.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06942314583356807;  // std dev = 0.109, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.14303448097050533;  // std dev = 0.269, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12624875407392108;  // std dev = 0.068, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06445904696758509;  // std dev = 1.62e-07, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06445904696758557;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083947
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.134 seconds
Total inference time: 1.886 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066651
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.007 seconds
Parameter learned model CLL: -0.066651


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [7.74e-08, 0, 194], 'true,false,true,true': [0.0, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.826, 5, 10], 'false,false': [3.01e-07, 406, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.192, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.135, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.244, 377, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.017, 0, 204], 'true,false,true': [0.02, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.12, 406, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.255, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.157, 397, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.016, 0, 204], 'true,false,true,true': [0.095, 17, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.126, 409, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.584, 23, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.096, 385, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.174, 15, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 5, 0], 'false,false': [1.103, 380, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.023, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.012, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.09, 405, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.072, 15, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.109, 379, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.269, 0, 204], 'true,false,true,true': [0.068, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [1.62e-07, 337, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 28, 0]}]]
[{'': [0.07038548752835051, 0.023188765579069813], 'true': [6.15315358802561e-15, -6.938893903907228e-18], 'false': [0.22222222222222215, 2.2313842071283937e-16], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.03442720394543871, 0.00015736041557945355], 'true': [0.0001800946892737415, 0.0018134171761548495], 'true,false': [0.0018134171761548495, nan], 'true,false,true': [0.0018134171761548495, nan], 'true,true': [0.0001800946892737415, nan]}, {'': [0.03088342155893477, 3.566481555454027e-05], 'true': [0.0002993884187074082, 0.0004111237112690673], 'true,false': [0.0004111237112690673, nan]}, {'': [0.02035366994844019, 6.192477803120768e-05], 'true': [0.0003175112767568671, 3.0839528461809902e-18], 'true,true': [0.0003175112767568671, nan], 'true,true,true': [0.0003175112767568671, nan], 'true,false': [3.0839528461809902e-18, nan], 'true,false,true': [3.0839528461809902e-18, nan]}, {'': [0.012899815700988212, 3.8936712291299166e-05], 'true': [0.0002713346553316484, 0.0005347942869839891], 'true,false': [0.0005347942869839891, nan], 'true,false,true': [0.0005347942869839891, nan]}, {'': [0.01105954254119551, 2.4027667827745255e-05], 'true': [0.01105954254119551, nan], 'true,true': [0.01105954254119551, nan], 'true,true,true': [0.01105954254119551, nan]}, {'': [0.006593705412878431, 0.00314774033845774], 'true': [0.006593705412878431, nan], 'true,true': [0.006593705412878431, nan], 'true,true,true': [0.006593705412878431, nan], 'false': [0.0, 0.0031208044851149855]}, {'': [0.0073630376751280865, 2.0043636703758755e-05], 'true': [0.0005205890742139155, 0.00013737819872439486], 'true,true': [0.0005205890742139155, nan], 'true,false': [0.00013737819872439486, nan]}, {'': [0.005115039056768694, 3.149172255828426e-05], 'true': [0.005115039056768694, nan], 'true,true': [0.005115039056768694, nan]}, {'': [0.0069411994688756305, 8.273442813645003e-17], 'true': [0.0003537528131874522, 0.0002027053566089174], 'true,false': [0.0002027053566089174, nan], 'true,false,true': [0.0002027053566089174, nan], 'false': [7.77485560271623e-17, -8.921435019309294e-18], 'false,true': [7.77485560271623e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048738;  // std dev = 2.87e-07, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7202292146111705;  // std dev = 0.076, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1257426846328673;  // std dev = 0.116, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5561345301933844;  // std dev = 0.096, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.11280794161579136;  // std dev = 0.151, 412.000 (wgt'ed) examples reached here.  /* #neg=412 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41810928854109736;  // std dev = 0.098, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1015242809300149;  // std dev = 2.06e-07, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32113272721670527;  // std dev = 0.089, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926093;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09286049001425474;  // std dev = 0.092, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2554697779016068;  // std dev = 0.079, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.08511567194303207;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2092876753133362;  // std dev = 1.03e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( director(A), director(B) )
%   | then return -0.09492897431680368;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.07871743421544433;  // std dev = 0.000, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
%   | | else return 0.22329430517077267;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17725488197694467;  // std dev = 0.057, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07470472706317739;  // std dev = 0.023, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07319177895471553;  // std dev = 0.001, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1528663889299412;  // std dev = 0.051, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.068334064578384;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06855486730529937;  // std dev = 0.070, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1341043435569671;  // std dev = 0.046, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06790502813350689;  // std dev = 0.065, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then return -0.06414188987825625;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | else return -0.06414188987825582;  // std dev = 8.33e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068675
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.66 seconds
Total inference time: 1.668 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063647
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.232 seconds
Refined model CLL: -0.063647


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068675
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.033000000000001 seconds
Total inference time: 1.668 seconds
AUC ROC: 1.0
Total revision time: 11.033000000000001
Best scored revision CLL: -0.063647


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:30:56
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068675, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.033000000000001, 'Inference time': 1.668, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083947, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.134, 'Inference time': 1.886}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.41370449065506787;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7314923333311018;  // std dev = 0.235, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.15029636444694647;  // std dev = 0.105, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12601813989574254;  // std dev = 0.074, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5681720451501561;  // std dev = 0.038, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then return -0.15464164007356584;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11596741868283184;  // std dev = 0.176, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4279300851108899;  // std dev = 0.321, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.09562679326640121;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10270792276910205;  // std dev = 0.108, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3283685392635096;  // std dev = 0.036, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10998553080027369;  // std dev = 0.086, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09564305370566345;  // std dev = 0.160, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21083590523822296;  // std dev = 1.123, 78.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08542076140795145;  // std dev = 0.076, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.18531274890415445;  // std dev = 0.656, 62.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.12875040570098287;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.053635852960327336;  // std dev = 1.142, 145.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.19931922761563908;  // std dev = 0.044, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.1268980368646764;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07526490433950601;  // std dev = 0.070, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14611001884340324;  // std dev = 0.088, 73.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07004523717493737;  // std dev = 0.054, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15031575787839344;  // std dev = 0.295, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1219951118838163;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10100446418487792;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.0649759921401163;  // std dev = 3.25e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06497599214011632;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067574
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.1 seconds
Total inference time: 1.396 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070126
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.497 seconds
Parameter learned model CLL: -0.070126


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [0.0, 0, 57], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.108, 8, 10], 'false,false': [6.32e-08, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.235, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.105, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.074, 130, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.038, 0, 67], 'true,false,true': [0.032, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.176, 129, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.321, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.108, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.036, 0, 67], 'true,false,true,true': [0.086, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.16, 137, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.123, 11, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.076, 123, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [0.656, 5, 57], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false': [1.142, 135, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.044, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.017, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.07, 138, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.088, 6, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.054, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.295, 0, 67], 'true,false,true,true': [0.047, 11, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [3.25e-08, 116, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [3.73e-09, 10, 0]}]]
[{'': [0.04749999999999967, 0.06905769659166817], 'false': [0.24691358024691354, 3.4455197315953135e-17], 'true': [-3.739698609263685e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0820465773440896, 4.242859256763974e-05], 'true': [0.0008233904498865104, 0.0012352165622619704], 'true,false': [0.0012352165622619704, nan], 'true,false,true': [0.0012352165622619704, nan], 'true,true': [0.0008233904498865104, nan]}, {'': [0.05591275346986549, 0.0002396567428873221], 'true': [0.0014185269501581707, 0.0010025903699949397], 'true,false': [0.0010025903699949397, nan]}, {'': [0.027496223513074937, 9.18246444697153e-05], 'true': [0.0015407621565567723, -1.734723475976807e-18], 'true,true': [0.0015407621565567723, nan], 'true,true,true': [0.0015407621565567723, nan], 'true,false': [-1.734723475976807e-18, nan], 'true,false,true': [-1.734723475976807e-18, nan]}, {'': [0.022969960874687848, 0.000186357858586963], 'true': [0.0013317267438692007, 0.0007469415033870289], 'true,false': [0.0007469415033870289, nan], 'true,false,true': [0.0007469415033870289, nan]}, {'': [0.01616492877978292, 4.681463462922026e-05], 'true': [0.01616492877978292, nan], 'true,true': [0.01616492877978292, nan], 'true,true,true': [0.01616492877978292, nan]}, {'': [0.006945753982369851, 0.008917098797440907], 'false': [-2.3129646346357427e-18, 0.008987221658182859], 'true': [0.006945753982369851, nan], 'true,true': [0.006945753982369851, nan], 'true,true,true': [0.006945753982369851, nan]}, {'': [0.011900228587939878, 3.5059634518299344e-05], 'true': [0.0019337902038699191, 0.0003026681316412247], 'true,true': [0.0019337902038699191, nan], 'true,false': [0.0003026681316412247, nan]}, {'': [0.007675750893793036, 2.5567676704111547e-05], 'true': [0.007675750893793036, nan], 'true,true': [0.007675750893793036, nan]}, {'': [0.011370096458457067, 5.28677630773884e-18], 'true': [0.001301298022337299, 0.00022944859206197994], 'true,false': [0.00022944859206197994, nan], 'true,false,true': [0.00019760963277309413, -2.3129646346357427e-18], 'false': [9.092343736154299e-18, 1.3877787807814458e-18], 'false,true': [9.092343736154299e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7213288010875015;  // std dev = 0.087, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12800812602897912;  // std dev = 0.183, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5572999145150729;  // std dev = 0.112, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11206104876871593;  // std dev = 2.98e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41905651016267537;  // std dev = 0.115, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.1013858471267217;  // std dev = 6.14e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3218310118641354;  // std dev = 0.106, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09269127618926097;  // std dev = 6.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.09251501315742966;  // std dev = 7.45e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25598123473626266;  // std dev = 0.095, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08592134971353799;  // std dev = 0.096, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20855684631665755;  // std dev = 8.16e-08, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(A), director(B) )
%   | then return -0.07858407611316522;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then return -0.07858407611316506;  // std dev = 5.05e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else return 0.22062145139584605;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17754592533152738;  // std dev = 0.072, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.08248744762102414;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.0739491934478415;  // std dev = 0.084, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15309639552870535;  // std dev = 0.065, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.082215183902341;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06870485924397925;  // std dev = 0.056, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13429036678076878;  // std dev = 0.058, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then return -0.06856777730701201;  // std dev = 0.034, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07468824315124564;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.0639851343114956;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return -0.06398513431149552;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.628 seconds
Total inference time: 1.186 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064675
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.25 seconds
Refined model CLL: -0.064675


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.4750000000000005 seconds
Total inference time: 1.186 seconds
AUC ROC: 1.0
Total revision time: 6.4750000000000005
Best scored revision CLL: -0.064675


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:31:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063659, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.4750000000000005, 'Inference time': 1.186, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067574, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.1, 'Inference time': 1.396}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995107;  // std dev = 5.67e-08, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.41697246451127695;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | else return -0.14185106490048818;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7308171755271793;  // std dev = 0.323, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1514333728688895;  // std dev = 0.182, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12720429241602974;  // std dev = 0.182, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.567443779153479;  // std dev = 0.037, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then return -0.1372099696352352;  // std dev = 0.033, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11377180998503116;  // std dev = 0.166, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4273337662949832;  // std dev = 0.442, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12291909654036871;  // std dev = 0.154, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1030220538983222;  // std dev = 0.165, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3279298408610556;  // std dev = 0.035, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10179531138607836;  // std dev = 0.126, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09420958307778544;  // std dev = 0.163, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21693244613343024;  // std dev = 1.478, 153.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08534065425359426;  // std dev = 0.094, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.1680095973881239;  // std dev = 1.206, 133.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=115 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.12936601761314617;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.05427981622242187;  // std dev = 1.572, 276.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1999526711585924;  // std dev = 0.042, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12894950176165337;  // std dev = 0.019, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07534402297348546;  // std dev = 0.091, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11055235063589675;  // std dev = 0.120, 170.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07021816607169772;  // std dev = 0.085, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15525967457096834;  // std dev = 0.406, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.11855357530797213;  // std dev = 0.066, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.10142376329394993;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06505580130149202;  // std dev = 8.02e-08, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06505580130149216;  // std dev = 5.27e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067479
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.44 seconds
Total inference time: 1.448 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.996 seconds
Parameter learned model CLL: -0.070467


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [5.67e-08, 0, 115], 'true,false,true,true': [0.0, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.895, 15, 19], 'false,false': [0.0, 257, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.323, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.182, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.182, 256, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.037, 0, 134], 'true,false,true': [0.033, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.166, 253, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.442, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.154, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.165, 258, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.035, 0, 134], 'true,false,true,true': [0.126, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.163, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.478, 19, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 258, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.206, 18, 115], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 5, 0], 'false,false': [1.572, 257, 19]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.042, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.019, 18, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.091, 240, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.12, 36, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.085, 254, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.406, 0, 134], 'true,false,true,true': [0.066, 18, 0], 'true,false,true,false': [7.45e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [8.02e-08, 201, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [5.27e-09, 32, 0]}]]
[{'': [0.1020710059171633, 0.06102903839113893], 'true': [3.3364615418300357e-15, -1.4802973661668754e-17], 'false': [0.24653979238754284, -1.0022246759262114e-16], 'true,false': [-1.4802973661668754e-17, nan], 'true,false,true': [-1.4802973661668754e-17, nan]}, {'': [0.10679036056258569, 0.00012901590851156775], 'true': [0.0007788584794752539, 0.0012757825905063051], 'true,false': [0.0012757825905063051, nan], 'true,false,true': [0.0012757825905063051, nan], 'true,true': [0.0007788584794752539, nan]}, {'': [0.07856056609967758, 0.00010947667659116681], 'true': [0.001340183006790978, 0.001101972340983793], 'true,false': [0.001101972340983793, nan]}, {'': [0.04257317698796883, 0.00010593231492589266], 'true': [0.0014550565707585426, 0.0009128903170965366], 'true,true': [0.0014550565707585426, nan], 'true,true,true': [0.0014550565707585426, nan], 'true,false': [0.0009128903170965366, nan], 'true,false,true': [0.0009128903170965366, nan]}, {'': [0.02628431970551417, 0.00010828792544964379], 'true': [0.0012579056434882563, 0.0006107533918222095], 'true,false': [0.0006107533918222095, nan], 'true,false,true': [0.0006107533918222095, nan]}, {'': [0.01428223436228314, 3.423611368802082e-05], 'true': [0.01428223436228314, nan], 'true,true': [0.01428223436228314, nan], 'true,true,true': [0.01428223436228314, nan]}, {'': [0.010939962966936997, 0.008896121152266971], 'true': [0.010939962966936997, nan], 'true,true': [0.010939962966936997, nan], 'true,true,true': [0.010939962966936997, nan], 'false': [0.0, 0.008956963592267938]}, {'': [0.012881823605680543, 3.427541278314868e-05], 'true': [0.0017537046763770904, 0.0003582388965614716], 'true,true': [0.0017537046763770904, nan], 'true,false': [0.0003582388965614716, nan]}, {'': [0.014394247387481964, 2.867114923509652e-05], 'true': [0.014394247387481964, nan], 'true,true': [0.014394247387481964, nan]}, {'': [0.011888600181003722, 3.716626434367477e-17], 'true': [0.001233064735908756, 0.00021314523372968316], 'true,false': [0.00021314523372968676, nan], 'true,false,true': [0.00024403197501695554, 4.270088556250602e-18], 'false': [3.203628628271596e-17, 8.673617379884035e-19], 'false,true': [3.203628628271596e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995107;  // std dev = 6.19e-07, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.14185106490048838;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109557;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839177;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462834;  // std dev = 4.84e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.11231637819360675;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158309;  // std dev = 4.04e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10159632948783656;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014967;  // std dev = 2.53e-07, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926049;  // std dev = 7.60e-08, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 9.42e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.08518475138839678;  // std dev = 8.69e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253545;  // std dev = 1.76e-07, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109144;  // std dev = 6.83e-08, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.20975771563253567;  // std dev = 2.98e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.177096497745278;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.0732462257633367;  // std dev = 1.26e-07, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936713;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.06842697784420261;  // std dev = 6.83e-08, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13400703000801084;  // std dev = 8.16e-08, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202623;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.309 seconds
Total inference time: 1.221 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064052
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.891 seconds
Refined model CLL: -0.064052


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.636 seconds
Total inference time: 1.221 seconds
AUC ROC: 1.0
Total revision time: 8.636
Best scored revision CLL: -0.064052


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:31:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.636, 'Inference time': 1.221, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067479, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.44, 'Inference time': 1.448}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995096;  // std dev = 8.16e-08, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.4735335504841266;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=32 */
%   | else return -0.14185106490048752;  // std dev = 2.37e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7306864230948882;  // std dev = 0.367, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1413932527551707;  // std dev = 0.201, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1287987426950699;  // std dev = 0.320, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5671850752884385;  // std dev = 0.034, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then return -0.15016169173441915;  // std dev = 0.038, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11369343248658269;  // std dev = 0.216, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4270083960836606;  // std dev = 0.494, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11305855248039211;  // std dev = 0.180, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10350858618352976;  // std dev = 0.252, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3276122024526756;  // std dev = 0.032, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10604417516511387;  // std dev = 0.150, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09488247053324325;  // std dev = 0.242, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21275431337369197;  // std dev = 1.897, 233.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08610124285841077;  // std dev = 0.192, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.18388914685322094;  // std dev = 1.172, 186.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=170 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.13546822787523646;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.052753290481799754;  // std dev = 1.989, 413.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1988606109985836;  // std dev = 0.040, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.1321344062445352;  // std dev = 0.022, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07652381871505766;  // std dev = 0.180, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13800099781406064;  // std dev = 0.094, 228.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07042551808517497;  // std dev = 0.135, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1509564326228385;  // std dev = 0.472, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12174020309994404;  // std dev = 0.080, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.10565916233282445;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06485557142025977;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06485557142025936;  // std dev = 7.45e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067459
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.88 seconds
Total inference time: 1.467 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.59 seconds
Parameter learned model CLL: -0.070714


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [8.16e-08, 0, 170], 'true,false,true,true': [1.49e-08, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.508, 20, 32], 'false,false': [2.37e-07, 355, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.367, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.201, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.32, 377, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.034, 0, 202], 'true,false,true': [0.038, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.216, 361, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.494, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.18, 38, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.252, 395, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.032, 0, 202], 'true,false,true,true': [0.15, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.242, 336, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.897, 31, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.192, 383, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.172, 16, 170], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.45e-09, 9, 0], 'false,false': [1.989, 381, 32]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.04, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.022, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.18, 340, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.094, 26, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.135, 371, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.472, 0, 202], 'true,false,true,true': [0.08, 23, 0], 'true,false,true,false': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 305, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [7.45e-09, 47, 0]}]]
[{'': [0.10840684451058133, 0.07244233288459435], 'true': [6.687461042448002e-15, 9.25185853854297e-18], 'false': [0.236686390532546, 1.5762039560875463e-16], 'true,false': [9.25185853854297e-18, nan], 'true,false,true': [9.25185853854297e-18, nan]}, {'': [0.10024396768256835, 0.0002715003562302043], 'true': [0.000667949194501594, 0.0010901069818055969], 'true,false': [0.0010901069818055969, nan], 'true,false,true': [0.0010901069818055969, nan], 'true,true': [0.000667949194501594, nan]}, {'': [0.06329115732385891, 0.00012918118494407567], 'true': [0.0011307392320587593, 0.0014629445604178483], 'true,false': [0.0014629445604178483, nan]}, {'': [0.04002191597563497, 0.00016134945823390436], 'true': [0.0012089216564764725, 0.000852762602415896], 'true,true': [0.0012089216564764725, nan], 'true,true,true': [0.0012089216564764725, nan], 'true,false': [0.000852762602415896, nan], 'true,false,true': [0.000852762602415896, nan]}, {'': [0.020567638598588855, 0.00017373429150307245], 'true': [0.001033044978358978, 0.0008302452287742167], 'true,false': [0.0008302452287742167, nan], 'true,false,true': [0.0008302452287742167, nan]}, {'': [0.015443961819508243, 9.577938607220533e-05], 'true': [0.015443961819508243, nan], 'true,true': [0.015443961819508243, nan], 'true,true,true': [0.015443961819508243, nan]}, {'': [0.007385468365899833, 0.00951324109228394], 'false': [6.1679056923619804e-18, 0.009574637099548587], 'true': [0.007385468365899833, nan], 'true,true': [0.007385468365899833, nan], 'true,true,true': [0.007385468365899833, nan]}, {'': [0.014692277872780704, 9.494310718110349e-05], 'true': [0.0016304936276606817, 0.0004732269789466005], 'true,true': [0.0016304936276606817, nan], 'true,false': [0.0004732269789466005, nan]}, {'': [0.008802031337531097, 4.90405987323339e-05], 'true': [0.008802031337531097, nan], 'true,true': [0.008802031337531097, nan]}, {'': [0.01011501286433851, -3.7217703666411495e-17], 'true': [0.0011007976031483376, 0.00023901533255196573], 'true,false': [0.00023901533255196882, nan], 'true,false,true': [0.0002807276681320979, -2.135044278125301e-18], 'false': [-3.20326643170537e-17, 1.1810883240693154e-18], 'false,true': [-3.20326643170537e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995096;  // std dev = 1.07e-06, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B) )
%   | then if ( director(A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.8581489350995116;  // std dev = 2.15e-07, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.1418510649004875;  // std dev = 2.46e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.12544463852839213;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 6.42e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.11231637819360658;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.10159632948783634;  // std dev = 8.69e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014906;  // std dev = 4.00e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.092691276189261;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.09269127618926076;  // std dev = 1.66e-07, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694884;  // std dev = 4.15e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253512;  // std dev = 2.89e-07, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109141;  // std dev = 9.42e-08, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.20975771563253584;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527783;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.07324622576333716;  // std dev = 5.96e-08, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.0684269778442032;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13400703000801092;  // std dev = 8.69e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.06419184008202614;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A) )
%   | then return -0.0641918400820258;  // std dev = 1.50e-07, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | else return -0.06419184008202614;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.595 seconds
Total inference time: 1.101 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.274 seconds
Refined model CLL: -0.06406


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.338999999999999 seconds
Total inference time: 1.101 seconds
AUC ROC: 1.0
Total revision time: 10.338999999999999
Best scored revision CLL: -0.06406


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:31:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.338999999999999, 'Inference time': 1.101, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067459, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.88, 'Inference time': 1.467}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099509;  // std dev = 7.30e-08, 222.000 (wgt'ed) examples reached here.  /* #pos=222 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.493284070234648;  // std dev = 4.141, 74.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=47 */
%   | else return -0.1418510649004876;  // std dev = 9.42e-08, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7312652895602869;  // std dev = 0.420, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1444864359764999;  // std dev = 0.245, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12844075233209873;  // std dev = 0.355, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5677525884357071;  // std dev = 0.033, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then return -0.13352559460916605;  // std dev = 0.036, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11527254105095873;  // std dev = 0.360, 518.000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42741921528388477;  // std dev = 0.562, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12965476842624996;  // std dev = 0.229, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10450207753360251;  // std dev = 0.339, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32787807292745225;  // std dev = 0.032, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1037747979506817;  // std dev = 0.212, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09420861779752969;  // std dev = 0.269, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21363848992705597;  // std dev = 2.185, 309.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08647070589573914;  // std dev = 0.251, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.18335597381939736;  // std dev = 1.341, 243.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=222 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.13757124379571464;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.04960240326498884;  // std dev = 2.363, 544.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=47 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.19947768935434634;  // std dev = 0.040, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12320030069185672;  // std dev = 0.019, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0764233113511112;  // std dev = 0.208, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13648550779599294;  // std dev = 0.097, 305.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0700922551966233;  // std dev = 0.133, 540.000 (wgt'ed) examples reached here.  /* #neg=540 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15156049563413418;  // std dev = 0.540, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1291482693079626;  // std dev = 0.143, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.107197024304227;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.0649571989579094;  // std dev = 9.31e-08, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0649571989579094;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06755
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.532 seconds
Total inference time: 1.438 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070743
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.083 seconds
Parameter learned model CLL: -0.070743


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [7.3e-08, 0, 222], 'true,false,true,true': [3.49e-08, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.141, 27, 47], 'false,false': [9.42e-08, 489, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.42, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.245, 46, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.355, 497, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.033, 0, 269], 'true,false,true': [0.036, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.36, 518, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.562, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.229, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.339, 472, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.032, 0, 269], 'true,false,true,true': [0.212, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.269, 485, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [2.185, 40, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.251, 488, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.341, 21, 222], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.29e-08, 22, 0], 'false,false': [2.363, 497, 47]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.04, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.019, 53, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.208, 481, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.097, 36, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.133, 540, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.54, 0, 269], 'true,false,true,true': [0.143, 43, 0], 'true,false,true,false': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [9.31e-08, 431, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 59, 0]}]]
[{'': [0.11763993398840747, 0.07651221412819655], 'true': [5.249054444353893e-15, 3.489272363107635e-17], 'false': [0.2317384952520089, 1.8163157867078227e-17], 'true,false': [3.489272363107635e-17, nan], 'true,false,true': [3.489272363107635e-17, nan]}, {'': [0.09639400882027817, 0.0002534597061107379], 'true': [0.0006567816692645431, 0.0013053241801972934], 'true,false': [0.0013053241801972934, nan], 'true,false,true': [0.0013053241801972934, nan], 'true,true': [0.0006567816692645431, nan]}, {'': [0.07045020944491126, 0.0002506769537649176], 'true': [0.0011056788971065162, 0.0012999696950078642], 'true,false': [0.0012999696950078642, nan]}, {'': [0.03680478580490101, 0.00024314309828499811], 'true': [0.0011752197489262332, 0.001281909765394708], 'true,false': [0.001281909765394708, nan], 'true,false,true': [0.001281909765394708, nan], 'true,true': [0.0011752197489262332, nan], 'true,true,true': [0.0011752197489262332, nan]}, {'': [0.027227853525761805, 0.00014966552430333588], 'true': [0.0009993708020369161, 0.000813885366450581], 'true,false': [0.000813885366450581, nan], 'true,false,true': [0.000813885366450581, nan]}, {'': [0.015454576133127678, 0.00012898440724513335], 'true': [0.015454576133127678, nan], 'true,true': [0.015454576133127678, nan], 'true,true,true': [0.015454576133127678, nan]}, {'': [0.007395126389973426, 0.010154695268671469], 'false': [7.569702440626067e-18, 0.010264572682328282], 'true': [0.007395126389973426, nan], 'true,true': [0.007395126389973426, nan], 'true,true,true': [0.007395126389973426, nan]}, {'': [0.01572171590638727, 9.030670829842295e-05], 'true': [0.0016093651646737444, 0.0003654100344942209], 'true,true': [0.0016093651646737444, nan], 'true,false': [0.0003654100344942209, nan]}, {'': [0.009460823520647926, 3.281359895936673e-05], 'true': [0.009460823520647926, nan], 'true,true': [0.009460823520647926, nan]}, {'': [0.012105326659542412, 1.9032394707859827e-17], 'true': [0.001084007967829272, 0.00044340864461164575], 'true,false': [0.0004434086446116344, nan], 'true,false,true': [0.0004777247803428857, -1.214306433183765e-17], 'false': [2.0092203229875222e-17, -7.997369245181213e-18], 'false,true': [2.0092203229875222e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099509;  // std dev = 1.08e-06, 222.000 (wgt'ed) examples reached here.  /* #pos=222 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( director(A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.06e-07, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.14185106490048763;  // std dev = 8.43e-08, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839122;  // std dev = 4.71e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.1254446385283923;  // std dev = 0.000, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 3.58e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360633;  // std dev = 3.33e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.1123163781936059;  // std dev = 0.000, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.10159632948783552;  // std dev = 3.22e-07, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601503;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.09269127618926125;  // std dev = 2.98e-08, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948784;  // std dev = 3.32e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0851847513883968;  // std dev = 2.24e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.08518475138839678;  // std dev = 1.35e-07, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253492;  // std dev = 2.89e-07, 222.000 (wgt'ed) examples reached here.  /* #pos=222 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109179;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109193;  // std dev = 0.000, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.20975771563253537;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527705;  // std dev = 1.19e-07, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 9.13e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333702;  // std dev = 1.25e-07, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.0684269778442035;  // std dev = 0.000, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13400703000801129;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.06419184008202615;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then return -0.0641918400820255;  // std dev = 2.20e-07, 439.000 (wgt'ed) examples reached here.  /* #neg=439 */
%   | else return -0.06419184008202616;  // std dev = 5.27e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.076 seconds
Total inference time: 1.216 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064058
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.156 seconds
Refined model CLL: -0.064058


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.847000000000001 seconds
Total inference time: 1.216 seconds
AUC ROC: 1.0
Total revision time: 11.847000000000001
Best scored revision CLL: -0.064058


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:31:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.847000000000001, 'Inference time': 1.216, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06755, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.532, 'Inference time': 1.438}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 6.41e-08, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.5065005834511614;  // std dev = 4.555, 91.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=59 */
%   | else return -0.1418510649004886;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7308997164597363;  // std dev = 0.455, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.15086438816641376;  // std dev = 0.295, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1279053631508858;  // std dev = 0.354, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.567338776446376;  // std dev = 0.032, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then return -0.1291077256330793;  // std dev = 0.035, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11477637060251608;  // std dev = 0.362, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4270624556388152;  // std dev = 0.607, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12114914982610538;  // std dev = 0.259, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10417128313661346;  // std dev = 0.372, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32760367080600317;  // std dev = 0.030, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.10850296599908055;  // std dev = 0.231, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09383552163780487;  // std dev = 0.278, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.2152604046778242;  // std dev = 2.371, 386.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08658787897309243;  // std dev = 0.288, 632.000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.1808344472268106;  // std dev = 1.570, 307.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=278 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.13934080506900237;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.048278239590896097;  // std dev = 2.630, 636.000 (wgt'ed) examples reached here.  /* #neg=577 #pos=59 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1992712477336726;  // std dev = 0.039, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.13097370323913338;  // std dev = 0.024, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07618419013627094;  // std dev = 0.215, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12318434407796809;  // std dev = 0.110, 403.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07073260125859132;  // std dev = 0.181, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15309936362138385;  // std dev = 0.590, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12195386492886114;  // std dev = 0.133, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.10841508615923541;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06511171746762616;  // std dev = 2.11e-07, 553.000 (wgt'ed) examples reached here.  /* #neg=553 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06511171746762655;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067654
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.06 seconds
Total inference time: 1.384 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07093
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.19 seconds
Parameter learned model CLL: -0.07093


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [6.41e-08, 0, 278], 'true,false,true,true': [4.47e-08, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.555, 32, 59], 'false,false': [0.0, 600, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.455, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.295, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.354, 584, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.032, 0, 337], 'true,false,true': [0.035, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.362, 609, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.607, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.259, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.372, 628, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.03, 0, 337], 'true,false,true,true': [0.231, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.278, 635, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [2.371, 49, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.288, 632, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.57, 29, 278], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 17, 0], 'false,false': [2.63, 577, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.039, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.024, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.215, 635, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.11, 66, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.181, 622, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.59, 0, 337], 'true,false,true,true': [0.133, 48, 0], 'true,false,true,false': [1.83e-08, 25, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [2.11e-07, 553, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [1.67e-08, 66, 0]}]]
[{'': [0.11601207286420358, 0.07809315972782267], 'true': [4.089454594302735e-15, 4.6474452193611206e-17], 'false': [0.22799178843134837, -3.7007434154171886e-16], 'true,false': [4.6474452193611206e-17, nan], 'true,false,true': [4.6474452193611206e-17, nan]}, {'': [0.09205626870279389, 0.00021495838120474383], 'true': [0.0006151830373269001, 0.001636947968204618], 'true,false': [0.001636947968204618, nan], 'true,false,true': [0.001636947968204618, nan], 'true,true': [0.0006151830373269001, nan]}, {'': [0.04884359707563101, 0.00021550170931081944], 'true': [0.001031479400344943, 0.0011920750099589663], 'true,false': [0.0011920750099589663, nan]}, {'': [0.038293866959417805, 0.0002204519491677449], 'true': [0.0010926590056415924, 0.0011804396805815472], 'true,false': [0.0011804396805815472, nan], 'true,false,true': [0.0011804396805815472, nan], 'true,true': [0.0010926590056415924, nan], 'true,true,true': [0.0010926590056415924, nan]}, {'': [0.023874345805742835, 0.0001215750467230287], 'true': [0.0009270694737100532, 0.0009742485099608077], 'true,false': [0.0009742485099608077, nan], 'true,false,true': [0.0009742485099608077, nan]}, {'': [0.014564548304849899, 0.00013162682037655643], 'true': [0.014564548304849899, nan], 'true,true': [0.014564548304849899, nan], 'true,true,true': [0.014564548304849899, nan]}, {'': [0.008026059173242039, 0.010799257264672976], 'false': [0.0, 0.010872035119242254], 'true': [0.008026059173242039, nan], 'true,true': [0.008026059173242039, nan], 'true,true,true': [0.008026059173242039, nan]}, {'': [0.013837303789202525, 7.266585732499142e-05], 'true': [0.0015113253277563253, 0.0005591416052567341], 'true,true': [0.0015113253277563253, nan], 'true,false': [0.0005591416052567341, nan]}, {'': [0.012084779252373012, 5.278162328686313e-05], 'true': [0.012084779252373012, nan], 'true,true': [0.012084779252373012, nan]}, {'': [0.011602126126063374, 1.2698512139492904e-16], 'true': [0.001034027540743043, 0.0002837789112672779], 'true,false': [0.00028377891126727485, nan], 'true,false,true': [0.0003688069581780362, 1.3322676295501878e-17], 'false': [8.030546290236214e-17, 4.20539024479226e-18], 'false,true': [8.030546290236214e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.1418510649004887;  // std dev = 0.000, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1254446385283923;  // std dev = 0.000, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360567;  // std dev = 0.000, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783505;  // std dev = 4.53e-07, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716015116;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.09269127618926189;  // std dev = 0.000, 643.000 (wgt'ed) examples reached here.  /* #neg=643 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948745;  // std dev = 3.91e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.08518475138839678;  // std dev = 1.60e-07, 632.000 (wgt'ed) examples reached here.  /* #neg=632 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253479;  // std dev = 2.56e-07, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109179;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109261;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.20975771563253487;  // std dev = 4.71e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527644;  // std dev = 2.98e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07324622576333642;  // std dev = 2.76e-07, 647.000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367155;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420367;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13400703000801187;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then return -0.06419184008202532;  // std dev = 2.44e-07, 534.000 (wgt'ed) examples reached here.  /* #neg=534 */
%   | else return -0.06419184008202616;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.784 seconds
Total inference time: 1.19 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.017 seconds
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.050999999999998 seconds
Total inference time: 1.19 seconds
AUC ROC: 1.0
Total revision time: 14.050999999999998
Best scored revision CLL: -0.064062


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:32:04
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.050999999999998, 'Inference time': 1.19, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067654, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.06, 'Inference time': 1.384}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7253070809882565;  // std dev = 0.190, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1407427711259489;  // std dev = 0.098, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5616895872679885;  // std dev = 0.031, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then return -0.11878736679899389;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11450369668576531;  // std dev = 0.115, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.422789894360678;  // std dev = 0.267, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11151349500623103;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10185640323661856;  // std dev = 0.048, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32469767891746215;  // std dev = 0.031, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.09824698703168791;  // std dev = 0.068, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09451560808742193;  // std dev = 0.107, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.20541070941600467;  // std dev = 1.132, 79.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08597370064923639;  // std dev = 0.071, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.18312126813626609;  // std dev = 0.787, 70.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.11714994602737445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06988036132553119;  // std dev = 0.816, 132.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.19436562099956517;  // std dev = 0.036, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12534937536243276;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07481025196467565;  // std dev = 0.070, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12461145764364759;  // std dev = 0.102, 79.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07000698970259488;  // std dev = 0.072, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.14952123622398386;  // std dev = 0.250, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12385269263441863;  // std dev = 0.035, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.09265264434194426;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06423340280659826;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06423340280659817;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066932
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.928 seconds
Total inference time: 1.424 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069475
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.526 seconds
Parameter learned model CLL: -0.069475


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [0.0, 0, 63], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.491, 5, 4], 'false,false': [0.0, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.19, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.098, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.031, 0, 67], 'true,false,true': [0.019, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.115, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.267, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.082, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.048, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.031, 0, 67], 'true,false,true,true': [0.068, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.107, 132, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.132, 12, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.071, 111, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [0.787, 7, 63], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [0.816, 128, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.036, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.01, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.07, 123, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.102, 12, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.072, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.25, 0, 67], 'true,false,true,true': [0.035, 12, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 105, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 12, 0]}]]
[{'': [0.10937499999999921, 0.028344610794395136], 'true': [-7.894919286223335e-16, -9.25185853854297e-18], 'false': [0.2469135802469134, -2.7755575615628914e-17], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan]}, {'': [0.1126604630434243, 5.4601132358614255e-17], 'true': [0.000535999139601623, 0.0006435903676742516], 'true,false': [0.0006435903676742516, nan], 'true,false,true': [0.0006435903676742516, nan], 'true,true': [0.000535999139601623, nan]}, {'': [0.06387023329928639, 0.00011004033028130614], 'true': [0.0009494409876221594, 0.0003508755505784188], 'true,false': [0.0003508755505784188, nan]}, {'': [0.045366493040810814, 2.196300919286126e-05], 'true': [0.0010667418107267838, 0.0004239001534054633], 'true,true': [0.0010667418107267838, nan], 'true,true,true': [0.0010667418107267838, nan], 'true,false': [0.0004239001534054633, nan], 'true,false,true': [0.0004239001534054633, nan]}, {'': [0.028659839467592305, 8.65347685088122e-05], 'true': [0.0009513162921635452, 0.00029040363248149063], 'true,false': [0.00029040363248149063, nan], 'true,false,true': [0.00029040363248149063, nan]}, {'': [0.01622554585163559, 4.525910856518507e-05], 'true': [0.01622554585163559, nan], 'true,true': [0.01622554585163559, nan], 'true,true,true': [0.01622554585163559, nan]}, {'': [0.008858467290202052, 0.005022397942244822], 'true': [0.008858467290202052, nan], 'true,true': [0.008858467290202052, nan], 'true,true,true': [0.008858467290202052, nan], 'false': [0.0, 0.0050436463089637675]}, {'': [0.007830483229885474, 4.0082209989145315e-05], 'true': [0.0013083101079287398, 0.00010837408887753863], 'true,true': [0.0013083101079287398, nan], 'true,false': [0.00010837408887753863, nan]}, {'': [0.010449601252843665, 4.1188019303778796e-05], 'true': [0.010449601252843665, nan], 'true,true': [0.010449601252843665, nan]}, {'': [0.011469552091153946, -2.7518348473614992e-17], 'true': [0.0009307842962008512, 0.00023593975329543697], 'true,false': [0.00023593975329544808, nan], 'true,false,true': [0.00010023608892874986, 0.0], 'false': [-2.2733138123277014e-17, 0.0], 'false,true': [-2.2733138123277014e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.723184189964049;  // std dev = 0.121, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.12544463852839136;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5592349809677238;  // std dev = 0.155, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11765387404281671;  // std dev = 0.083, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.11231637819360618;  // std dev = 9.54e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42059804098350556;  // std dev = 0.160, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10897061922976478;  // std dev = 0.075, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10159632948783638;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32294542425114364;  // std dev = 0.148, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09162774096496487;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926098;  // std dev = 4.08e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25678383459112186;  // std dev = 0.132, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09557038488226234;  // std dev = 0.087, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.0851847513883968;  // std dev = 6.66e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2073628479579024;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | else return -0.07719250207317795;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A), director(B) )
%   | | then return 0.13160449767264348;  // std dev = 0.471, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.07876309738059248;  // std dev = 0.002, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17934605876038404;  // std dev = 0.130, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( female(A) )
%   | | then return -0.10823386090673859;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07178638026469952;  // std dev = 9.36e-05, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324711356312556;  // std dev = 2.03e-06, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1544866046581621;  // std dev = 0.117, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.06658356197767042;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842775134771666;  // std dev = 2.08e-06, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13539296757833816;  // std dev = 0.105, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11033253273220212;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0631562318011072;  // std dev = 8.60e-05, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06419174028553619;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06419256070331684;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return -0.06419256070331676;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064742
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.8 seconds
Total inference time: 1.335 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064519
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.378 seconds
Refined model CLL: -0.064519


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064742
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.632 seconds
Total inference time: 1.335 seconds
AUC ROC: 1.0
Total revision time: 6.632
Best scored revision CLL: -0.064519


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:32:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064742, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.632, 'Inference time': 1.335, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066932, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.928, 'Inference time': 1.424}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995106;  // std dev = 6.05e-08, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.29564893509951234;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | else return -0.14185106490048843;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7297904837588083;  // std dev = 0.350, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.13600704525477866;  // std dev = 0.088, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12740973745423131;  // std dev = 0.166, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5665759401896847;  // std dev = 0.040, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then return -0.12831717727878847;  // std dev = 0.024, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11394429792135664;  // std dev = 0.152, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4268647763429132;  // std dev = 0.494, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10930814832213724;  // std dev = 0.092, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10269663282025107;  // std dev = 0.123, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3277586926140782;  // std dev = 0.040, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.09669223400861711;  // std dev = 0.078, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09400980191408664;  // std dev = 0.129, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.1950811448721946;  // std dev = 1.821, 164.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08697663276207174;  // std dev = 0.148, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.1788243787893303;  // std dev = 1.138, 135.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=120 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.1161517183196332;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.05921040310627347;  // std dev = 1.481, 264.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20071629338096852;  // std dev = 0.046, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12205496962502042;  // std dev = 0.010, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07439756990288318;  // std dev = 0.053, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12731222782100787;  // std dev = 0.108, 159.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06998508267760753;  // std dev = 0.075, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15371093239955394;  // std dev = 0.447, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.11693991316347185;  // std dev = 0.021, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.09196101807190125;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06473782594346077;  // std dev = 2.98e-08, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06473782594346084;  // std dev = 1.18e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067321
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.455 seconds
Total inference time: 1.452 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070133
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.256 seconds
Parameter learned model CLL: -0.070133


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [6.05e-08, 0, 120], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.806, 18, 14], 'false,false': [0.0, 207, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.35, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.088, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.166, 258, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.04, 0, 134], 'true,false,true': [0.024, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.152, 254, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.494, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.092, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.123, 232, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.04, 0, 134], 'true,false,true,true': [0.078, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.129, 230, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.821, 30, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.148, 252, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.138, 15, 120], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 10, 0], 'false,false': [1.481, 250, 14]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.046, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.01, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.053, 264, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.108, 25, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.075, 230, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.447, 0, 134], 'true,false,true,true': [0.021, 19, 0], 'true,false,true,false': [2.63e-09, 6, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [2.98e-08, 196, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [1.18e-08, 33, 0]}]]
[{'': [0.11800631437296608, 0.05514609338071756], 'true': [3.671137468093851e-15, 0.0], 'false': [0.24609374999999953, -2.4028015218940584e-16], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.07229567087422485, 0.00010683798147721434], 'true': [0.0009123597027710555, 0.0004834458886990717], 'true,true': [0.0009123597027710555, nan], 'true,false': [0.0004834458886990717, nan], 'true,false,true': [0.0004834458886990717, nan]}, {'': [0.06367120782526556, 9.053725990578926e-05], 'true': [0.0016225583996074245, 0.0005813764614951977], 'true,false': [0.0005813764614951977, nan]}, {'': [0.03755378537845773, 6.552548606839549e-05], 'true': [0.001821305720684403, 0.0003680242006184283], 'true,true': [0.001821305720684403, nan], 'true,true,true': [0.001821305720684403, nan], 'true,false': [0.0003680242006184283, nan], 'true,false,true': [0.0003680242006184283, nan]}, {'': [0.02527456990512797, 7.201118918876257e-05], 'true': [0.0016172800328788219, 0.000245876696763071], 'true,false': [0.000245876696763071, nan], 'true,false,true': [0.000245876696763071, nan]}, {'': [0.020213493472640003, 8.676832835525113e-05], 'true': [0.020213493472640003, nan], 'true,true': [0.020213493472640003, nan], 'true,true,true': [0.020213493472640003, nan]}, {'': [0.009594604620905538, 0.00811938415392624], 'true': [0.009594604620905538, nan], 'true,true': [0.009594604620905538, nan], 'true,true,true': [0.009594604620905538, nan], 'false': [-5.551115123125783e-18, 0.008308603978954457]}, {'': [0.017003547207675027, 1.0588431344405407e-05], 'true': [0.002125781608184893, 0.00010311780033436705], 'true,true': [0.002125781608184893, nan], 'true,false': [0.00010311780033436705, nan]}, {'': [0.011598938328365779, 2.4590970181574387e-05], 'true': [0.011598938328365779, nan], 'true,true': [0.011598938328365779, nan]}, {'': [0.010561316253466273, 1.1635525148909937e-17], 'true': [0.0014940340702680266, 0.00013220884293538182], 'true,false': [0.00013220884293538404, nan], 'true,false,true': [2.4212155863380746e-05, 1.1564823173178713e-18], 'false': [4.5315225494904345e-18, 4.20539024479226e-18], 'false,true': [4.5315225494904345e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995106;  // std dev = 6.64e-07, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7914822684328456;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.1418510649004881;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7208584253711855;  // std dev = 0.047, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1271197416157189;  // std dev = 0.244, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5567376888015705;  // std dev = 0.058, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.11266511722894114;  // std dev = 0.131, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41854535837122964;  // std dev = 0.058, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.10286492870902664;  // std dev = 0.209, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32142034279448223;  // std dev = 0.052, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.09380735435288115;  // std dev = 0.195, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25566094444423887;  // std dev = 0.045, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.08518475138839682;  // std dev = 1.75e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.08527598759515731;  // std dev = 0.106, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20893256131396168;  // std dev = 1.63e-07, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( director(A), director(B) )
%   | then return -0.07845082138431937;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A), director(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.22016501122631602;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07722965758957692;  // std dev = 0.298, 244.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=1 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17771376935930036;  // std dev = 0.063, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.07326179438509677;  // std dev = 0.000194, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.07457453127254522;  // std dev = 0.186, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15321637936813987;  // std dev = 0.056, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else return -0.06844392794773563;  // std dev = 0.000179, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06911354173262658;  // std dev = 0.152, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13437890094533123;  // std dev = 0.051, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( actor(A) )
%   | | then return -0.06420115892442693;  // std dev = 0.000174, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.0743116981367758;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.063894079709145;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return -0.0638940797091449;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063674
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.289 seconds
Total inference time: 1.325 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064624
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.678 seconds
Refined model CLL: -0.064624


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063674
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.678 seconds
Total inference time: 1.325 seconds
AUC ROC: 1.0
Total revision time: 8.678
Best scored revision CLL: -0.064624


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:32:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063674, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.678, 'Inference time': 1.325, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067321, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.455, 'Inference time': 1.452}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995094;  // std dev = 8.02e-08, 182.000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.3709694479200248;  // std dev = 3.121, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else return -0.14185106490048752;  // std dev = 2.33e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.728114680270199;  // std dev = 0.370, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14804635248249337;  // std dev = 0.207, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12752223340439597;  // std dev = 0.221, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5646335019821942;  // std dev = 0.034, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then return -0.12191370186122097;  // std dev = 0.024, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11376802751159405;  // std dev = 0.194, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4251305397167257;  // std dev = 0.513, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11218850665508764;  // std dev = 0.129, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.103726204842689;  // std dev = 0.230, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32637558136159484;  // std dev = 0.034, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1019899680814894;  // std dev = 0.126, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09358492209089754;  // std dev = 0.165, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.2138787467587437;  // std dev = 1.851, 232.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08674601709312713;  // std dev = 0.186, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.17799476454683708;  // std dev = 1.374, 204.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=182 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.12407677066840686;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06007626590762767;  // std dev = 1.695, 367.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1964895011285852;  // std dev = 0.040, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12681096338478595;  // std dev = 0.015, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07526602855400198;  // std dev = 0.132, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12979533544106703;  // std dev = 0.101, 234.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07031470870016834;  // std dev = 0.133, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15038164810449234;  // std dev = 0.472, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12965398385232793;  // std dev = 0.088, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.09761276467280482;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06459422110819937;  // std dev = 6.83e-08, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06459422110819962;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067217
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.671 seconds
Total inference time: 1.438 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0701
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.567 seconds
Parameter learned model CLL: -0.0701


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [8.02e-08, 0, 182], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.121, 19, 20], 'false,false': [2.33e-07, 354, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.37, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.207, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.221, 359, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.034, 0, 202], 'true,false,true': [0.024, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.194, 374, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.513, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.129, 29, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.23, 396, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.034, 0, 202], 'true,false,true,true': [0.126, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.165, 386, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [1.851, 30, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.186, 356, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.374, 22, 182], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'false,false': [1.695, 347, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.04, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.015, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.132, 373, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.101, 32, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.133, 392, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.472, 0, 202], 'true,false,true,true': [0.088, 32, 0], 'true,false,true,false': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [6.83e-08, 319, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 39, 0]}]]
[{'': [0.08190000000000623, 0.04830073357548519], 'true': [6.4026927837723315e-15, -3.0839528461809902e-18], 'false': [0.24983563445101892, 1.5304769379013457e-16], 'true,false': [-3.0839528461809902e-18, nan], 'true,false,true': [-3.0839528461809902e-18, nan]}, {'': [0.11013124230038032, 0.00013655521483092338], 'true': [0.0006795107744091153, 0.0010216749473261528], 'true,false': [0.0010216749473261528, nan], 'true,false,true': [0.0010216749473261528, nan], 'true,true': [0.0006795107744091153, nan]}, {'': [0.055471061680377146, 0.00010013734133504356], 'true': [0.0011830304607561948, 0.000583226738916021], 'true,false': [0.000583226738916021, nan]}, {'': [0.03290611667305059, 0.00013399012192382478], 'true': [0.0013029087706371385, 0.0005722476115843549], 'true,true': [0.0013029087706371385, nan], 'true,true,true': [0.0013029087706371385, nan], 'true,false': [0.0005722476115843549, nan], 'true,false,true': [0.0005722476115843549, nan]}, {'': [0.022714807929236847, 7.04149147748114e-05], 'true': [0.001141286643969719, 0.0004942299406295314], 'true,false': [0.0004942299406295314, nan], 'true,false,true': [0.0004942299406295314, nan]}, {'': [0.014773770374258501, 9.745952924408999e-05], 'true': [0.014773770374258501, nan], 'true,true': [0.014773770374258501, nan], 'true,true,true': [0.014773770374258501, nan]}, {'': [0.009252376902190964, 0.007760420829368206], 'true': [0.009252376902190964, nan], 'true,true': [0.009252376902190964, nan], 'true,true,true': [0.009252376902190964, nan], 'false': [0.0, 0.00783177544439346]}, {'': [0.012597115968178705, 4.6650835045566835e-05], 'true': [0.0015877043200263966, 0.00022352909360608724], 'true,true': [0.0015877043200263966, nan], 'true,false': [0.00022352909360608724, nan]}, {'': [0.010133178245756538, 4.51044088128004e-05], 'true': [0.010133178245756538, nan], 'true,true': [0.010133178245756538, nan]}, {'': [0.012115955795856111, 3.2252288983524104e-17], 'true': [0.001104134597638285, 0.00038692949332848954], 'true,false': [0.0003869294933284872, nan], 'true,false,true': [0.00024065171678040037, 0.0], 'false': [1.4617356437071026e-17, -4.981769982292369e-18], 'false,true': [1.4617356437071026e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995094;  // std dev = 1.08e-06, 182.000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.14185106490048752;  // std dev = 2.37e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.12544463852839213;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 6.31e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.1123163781936065;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583101;  // std dev = 2.67e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.10159632948783592;  // std dev = 2.23e-07, 409.000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014894;  // std dev = 4.13e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926082;  // std dev = 1.58e-07, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694884;  // std dev = 2.46e-07, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.0851847513883968;  // std dev = 2.17e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253506;  // std dev = 3.04e-07, 182.000 (wgt'ed) examples reached here.  /* #pos=182 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( director(A), director(B) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109141;  // std dev = 8.16e-08, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527786;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.07324622576333703;  // std dev = 8.94e-08, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367147;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.06842697784420329;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13400703000801092;  // std dev = 8.94e-08, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202623;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.06419184008202615;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(A) )
%   | then return -0.06419184008202586;  // std dev = 1.39e-07, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.607 seconds
Total inference time: 1.251 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.031 seconds
Refined model CLL: -0.064085


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.876 seconds
Total inference time: 1.251 seconds
AUC ROC: 1.0
Total revision time: 9.876
Best scored revision CLL: -0.064085


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:32:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.876, 'Inference time': 1.251, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067217, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.671, 'Inference time': 1.438}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995088;  // std dev = 7.07e-08, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.3742779673575757;  // std dev = 3.935, 62.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=32 */
%   | else return -0.14185106490048732;  // std dev = 2.49e-07, 464.000 (wgt'ed) examples reached here.  /* #neg=464 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7297943604850989;  // std dev = 0.461, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1461481166590425;  // std dev = 0.180, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1278187439356523;  // std dev = 0.285, 518.000 (wgt'ed) examples reached here.  /* #neg=518 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.566433398344824;  // std dev = 0.037, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then return -0.1329271316751261;  // std dev = 0.030, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11347715285242461;  // std dev = 0.205, 492.000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42659740391650486;  // std dev = 0.637, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11452158442831242;  // std dev = 0.156, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.103099356543365;  // std dev = 0.233, 536.000 (wgt'ed) examples reached here.  /* #neg=536 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32745193942767215;  // std dev = 0.036, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.09764933736225437;  // std dev = 0.139, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09310063503756441;  // std dev = 0.149, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.21117867528537415;  // std dev = 2.232, 312.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08626978033221208;  // std dev = 0.183, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.169200534055681;  // std dev = 1.746, 274.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=237 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.12460922988544294;  // std dev = 9.13e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.057798401504421615;  // std dev = 2.121, 539.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.19964478398702268;  // std dev = 0.042, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.1258946858863732;  // std dev = 0.016, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07515044164156402;  // std dev = 0.133, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13750218241825765;  // std dev = 0.097, 304.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07060861882099931;  // std dev = 0.150, 485.000 (wgt'ed) examples reached here.  /* #neg=485 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15159296824087376;  // std dev = 0.575, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12335562263782889;  // std dev = 0.094, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.09798153118072825;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.06481700738684636;  // std dev = 0.000, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06481700738684634;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067393
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.211 seconds
Total inference time: 1.43 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.607 seconds
Parameter learned model CLL: -0.070319


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [7.07e-08, 0, 237], 'true,false,true,true': [3.94e-08, 38, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.935, 30, 32], 'false,false': [2.49e-07, 464, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.461, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.18, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.285, 518, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.037, 0, 269], 'true,false,true': [0.03, 49, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.205, 492, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.637, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.156, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.233, 536, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.036, 0, 269], 'true,false,true,true': [0.139, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.149, 512, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [2.232, 43, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.183, 460, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.746, 37, 237], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [9.13e-09, 13, 0], 'false,false': [2.121, 507, 32]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.042, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.016, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.133, 530, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.097, 35, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.15, 485, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.575, 0, 269], 'true,false,true,true': [0.094, 43, 0], 'true,false,true,false': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 416, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [0.0, 53, 0]}]]
[{'': [0.11908760330578978, 0.057135421937574225], 'true': [4.916835808635292e-15, 4.0902953538821554e-17], 'false': [0.24973985431841988, 1.339924340064844e-16], 'true,false': [4.0902953538821554e-17, nan], 'true,false,true': [4.0902953538821554e-17, nan]}, {'': [0.0754903094423932, 0.000156566013466002], 'true': [0.000788928364582576, 0.000985858215424575], 'true,false': [0.000985858215424575, nan], 'true,false,true': [0.000985858215424575, nan], 'true,true': [0.000788928364582576, nan]}, {'': [0.06505029600744333, 8.537012911623863e-05], 'true': [0.0013732857688580997, 0.0008841950678886429], 'true,false': [0.0008841950678886429, nan]}, {'': [0.03253007306546895, 0.00010170625347708667], 'true': [0.0015094068773069485, 0.0006540423145318409], 'true,true': [0.0015094068773069485, nan], 'true,true,true': [0.0015094068773069485, nan], 'true,false': [0.0006540423145318409, nan], 'true,false,true': [0.0006540423145318409, nan]}, {'': [0.024730767664506898, 4.362859908568252e-05], 'true': [0.0013183701489711695, 0.00039437683623102105], 'true,false': [0.00039437683623102105, nan], 'true,false,true': [0.00039437683623102105, nan]}, {'': [0.01596992035089415, 7.249967904210493e-05], 'true': [0.01596992035089415, nan], 'true,true': [0.01596992035089415, nan], 'true,true,true': [0.01596992035089415, nan]}, {'': [0.011129500009309718, 0.00825014937531355], 'true': [0.011129500009309718, nan], 'true,true': [0.011129500009309718, nan], 'true,true,true': [0.011129500009309718, nan], 'false': [6.4051328343759035e-18, 0.008344009511458804]}, {'': [0.014169620243368874, 3.3480484802068076e-05], 'true': [0.0017893904112772044, 0.000247747614661217], 'true,true': [0.0017893904112772044, nan], 'true,false': [0.000247747614661217, nan]}, {'': [0.009390151432680507, 4.656075721885871e-05], 'true': [0.009390151432680507, nan], 'true,true': [0.009390151432680507, nan]}, {'': [0.011200247576839708, -2.6039345993340558e-17], 'true': [0.0012270880253311199, 0.00026796404047663147], 'true,false': [0.0002679640404766191, nan], 'true,false,true': [0.00020535946828577893, -3.784851220313033e-18], 'false': [-2.028292064219036e-17, -9.426421907194725e-18], 'false,true': [-2.028292064219036e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995088;  // std dev = 1.08e-06, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.1418510649004872;  // std dev = 2.86e-07, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7203976579710221;  // std dev = 0.123, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.12544463852839127;  // std dev = 3.94e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.12633816181585686;  // std dev = 0.207, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5563293825862738;  // std dev = 0.159, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.11362359822978957;  // std dev = 0.239, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4182823509536726;  // std dev = 0.164, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783631;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10245412177117753;  // std dev = 0.207, 521.000 (wgt'ed) examples reached here.  /* #neg=521 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32126994009704934;  // std dev = 0.152, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.09284815807299855;  // std dev = 0.126, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25557603227808956;  // std dev = 0.135, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.0857493067136182;  // std dev = 0.166, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20915865411132553;  // std dev = 9.42e-08, 237.000 (wgt'ed) examples reached here.  /* #pos=237 */
%   | else return -0.07877675473109179;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( director(A), director(B) )
%   | then return -0.1020124362235812;  // std dev = 0.134, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( actor(B) )
%   | | then return -0.07850287480948256;  // std dev = 0.000, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.21671337890930842;  // std dev = 0.113, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17732275569617756;  // std dev = 0.104, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.07376395081066096;  // std dev = 0.151, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1529215565608783;  // std dev = 0.094, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06862041409472538;  // std dev = 0.108, 451.000 (wgt'ed) examples reached here.  /* #neg=451 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13414999951023995;  // std dev = 0.084, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.08162259472940749;  // std dev = 0.118, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A) )
%   | then return -0.06393896948975537;  // std dev = 1.85e-07, 425.000 (wgt'ed) examples reached here.  /* #neg=425 */
%   | else return -0.06393896948975585;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063633
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.202 seconds
Total inference time: 1.137 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064292
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.533 seconds
Refined model CLL: -0.064292


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063633
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.552999999999999 seconds
Total inference time: 1.137 seconds
AUC ROC: 1.0
Total revision time: 11.552999999999999
Best scored revision CLL: -0.064292


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:32:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063633, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.552999999999999, 'Inference time': 1.137, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067393, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.211, 'Inference time': 1.43}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), ta(F, A, G).;true;false
0;true,true,true;ta(H, E, G).;false;false
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
0;false;professor(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;publication(C, D), tempadvisedby(D, B).;false;true
1;true,true,false;tempadvisedby(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), ta(I, H, J).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;publication(I, A).;true;true
2;true,false,true;projectmember(J, B).;false;false
2;true,false,false;publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
3;true,false;tempadvisedby(K, B), publication(L, A).;true;true
3;true,false,true;publication(M, B), ta(N, K, P).;false;false
3;true,false,false;tempadvisedby(Q, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), publication(C, A).;true;true
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;true
4;true,true,true;ta(G, A, F).;false;false
4;true,true,false;ta(H, A, I).;false;false
4;true,false;tempadvisedby(J, B), publication(K, J).;true;true
4;true,false,true;publication(K, B).;false;false
4;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;ta(F, E, G), publication(H, E).;false;false
5;true,false;ta(I, A, J).;true;true
5;true,false,true;ta(I, K, L), tempadvisedby(K, M).;false;false
5;true,false,false;tempadvisedby(N, B).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(G, B), ta(H, F, I).;false;false
6;true,true,false;sameperson(B, D), publication(J, A).;false;false
6;true,false;ta(K, A, L), publication(M, B).;false;true
6;true,false,false;publication(N, A), publication(N, B).;false;false
6;false;professor(A), professor(B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
7;true,true,true;tempadvisedby(G, B), sameperson(A, D).;false;false
7;true,true,false;tempadvisedby(H, B), ta(I, H, J).;false;false
7;true,false;ta(K, A, L), publication(M, B).;true;true
7;true,false,true;tempadvisedby(N, B).;false;false
7;true,false,false;publication(P, A), publication(Q, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), tempadvisedby(E, D).;true;false
8;true,true,true;ta(F, E, G), tempadvisedby(H, B).;false;false
8;true,false;ta(I, A, J), tempadvisedby(K, B).;false;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
9;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
9;true;student(A), publication(C, A).;false;true
9;true,false;publication(D, A), tempadvisedby(E, B).;true;true
9;true,false,true;student(A), ta(F, E, G).;false;false
9;true,false,false;tempadvisedby(H, B), ta(I, H, J).;false;false
9;false;tempadvisedby(K, B), student(A).;true;false
9;false,true;publication(L, A), projectmember(M, B).;false;true
9;false,true,false;projectmember(N, B), ta(P, K, Q).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995085;  // std dev = 6.32e-08, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.4863540633046411;  // std dev = 4.268, 78.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | else return -0.1418510649004887;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7294550468159088;  // std dev = 0.444, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14501431732039693;  // std dev = 0.263, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12772271095624724;  // std dev = 0.352, 645.000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5658599659158131;  // std dev = 0.031, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then return -0.1284474636959866;  // std dev = 0.033, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11464984080032586;  // std dev = 0.349, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4259253355789184;  // std dev = 0.596, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1175107801644449;  // std dev = 0.237, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10361093731790826;  // std dev = 0.329, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32681603488461064;  // std dev = 0.030, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.11388275230711953;  // std dev = 0.191, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09540337731301521;  // std dev = 0.368, 642.000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.2038573533732602;  // std dev = 2.650, 399.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08610839282050975;  // std dev = 0.248, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.17159817857075194;  // std dev = 1.906, 332.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=288 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(A), director(B) )
%   | then return -0.13691638124360922;  // std dev = 1.39e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.05332584636837285;  // std dev = 2.461, 652.000 (wgt'ed) examples reached here.  /* #neg=603 #pos=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20073135977886228;  // std dev = 0.038, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12476213239327316;  // std dev = 0.021, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07603099222713844;  // std dev = 0.227, 649.000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12499300501090742;  // std dev = 0.109, 402.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07053693511312373;  // std dev = 0.186, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.15384111337357026;  // std dev = 0.574, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12388950024249099;  // std dev = 0.140, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.10672629151336394;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( movie(E, A) )
%   | | then return -0.0648130127863423;  // std dev = 0.000, 550.000 (wgt'ed) examples reached here.  /* #neg=550 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06481301278634233;  // std dev = 2.11e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.456 seconds
Total inference time: 1.487 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070631
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.466 seconds
Parameter learned model CLL: -0.070631


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)', 'false': 'director(B)'}, {'true,true': [6.32e-08, 0, 288], 'true,false,true,true': [4.08e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [4.268, 29, 49], 'false,false': [0.0, 617, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F)'}, {'true,true,true': [0.444, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.263, 53, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.352, 645, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,true': [0.031, 0, 337], 'true,false,true': [0.033, 65, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.349, 619, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.596, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.237, 56, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.329, 630, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.03, 0, 337], 'true,false,true,true': [0.191, 36, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.368, 642, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,true,true,true': [2.65, 62, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.248, 611, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'false': 'director(A), director(B)'}, {'true,true,true,true': [1.906, 44, 288], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.39e-08, 13, 0], 'false,false': [2.461, 603, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.038, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.021, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.227, 649, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.109, 65, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.186, 608, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'actor(A)', 'false': 'actor(A)', 'false,true': 'movie(E, A)'}, {'true,true': [0.574, 0, 337], 'true,false,true,true': [0.14, 47, 0], 'true,false,true,false': [0.0, 24, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 550, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [2.11e-08, 59, 0]}]]
[{'': [0.10504166315967048, 0.06553283991511936], 'true': [4.046146134189459e-15, 4.2700885562506023e-17], 'false': [0.23356344510190669, -4.174582523712096e-16], 'true,false': [4.2700885562506023e-17, nan], 'true,false,true': [4.2700885562506023e-17, nan]}, {'': [0.0904816491657405, 0.0001917104460911645], 'true': [0.0005855982135352245, 0.0013084887874093554], 'true,false': [0.0013084887874093554, nan], 'true,false,true': [0.0013084887874093554, nan], 'true,true': [0.0005855982135352245, nan]}, {'': [0.06634583216060669, 0.00019633999456610058], 'true': [0.000987154448289097, 0.001088110045580076], 'true,false': [0.001088110045580076, nan]}, {'': [0.03713039601751664, 0.00017191233256038998], 'true': [0.001052643464046447, 0.0009999670765029214], 'true,true': [0.001052643464046447, nan], 'true,true,true': [0.001052643464046447, nan], 'true,false': [0.0009999670765029214, nan], 'true,false,true': [0.0009999670765029214, nan]}, {'': [0.01784553090109813, 0.00021047722788259806], 'true': [0.0008985665811052453, 0.0010171777601995131], 'true,false': [0.0010171777601995131, nan], 'true,false,true': [0.0010171777601995131, nan]}, {'': [0.017598835944003542, 0.00010106409016067857], 'true': [0.017598835944003542, nan], 'true,true': [0.017598835944003542, nan], 'true,true,true': [0.017598835944003542, nan]}, {'': [0.010937621308684949, 0.00924447820312667], 'true': [0.010937621308684949, nan], 'true,true': [0.010937621308684949, nan], 'true,true,true': [0.010937621308684949, nan], 'false': [1.4945309946877107e-17, 0.009292205271257868]}, {'': [0.013387835670100792, 7.948034355101022e-05], 'true': [0.001422060488195719, 0.0004356811613926698], 'true,true': [0.001422060488195719, nan], 'true,false': [0.0004356811613926698, nan]}, {'': [0.011837243468768159, 5.66806594601193e-05], 'true': [0.011837243468768159, nan], 'true,true': [0.011837243468768159, nan]}, {'': [0.011494279121475715, -4.8127894663553587e-17], 'true': [0.0009760629649487416, 0.0003413505174637675], 'true,false': [0.00034135051746377374, nan], 'true,false,true': [0.0004160822687200187, -4.625929269271485e-18], 'false': [-8.881784197001253e-18, 7.526935760170553e-18], 'false,true': [-8.881784197001253e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;director(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;false;director(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), movie(C, B).;true;true
9;true;actor(A), movie(C, A).;true;true
9;true,false;actor(A).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995085;  // std dev = 1.08e-06, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( director(A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.8581489350995122;  // std dev = 1.69e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.1418510649004888;  // std dev = 0.000, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.12544463852839233;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1123163781936057;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783512;  // std dev = 4.26e-07, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926161;  // std dev = 0.000, 564.000 (wgt'ed) examples reached here.  /* #neg=564 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948745;  // std dev = 3.91e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 1.63e-07, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253476;  // std dev = 2.53e-07, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( director(A), director(B) )
%   | then return -0.0787767547310918;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109252;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.20975771563253504;  // std dev = 6.32e-08, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07324622576333648;  // std dev = 2.64e-07, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420364;  // std dev = 0.000, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.13400703000801187;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A) )
%   | then return -0.06419184008202536;  // std dev = 2.43e-07, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.414 seconds
Total inference time: 1.242 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.469 seconds
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.805 seconds
Total inference time: 1.242 seconds
AUC ROC: 1.0
Total revision time: 13.805
Best scored revision CLL: -0.064087


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:33:11
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.805, 'Inference time': 1.242, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067464, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.456, 'Inference time': 1.487}}


