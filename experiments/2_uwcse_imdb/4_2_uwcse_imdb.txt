Starting experiment #4 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(G, A) )
%   | | then if ( hasposition(H, C), publication(G, H) )
%   | | | then return 0.13814893509951237;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.4831489350995123;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.7018989350995116;  // std dev = 2.054, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else return 0.471785298735875;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
%   else if ( student(B) )
%   | then return -0.14185106490048807;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else return -0.10481402786345073;  // std dev = 0.189, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then return 0.7238786604864862;  // std dev = 0.073, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.5766162693538115;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return 0.07493762963071315;  // std dev = 1.926, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.7886573287083126;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.41975472949894155;  // std dev = 1.565, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.5814183632079393;  // std dev = 3.239, 68.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=55 */
%   else return -0.12605879292925284;  // std dev = 0.019, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.5542783650876655;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.31645826441363795;  // std dev = 1.246, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.5654787660573459;  // std dev = 0.095, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( ta(I, A, J) )
%   | | then if ( publication(K, B) )
%   | | | then return 0.37478020495042286;  // std dev = 2.937, 46.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=33 */
%   | | | else return 0.03550602388409047;  // std dev = 1.479, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( publication(L, A), publication(M, B) )
%   | | | then return 0.06641314556705163;  // std dev = 1.528, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.5134752142178579;  // std dev = 2.367, 39.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   else return -0.11272318936547245;  // std dev = 0.015, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, E, G) )
%   | | | then return 0.3652905321023982;  // std dev = 3.479, 110.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=91 */
%   | | | else return 0.14317424552013963;  // std dev = 1.399, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.03791687817250419;  // std dev = 1.105, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( projectmember(H, B), publication(I, A) )
%   | | then return 0.7062334388096291;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.3230567438963649;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10516406313175305;  // std dev = 2.008, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else return -0.10200079079190447;  // std dev = 0.016, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( publication(F, B), publication(F, A) )
%   | | then if ( publication(F, G), ta(H, G, I) )
%   | | | then return 0.21927632952616083;  // std dev = 1.528, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return 0.3501249733984241;  // std dev = 0.143, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( publication(J, A), publication(K, B) )
%   | | | then return 0.04614349611524152;  // std dev = 2.124, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.26230443946826193;  // std dev = 3.403, 69.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=54 */
%   | else if ( publication(L, B) )
%   | | then if ( publication(L, A) )
%   | | | then return 0.32898112371711885;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11110343279338793;  // std dev = 1.574, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.30058169801511403;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( publication(M, A) )
%   | then return -0.09416955276964589;  // std dev = 0.114, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else return -0.08344661160846653;  // std dev = 0.106, 56.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.31221677002842385;  // std dev = 0.168, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.20533235660769697;  // std dev = 0.941, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( ta(H, C, I), publication(J, A) )
%   | | | then return -0.2475717828035666;  // std dev = 1.062, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.0718942925985735;  // std dev = 3.636, 63.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | else if ( publication(K, A) )
%   | | then if ( publication(K, L), ta(M, L, N) )
%   | | | then return 0.001035540322657195;  // std dev = 1.937, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.2690428385245326;  // std dev = 1.135, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( ta(P, A, Q) )
%   | | | then return 0.3279253245489047;  // std dev = 0.904, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.21045113755797715;  // std dev = 1.598, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.08563101139947064;  // std dev = 0.013, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), professor(D) )
%   | | then if ( publication(C, B) )
%   | | | then return 0.24351626331183604;  // std dev = 0.239, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return 0.054015048417147764;  // std dev = 2.320, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.4269285627955458;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.48135025993406994;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(I, G) )
%   | | | then return -0.21980874540362141;  // std dev = 1.571, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.056895963828866074;  // std dev = 2.710, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | else if ( tempadvisedby(J, B), ta(K, A, L) )
%   | | | then return -0.15621471881930493;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14435455692668048;  // std dev = 2.442, 35.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=27 */
%   else return -0.07904225808904843;  // std dev = 0.010, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( publication(F, A) )
%   | | then if ( publication(E, G), ta(H, G, I) )
%   | | | then return 0.31219764969598934;  // std dev = 0.747, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.05498972769211199;  // std dev = 0.685, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.36669363489329126;  // std dev = 0.101, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2141006724695199;  // std dev = 0.986, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( publication(K, A), publication(K, B) )
%   | | then if ( publication(K, L), tempadvisedby(M, L) )
%   | | | then return 0.1889161065922713;  // std dev = 0.081, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.2051557411464239;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( projectmember(N, B) )
%   | | | then return 0.2767109480440933;  // std dev = 0.939, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.006322733659988955;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   else return -0.07361741785626014;  // std dev = 0.011, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.16259193052146276;  // std dev = 0.119, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.048766690216127694;  // std dev = 2.800, 50.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=31 */
%   | | else if ( publication(E, A) )
%   | | | then return 0.17493516380048657;  // std dev = 1.532, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.23623200442535938;  // std dev = 1.041, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return -0.07072709347608956;  // std dev = 0.001, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( student(B) )
%   | then return -0.06845603929762714;  // std dev = 0.004, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( publication(F, A), ta(G, A, H) )
%   | | then return 0.2188528438156376;  // std dev = 0.951, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( student(A), hasposition(B, I) )
%   | | | then return -0.17965833058997743;  // std dev = 2.413, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.04232650623611025;  // std dev = 0.620, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( publication(E, F), ta(G, F, H) )
%   | | then if ( samecourse(C, G) )
%   | | | then return 0.08481599804564224;  // std dev = 1.330, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.24164544307168412;  // std dev = 0.859, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( publication(E, I), inphase(I, J) )
%   | | | then return -0.05196286827323209;  // std dev = 1.422, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.20546259839680675;  // std dev = 0.598, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | then if ( publication(L, A), ta(M, K, N) )
%   | | | then return 0.1375944037595329;  // std dev = 0.026, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.0660605479211839;  // std dev = 2.579, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | else if ( ta(P, A, Q), publication(R, A) )
%   | | | then return -0.10632520839513782;  // std dev = 1.183, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06735069356465628;  // std dev = 2.840, 48.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=34 */
%   else return -0.06462765457945396;  // std dev = 0.017, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995123;  // std dev = 8.43e-08, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7296989110300826;  // std dev = 0.173, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12997617628552965;  // std dev = 0.097, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.13189963475798394;  // std dev = 0.289, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5659646067255993;  // std dev = 0.028, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, B) )
%   | | then return -0.1301474566495165;  // std dev = 0.116, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11421024945401329;  // std dev = 0.156, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.35246951982217617;  // std dev = 0.189, 75.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10551886821958649;  // std dev = 0.217, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.330420908195212;  // std dev = 1.07e-07, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13593100524610258;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.05216846853616282;  // std dev = 1.682, 122.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.28932647167744496;  // std dev = 0.467, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.16254711894594118;  // std dev = 0.216, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.091104978345871;  // std dev = 0.179, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23443082609791405;  // std dev = 0.417, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return -0.1211849363604763;  // std dev = 0.129, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08378110964272976;  // std dev = 0.153, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.13385280368761565;  // std dev = 1.189, 81.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07781492230424357;  // std dev = 0.143, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17556969999461644;  // std dev = 0.345, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.14493774358762768;  // std dev = 0.209, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.13096344594399012;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.06924473242251668;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11165795979553861;  // std dev = 0.105, 76.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0663943388955197;  // std dev = 0.089, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065651
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.821 seconds
Total inference time: 1.797 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074504
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.439 seconds
Parameter learned model CLL: -0.074504


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [8.43e-08, 0, 53], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [8.43e-08, 108, 0], 'false,false': [1.879, 5, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.173, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.097, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.289, 139, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.028, 0, 65], 'true,false,true': [0.116, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.156, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.189, 10, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.217, 126, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [1.07e-07, 0, 53], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [5.27e-09, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.682, 110, 12], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.467, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.216, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.179, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.417, 0, 65], 'true,true,true,false': [0.129, 12, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.153, 104, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.189, 16, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.143, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.345, 0, 65], 'true,true,false,true': [0.209, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 7, 0], 'false,true': [0.0, 110, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.105, 11, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.089, 105, 0]}]]
[{'': [0.07877526753864438, 0.08678399999999944], 'false': [6.579099405186112e-17, 0.20761245674740453], 'true': [1.340646671245472e-16, -2.7755575615628915e-18], 'true,true': [1.340646671245472e-16, nan], 'true,true,true': [1.340646671245472e-16, nan], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.1400800515514102, 0.0006018563246807956], 'true': [0.0004618103152753205, 0.0004312315233317583], 'true,true': [0.0004618103152753205, nan], 'true,false': [0.0004312315233317583, nan], 'true,false,true': [0.0004312315233317583, nan]}, {'': [0.05683260078666431, 0.00022506602431250684], 'true': [0.0007607943197796247, 0.0013369386818998519], 'true,false': [0.0013369386818998519, nan]}, {'': [0.035898237685408105, 0.00037266656806021206], 'true': [0.035898237685408105, nan], 'true,true': [0.035898237685408105, nan]}, {'': [0.02478184935238912, 0.023183821018457243], 'true': [0.02478184935238912, nan], 'true,true': [2.178550840773892e-16, 3.469446951953614e-18], 'false': [0.02318382101845724, nan], 'true,true,true': [2.178550840773892e-16, nan], 'true,true,false': [3.469446951953614e-18, nan]}, {'': [0.03563010852506261, 0.0002636280293889078], 'true': [0.0033497781710847855, 0.002912984863570802], 'true,true': [0.0033497781710847855, nan], 'true,false': [0.002912984863570802, nan]}, {'': [0.019112218922006367, 0.00022465843524621985], 'true': [0.019112218922006367, nan], 'true,true': [0.019112218922006367, nan], 'true,true,true': [0.002675813660276007, 0.0013886294610189961]}, {'': [0.01746486185215605, 0.000210681776628707], 'true': [0.01746486185215605, nan], 'true,true': [0.01746486185215605, nan], 'true,true,true': [0.01746486185215605, nan]}, {'': [0.021925134040114837, -6.0557619525008536e-18], 'true': [0.019404601300508677, -3.96508223080413e-18], 'true,true': [0.0018308781462863795, 0.002417962337207159], 'true,true,false': [0.002417962337207159, nan], 'false': [-6.0557619525008536e-18, nan]}, {'': [0.011092055931179276, 7.462288255210057e-05], 'true': [0.011092055931179276, nan], 'true,true': [0.011092055931179276, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995123;  // std dev = 8.43e-08, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.7228331704468651;  // std dev = 0.014, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.558868765936586;  // std dev = 0.018, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360633;  // std dev = 2.36e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.11231637819360628;  // std dev = 4.59e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.12451636870608725;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583101;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.4203065090305108;  // std dev = 0.019, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return -0.13177494133896853;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.31932522047079365;  // std dev = 0.000994, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601494;  // std dev = 2.58e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.20986470380723143;  // std dev = 0.453, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09093975972047325;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2553417195446714;  // std dev = 0.000126, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.2585980768509648;  // std dev = 0.021, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( female(A) )
%   | | then return -0.08523938815809069;  // std dev = 0.000150, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 2.24e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.0851847513883968;  // std dev = 1.97e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.13626338144657724;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2098774279600446;  // std dev = 0.000583, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.21226879462150833;  // std dev = 0.113, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.0787754330802449;  // std dev = 4.58e-06, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11155442827834602;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1771842981749819;  // std dev = 9.69e-05, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.17899747908977956;  // std dev = 0.017, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( female(A) )
%   | | then return -0.07330209603089438;  // std dev = 0.000146, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07329390912199032;  // std dev = 0.000130, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9.31e-10, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07178913417485111;  // std dev = 0.010, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.15281046166301218;  // std dev = 0.000455, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.15422603219716366;  // std dev = 0.090, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else if ( female(A) )
%   | | | then return -0.06847588010066079;  // std dev = 0.000112, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842402258894696;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08925143872715492;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06842697784420265;  // std dev = 4.56e-09, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06851991817735267;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13470411654723188;  // std dev = 0.010, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.06421743808819595;  // std dev = 8.60e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06422433003318381;  // std dev = 0.000122, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06351344101349099;  // std dev = 0.002, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063456
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.377 seconds
Total inference time: 1.734 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064761
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.559 seconds
Refined model CLL: -0.064761


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063456
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.196 seconds
Total inference time: 1.734 seconds
AUC ROC: 1.0
Total revision time: 8.196
Best scored revision CLL: -0.064761


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:20:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063456, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.196, 'Inference time': 1.734, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065651, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.821, 'Inference time': 1.797}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995112;  // std dev = 4.46e-07, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004883;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else return 0.4451054568386418;  // std dev = 3.339, 46.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=27 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7351448896967755;  // std dev = 0.349, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.16366544842849742;  // std dev = 0.199, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1273867528525842;  // std dev = 0.193, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5719859694411815;  // std dev = 0.040, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, B) )
%   | | then return -0.13078425835231183;  // std dev = 0.186, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11413360651386223;  // std dev = 0.190, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3197705207475844;  // std dev = 0.224, 163.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10359213060207886;  // std dev = 0.187, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3351350583386506;  // std dev = 1.03e-07, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.12824898825972705;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.040847885202890545;  // std dev = 2.625, 250.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3018514716369917;  // std dev = 0.821, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.13657366469897383;  // std dev = 0.187, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09078379599465504;  // std dev = 0.157, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.24357235490343232;  // std dev = 0.737, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return -0.1318935365289498;  // std dev = 0.178, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08344917844712327;  // std dev = 0.147, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.14839396753917816;  // std dev = 1.633, 157.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07735439403964893;  // std dev = 0.137, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17991515049687523;  // std dev = 0.607, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1312650549479966;  // std dev = 0.173, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11999871990960274;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then return -0.07047610430895178;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11709937682791993;  // std dev = 0.106, 151.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06729440713061438;  // std dev = 0.109, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066513
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.467 seconds
Total inference time: 1.792 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.087 seconds
Parameter learned model CLL: -0.074103


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [4.46e-07, 0, 103], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 244, 0], 'false,false': [3.339, 19, 27]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.349, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.199, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.193, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.04, 0, 130], 'true,false,true': [0.186, 32, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.19, 254, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.224, 33, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.187, 230, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [1.03e-07, 0, 103], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 21, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.625, 223, 27], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.821, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.187, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.157, 218, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.737, 0, 130], 'true,true,true,false': [0.178, 21, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.147, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.633, 27, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.137, 225, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.607, 0, 130], 'true,true,false,true': [0.173, 20, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.27e-09, 9, 0], 'false,true': [0.0, 188, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.106, 21, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.109, 226, 0]}]]
[{'': [0.09345935727788528, 0.08443519619500697], 'true': [1.9315724855614373e-15, -1.1564823173178714e-17], 'false': [-1.4924309511354563e-16, 0.24243856332703353], 'true,true': [1.9315724855614373e-15, nan], 'true,true,true': [1.9315724855614373e-15, nan], 'true,false': [-1.1564823173178714e-17, nan], 'true,false,true': [-7.93016446160826e-18, -2.7755575615628915e-18]}, {'': [0.11032491410329355, 0.00015087232192927293], 'true': [0.0009369002325412951, 0.0015825661685383884], 'true,false': [0.0015825661685383884, nan], 'true,false,true': [0.0015825661685383884, nan], 'true,true': [0.0009369002325412951, nan]}, {'': [0.07978724690488305, 0.0001426591283698064], 'true': [0.0016020255033385392, 0.0010864428024886033], 'true,false': [0.0010864428024886033, nan]}, {'': [0.05022848128927478, 0.00015174274045457267], 'true': [0.05022848128927478, nan], 'true,true': [0.05022848128927478, nan]}, {'': [0.030206145132050298, 0.027570536936686547], 'true': [0.030206145132050298, nan], 'true,true': [1.0347709744079129e-16, -5.28677630773884e-18], 'false': [0.027570536936686537, nan], 'true,true,true': [1.0347709744079129e-16, nan], 'true,true,false': [-5.28677630773884e-18, nan]}, {'': [0.02988885889042708, 0.00011322630162566421], 'true': [0.005183084831054813, 0.001451035333730669], 'true,true': [0.005183084831054813, nan], 'true,false': [0.001451035333730669, nan]}, {'': [0.020685450538177424, 9.190981694385178e-05], 'true': [0.020685450538177424, nan], 'true,true': [0.020685450538177424, nan], 'true,true,true': [0.0041777159497627895, 0.0015072968652346292]}, {'': [0.01697735872853937, 8.370165906210166e-05], 'true': [0.01697735872853937, nan], 'true,true': [0.01697735872853937, nan], 'true,true,true': [0.01697735872853937, nan]}, {'': [0.01662914133888638, -1.5354148212901102e-17], 'true': [0.013846746154689941, 3.0839528461809902e-18], 'true,true': [0.0028368863058972718, 0.0014887976125582598], 'true,true,false': [0.0014887976125582598, nan], 'false': [-1.5354148212901102e-17, nan]}, {'': [0.011189864880590253, 5.2684922552455754e-05], 'true': [0.011189864880590253, nan], 'true,true': [0.011189864880590253, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995112;  // std dev = 4.46e-07, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048818;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839186;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462838;  // std dev = 1.05e-08, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return 0.5553664367462836;  // std dev = 2.69e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360676;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return 0.4175135841583105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.10159632948783655;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.32071184716015017;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #pos=103 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601494;  // std dev = 2.11e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.32071184716014944;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.0926912761892609;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926067;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | | else return -0.09269127618926086;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839685;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 1.83e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15729690283914888;  // std dev = 0.111, 66.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=54 */
%   | | else return 0.17620719582281166;  // std dev = 0.092, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109157;  // std dev = 4.83e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | | else return -0.0787767547310915;  // std dev = 7.15e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109168;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109165;  // std dev = 1.18e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.0787767547310917;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18487171392520635;  // std dev = 6.97e-09, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return 0.18203900813025886;  // std dev = 6.45e-09, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( female(A) )
%   | | then return -0.09097502623219046;  // std dev = 1.32e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.09255102346685318;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(B) )
%   | then return -0.07324622576333703;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.1586169199883454;  // std dev = 2.11e-08, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return 0.15648300212817645;  // std dev = 5.77e-08, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | | else if ( female(A) )
%   | | | then return -0.08372625485294231;  // std dev = 6.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08506570731482686;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.06842697784420267;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420275;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.138575513863354;  // std dev = 4.93e-09, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return 0.13691939838082962;  // std dev = 3.23e-09, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else if ( female(A) )
%   | | then return -0.07752292561891799;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.0786745241152976;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( female(B) )
%   | then return -0.06419184008202619;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063902
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.59 seconds
Total inference time: 1.686 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065429
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.079 seconds
Refined model CLL: -0.065429


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063902
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.223 seconds
Total inference time: 1.686 seconds
AUC ROC: 1.0
Total revision time: 10.223
Best scored revision CLL: -0.065429


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:21:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063902, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.223, 'Inference time': 1.686, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066513, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.467, 'Inference time': 1.792}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995097;  // std dev = 9.83e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048754;  // std dev = 2.29e-07, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
%   | else return 0.41697246451127606;  // std dev = 4.094, 68.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7350638151276123;  // std dev = 0.443, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14573614281826963;  // std dev = 0.203, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12811136354572317;  // std dev = 0.266, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5719823359888376;  // std dev = 0.042, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, B) )
%   | | then return -0.13531222494632872;  // std dev = 0.202, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11407193237592418;  // std dev = 0.225, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.34593977511926266;  // std dev = 0.202, 231.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10349500183461245;  // std dev = 0.232, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3293481258316783;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13273848401619237;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.036086995926170415;  // std dev = 3.082, 340.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.29627801526709274;  // std dev = 1.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.13752007083172973;  // std dev = 0.243, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09228929594682148;  // std dev = 0.242, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2396979607402413;  // std dev = 0.898, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return -0.12855169044370063;  // std dev = 0.209, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08398700836374898;  // std dev = 0.195, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.14618856050000126;  // std dev = 2.008, 234.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07708822184255786;  // std dev = 0.139, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17768923695755687;  // std dev = 0.742, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.13141788150191183;  // std dev = 0.220, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11730965873016408;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(B) )
%   | then return -0.07063466521670937;  // std dev = 1.22e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1139340142347739;  // std dev = 0.106, 229.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06858210052230526;  // std dev = 0.184, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066664
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.105 seconds
Total inference time: 1.543 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074304
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.528 seconds
Parameter learned model CLL: -0.074304


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [9.83e-07, 0, 157], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 15, 0], 'true,false,true,false': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.29e-07, 352, 0], 'false,false': [4.094, 30, 38]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.443, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.203, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.266, 366, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.042, 0, 195], 'true,false,true': [0.202, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.225, 374, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.202, 36, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.232, 385, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 157], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [1.29e-08, 22, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.082, 302, 38], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [1.0, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.243, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.242, 349, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.898, 0, 195], 'true,true,true,false': [0.209, 33, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.195, 368, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.008, 39, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.139, 325, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.742, 0, 195], 'true,true,false,true': [0.22, 35, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [7.45e-09, 12, 0], 'false,true': [1.22e-07, 345, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.106, 34, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.184, 372, 0]}]]
[{'': [0.10779938204176485, 0.08229024943310762], 'true': [6.155019876648002e-15, 5.046468293750712e-18], 'false': [1.4887081466564598e-16, 0.24653979238754484], 'true,true': [6.155019876648002e-15, nan], 'true,true,true': [6.155019876648002e-15, nan], 'true,false': [5.046468293750712e-18, nan], 'true,false,true': [-1.4802973661668754e-17, -7.93016446160826e-18]}, {'': [0.10501695983532065, 0.0001931024675594859], 'true': [0.0010042243186102239, 0.0011117118951346498], 'true,false': [0.0011117118951346498, nan], 'true,false,true': [0.0011117118951346498, nan], 'true,true': [0.0010042243186102239, nan]}, {'': [0.0699056290876569, 0.00013480731888431676], 'true': [0.0017310414031091643, 0.0010716925185940112], 'true,false': [0.0010716925185940112, nan]}, {'': [0.04088989513601335, 0.00014038049527490101], 'true': [0.04088989513601335, nan], 'true,true': [0.04088989513601335, nan]}, {'': [0.023017759024138187, 0.02792866616207467], 'false': [0.027928666162074678, nan], 'true': [0.023017759024138187, nan], 'true,true': [-1.8102999637200006e-16, 7.569702440626067e-18], 'true,true,false': [7.569702440626067e-18, nan], 'true,true,true': [-1.8102999637200006e-16, nan]}, {'': [0.03307776981585507, 0.00016728078586732202], 'true': [0.005125360695099674, 0.0013079926596088586], 'true,true': [0.005125360695099674, nan], 'true,false': [0.0013079926596088586, nan]}, {'': [0.020518478943031188, 0.00010309248185281035], 'true': [0.020518478943031188, nan], 'true,true': [0.020518478943031188, nan], 'true,true,true': [0.004139936792517145, 0.0013204134186499648]}, {'': [0.01722334199835128, 5.9221432828313264e-05], 'true': [0.01722334199835128, nan], 'true,true': [0.01722334199835128, nan], 'true,true,true': [0.01722334199835128, nan]}, {'': [0.01709147876538579, 4.312170588399159e-17], 'true': [0.014934385642541013, 4.625929269271485e-18], 'true,true': [0.0028271634778199756, 0.0013814913793026382], 'true,true,false': [0.0013814913793026382, nan], 'false': [4.312170588399159e-17, nan]}, {'': [0.011137290797026035, 9.078235885185397e-05], 'true': [0.011137290797026035, nan], 'true,true': [0.011137290797026035, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995097;  // std dev = 9.83e-07, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 2.00e-07, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 1.86e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.12544463852839216;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462836;  // std dev = 3.41e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.5553664367462834;  // std dev = 4.15e-08, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1123163781936066;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.41751358415830947;  // std dev = 2.93e-08, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.10159632948783644;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.32071184716014933;  // std dev = 2.30e-08, 157.000 (wgt'ed) examples reached here.  /* #pos=157 */
%   | else return -0.092691276189261;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601494;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926093;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.09269127618926101;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926101;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.09269127618926071;  // std dev = 7.30e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.2551722425694898;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 2.63e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839682;  // std dev = 3.36e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3.80e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2097577156325358;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0.20975771563253548;  // std dev = 1.74e-07, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.07877675473109166;  // std dev = 1.67e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( female(A) )
%   | | | then return -0.0787767547310917;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.07877675473109154;  // std dev = 6.41e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527775;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9.31e-10, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333698;  // std dev = 2.98e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | | else return -0.07324622576333675;  // std dev = 9.19e-08, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.07324622576333699;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333698;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367141;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.06842697784420268;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06842697784420297;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 5.89e-09, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.13400703000801106;  // std dev = 5.27e-09, 114.000 (wgt'ed) examples reached here.  /* #pos=114 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( female(B) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.225 seconds
Total inference time: 1.687 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.278 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.136000000000001 seconds
Total inference time: 1.687 seconds
AUC ROC: 1.0
Total revision time: 12.136000000000001
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:21:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.136000000000001, 'Inference time': 1.687, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066664, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.105, 'Inference time': 1.543}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995091;  // std dev = 1.08e-06, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048746;  // std dev = 1.88e-07, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
%   | else return 0.4364621881115612;  // std dev = 4.499, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7336630745547492;  // std dev = 0.481, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1446008699320913;  // std dev = 0.235, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1275369772465262;  // std dev = 0.278, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5704323585675429;  // std dev = 0.039, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, B) )
%   | | then return -0.125866617512358;  // std dev = 0.217, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11469583977474342;  // std dev = 0.281, 443.000 (wgt'ed) examples reached here.  /* #neg=443 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3385323542809129;  // std dev = 0.208, 312.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10263484112967575;  // std dev = 0.216, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3316400409563349;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13310423540370991;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.05377210650380074;  // std dev = 3.548, 573.000 (wgt'ed) examples reached here.  /* #neg=525 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.29608508944666845;  // std dev = 1.134, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.15390307569441355;  // std dev = 0.278, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09023004637501267;  // std dev = 0.257, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23952118262823063;  // std dev = 1.020, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return -0.12058705484490827;  // std dev = 0.208, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08220071285954983;  // std dev = 0.179, 449.000 (wgt'ed) examples reached here.  /* #neg=449 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.1517637372330416;  // std dev = 2.195, 306.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07679615092406486;  // std dev = 0.214, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1767389073637903;  // std dev = 0.842, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1141587608815511;  // std dev = 0.187, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1180107145084343;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(B) )
%   | then return -0.06980310799064765;  // std dev = 0.000, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11485252856532903;  // std dev = 0.105, 302.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06684296088063774;  // std dev = 0.166, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066139
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.425 seconds
Total inference time: 1.611 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.955 seconds
Parameter learned model CLL: -0.073847


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 212], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 23, 0], 'true,false,true,false': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.88e-07, 476, 0], 'false,false': [4.499, 35, 48]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.481, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.235, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.278, 486, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.039, 0, 260], 'true,false,true': [0.217, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.281, 443, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.208, 52, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.216, 502, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 212], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 38, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.548, 525, 48], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [1.134, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.278, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.257, 488, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [1.02, 0, 260], 'true,true,true,false': [0.208, 41, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.179, 449, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.195, 46, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.214, 502, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.842, 0, 260], 'true,true,false,true': [0.187, 61, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 17, 0], 'false,true': [0.0, 475, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.105, 42, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.166, 483, 0]}]]
[{'': [0.11655143690129627, 0.07849437245784648], 'true': [5.496651352106436e-15, 3.027880976250427e-17], 'false': [7.463684199160717e-17, 0.24386703440267105], 'true,true': [5.496651352106436e-15, nan], 'true,true,true': [5.496651352106436e-15, nan], 'true,false': [3.027880976250427e-17, nan], 'true,false,true': [9.654113257610057e-18, -1.1102230246251566e-17]}, {'': [0.10384834835488668, 0.0001592875277147258], 'true': [0.0008892804519838102, 0.0011314637049090125], 'true,false': [0.0011314637049090125, nan], 'true,false,true': [0.0011314637049090125, nan], 'true,true': [0.0008892804519838102, nan]}, {'': [0.07127927192317596, 0.00017873244321295955], 'true': [0.0015234809770988114, 0.0008549084021373716], 'true,false': [0.0008549084021373716, nan]}, {'': [0.04306669371199785, 9.332397943693236e-05], 'true': [0.04306669371199785, nan], 'true,true': [0.04306669371199785, nan]}, {'': [0.027839891597603597, 0.021964064423122563], 'true': [0.027839891597603597, nan], 'true,true': [-1.089275420386946e-15, -2.921639538487254e-18], 'false': [0.021964064423122574, nan], 'true,true,false': [-2.921639538487254e-18, nan], 'true,true,true': [-1.089275420386946e-15, nan]}, {'': [0.02876042768743382, 0.0001353980276128625], 'true': [0.004947510957215192, 0.0018451433229370912], 'true,true': [0.004947510957215192, nan], 'true,false': [0.0018451433229370912, nan]}, {'': [0.01886170263695195, 7.158702907503454e-05], 'true': [0.01886170263695195, nan], 'true,true': [0.01886170263695195, nan], 'true,true,true': [0.004005240357393508, 0.001059244883024836]}, {'': [0.01575015856257703, 9.092346903615271e-05], 'true': [0.01575015856257703, nan], 'true,true': [0.01575015856257703, nan], 'true,true,true': [0.01575015856257703, nan]}, {'': [0.01730876483784855, -2.4308040960213955e-17], 'true': [0.015341168049898627, -3.2653618371328133e-18], 'true,true': [0.0027252571038811485, 0.0005731621656264957], 'true,true,false': [0.0005731621656264957, nan], 'false': [-2.4308040960213955e-17, nan]}, {'': [0.011026826177336644, 5.6710414071231713e-05], 'true': [0.011026826177336644, nan], 'true,true': [0.011026826177336644, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995091;  // std dev = 1.08e-06, 212.000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004872;  // std dev = 2.98e-07, 438.000 (wgt'ed) examples reached here.  /* #neg=438 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995121;  // std dev = 1.69e-07, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1254446385283923;  // std dev = 0.000, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462833;  // std dev = 3.94e-08, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else return 0.5553664367462833;  // std dev = 4.28e-08, 152.000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.112316378193606;  // std dev = 0.000, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831097;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783628;  // std dev = 1.49e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( female(B) )
%   | then return -0.10159632948783652;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else return -0.10159632948783662;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014994;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | else return 0.32071184716014944;  // std dev = 1.94e-08, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else return -0.09269127618926096;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601492;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.09269127618926126;  // std dev = 0.000, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else return 0.25517224256948906;  // std dev = 9.86e-09, 152.000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else return -0.0851847513883968;  // std dev = 1.83e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 2.36e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3.80e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.08518475138839682;  // std dev = 1.05e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 4.06e-09, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 7.15e-08, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | | else return -0.08518475138839678;  // std dev = 1.29e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253515;  // std dev = 1.19e-07, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.16900425936648622;  // std dev = 0.100, 177.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=152 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527722;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else return 0.18311398851520985;  // std dev = 1.24e-08, 152.000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.09194785526403247;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07324622576333725;  // std dev = 0.000, 439.000 (wgt'ed) examples reached here.  /* #neg=439 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.15274385809367105;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | | else return 0.15729357201939823;  // std dev = 5.16e-08, 152.000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.08455345508217627;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.06842697784420262;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06842697784420347;  // std dev = 0.000, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801084;  // std dev = 6.72e-09, 108.000 (wgt'ed) examples reached here.  /* #pos=108 */
%   | | else return 0.13754898108944244;  // std dev = 5.59e-09, 152.000 (wgt'ed) examples reached here.  /* #pos=152 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.07823440166649259;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( female(B) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063676
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.559 seconds
Total inference time: 1.75 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.925 seconds
Refined model CLL: -0.064879


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063676
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.864 seconds
Total inference time: 1.75 seconds
AUC ROC: 1.0
Total revision time: 13.864
Best scored revision CLL: -0.064879


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:21:35
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063676, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.864, 'Inference time': 1.75, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066139, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.425, 'Inference time': 1.611}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995086;  // std dev = 1.08e-06, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004886;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
%   | else return 0.45410853105910914;  // std dev = 4.882, 99.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7328631020038154;  // std dev = 0.514, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14696049800289382;  // std dev = 0.251, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12885786409900427;  // std dev = 0.397, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.56953570889456;  // std dev = 0.037, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, B) )
%   | | then return -0.13462404525870048;  // std dev = 0.261, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11495129426274354;  // std dev = 0.356, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.34726259421804745;  // std dev = 0.199, 383.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10343236753581223;  // std dev = 0.300, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.33008285536244714;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.1328290677897069;  // std dev = 2.24e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.050755107898929105;  // std dev = 3.873, 650.000 (wgt'ed) examples reached here.  /* #neg=591 #pos=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2933234803409418;  // std dev = 1.220, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.13611113578617096;  // std dev = 0.282, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09005638756863582;  // std dev = 0.274, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23750914940618612;  // std dev = 1.097, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return -0.1323214711028666;  // std dev = 0.302, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0829543605469417;  // std dev = 0.256, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.1439699396356339;  // std dev = 2.586, 392.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07761953348478018;  // std dev = 0.284, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17644214075022105;  // std dev = 0.908, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12670666668268973;  // std dev = 0.270, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11977965893109872;  // std dev = 1.29e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(B) )
%   | then return -0.06975376122888051;  // std dev = 0.000, 572.000 (wgt'ed) examples reached here.  /* #neg=572 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11435933153771226;  // std dev = 0.106, 377.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06730847164575307;  // std dev = 0.219, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066032
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.164 seconds
Total inference time: 1.679 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073742
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.193 seconds
Parameter learned model CLL: -0.073742


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 267], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.83e-08, 25, 0], 'true,false,true,false': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 601, 0], 'false,false': [4.882, 40, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.514, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.251, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.397, 594, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.037, 0, 326], 'true,false,true': [0.261, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.356, 599, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.199, 57, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.3, 573, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 267], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [2.24e-08, 28, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.873, 591, 59], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [1.22, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.282, 61, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.274, 587, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [1.097, 0, 326], 'true,true,true,false': [0.302, 60, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.256, 587, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.586, 66, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.284, 601, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.908, 0, 326], 'true,true,false,true': [0.27, 56, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [1.29e-08, 18, 0], 'false,true': [0.0, 572, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.106, 51, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.219, 609, 0]}]]
[{'': [0.12146276403263394, 0.07718163265306227], 'true': [4.364382346990877e-15, 4.794144879063176e-17], 'false': [-3.724142458642788e-16, 0.24079175594327074], 'true,true': [4.364382346990877e-15, nan], 'true,true,true': [4.364382346990877e-15, nan], 'true,false': [4.794144879063176e-17, nan], 'true,false,true': [1.3322676295501878e-17, 0.0]}, {'': [0.08880390110112049, 0.0002651564761939842], 'true': [0.000811335129894818, 0.00128196611702736], 'true,false': [0.00128196611702736, nan], 'true,false,true': [0.00128196611702736, nan], 'true,true': [0.000811335129894818, nan]}, {'': [0.06416564475435108, 0.0002120133566571001], 'true': [0.001382436978749264, 0.0011941386139127836], 'true,false': [0.0011941386139127836, nan]}, {'': [0.039557306242005694, 0.00015751038928462404], 'true': [0.039557306242005694, nan], 'true,true': [0.039557306242005694, nan]}, {'': [0.018408652291947963, 0.023074724902407986], 'false': [0.02307472490240799, nan], 'true': [0.018408652291947963, nan], 'true,true': [-1.0644834992660677e-15, 1.784287003861859e-17], 'true,true,false': [1.784287003861859e-17, nan], 'true,true,true': [-1.0644834992660677e-15, nan]}, {'': [0.028538086553726, 0.00012811975082914698], 'true': [0.004566731072833368, 0.0013010621889947447], 'true,true': [0.004566731072833368, nan], 'true,false': [0.0013010621889947447, nan]}, {'': [0.021306789718982276, 0.00011147992246724131], 'true': [0.021306789718982276, nan], 'true,true': [0.021306789718982276, nan], 'true,true,true': [0.0036889336708059543, 0.001516100557373634]}, {'': [0.017064208562875056, 0.0001344573252205995], 'true': [0.017064208562875056, nan], 'true,true': [0.017064208562875056, nan], 'true,true,true': [0.017064208562875056, nan]}, {'': [0.01594522124770981, -1.4984128933752112e-16], 'true': [0.013843848413092812, 9.25185853854297e-18], 'true,true': [0.0025264111525100078, 0.0013004355396956796], 'true,true,false': [0.0013004355396956796, nan], 'false': [-1.4984128933752112e-16, nan]}, {'': [0.011327760063419616, 7.868324799035323e-05], 'true': [0.011327760063419616, nan], 'true,true': [0.011327760063419616, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 1.08e-06, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004882;  // std dev = 0.000, 550.000 (wgt'ed) examples reached here.  /* #neg=550 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839147;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.12544463852839227;  // std dev = 0.000, 547.000 (wgt'ed) examples reached here.  /* #neg=547 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.1123163781936057;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583116;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( female(B) )
%   | then return -0.10159632948783656;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878364;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else return -0.10159632948783662;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.32071184716015033;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else return -0.092691276189261;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716014894;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.3207118471601486;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.09269127618926094;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.09269127618926158;  // std dev = 0.000, 561.000 (wgt'ed) examples reached here.  /* #neg=561 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948895;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.2551722425694885;  // std dev = 1.44e-08, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else return -0.08518475138839679;  // std dev = 1.49e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 1.05e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3.94e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 4.47e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 8.82e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1682916839635108;  // std dev = 0.101, 167.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=143 */
%   | | else return 0.16014545376005565;  // std dev = 0.109, 221.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109237;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18322060193328682;  // std dev = 1.65e-08, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.18444283920076193;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(A) )
%   | | then return -0.09188837718409937;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.09121087195338559;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333698;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return -0.0732462257633368;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else return -0.0732462257633371;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.15737391035793585;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | | else return 0.1582942625123778;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | else if ( female(A) )
%   | | | then return -0.08450291634137949;  // std dev = 1.29e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.08392690970504535;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.06842697784420261;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.0684269778442031;  // std dev = 0.000, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13761134731319533;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.13832537750343482;  // std dev = 1.16e-08, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(A) )
%   | | then return -0.0781909599309489;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07769559474111752;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( female(B) )
%   | then return -0.06419184008202618;  // std dev = 3.65e-08, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820261;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202618;  // std dev = 3.49e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | | | else return -0.06419184008202611;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0639
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.367 seconds
Total inference time: 1.689 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06542
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.656 seconds
Refined model CLL: -0.06542


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0639
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.38 seconds
Total inference time: 1.689 seconds
AUC ROC: 1.0
Total revision time: 15.38
Best scored revision CLL: -0.06542


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:21:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0639, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.38, 'Inference time': 1.689, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066032, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.164, 'Inference time': 1.679}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995123;  // std dev = 8.43e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else return 0.40360348055405776;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7348742939021159;  // std dev = 0.256, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1659690349586468;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1281462649570748;  // std dev = 0.143, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5718181307806274;  // std dev = 0.042, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, B) )
%   | | then return -0.14546386812651185;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11416623249926836;  // std dev = 0.131, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3582498719663366;  // std dev = 0.188, 74.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10393355044209225;  // std dev = 0.147, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.32671263617945645;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13067154978860354;  // std dev = 6.45e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.052541358666579725;  // std dev = 1.791, 132.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.29431497531215745;  // std dev = 0.584, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.11653030256570032;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09008882437858164;  // std dev = 0.120, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23838699281428113;  // std dev = 0.525, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.1317022781050185;  // std dev = 0.134, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08172253303665683;  // std dev = 0.071, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.14411254997564263;  // std dev = 1.168, 77.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07786977183309687;  // std dev = 0.122, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17717834978097918;  // std dev = 0.436, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1145943210422713;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11457226805247037;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.06976403889117662;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.10420476283599166;  // std dev = 0.111, 79.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06686953040049361;  // std dev = 0.083, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066817
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.869 seconds
Total inference time: 1.679 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073439
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.473 seconds
Parameter learned model CLL: -0.073439


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [8.43e-08, 0, 52], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 124, 0], 'false,false': [2.335, 10, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.256, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.109, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.143, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.042, 0, 64], 'true,false,true': [0.085, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.131, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.188, 10, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.147, 134, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 52], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [6.45e-09, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.791, 120, 12], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.584, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.12, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.525, 0, 64], 'true,true,true,false': [0.134, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.071, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.168, 13, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.122, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.436, 0, 64], 'true,true,false,true': [0.071, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.27e-09, 7, 0], 'false,true': [0.0, 120, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.111, 15, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.083, 127, 0]}]]
[{'': [0.14411690602166788, 0.07543629198723907], 'true': [1.3664283380001927e-16, -1.0092936587501423e-17], 'false': [-7.162729191130042e-18, 0.24793388429752028], 'true,true': [1.3664283380001927e-16, nan], 'true,true,true': [1.3664283380001927e-16, nan], 'true,false': [-1.0092936587501423e-17, nan], 'true,false,true': [-1.1102230246251566e-17, 0.0]}, {'': [0.08877835624430577, 0.00018976841936427545], 'true': [0.001027811013082025, 0.001313781364829193], 'true,false': [0.001313781364829193, nan], 'true,false,true': [0.001313781364829193, nan], 'true,true': [0.001027811013082025, nan]}, {'': [0.04742858567354807, 0.00013694064057076473], 'true': [0.0017783196926598466, 0.0010336880251963895], 'true,false': [0.0010336880251963895, nan]}, {'': [0.03552890590797125, 0.00016155663526071354], 'true': [0.03552890590797125, nan], 'true,true': [0.03552890590797125, nan]}, {'': [0.019402643161410073, 0.024287320400894687], 'false': [0.02428732040089469, nan], 'true': [0.019402643161410073, nan], 'true,true': [-6.832141690000964e-17, 6.938893903907228e-18], 'true,true,false': [6.938893903907228e-18, nan], 'true,true,true': [-6.832141690000964e-17, nan]}, {'': [0.02291233482821883, 0.00011915092098434369], 'true': [0.005324182171097286, 0.0], 'true,true': [0.005324182171097286, nan], 'true,false': [0.0, nan]}, {'': [0.02394052920945911, 4.3210194603219344e-05], 'true': [0.02394052920945911, nan], 'true,true': [0.02394052920945911, nan], 'true,true,true': [0.004314357111481343, 0.0012777579478130765]}, {'': [0.017731271769966396, 0.00012913551639451005], 'true': [0.017731271769966396, nan], 'true,true': [0.017731271769966396, nan], 'true,true,true': [0.017731271769966396, nan]}, {'': [0.01605503165134791, -2.7755575615628915e-18], 'true': [0.011870067663637011, 3.96508223080413e-18], 'true,true': [0.0029649791744011597, 0.0005594885961396993], 'true,true,false': [0.0005594885961396993, nan], 'false': [-2.7755575615628915e-18, nan]}, {'': [0.012320357953830324, 5.484930504686383e-05], 'true': [0.012320357953830324, nan], 'true,true': [0.012320357953830324, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995123;  // std dev = 8.43e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.7270074155278444;  // std dev = 0.020, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return -0.15642011249382917;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462844;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.5632273567912676;  // std dev = 0.026, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360643;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.11231637819360638;  // std dev = 2.11e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.11231637819360646;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.1231956069879999;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.42376994442180477;  // std dev = 0.027, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10821430525715735;  // std dev = 0.069, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.10159632948783617;  // std dev = 5.27e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.0978392596304663;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 5.27e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.31601341236281405;  // std dev = 5.27e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601494;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.39202209960957457;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.0926234341921006;  // std dev = 0.000182, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.11472841430621893;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0924486098963587;  // std dev = 0.003, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.2582064238729243;  // std dev = 0.017, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.08519003834933304;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08466121686169334;  // std dev = 0.002, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( actor(A) )
%   | | | then return -0.08519003834933311;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.08520366386604897;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.1134313988905085;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253545;  // std dev = 4.21e-08, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.211958868545867;  // std dev = 0.085, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07859502567587158;  // std dev = 0.001, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07707280059924436;  // std dev = 0.000384, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.07878129453084785;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.0787929942947324;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.08836113352933163;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.17874781827084926;  // std dev = 0.013, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.07324622576333704;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07326280979334512;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0727720500340837;  // std dev = 0.002, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(A) )
%   | | | then return -0.07325016400564797;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.07326031333061896;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0859705382982177;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.1540211757395884;  // std dev = 0.067, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07007226675870616;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06844790983868854;  // std dev = 3.06e-05, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(A) )
%   | | | then return -0.06843219607200539;  // std dev = 2.03e-05, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06831829740025244;  // std dev = 0.001, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( female(B) )
%   | | then return -0.06823353752063488;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06810964672865985;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080112;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.13502133326714805;  // std dev = 0.011, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06420264815484228;  // std dev = 0.000135, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.06413979310684105;  // std dev = 0.000969, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( female(B) )
%   | | | then return -0.06398236727966947;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06391181187929318;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09401239133062926;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063367
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.912 seconds
Total inference time: 1.934 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064414
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.76 seconds
Refined model CLL: -0.064414


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063367
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.014 seconds
Total inference time: 1.934 seconds
AUC ROC: 1.0
Total revision time: 9.014
Best scored revision CLL: -0.064414


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:22:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063367, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.014, 'Inference time': 1.934, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066817, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.869, 'Inference time': 1.679}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995112;  // std dev = 4.77e-07, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048846;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return 0.5854216623722389;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7290798528175298;  // std dev = 0.228, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.16423738765351023;  // std dev = 0.245, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.13073729267259393;  // std dev = 0.334, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5652818468659466;  // std dev = 0.026, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, B) )
%   | | then return -0.1370273255172299;  // std dev = 0.218, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1164353661813706;  // std dev = 0.320, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3519403987978677;  // std dev = 0.188, 149.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10590854299477963;  // std dev = 0.306, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.33082611622798175;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13111051152404915;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.055326648442247446;  // std dev = 2.349, 274.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.28902673835208365;  // std dev = 0.641, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.15109491665014188;  // std dev = 0.262, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08971466267671689;  // std dev = 0.216, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23418111001114184;  // std dev = 0.572, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.1295485822951827;  // std dev = 0.210, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08235714436040985;  // std dev = 0.189, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.14974885174410044;  // std dev = 1.488, 150.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07663946629093166;  // std dev = 0.201, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17310572867623078;  // std dev = 0.468, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.13661541837184632;  // std dev = 0.237, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1333454342736103;  // std dev = 1.18e-08, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(B) )
%   | then return -0.06920472667337119;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12585793403918608;  // std dev = 0.085, 142.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06574881009343746;  // std dev = 0.107, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066381
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.56 seconds
Total inference time: 1.684 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074021
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.021 seconds
Parameter learned model CLL: -0.074021


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [4.77e-07, 0, 105], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 229, 0], 'false,false': [2.558, 9, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.228, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.245, 24, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.334, 215, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.026, 0, 129], 'true,false,true': [0.218, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.32, 245, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.188, 20, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.306, 220, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 105], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 14, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.349, 250, 24], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.641, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.262, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.216, 233, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.572, 0, 129], 'true,true,true,false': [0.21, 22, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.189, 233, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.488, 21, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.201, 263, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.468, 0, 129], 'true,true,false,true': [0.237, 25, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [1.18e-08, 12, 0], 'false,true': [0.0, 215, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.085, 13, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.107, 247, 0]}]]
[{'': [0.1199274388605242, 0.08321193403647908], 'true': [2.1654635756498293e-15, -3.2653618371328133e-18], 'false': [-2.1331796106334886e-16, 0.1983471074380176], 'true,true': [2.1654635756498293e-15, nan], 'true,true,true': [2.1654635756498293e-15, nan], 'true,false': [-3.2653618371328133e-18, nan], 'true,false,true': [-1.2810265668751807e-17, 0.0]}, {'': [0.10627686241708034, 0.0005194987572352922], 'true': [0.0004037411924315613, 0.002508128974473995], 'true,false': [0.002508128974473995, nan], 'true,false,true': [0.002508128974473995, nan], 'true,true': [0.0004037411924315613, nan]}, {'': [0.06971518034388058, 0.0004190411534984537], 'true': [0.0006606906604755188, 0.0018302391329302658], 'true,false': [0.0018302391329302658, nan]}, {'': [0.035498053485645366, 0.00042528388992839214], 'true': [0.035498053485645366, nan], 'true,true': [0.035498053485645366, nan]}, {'': [0.022150738552828286, 0.020137836849284996], 'true': [0.022150738552828286, nan], 'true,true': [-6.0903663065151445e-16, -1.1895246692412391e-17], 'false': [0.020137836849284996, nan], 'true,true,false': [-1.1895246692412391e-17, nan], 'true,true,true': [-6.0903663065151445e-16, nan]}, {'': [0.03013154665091281, 0.0002004204198194052], 'true': [0.003180979452518324, 0.0026335502044431136], 'true,true': [0.003180979452518324, nan], 'true,false': [0.0026335502044431136, nan]}, {'': [0.018925222702177166, 0.0001537562579980303], 'true': [0.018925222702177166, nan], 'true,true': [0.018925222702177166, nan], 'true,true,true': [0.0025364024388238237, 0.0019994091990675855]}, {'': [0.014768844533948968, 0.00015347890079530092], 'true': [0.014768844533948968, nan], 'true,true': [0.014768844533948968, nan], 'true,true,true': [0.014768844533948968, nan]}, {'': [0.018163445630059345, -5.990040504954333e-17], 'true': [0.014834877714640362, 1.1564823173178714e-17], 'true,true': [0.0017000999670758305, 0.0022557375686176684], 'true,true,false': [0.0022557375686176684, nan], 'false': [-5.990040504954333e-17, nan]}, {'': [0.007151651121880155, 4.6109054833718067e-05], 'true': [0.007151651121880155, nan], 'true,true': [0.007151651121880155, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995112;  // std dev = 4.77e-07, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048843;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 1.05e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.722049768019904;  // std dev = 0.008, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(B) )
%   | then return -0.1254446385283918;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | else return -0.15370495586106495;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3.73e-08, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.5579566467124462;  // std dev = 0.010, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.11231637819360671;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.22471231834638608;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10952950337435054;  // std dev = 2.28e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.4194950874281903;  // std dev = 0.010, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( director(B) )
%   | then return -0.13477274413791013;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014944;  // std dev = 1.44e-08, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return 0.3191565989307087;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926055;  // std dev = 3.48e-09, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else return -0.09269127618926086;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601496;  // std dev = 2.11e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.22115602673506674;  // std dev = 0.636, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08787527441864827;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.258567148521124;  // std dev = 0.014, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839687;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 2.08e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.08518475138839678;  // std dev = 2.79e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11119481349834197;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253592;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.16684841224900754;  // std dev = 0.106, 77.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0787767547310916;  // std dev = 3.87e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.07877675473109153;  // std dev = 6.05e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else return -0.07877675473109164;  // std dev = 2.79e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.18423157242398625;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07317381843884242;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1770964977452772;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.1856614738834036;  // std dev = 0.011, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09176801443188996;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333703;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.07324622576333696;  // std dev = 3.65e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else return -0.073246225763337;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.15813526425550484;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06836359464648;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.15274385809367094;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0.15923018440794048;  // std dev = 0.080, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08440062946716541;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(D, B), movie(D, A) )
%   | | then return -0.1382020800248327;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06413591409325982;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return -0.06842697784420262;  // std dev = 9.31e-10, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420261;  // std dev = 1.32e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else return -0.06842697784420261;  // std dev = 1.32e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801092;  // std dev = 5.59e-09, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0.13906409603642286;  // std dev = 0.009, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07810302627475903;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | else return -0.06419184008202614;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.122549455258831;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06039225182277385;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063918
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.892 seconds
Total inference time: 2.17 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065312
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.13 seconds
Refined model CLL: -0.065312


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063918
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.602999999999998 seconds
Total inference time: 2.17 seconds
AUC ROC: 1.0
Total revision time: 11.602999999999998
Best scored revision CLL: -0.065312


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:22:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063918, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.602999999999998, 'Inference time': 2.17, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066381, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.56, 'Inference time': 1.684}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995097;  // std dev = 9.90e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004875;  // std dev = 2.48e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
%   | else return 0.43191942690278984;  // std dev = 3.862, 61.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=35 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7334727721164684;  // std dev = 0.416, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.15299503753744284;  // std dev = 0.249, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12822023842855776;  // std dev = 0.264, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5702415901246888;  // std dev = 0.039, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, B) )
%   | | then return -0.12642396819480445;  // std dev = 0.161, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11419611324847566;  // std dev = 0.221, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3555137960520495;  // std dev = 0.192, 224.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10361836392468628;  // std dev = 0.240, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.32797082612612083;  // std dev = 1.33e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13403352099965551;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.051377627570781785;  // std dev = 2.992, 403.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.29263399757822617;  // std dev = 0.965, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.15090617343831061;  // std dev = 0.253, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08986772679858737;  // std dev = 0.198, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23708954385795009;  // std dev = 0.868, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return -0.13539354147785304;  // std dev = 0.222, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08265960604555547;  // std dev = 0.177, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.15739606417529722;  // std dev = 1.747, 223.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07766769087393346;  // std dev = 0.198, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17431830214891156;  // std dev = 0.714, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.13702642661664804;  // std dev = 0.227, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11756560374648745;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(B) )
%   | then return -0.06981994689684709;  // std dev = 6.83e-08, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11496208265670227;  // std dev = 0.102, 224.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06679655082432996;  // std dev = 0.126, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066801
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.198 seconds
Total inference time: 1.713 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.268 seconds
Parameter learned model CLL: -0.073447


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [9.9e-07, 0, 159], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 21, 0], 'true,false,true,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.48e-07, 363, 0], 'false,false': [3.862, 26, 35]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.416, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.249, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.264, 335, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.039, 0, 194], 'true,false,true': [0.161, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.221, 329, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.192, 30, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.24, 374, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [1.33e-07, 0, 159], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [1.29e-08, 22, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.992, 368, 35], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.965, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.253, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.198, 359, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.868, 0, 194], 'true,true,true,false': [0.222, 33, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.177, 355, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.747, 29, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.198, 309, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.714, 0, 194], 'true,true,false,true': [0.227, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [9.13e-09, 15, 0], 'false,true': [6.83e-08, 319, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.102, 30, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.126, 294, 0]}]]
[{'': [0.13353489543966315, 0.07573313456746275], 'true': [6.166974687729172e-15, 2.590520390792032e-17], 'false': [1.6882730291820563e-16, 0.2445579145391041], 'true,true': [6.166974687729172e-15, nan], 'true,true,true': [6.166974687729172e-15, nan], 'true,false': [2.590520390792032e-17, nan], 'true,false,true': [5.28677630773884e-18, -9.25185853854297e-18]}, {'': [0.12108209428703984, 0.00020736478352265664], 'true': [0.0008903185818395461, 0.0013757318800738173], 'true,false': [0.0013757318800738173, nan], 'true,false,true': [0.0013757318800738173, nan], 'true,true': [0.0008903185818395461, nan]}, {'': [0.05635262527208939, 0.00014830511644384835], 'true': [0.0015271331015354508, 0.0008897036772906415], 'true,false': [0.0008897036772906415, nan]}, {'': [0.03700934421947028, 0.00015386660017458988], 'true': [0.03700934421947028, nan], 'true,true': [0.03700934421947028, nan]}, {'': [0.02279054859855875, 0.022210517488435725], 'true': [0.02279054859855875, nan], 'true,true': [1.1172055593712267e-16, 7.569702440626067e-18], 'false': [0.022210517488435732, nan], 'true,true,true': [1.1172055593712267e-16, nan], 'true,true,false': [7.569702440626067e-18, nan]}, {'': [0.030301459788119583, 0.00010936556059204362], 'true': [0.004802695984076316, 0.0017757718571593066], 'true,true': [0.004802695984076316, nan], 'true,false': [0.0017757718571593066, nan]}, {'': [0.020775395363392412, 8.84219206060584e-05], 'true': [0.020775395363392412, nan], 'true,true': [0.020775395363392412, nan], 'true,true,true': [0.003886011636042614, 0.0014906323911759217]}, {'': [0.01369251383142164, 0.0001268548896115364], 'true': [0.01369251383142164, nan], 'true,true': [0.01369251383142164, nan], 'true,true,true': [0.01369251383142164, nan]}, {'': [0.017339823153153557, 1.4617356437071026e-17], 'true': [0.014761569681095946, 5.551115123125783e-18], 'true,true': [0.002626742092521377, 0.0015212279885899428], 'true,true,false': [0.0015212279885899428, nan], 'false': [1.4617356437071026e-17, nan]}, {'': [0.01041564947539235, 5.3858784431383393e-05], 'true': [0.01041564947539235, nan], 'true,true': [0.01041564947539235, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995097;  // std dev = 9.90e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048757;  // std dev = 2.15e-07, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995115;  // std dev = 2.38e-07, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210957;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 1.86e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.12544463852839213;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3.65e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462834;  // std dev = 4.01e-08, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2.95e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360661;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 1.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.4175135841583096;  // std dev = 2.58e-08, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.1015963294878365;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601498;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.3207118471601503;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else return -0.09269127618926096;  // std dev = 1.32e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014933;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926101;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.09269127618926075;  // std dev = 6.66e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 2.28e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.08518475138839686;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 2.79e-09, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 2.79e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.20975771563253537;  // std dev = 9.42e-08, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109166;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.07877675473109166;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( female(A) )
%   | | | then return -0.0787767547310916;  // std dev = 4.01e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.07877675473109155;  // std dev = 5.67e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527758;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9.31e-10, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333689;  // std dev = 5.48e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | | else return -0.07324622576333667;  // std dev = 1.12e-07, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07324622576333698;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367125;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.06842697784420268;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06842697784420312;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801076;  // std dev = 7.45e-09, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13400703000801084;  // std dev = 6.97e-09, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( female(A) )
%   | then return -0.06419184008202622;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.146 seconds
Total inference time: 1.811 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.09 seconds
Refined model CLL: -0.064221


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.701999999999998 seconds
Total inference time: 1.811 seconds
AUC ROC: 1.0
Total revision time: 11.701999999999998
Best scored revision CLL: -0.064221


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:22:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.701999999999998, 'Inference time': 1.811, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066801, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.198, 'Inference time': 1.713}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995091;  // std dev = 1.08e-06, 213.000 (wgt'ed) examples reached here.  /* #pos=213 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004873;  // std dev = 2.60e-07, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
%   | else return 0.4970378239884017;  // std dev = 4.076, 72.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=46 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7313481040734404;  // std dev = 0.411, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.15275153198433913;  // std dev = 0.264, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1291592604721973;  // std dev = 0.386, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5678313049413417;  // std dev = 0.033, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, B) )
%   | | then return -0.13325803481137985;  // std dev = 0.221, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11410401885030988;  // std dev = 0.287, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.35943894791402;  // std dev = 0.183, 296.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10385583829846011;  // std dev = 0.310, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3281052440800507;  // std dev = 4.00e-07, 213.000 (wgt'ed) examples reached here.  /* #pos=213 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13372445251909337;  // std dev = 1.83e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.05351655783380961;  // std dev = 3.349, 526.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.28948461706652234;  // std dev = 1.014, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.15947826965424158;  // std dev = 0.327, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09010557779034413;  // std dev = 0.268, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23469378091694137;  // std dev = 0.909, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return -0.12618150437923142;  // std dev = 0.262, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08310669965280387;  // std dev = 0.258, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.1486962740568677;  // std dev = 2.111, 306.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0772604272605151;  // std dev = 0.260, 488.000 (wgt'ed) examples reached here.  /* #neg=488 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17377989750894138;  // std dev = 0.749, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.12718370639292703;  // std dev = 0.257, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12411018338441886;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(B) )
%   | then return -0.06959291531980154;  // std dev = 0.000, 443.000 (wgt'ed) examples reached here.  /* #neg=443 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1149881295647019;  // std dev = 0.101, 298.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06713689279251517;  // std dev = 0.196, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066647
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.37 seconds
Total inference time: 1.656 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.578 seconds
Parameter learned model CLL: -0.073748


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 213], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.49e-08, 35, 0], 'true,false,true,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.6e-07, 461, 0], 'false,false': [4.076, 26, 46]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.411, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.264, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.386, 475, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.033, 0, 259], 'true,false,true': [0.221, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.287, 487, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.183, 37, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.31, 486, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [4e-07, 0, 213], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [1.83e-08, 31, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.349, 480, 46], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [1.014, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.327, 46, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.268, 462, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.909, 0, 259], 'true,true,true,false': [0.262, 46, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.258, 467, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.111, 47, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.26, 488, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.749, 0, 259], 'true,true,false,true': [0.257, 45, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 14, 0], 'false,true': [0.0, 443, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.101, 39, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.196, 456, 0]}]]
[{'': [0.1331062819291088, 0.07885556990943085], 'true': [5.470845477213917e-15, 4.163336342344337e-17], 'false': [1.4642420801997727e-16, 0.23070987654321007], 'true,true': [5.470845477213917e-15, nan], 'true,true,true': [5.470845477213917e-15, nan], 'true,false': [4.163336342344337e-17, nan], 'true,false,true': [3.489272363107635e-17, -2.7755575615628915e-18]}, {'': [0.09464051483497675, 0.00031391396821766677], 'true': [0.0006529297685732221, 0.0016634097289400292], 'true,false': [0.0016634097289400292, nan], 'true,false,true': [0.0016634097289400292, nan], 'true,true': [0.0006529297685732221, nan]}, {'': [0.05488650103870166, 0.0001697152136411976], 'true': [0.001098016233747144, 0.0013204151478477442], 'true,false': [0.0013204151478477442, nan]}, {'': [0.0335498169396911, 0.00019814736612837924], 'true': [0.0335498169396911, nan], 'true,true': [0.0335498169396911, nan]}, {'': [0.023655130898408972, 0.02131808311133391], 'true': [0.023655130898408972, nan], 'true,true': [7.50573312422641e-16, 1.0744093786695063e-17], 'false': [0.021318083111333888, nan], 'true,true,true': [7.50573312422641e-16, nan], 'true,true,false': [1.0744093786695063e-17, nan]}, {'': [0.029536534054365807, 0.00015594079095124116], 'true': [0.0039680454463021765, 0.0023309384518267907], 'true,true': [0.0039680454463021765, nan], 'true,false': [0.0023309384518267907, nan]}, {'': [0.019614111573745693, 0.00014198537449719017], 'true': [0.019614111573745693, nan], 'true,true': [0.019614111573745693, nan], 'true,true,true': [0.003191686531603134, 0.0014899256368357467]}, {'': [0.014565095354339554, 0.00013848871056688529], 'true': [0.014565095354339554, nan], 'true,true': [0.014565095354339554, nan], 'true,true,true': [0.014565095354339554, nan]}, {'': [0.015592590189330414, -4.611310079707196e-17], 'true': [0.01348509462953338, -7.93016446160826e-18], 'true,true': [0.0021640443282720887, 0.0014730268216599407], 'true,true,false': [0.0014730268216599407, nan], 'false': [-4.611310079707196e-17, nan]}, {'': [0.010114590515078025, 8.455236655708578e-05], 'true': [0.010114590515078025, nan], 'true,true': [0.010114590515078025, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995091;  // std dev = 1.08e-06, 213.000 (wgt'ed) examples reached here.  /* #pos=213 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048724;  // std dev = 2.98e-07, 426.000 (wgt'ed) examples reached here.  /* #neg=426 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995121;  // std dev = 2.06e-07, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.1254446385283923;  // std dev = 0.000, 492.000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462833;  // std dev = 4.15e-08, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else return 0.5553664367462834;  // std dev = 4.15e-08, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.11231637819360603;  // std dev = 0.000, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158311;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(B) )
%   | then return -0.10159632948783653;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else return -0.10159632948783663;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601501;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | else return 0.32071184716014967;  // std dev = 1.39e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601492;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926064;  // std dev = 1.83e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.09269127618926089;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else return 0.25517224256948934;  // std dev = 3.73e-09, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | else return -0.0851847513883968;  // std dev = 3.61e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 3.73e-09, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3.33e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.08518475138839682;  // std dev = 9.13e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 4.17e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 5.96e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | | else return -0.08518475138839678;  // std dev = 1.29e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2097577156325351;  // std dev = 1.40e-07, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | | else return 0.2097577156325351;  // std dev = 1.86e-07, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109186;  // std dev = 0.000, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else return 0.17709649774527755;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #pos=140 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.07324622576333693;  // std dev = 5.16e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367147;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return -0.06842697784420271;  // std dev = 7.45e-09, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.06842697784420265;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.0684269778442035;  // std dev = 0.000, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( female(B) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.446 seconds
Total inference time: 1.559 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.513 seconds
Refined model CLL: -0.064223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.907 seconds
Total inference time: 1.559 seconds
AUC ROC: 1.0
Total revision time: 12.907
Best scored revision CLL: -0.064223


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:22:56
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.907, 'Inference time': 1.559, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066647, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.37, 'Inference time': 1.656}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995086;  // std dev = 1.08e-06, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048813;  // std dev = 0.000, 541.000 (wgt'ed) examples reached here.  /* #neg=541 */
%   | else return 0.4481489350995132;  // std dev = 4.918, 100.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7331232948754733;  // std dev = 0.521, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14729643986772326;  // std dev = 0.265, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12840173642492755;  // std dev = 0.360, 569.000 (wgt'ed) examples reached here.  /* #neg=569 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5698273063114224;  // std dev = 0.038, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, B) )
%   | | then return -0.13516584255211322;  // std dev = 0.255, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11414463346257654;  // std dev = 0.289, 553.000 (wgt'ed) examples reached here.  /* #neg=553 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3601476271066696;  // std dev = 0.185, 371.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10339159278464716;  // std dev = 0.297, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3271184081934127;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.1342182418019711;  // std dev = 2.36e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.05277379117520932;  // std dev = 3.869, 679.000 (wgt'ed) examples reached here.  /* #neg=620 #pos=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.29162487181606433;  // std dev = 1.224, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.144281212208806;  // std dev = 0.307, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0903123900380774;  // std dev = 0.289, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23634332508437167;  // std dev = 1.100, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return -0.12837248792044018;  // std dev = 0.276, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08344311449603008;  // std dev = 0.295, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.15446213600675188;  // std dev = 2.332, 374.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07662799854028342;  // std dev = 0.237, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1742008952775916;  // std dev = 0.905, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.13263001836962174;  // std dev = 0.278, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11910360009977604;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(B) )
%   | then return -0.0697233775254482;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.10657862842894396;  // std dev = 0.109, 388.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06636723732559074;  // std dev = 0.155, 567.000 (wgt'ed) examples reached here.  /* #neg=567 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066812
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.191 seconds
Total inference time: 1.63 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073574
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.931 seconds
Parameter learned model CLL: -0.073574


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 265], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.58e-08, 28, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 541, 0], 'false,false': [4.918, 41, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.521, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.265, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.36, 569, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.038, 0, 324], 'true,false,true': [0.255, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.289, 553, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.185, 47, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.297, 606, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 265], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [2.36e-08, 28, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.869, 620, 59], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [1.224, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.307, 58, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.289, 579, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [1.1, 0, 324], 'true,true,true,false': [0.276, 56, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.295, 627, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.332, 50, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.237, 624, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.905, 0, 324], 'true,true,false,true': [0.278, 53, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 22, 0], 'false,true': [0.0, 598, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.109, 64, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.155, 567, 0]}]]
[{'': [0.09376141344047165, 0.08357164239767821], 'true': [4.397321081685148e-15, 2.5069552168955147e-17], 'false': [-1.8387427542775237e-16, 0.24189999999999962], 'true,true': [4.397321081685148e-15, nan], 'true,true,true': [4.397321081685148e-15, nan], 'true,false': [2.5069552168955147e-17, nan], 'true,false,true': [2.3790493384824782e-17, 0.0]}, {'': [0.09706337927884254, 0.00022818792987561323], 'true': [0.000836857858301365, 0.0012733365913963942], 'true,false': [0.0012733365913963942, nan], 'true,false,true': [0.0012733365913963942, nan], 'true,true': [0.000836857858301365, nan]}, {'': [0.06305258193566772, 0.00015123407677542929], 'true': [0.0014285357132071432, 0.0011851327690505372], 'true,false': [0.0011851327690505372, nan]}, {'': [0.03430305470078586, 0.00014586441024418235], 'true': [0.03430305470078586, nan], 'true,true': [0.03430305470078586, nan]}, {'': [0.01839520279032736, 0.02204252226616737], 'false': [0.022042522266167337, nan], 'true': [0.01839520279032736, nan], 'true,true': [-1.5953695387821118e-15, 1.9825411154020653e-17], 'true,true,false': [1.9825411154020653e-17, nan], 'true,true,true': [-1.5953695387821118e-15, nan]}, {'': [0.028639118098701916, 0.00014378887655079817], 'true': [0.004624016770245694, 0.0016286391874837935], 'true,true': [0.004624016770245694, nan], 'true,false': [0.0016286391874837935, nan]}, {'': [0.020098163680681336, 0.00013882916316415627], 'true': [0.020098163680681336, nan], 'true,true': [0.020098163680681336, nan], 'true,true,true': [0.0037336552168848883, 0.001363507081343761]}, {'': [0.014545134108130629, 8.970607602567928e-05], 'true': [0.014545134108130629, nan], 'true,true': [0.014545134108130629, nan], 'true,true,true': [0.014545134108130629, nan]}, {'': [0.01625322739867777, -1.648625494761102e-16], 'true': [0.013750912415096106, -5.046468293750712e-18], 'true,true': [0.0025260590273507503, 0.0014608294801800078], 'true,true,false': [0.0014608294801800078, nan], 'false': [-1.648625494761102e-16, nan]}, {'': [0.011863592553406025, 4.2134638779483024e-05], 'true': [0.011863592553406025, nan], 'true,true': [0.011863592553406025, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 1.08e-06, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048838;  // std dev = 0.000, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else return -0.1254446385283923;  // std dev = 0.000, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360565;  // std dev = 0.000, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.10159632948783633;  // std dev = 1.49e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( female(B) )
%   | then return -0.10159632948783658;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else return -0.1015963294878365;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601502;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | else return 0.3207118471601492;  // std dev = 2.39e-08, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716014894;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.3207118471601486;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.09269127618926158;  // std dev = 0.000, 550.000 (wgt'ed) examples reached here.  /* #neg=550 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948895;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.2551722425694887;  // std dev = 1.29e-08, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839675;  // std dev = 4.34e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | | else return -0.08518475138839675;  // std dev = 3.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 4.08e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | | else return -0.08518475138839678;  // std dev = 5.96e-08, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839676;  // std dev = 1.05e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253492;  // std dev = 1.84e-07, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | | else return 0.2097577156325351;  // std dev = 2.73e-07, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07877675473109179;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109244;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527758;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.17709649774527775;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333695;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return -0.07324622576333684;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367153;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06842697784420271;  // std dev = 1.61e-09, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.06842697784420261;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420258;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420258;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | | else return -0.06842697784420258;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420258;  // std dev = 1.86e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420258;  // std dev = 4.47e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | | | else return -0.06842697784420258;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801134;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( female(B) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.218 seconds
Total inference time: 1.684 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.182 seconds
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.522 seconds
Total inference time: 1.684 seconds
AUC ROC: 1.0
Total revision time: 15.522
Best scored revision CLL: -0.064225


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:23:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.522, 'Inference time': 1.684, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066812, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.191, 'Inference time': 1.63}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.722581188579172;  // std dev = 0.086, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14402992290765404;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5586059107354677;  // std dev = 0.017, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, B) )
%   | | then return -0.11047670731638981;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 6.14e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3622999496408805;  // std dev = 0.164, 45.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.33144960896270176;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then return -0.08061312981077336;  // std dev = 0.705, 77.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2707904985289687;  // std dev = 0.229, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1377555894419555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08692344928379793;  // std dev = 0.069, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22103269120082042;  // std dev = 0.207, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.16113989696414566;  // std dev = 0.055, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0803792730091361;  // std dev = 0.064, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.15902779337093073;  // std dev = 0.586, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07384151497105326;  // std dev = 4.08e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16280592186545234;  // std dev = 0.172, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1316903597023128;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0689477916363135;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12444278933116784;  // std dev = 0.068, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06465115594658029;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090144
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.576 seconds
Total inference time: 1.814 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067702
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.362 seconds
Parameter learned model CLL: -0.067702


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [2.6e-07, 0, 38], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [7.6e-08, 78, 0], 'false,false': [0.816, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.086, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.083, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 69, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 40], 'true,false,true': [2.63e-09, 5, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.14e-08, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.164, 5, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.48e-08, 86, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'false': 'movie(G, A)'}, {'true,true,true,true': [0.0, 0, 38], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.705, 75, 2], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.229, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.069, 87, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.207, 0, 40], 'true,true,true,false': [0.055, 2, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.064, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.586, 4, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.08e-08, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.172, 0, 40], 'true,true,false,true': [0.073, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 82, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.068, 3, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 85, 0]}]]
[{'': [0.11776859504132364, 0.024081694863587792], 'true': [1.7763568394002505e-15, -6.938893903907228e-18], 'false': [7.401486830834377e-17, 0.22222222222222224], 'true,true': [1.7763568394002505e-15, nan], 'true,true,true': [1.7763568394002505e-15, nan], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.07449093738056974, -3.539841527790354e-17], 'true': [0.00018350720514144215, 0.0013816511818322524], 'true,false': [0.0013816511818322524, nan], 'true,false,true': [0.0013816511818322524, nan], 'true,true': [0.00018350720514144215, nan]}, {'': [0.04448564596895931, 4.966787215428332e-17], 'true': [0.000305068406287079, 1.3877787807814458e-18], 'true,false': [1.3877787807814458e-18, nan]}, {'': [0.027011750397811046, 3.4855839145208403e-17], 'true': [0.027011750397811046, nan], 'true,true': [0.027011750397811046, nan]}, {'': [-4.674623261579606e-17, 0.006460073671738677], 'false': [0.006460073671738677, nan], 'true': [-4.674623261579606e-17, nan], 'true,true': [-4.674623261579606e-17, nan], 'true,true,true': [-4.674623261579606e-17, nan]}, {'': [0.005249948102237754, 5.404561553460095e-05], 'true': [0.0013102234878096474, 0.0], 'true,true': [0.0013102234878096474, nan], 'true,false': [0.0, nan]}, {'': [0.007719176685763464, 5.4047204755231094e-05], 'true': [0.007719176685763464, nan], 'true,true': [0.007719176685763464, nan], 'true,true,true': [0.0010742551046745874, 0.0015167634078181481]}, {'': [0.00781552252249712, 2.1627721258931622e-17], 'true': [0.00781552252249712, nan], 'true,true': [0.00781552252249712, nan], 'true,true,true': [0.00781552252249712, nan]}, {'': [0.01277058317252777, -7.446617848095563e-18], 'true': [0.01277058317252777, nan], 'true,true': [0.000737685926077164, 0.0006616861904138113], 'true,true,false': [0.0006616861904138113, nan], 'false': [-7.446617848095563e-18, nan]}, {'': [0.004638029188838318, -6.530723674265627e-19], 'true': [0.004638029188838318, nan], 'true,true': [0.004638029188838318, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 6.66e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7225811885791713;  // std dev = 0.014, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.7225811885791713;  // std dev = 0.014, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5586059107354682;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5586059107354682;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.15715506400533114;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.11231637819360625;  // std dev = 5.58e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.14078302272272838;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.42009719915311566;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.4200971991531156;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12377526484874812;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.10159632948783616;  // std dev = 5.37e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return -0.11448790655215493;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3187693299836117;  // std dev = 7.88e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.11096415551298029;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.08927116731086188;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.2053037267781308;  // std dev = 0.465, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2585136166184873;  // std dev = 0.020, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2585136166184873;  // std dev = 0.020, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10048073216795525;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.08518475138839679;  // std dev = 1.67e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.08227444779950295;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.21220441550110364;  // std dev = 0.081, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.21220441550110364;  // std dev = 0.081, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.10809748617527411;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then return -0.07877675473109168;  // std dev = 3.73e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.0762719654585694;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17894723977003624;  // std dev = 0.016, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.17894723977003618;  // std dev = 0.016, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08313665765079628;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return -0.102948516246591;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.15418590109759983;  // std dev = 0.014, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15418590109759983;  // std dev = 0.014, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10736621693447974;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06842697784420267;  // std dev = 3.25e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.0645653903984412;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1254033197189457;  // std dev = 0.045, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.1254033197189457;  // std dev = 0.045, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( actor(A) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.06077376859454177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07651881389829761;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083076
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.553 seconds
Total inference time: 1.592 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064882
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.468 seconds
Refined model CLL: -0.064882


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083076
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.959 seconds
Total inference time: 1.592 seconds
AUC ROC: 1.0
Total revision time: 6.959
Best scored revision CLL: -0.064882


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:23:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083076, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.959, 'Inference time': 1.592, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.090144, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.576, 'Inference time': 1.814}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995126;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048832;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109537;  // std dev = 2.38e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14246974089313666;  // std dev = 0.146, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12823054180852292;  // std dev = 0.266, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, B) )
%   | | then return -0.11247345439268194;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11203891955856642;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.31823258537157;  // std dev = 0.205, 100.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10136760112365584;  // std dev = 5.37e-08, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3427143573219996;  // std dev = 1.03e-07, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13971127842125972;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.08089402187679973;  // std dev = 0.859, 150.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.27463050514554344;  // std dev = 0.177, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.13848601444046146;  // std dev = 0.148, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08592937119093409;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22350223737887526;  // std dev = 0.158, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.11416024154553428;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08014781006154811;  // std dev = 0.110, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.16927089159110456;  // std dev = 0.693, 86.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07375026305696154;  // std dev = 1.83e-08, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16280445363249343;  // std dev = 0.127, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1284691381577785;  // std dev = 0.141, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.16739408813685908;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.0688679889553398;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12268626292730506;  // std dev = 0.066, 88.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06458080214679232;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09582
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.096 seconds
Total inference time: 1.842 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067785
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.018 seconds
Parameter learned model CLL: -0.067785


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [0.0, 0, 77], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 183, 0], 'false,false': [0.0, 0, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.38e-07, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.146, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.266, 167, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [3.8e-08, 0, 81], 'true,false,true': [0.014, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 156, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.205, 19, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.37e-08, 162, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [1.03e-07, 0, 77], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.029, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.859, 146, 4], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.177, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.148, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 166, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.158, 0, 81], 'true,true,true,false': [0.012, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.11, 151, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.693, 5, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 147, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.127, 0, 81], 'true,true,false,true': [0.141, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false,true': [0.0, 144, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.066, 7, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 168, 0]}]]
[{'': [0.0670634344607341, 0.020932826217507004], 'true': [-1.107339328457299e-15, -6.938893903907228e-18], 'false': [-2.0627094446587609e-16, 0.0], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-1.107339328457299e-15, nan], 'true,true,true': [-1.107339328457299e-15, nan]}, {'': [0.08372434049032647, 0.0004242820540481971], 'true': [7.01770603219852e-16, 0.0017816395115860459], 'true,false': [0.0017816395115860459, nan], 'true,false,true': [0.0017816395115860459, nan], 'true,true': [7.01770603219852e-16, nan]}, {'': [0.036489268134186764, -6.832141690000964e-17], 'true': [1.4474018691409447e-15, 2.3785117345367923e-05], 'true,false': [2.3785117345367923e-05, nan]}, {'': [0.04202881512347449, 1.7818394222379055e-17], 'true': [0.04202881512347449, nan], 'true,true': [0.04202881512347449, nan]}, {'': [0.027158599028388245, 0.004916275587053086], 'true': [0.027158599028388245, nan], 'true,true': [1.3841741605716237e-16, 7.171388321107013e-05], 'false': [0.004916275587053086, nan], 'true,true,false': [7.171388321107013e-05, nan], 'true,true,true': [1.3841741605716237e-16, nan]}, {'': [0.015953729600206155, -4.01285430587406e-17], 'true': [0.0003889650656543534, 0.0024378775318042722], 'true,false': [0.0024378775318042722, nan], 'true,true': [0.0003889650656543534, nan]}, {'': [0.005408105329984756, 8.038211672721203e-05], 'true': [0.005408105329984756, nan], 'true,true': [0.005408105329984756, nan], 'true,true,true': [0.0003079151586114047, 3.6463082135635566e-05]}, {'': [0.005592039214227772, 2.2657612747452172e-18], 'true': [0.005592039214227772, nan], 'true,true': [0.005592039214227772, nan], 'true,true,true': [0.005592039214227772, nan]}, {'': [0.00955581363648291, -3.7778422365717134e-17], 'true': [0.008694327498090583, 0.0], 'true,true': [0.00019986056076318442, 0.00198231488575161], 'true,true,false': [0.00198231488575161, nan], 'false': [-3.7778422365717134e-17, nan]}, {'': [0.0043965601172171916, -5.28677630773884e-18], 'true': [0.0043965601172171916, nan], 'true,true': [0.0043965601172171916, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995126;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.14185106490048804;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109537;  // std dev = 2.38e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1564610283805222;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12656842076941038;  // std dev = 0.155, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462836;  // std dev = 3.42e-07, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.1712765206456856;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11220438432471272;  // std dev = 9.66e-08, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 8.43e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.09473978747328907;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10227532271728293;  // std dev = 0.133, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.32071184716015005;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else return -0.08648199349507678;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then return -0.09254918001818561;  // std dev = 1.13e-07, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else return 0.21315805353379766;  // std dev = 0.481, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2562079795459427;  // std dev = 0.041, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( female(A) )
%   | | then return -0.10906020845408027;  // std dev = 0.150, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07937930676682872;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08609057723344617;  // std dev = 0.170, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.21120727757822638;  // std dev = 0.030, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return 0.1687049092293673;  // std dev = 0.100, 55.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=47 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08229597794461806;  // std dev = 0.318, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18117752160147405;  // std dev = 0.039, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08756311393696395;  // std dev = 0.005, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07388947995097403;  // std dev = 0.151, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15583557375763182;  // std dev = 0.035, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else if ( female(A) )
%   | | | then return -0.18232912585233502;  // std dev = 0.182, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11172601278366204;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.21214949363468408;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0680063823454399;  // std dev = 6.14e-08, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13641803909727573;  // std dev = 0.031, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.07170600983095983;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0638206186607419;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088204
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.855 seconds
Total inference time: 1.54 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064846
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.566 seconds
Refined model CLL: -0.064846


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088204
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.534999999999999 seconds
Total inference time: 1.54 seconds
AUC ROC: 1.0
Total revision time: 7.534999999999999
Best scored revision CLL: -0.064846


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:23:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.088204, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 7.534999999999999, 'Inference time': 1.54, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.09582, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.096, 'Inference time': 1.842}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995107;  // std dev = 6.31e-07, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048843;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7208004308712523;  // std dev = 0.071, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12842762514149983;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1259623714142543;  // std dev = 0.122, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5567065267457869;  // std dev = 0.008, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, B) )
%   | | then return -0.13711905268543548;  // std dev = 0.141, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11226476985500261;  // std dev = 4.71e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3713219768947361;  // std dev = 0.151, 134.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10203696842169852;  // std dev = 0.105, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3302669640905358;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.1375160662058584;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.08475698625699887;  // std dev = 1.057, 236.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.26686060487713675;  // std dev = 0.277, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1382643410216449;  // std dev = 0.122, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0857339934938917;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2181218791612489;  // std dev = 0.248, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return -0.12437768484877972;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08006776546268937;  // std dev = 0.121, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.17121565735612637;  // std dev = 0.715, 127.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07393226158999816;  // std dev = 0.081, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15910313066390971;  // std dev = 0.202, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.11934599292776606;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14513579032206517;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06871446600886842;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12421870874519976;  // std dev = 0.060, 130.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06526776290047775;  // std dev = 0.109, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.092631
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.384 seconds
Total inference time: 1.677 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06744
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.09 seconds
Parameter learned model CLL: -0.06744


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [6.31e-07, 0, 117], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 231, 0], 'false,false': [0.913, 1, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.071, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.021, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.122, 237, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.008, 0, 122], 'true,false,true': [0.141, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 228, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.151, 12, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.105, 217, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 117], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.057, 231, 5], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.277, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.122, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 249, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.248, 0, 122], 'true,true,true,false': [0.11, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.121, 210, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.715, 5, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 243, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.202, 0, 122], 'true,true,false,true': [0.025, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false,true': [0.0, 221, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.06, 8, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.109, 232, 0]}]]
[{'': [0.09000000000000363, 0.020651961046128695], 'true': [3.4008883079115908e-15, -1.2810265668751807e-17], 'false': [-2.0762612408574356e-16, 0.1388888888888887], 'true,true': [3.4008883079115908e-15, nan], 'true,true,true': [3.4008883079115908e-15, nan], 'true,false': [-1.2810265668751807e-17, nan], 'true,false,true': [-1.2810265668751807e-17, nan]}, {'': [0.054755039355548, 6.325917250035085e-05], 'true': [4.1206897478451675e-05, 4.004194110292615e-05], 'true,true': [4.1206897478451675e-05, nan], 'true,false': [4.004194110292615e-05, nan], 'true,false,true': [4.004194110292615e-05, nan]}, {'': [0.031012788688814637, 9.73879846162418e-18], 'true': [6.508849210840232e-05, 0.002204989089766447], 'true,false': [0.002204989089766447, nan]}, {'': [0.022803768586814654, 5.042722214864008e-05], 'true': [0.022803768586814654, nan], 'true,true': [0.022803768586814654, nan]}, {'': [0.010153500980247128, 0.004737763452693811], 'true': [0.010153500980247128, nan], 'true,true': [-2.581031305111475e-16, -4.625929269271485e-18], 'false': [0.004737763452693811, nan], 'true,true,false': [-4.625929269271485e-18, nan], 'true,true,true': [-2.581031305111475e-16, nan]}, {'': [0.010181364778375054, -7.133963210442772e-18], 'true': [0.0006275509384193909, 0.0018508792352532576], 'true,false': [0.0018508792352532576, nan], 'true,true': [0.0006275509384193909, nan]}, {'': [0.008068792044620703, 6.985977970049374e-05], 'true': [0.008068792044620703, nan], 'true,true': [0.008068792044620703, nan], 'true,true,true': [0.0005053116703278043, 0.0013492066017689042]}, {'': [0.004021267615851815, 2.6857217985459287e-05], 'true': [0.004021267615851815, nan], 'true,true': [0.004021267615851815, nan], 'true,true,true': [0.004021267615851815, nan]}, {'': [0.00673294458129656, -3.918434204559376e-17], 'true': [0.006193428917621228, 0.0], 'true,true': [0.0003342669815568606, 5.5526259316328695e-05], 'true,true,false': [5.5526259316328695e-05, nan], 'false': [-3.918434204559376e-17, nan]}, {'': [0.0035883558554454455, 5.161892216751564e-05], 'true': [0.0035883558554454455, nan], 'true,true': [0.0035883558554454455, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995107;  // std dev = 6.31e-07, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.1418510649004884;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109553;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.12613696865901966;  // std dev = 0.155, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 4.46e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.112247370428613;  // std dev = 9.88e-08, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583093;  // std dev = 3.53e-07, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.1206714184411997;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10208201286079399;  // std dev = 0.133, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.32071184716015;  // std dev = 1.93e-07, 117.000 (wgt'ed) examples reached here.  /* #pos=117 */
%   | else return -0.09109948438382993;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( director(B), actor(A) )
%   | then return 0.23157365459557092;  // std dev = 0.488, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.09426623826100468;  // std dev = 0.214, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2558815789243624;  // std dev = 0.038, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.0838321515617354;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0849758270456305;  // std dev = 9.31e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.2105678056058365;  // std dev = 0.025, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.07761405954473065;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.21005527118338832;  // std dev = 0.021, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | | else return -0.10714333658228647;  // std dev = 0.208, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07948863935674187;  // std dev = 0.154, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17746717539177106;  // std dev = 0.029, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( female(A) )
%   | | then return -0.09788955827380032;  // std dev = 0.141, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09769075617993926;  // std dev = 0.058, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.07432209687601994;  // std dev = 0.178, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.153026038326641;  // std dev = 0.026, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else if ( female(A) )
%   | | | then return -0.10182924927549664;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07821153713160028;  // std dev = 0.133, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.16584436374653014;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06815574627241942;  // std dev = 3.94e-08, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13422800650510905;  // std dev = 0.023, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else return -0.08188364986136916;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06469507781898322;  // std dev = 0.113, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081449
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.157 seconds
Total inference time: 1.68 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063964
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.943 seconds
Refined model CLL: -0.063964


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081449
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.574 seconds
Total inference time: 1.68 seconds
AUC ROC: 1.0
Total revision time: 8.574
Best scored revision CLL: -0.063964


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:23:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081449, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.574, 'Inference time': 1.68, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.092631, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.384, 'Inference time': 1.677}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995098;  // std dev = 9.68e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 1.55e-07, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | else return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7227391601068319;  // std dev = 0.197, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12888101578178796;  // std dev = 0.077, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839208;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5588216508298156;  // std dev = 0.020, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, B) )
%   | | then return -0.11197422270381449;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11306911135298613;  // std dev = 0.125, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3729460767796165;  // std dev = 0.153, 179.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10194041800981533;  // std dev = 0.094, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.32901226623507485;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.14066710701413554;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.08214005170649703;  // std dev = 1.379, 304.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2688122260152075;  // std dev = 0.481, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12450676928218601;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08592441233144667;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21967348633564118;  // std dev = 0.438, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return -0.12506759529222797;  // std dev = 0.105, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07957316058941967;  // std dev = 0.054, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.16769307254011442;  // std dev = 0.982, 173.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07411761647004597;  // std dev = 0.072, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16078050520989723;  // std dev = 0.364, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.11585223859641729;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11704382392184856;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.06887755189833553;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12269217970172333;  // std dev = 0.070, 175.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06487618269461293;  // std dev = 0.058, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088023
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.743 seconds
Total inference time: 1.855 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067265
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.655 seconds
Parameter learned model CLL: -0.067265


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [9.68e-07, 0, 156], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 14, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.55e-07, 318, 0], 'false,false': [1.708, 5, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.197, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.077, 23, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 333, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 163], 'true,false,true': [5.27e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.125, 289, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.153, 16, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.094, 324, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 156], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [7.45e-09, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.379, 297, 7], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.481, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true': [9.13e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 321, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.438, 0, 163], 'true,true,true,false': [0.105, 12, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.054, 337, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.982, 10, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.072, 308, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.364, 0, 163], 'true,true,false,true': [0.0, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 5, 0], 'false,true': [0.0, 281, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.07, 12, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.058, 285, 0]}]]
[{'': [0.08002462296091697, 0.020762167125803227], 'true': [6.012284687200848e-15, -1.4802973661668754e-17], 'false': [7.54113752575578e-17, 0.2430555555555555], 'true,true': [6.012284687200848e-15, nan], 'true,true,true': [6.012284687200848e-15, nan], 'true,false': [-1.4802973661668754e-17, nan], 'true,false,true': [-1.1895246692412391e-17, 0.0]}, {'': [0.07883297387043678, -9.601928861622976e-17], 'true': [0.000237679579115809, 0.00025979114980854675], 'true,false': [0.00025979114980854675, nan], 'true,false,true': [0.00025979114980854675, nan], 'true,true': [0.000237679579115809, nan]}, {'': [0.022696386855069067, 5.40165539463844e-05], 'true': [0.00040477126644676315, 3.0839528461809902e-18], 'true,false': [3.0839528461809902e-18, nan]}, {'': [0.023305394590051508, 2.7431466030760195e-05], 'true': [0.023305394590051508, nan], 'true,true': [0.023305394590051508, nan]}, {'': [0.01137633035712346, 0.006252717212039256], 'true': [0.01137633035712346, nan], 'true,true': [-6.832141690000964e-16, 6.1679056923619804e-18], 'false': [0.006252717212039255, nan], 'true,true,false': [6.1679056923619804e-18, nan], 'true,true,true': [-6.832141690000964e-16, nan]}, {'': [0.011203745858248411, -2.2135287718383183e-17], 'true': [0.0014205730200200595, 6.938893903907228e-18], 'true,true': [0.0014205730200200595, nan], 'true,false': [6.938893903907228e-18, nan]}, {'': [0.008749423914388455, 8.779098996532013e-06], 'true': [0.008749423914388455, nan], 'true,true': [0.008749423914388455, nan], 'true,true,true': [0.0011768944120343122, 0.0009126713042314655]}, {'': [0.005573799097477292, 1.687085251364265e-05], 'true': [0.005573799097477292, nan], 'true,true': [0.005573799097477292, nan], 'true,true,true': [0.005573799097477292, nan]}, {'': [0.007296184051718361, -2.054505241299222e-17], 'true': [0.005643367886819589, -2.7755575615628915e-18], 'true,true': [0.0008113556999069494, -6.938893903907228e-18], 'true,true,false': [-6.938893903907228e-18, nan], 'false': [-2.054505241299222e-17, nan]}, {'': [0.004925704348793874, 1.1651103712225794e-05], 'true': [0.004925704348793874, nan], 'true,true': [0.004925704348793874, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995098;  // std dev = 9.68e-07, 156.000 (wgt'ed) examples reached here.  /* #pos=156 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048785;  // std dev = 9.88e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 1.83e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0.7207683190310448;  // std dev = 0.009, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839202;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462853;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0.5567156751697849;  // std dev = 0.011, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360636;  // std dev = 2.95e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1123163781936066;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0.418590563023256;  // std dev = 0.012, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A) )
%   | then return -0.10159632948783662;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.11737760218267601;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783621;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783621;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601498;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.31990172025971125;  // std dev = 1.86e-08, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926092;  // std dev = 2.98e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | | else return -0.09269127618926058;  // std dev = 8.94e-08, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.0913725811548556;  // std dev = 6.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09269127618926092;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014933;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.15180624317582825;  // std dev = 0.489, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0.2568276143276048;  // std dev = 0.015, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else return -0.08518475138839687;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 3.95e-09, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.08518475138839678;  // std dev = 3.94e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.08406444772268538;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08710175210295741;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253592;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0.21097563188902427;  // std dev = 0.133, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else if ( female(A) )
%   | | | then return -0.08387857380069796;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then return -0.07877675473109143;  // std dev = 1.61e-09, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   | else if ( female(B) )
%   | | then return -0.0783488274551199;  // std dev = 0.000478, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.09145144008983132;  // std dev = 0.088, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08082001976172608;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527722;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0.17802174366951676;  // std dev = 0.012, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else if ( female(A) )
%   | | then return -0.07707017606534725;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324622576333704;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return -0.0714996533452067;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333667;  // std dev = 8.12e-09, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | else if ( female(B) )
%   | | | then return -0.07327527929256426;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07420231747767714;  // std dev = 0.018, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.152743858093671;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0.1534675610202735;  // std dev = 0.107, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else if ( female(A) )
%   | | | then return -0.06786019419865287;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.08536989096730899;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A) )
%   | then return -0.0684269778442029;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( female(B) )
%   | | | then return -0.06771851308328208;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06689598016792722;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0681676435431737;  // std dev = 0.000123, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13434885434978833;  // std dev = 0.008, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( female(A) )
%   | | then return -0.06369153087620748;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06419184008202619;  // std dev = 1.61e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202623;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( actor(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06315092177006869;  // std dev = 0.000952, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06401072687813823;  // std dev = 0.000530, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.0789357075607105;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070032
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.803 seconds
Total inference time: 1.798 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063737
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.156 seconds
Refined model CLL: -0.063737


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070032
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.357000000000001 seconds
Total inference time: 1.798 seconds
AUC ROC: 1.0
Total revision time: 13.357000000000001
Best scored revision CLL: -0.063737


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:24:09
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070032, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.357000000000001, 'Inference time': 1.798, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.088023, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.743, 'Inference time': 1.855}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048732;  // std dev = 3.01e-07, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
%   | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7210606306085671;  // std dev = 0.100, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1589090096055021;  // std dev = 0.181, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5569693620952066;  // std dev = 0.009, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, B) )
%   | | then return -0.11908434082068799;  // std dev = 0.149, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1125851959908076;  // std dev = 0.113, 421.000 (wgt'ed) examples reached here.  /* #neg=421 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3890955509106228;  // std dev = 0.123, 216.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10210409833672562;  // std dev = 0.148, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.32623256590771094;  // std dev = 4.34e-07, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13814908627893313;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.08278453789816109;  // std dev = 1.454, 418.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2650290996639383;  // std dev = 0.383, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.13497976897136432;  // std dev = 0.176, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08612415620829703;  // std dev = 0.092, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21685705896850904;  // std dev = 0.344, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return -0.1276781809400593;  // std dev = 0.191, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07961732284908216;  // std dev = 0.086, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.1632586814141893;  // std dev = 1.089, 219.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0743835453796701;  // std dev = 0.140, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1593603433805622;  // std dev = 0.280, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.13270117769823483;  // std dev = 0.194, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14534828257539492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06882407831713606;  // std dev = 9.88e-08, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1164103101717517;  // std dev = 0.073, 225.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06489479863556559;  // std dev = 0.090, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.091567
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.36 seconds
Total inference time: 1.763 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067108
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.787 seconds
Parameter learned model CLL: -0.067108


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.09e-06, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.01e-07, 403, 0], 'false,false': [1.291, 2, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.1, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.181, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 396, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.009, 0, 204], 'true,false,true': [0.149, 22, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.113, 421, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.123, 12, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.148, 394, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [4.34e-07, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.454, 408, 10], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.383, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.176, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.092, 408, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.344, 0, 204], 'true,true,true,false': [0.191, 19, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.086, 353, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.089, 15, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.14, 382, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.28, 0, 204], 'true,true,false,true': [0.194, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false,true': [9.88e-08, 371, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.073, 21, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 361, 0]}]]
[{'': [0.06277736686391126, 0.023515749745971343], 'true': [6.15315358802561e-15, -1.1895246692412391e-17], 'false': [2.2479950076777363e-16, 0.1388888888888887], 'true,true': [6.15315358802561e-15, nan], 'true,true,true': [6.15315358802561e-15, nan], 'true,false': [-1.1895246692412391e-17, nan], 'true,false,true': [-1.1564823173178714e-17, 0.0]}, {'': [0.037789938510294906, -1.2560098864446215e-16], 'true': [4.887368748591834e-05, 0.0029863043508974933], 'true,false': [0.0029863043508974933, nan], 'true,false,true': [0.0029863043508974933, nan], 'true,true': [4.887368748591834e-05, nan]}, {'': [0.04032866351913843, 3.0350463398734847e-05], 'true': [7.72046506020511e-05, 0.0010123122454836384], 'true,false': [0.0010123122454836384, nan]}, {'': [0.01510078518236792, 5.553579301387336e-05], 'true': [0.01510078518236792, nan], 'true,true': [0.01510078518236792, nan]}, {'': [0.014366484923947643, 0.005060893425227761], 'true': [0.014366484923947643, nan], 'true,true': [9.70586726682611e-16, 0.0], 'false': [0.005060893425227766, nan], 'true,true,true': [9.70586726682611e-16, nan], 'true,true,false': [0.0, nan]}, {'': [0.014331147366639013, 2.0642414485383834e-05], 'true': [0.0007202862194313252, 0.0014778419133023263], 'true,false': [0.0014778419133023263, nan], 'true,true': [0.0007202862194313252, nan]}, {'': [0.009944869643896735, 2.097437968793392e-05], 'true': [0.009944869643896735, nan], 'true,true': [0.009944869643896735, nan], 'true,true,true': [0.0005787461163261451, 0.0019167665689942958]}, {'': [0.005411502588953862, 5.123203355178027e-05], 'true': [0.005411502588953862, nan], 'true,true': [0.005411502588953862, nan], 'true,true,true': [0.005411502588953862, nan]}, {'': [0.007201446706819565, 2.6334131042321772e-17], 'true': [0.006879729981180404, 0.0], 'true,true': [0.0003854280716214846, 0.002098096905047938], 'true,true,false': [0.002098096905047938, nan], 'false': [2.6334131042321772e-17, nan]}, {'': [0.005387103411792301, 2.2330826002851758e-05], 'true': [0.005387103411792301, nan], 'true,true': [0.005387103411792301, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048743;  // std dev = 2.72e-07, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7215408582304819;  // std dev = 0.007, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.7194734122109555;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.18903035252690692;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.12544463852839224;  // std dev = 0.000, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5574448241434476;  // std dev = 0.009, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.5553664367462842;  // std dev = 3.16e-08, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.12220085895695502;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1123163781936062;  // std dev = 0.000, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.419103987066213;  // std dev = 0.009, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.4175135841583093;  // std dev = 3.25e-08, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.12462030534483588;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12385059993342694;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then return -0.1015963294878364;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else return -0.10159632948783658;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3194634623571454;  // std dev = 1.18e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return 0.3207118471601504;  // std dev = 9.86e-09, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | else if ( female(A) )
%   | | then return -0.08488886537058793;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09083658896260223;  // std dev = 1.86e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.27547860733890533;  // std dev = 0.186, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.21385291170288534;  // std dev = 0.478, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( female(B) )
%   | | then return -0.0926912761892608;  // std dev = 5.89e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926054;  // std dev = 1.00e-07, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | | | else return -0.09269127618926089;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2570628073541949;  // std dev = 0.010, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.25584979706161376;  // std dev = 0.004, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.10489174317271527;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.10946741347842998;  // std dev = 0.061, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 1.32e-09, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.08518475138839679;  // std dev = 2.79e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839679;  // std dev = 3.09e-09, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 5.96e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | | else return -0.08518475138839679;  // std dev = 1.18e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2111121817416484;  // std dev = 0.077, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0.21023908314252027;  // std dev = 0.036, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else if ( female(A) )
%   | | | then return -0.09818351655095425;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07559454297442084;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109164;  // std dev = 3.94e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07877675473109144;  // std dev = 3.61e-09, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17810201853623933;  // std dev = 0.008, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.1774513038383595;  // std dev = 0.003, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.09634382186335189;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09324472201969808;  // std dev = 0.053, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.07324622576333686;  // std dev = 6.99e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.15351471018625631;  // std dev = 0.060, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0.15301417660113317;  // std dev = 0.028, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else if ( female(A) )
%   | | | then return -0.05941191376046428;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0646092994382823;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.0684269778442027;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420333;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13461442843649424;  // std dev = 0.006, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.1342188702623915;  // std dev = 0.002, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.05617746582725035;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.060812758809027236;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(A) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073811
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.888 seconds
Total inference time: 1.945 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063758
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.834 seconds
Refined model CLL: -0.063758


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073811
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.869 seconds
Total inference time: 1.945 seconds
AUC ROC: 1.0
Total revision time: 13.869
Best scored revision CLL: -0.063758


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:24:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073811, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.869, 'Inference time': 1.945, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.091567, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.36, 'Inference time': 1.763}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return 0.42064893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7301408765984854;  // std dev = 0.222, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.13625443899476092;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12933934604936265;  // std dev = 0.195, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5667145524327456;  // std dev = 0.035, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B) )
%   | | then return -0.11812977493819254;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.113142766790342;  // std dev = 0.097, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3508191687308508;  // std dev = 0.191, 78.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10398861219549957;  // std dev = 0.139, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.33052234264794894;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13641199705966164;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.05962530050865879;  // std dev = 1.530, 142.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2868620159952709;  // std dev = 0.520, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.13434999389539543;  // std dev = 0.112, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08873987479612067;  // std dev = 0.096, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23289247639661245;  // std dev = 0.470, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.12494833373340393;  // std dev = 0.098, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0818275841227017;  // std dev = 0.090, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.16966436191780487;  // std dev = 0.829, 73.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07595343629550647;  // std dev = 0.084, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.16970873479861717;  // std dev = 0.386, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.14559261656065656;  // std dev = 0.138, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11588713508674922;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.06949530110409974;  // std dev = 3.94e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12223021465493314;  // std dev = 0.089, 74.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06732237870066429;  // std dev = 0.108, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068019
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.001 seconds
Total inference time: 1.294 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071991
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.636 seconds
Parameter learned model CLL: -0.071991


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [8.94e-08, 99, 0], 'false,false': [1.984, 7, 9]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.222, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.07, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.195, 136, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.035, 0, 67], 'true,false,true': [0.065, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.097, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.191, 11, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.139, 113, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.53, 133, 9], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.52, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.112, 13, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.096, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.47, 0, 67], 'true,true,true,false': [0.098, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.829, 6, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.084, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.386, 0, 67], 'true,true,false,true': [0.138, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 2, 0], 'false,true': [3.94e-08, 111, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.089, 7, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.108, 144, 0]}]]
[{'': [0.11628425038984136, 0.07213610586011339], 'true': [-3.675221047035001e-16, -9.25185853854297e-18], 'false': [8.074349270001139e-17, 0.24609374999999992], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [0.0, -2.7755575615628915e-18], 'true,true': [-3.675221047035001e-16, nan], 'true,true,true': [-3.675221047035001e-16, nan]}, {'': [0.0650200239999808, 0.0002795383315620727], 'true': [0.0007333442438489209, 0.0007011107167363338], 'true,true': [0.0007333442438489209, nan], 'true,false': [0.0007011107167363338, nan], 'true,false,true': [0.0007011107167363338, nan]}, {'': [0.05415211089858091, 8.254760233623748e-05], 'true': [0.0012601919430728545, 0.0004268324062725426], 'true,false': [0.0004268324062725426, nan]}, {'': [0.03636296699138578, 0.00017206296198336746], 'true': [0.03636296699138578, nan], 'true,true': [0.03636296699138578, nan]}, {'': [0.015930467750937635, 0.016491526192518875], 'false': [0.016491526192518875, nan], 'true': [0.015930467750937635, nan], 'true,true': [-3.215818416155626e-16, -2.7755575615628915e-18], 'true,true,false': [-2.7755575615628915e-18, nan], 'true,true,true': [-3.215818416155626e-16, nan]}, {'': [0.027677006886605127, 8.293009725044173e-05], 'true': [0.004029821302695525, 0.0009620841387606374], 'true,true': [0.004029821302695525, nan], 'true,false': [0.0009620841387606374, nan]}, {'': [0.01639746772529819, 7.223546905973734e-05], 'true': [0.01639746772529819, nan], 'true,true': [0.01639746772529819, nan], 'true,true,true': [0.0032937195684064656, 0.0010613686639022518]}, {'': [0.009409419371758456, 6.631091155205539e-05], 'true': [0.009409419371758456, nan], 'true,true': [0.009409419371758456, nan], 'true,true,true': [0.009409419371758456, nan]}, {'': [0.015926980446759494, 1.400281292320017e-17], 'true': [0.014935078158330404, 0.0], 'true,true': [0.002224396371053383, 0.001589113175412581], 'true,true,false': [0.001589113175412581, nan], 'false': [1.400281292320017e-17, nan]}, {'': [0.007835185729311207, 8.144369588130985e-05], 'true': [0.007835185729311207, nan], 'true,true': [0.007835185729311207, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.7226608751527159;  // std dev = 0.014, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.5586890327313786;  // std dev = 0.018, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583101;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.42016339401127284;  // std dev = 0.018, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.10159632948783627;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.14104951122493584;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 3.73e-09, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.3187196027065758;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A), director(B) )
%   | then return 0.33722105786743345;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926108;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.11531743565862723;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25596652228461864;  // std dev = 0.011, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.09268957128004304;  // std dev = 0.016, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1.05e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.0851847513883968;  // std dev = 2.24e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08450312617904175;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.21034381350301753;  // std dev = 0.010, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( female(A) )
%   | | | then return -0.0782338414227225;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09681969164647702;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.07877675473109173;  // std dev = 1.97e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07882623514364354;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07600861947121684;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17629767303572988;  // std dev = 0.001, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.1784363425379573;  // std dev = 0.011, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( female(A) )
%   | | then return -0.08149528326891559;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08298170681298778;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return -0.07291773327779644;  // std dev = 0.000638, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07083950795710078;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.15213775714134609;  // std dev = 0.005, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.1537780772393425;  // std dev = 0.062, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else if ( female(A) )
%   | | | then return -0.07561619884106051;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08224613861813575;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09565899980563028;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.06842697784420264;  // std dev = 5.19e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.06705217218726166;  // std dev = 3.61e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.06844792047668351;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06848823879824671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1335337877145353;  // std dev = 0.000825, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.13482687710090233;  // std dev = 0.009, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( female(A) )
%   | | then return -0.0679605351882347;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06629191203264416;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06294637967881236;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0642103174618726;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06353859193391383;  // std dev = 0.001, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.867 seconds
Total inference time: 1.544 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.723 seconds
Refined model CLL: -0.064748


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.227 seconds
Total inference time: 1.544 seconds
AUC ROC: 1.0
Total revision time: 9.227
Best scored revision CLL: -0.064748


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:24:40
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063714, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.227, 'Inference time': 1.544, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068019, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.001, 'Inference time': 1.294}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995108;  // std dev = 5.84e-07, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004884;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else return 0.47579599392304095;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7305073264057925;  // std dev = 0.296, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1449850388840562;  // std dev = 0.129, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12832719404185153;  // std dev = 0.235, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.566991096156582;  // std dev = 0.033, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B) )
%   | | then return -0.12955363769643793;  // std dev = 0.163, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11493866734853796;  // std dev = 0.228, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.36420182171843374;  // std dev = 0.174, 152.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10363783054606336;  // std dev = 0.211, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.32742619552548713;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13561621476724628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.056651789200796575;  // std dev = 2.291, 264.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.28646850037110955;  // std dev = 0.717, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.15022738149833562;  // std dev = 0.176, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08946174782891117;  // std dev = 0.177, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23256794312876006;  // std dev = 0.645, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.14178481168714802;  // std dev = 0.216, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08237418165020469;  // std dev = 0.165, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.1638005430529747;  // std dev = 1.258, 149.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07732203404077109;  // std dev = 0.188, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17025185480502525;  // std dev = 0.528, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1259088575417401;  // std dev = 0.155, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12164782318867541;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.0694890595775649;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11442184226104118;  // std dev = 0.098, 153.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06617413621686581;  // std dev = 0.107, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067918
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.637 seconds
Total inference time: 1.42 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072554
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.925 seconds
Parameter learned model CLL: -0.072554


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [5.84e-07, 0, 113], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 234, 0], 'false,false': [2.834, 13, 21]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.296, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.129, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.235, 235, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.033, 0, 134], 'true,false,true': [0.163, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.228, 240, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.174, 18, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.211, 253, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 113], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.291, 243, 21], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.717, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.176, 16, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.177, 250, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.645, 0, 134], 'true,true,true,false': [0.216, 26, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.165, 260, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.258, 15, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.188, 250, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.528, 0, 134], 'true,true,false,true': [0.155, 19, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 8, 0], 'false,true': [0.0, 235, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.098, 19, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.107, 253, 0]}]]
[{'': [0.11366863905325787, 0.0722182000445542], 'true': [3.0182346297774167e-15, -3.2653618371328133e-18], 'false': [-1.8978171361113786e-16, 0.23615916955017327], 'true,true': [3.0182346297774167e-15, nan], 'true,true,true': [3.0182346297774167e-15, nan], 'true,false': [-3.2653618371328133e-18, nan], 'true,false,true': [-1.1102230246251566e-17, -7.93016446160826e-18]}, {'': [0.06249973931151135, 0.00023577145842696375], 'true': [0.0006551162218026951, 0.0012727574868655568], 'true,false': [0.0012727574868655568, nan], 'true,false,true': [0.0012727574868655568, nan], 'true,true': [0.0006551162218026951, nan]}, {'': [0.06361020790405561, 0.00021725275428547037], 'true': [0.0011082061900699793, 0.0011025536850606625], 'true,false': [0.0011025536850606625, nan]}, {'': [0.030291109084479715, 0.00017530309404556598], 'true': [0.030291109084479715, nan], 'true,true': [0.030291109084479715, nan]}, {'': [0.013238513725268257, 0.019883700822445283], 'false': [0.019883700822445283, nan], 'true': [0.013238513725268257, nan], 'true,true': [-3.1439944060181424e-17, 0.0], 'true,true,false': [0.0, nan], 'true,true,true': [-3.1439944060181424e-17, nan]}, {'': [0.021811381347421607, 0.00012467810431428106], 'true': [0.003841734058722944, 0.0019455687609914972], 'true,true': [0.003841734058722944, nan], 'true,false': [0.0019455687609914972, nan]}, {'': [0.021966300110901976, 0.00010457170496689458], 'true': [0.021966300110901976, nan], 'true,true': [0.021966300110901976, nan], 'true,true,true': [0.0031064539104223533, 0.0017998084438318141]}, {'': [0.01062644841497956, 0.0001407350608780611], 'true': [0.01062644841497956, nan], 'true,true': [0.01062644841497956, nan], 'true,true,true': [0.01062644841497956, nan]}, {'': [0.014022500876589628, -2.2676895822130856e-17], 'true': [0.011521566620730363, -1.734723475976807e-18], 'true,true': [0.002083769172155372, 0.0012639438961309895], 'true,true,false': [0.0012639438961309895, nan], 'false': [-2.2676895822130856e-17, nan]}, {'': [0.009531471403845197, 4.504503679749986e-05], 'true': [0.009531471403845197, nan], 'true,true': [0.009531471403845197, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995108;  // std dev = 5.84e-07, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048838;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.721706253912044;  // std dev = 0.008, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(B) )
%   | then return -0.12544463852839186;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else return -0.14134106702802027;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462838;  // std dev = 3.16e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.5576111570006138;  // std dev = 0.009, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( actor(B) )
%   | then return -0.11231637819360679;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else return -0.16880743267801857;  // std dev = 0.142, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583105;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.4192311114252939;  // std dev = 0.010, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return -0.1015963294878362;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783616;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11237824209550647;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783641;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783617;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.09517712606742956;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014944;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return 0.3193637129926993;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601494;  // std dev = 2.11e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.3511836687445476;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then return -0.09266925713546774;  // std dev = 0.000139, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.18134893505315863;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08729044588026404;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.25598183191103424;  // std dev = 0.006, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.08518475138839683;  // std dev = 2.95e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518646731170892;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | | else return -0.08518646731170888;  // std dev = 2.36e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( female(B) )
%   | | | then return -0.085186467311709;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08506696983809804;  // std dev = 0.001, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.15596216386729742;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08058188331818983;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20975771563253598;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.21033665864698398;  // std dev = 0.044, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07877822816172077;  // std dev = 5.96e-09, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | else if ( female(B) )
%   | | | then return -0.07877822816172088;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07850362780185977;  // std dev = 0.001, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.08362484543992697;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527725;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.17752560746383694;  // std dev = 0.005, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9.31e-10, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07324750395653432;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return -0.07324750395653423;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( actor(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.07294663378464607;  // std dev = 0.001, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07326639108818198;  // std dev = 5.03e-05, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.08846693551448453;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15292772266061808;  // std dev = 0.003, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.08815945691225407;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then return -0.06842809666866989;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else if ( female(B) )
%   | | then return -0.0684309698314804;  // std dev = 8.15e-06, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06834133047430746;  // std dev = 0.000248, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13398569411787167;  // std dev = 4.93e-09, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.134282366729907;  // std dev = 0.004, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419282722081833;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06359470710331716;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06420726341935964;  // std dev = 7.09e-05, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.10863142400536775;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.05867358925947109;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.446 seconds
Total inference time: 1.585 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064326
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.443 seconds
Refined model CLL: -0.064326


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.450999999999999 seconds
Total inference time: 1.585 seconds
AUC ROC: 1.0
Total revision time: 11.450999999999999
Best scored revision CLL: -0.064326


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:24:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063877, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.450999999999999, 'Inference time': 1.585, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067918, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.637, 'Inference time': 1.42}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995096;  // std dev = 1.05e-06, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048735;  // std dev = 3.01e-07, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
%   | else return 0.4344201215401891;  // std dev = 3.796, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7324660687724777;  // std dev = 0.410, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.15702178061227487;  // std dev = 0.233, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1276934393732112;  // std dev = 0.255, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5691624575185669;  // std dev = 0.038, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B) )
%   | | then return -0.13249719238913352;  // std dev = 0.189, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11514102153791608;  // std dev = 0.270, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.35906847470730624;  // std dev = 0.185, 232.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10301060814037334;  // std dev = 0.215, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.32764716627649404;  // std dev = 3.72e-07, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13327563703867898;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.055553790037155965;  // std dev = 2.966, 422.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.29027941507758004;  // std dev = 0.960, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1502523783889583;  // std dev = 0.240, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09009854655226393;  // std dev = 0.228, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.235394864539599;  // std dev = 0.864, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.12753440594101353;  // std dev = 0.207, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08243454230985037;  // std dev = 0.177, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.14680066861340899;  // std dev = 1.945, 240.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07601179399095909;  // std dev = 0.151, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1746560085731867;  // std dev = 0.716, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1275096561509926;  // std dev = 0.191, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11758265197785917;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(B) )
%   | then return -0.06966836315432173;  // std dev = 7.60e-08, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12137558363079554;  // std dev = 0.094, 228.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06664745288501864;  // std dev = 0.144, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06791
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.07 seconds
Total inference time: 1.522 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072271
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.369 seconds
Parameter learned model CLL: -0.072271


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.05e-06, 0, 168], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 20, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [3.01e-07, 398, 0], 'false,false': [3.796, 25, 34]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.41, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.233, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.255, 381, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.038, 0, 202], 'true,false,true': [0.189, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.27, 351, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.185, 30, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.215, 385, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [3.72e-07, 0, 168], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.966, 388, 34], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.96, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.24, 33, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.228, 374, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.864, 0, 202], 'true,true,true,false': [0.207, 33, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.177, 338, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.945, 38, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.151, 366, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.716, 0, 202], 'true,true,false,true': [0.191, 29, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 12, 0], 'false,true': [7.6e-08, 372, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.094, 26, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.144, 388, 0]}]]
[{'': [0.10591814917354866, 0.06886314993129108], 'true': [6.5133084111342514e-15, 9.654113257610057e-18], 'false': [2.2762361509902707e-16, 0.244182706118933], 'true,true': [6.5133084111342514e-15, nan], 'true,true,true': [6.5133084111342514e-15, nan], 'true,false': [9.654113257610057e-18, nan], 'true,false,true': [2.7755575615628915e-18, 0.0]}, {'': [0.10445450212536775, 0.00017010263078840146], 'true': [0.0008341156741235551, 0.0014624366565391543], 'true,false': [0.0014624366565391543, nan], 'true,false,true': [0.0014624366565391543, nan], 'true,true': [0.0008341156741235551, nan]}, {'': [0.060807612579295504, 0.0002081924732812275], 'true': [0.001429112557511148, 0.0010849198846409117], 'true,false': [0.0010849198846409117, nan]}, {'': [0.03405581796923615, 0.0001197123308811314], 'true': [0.03405581796923615, nan], 'true,true': [0.03405581796923615, nan]}, {'': [0.02855325723477988, 0.020851515149775953], 'true': [0.02855325723477988, nan], 'true,true': [8.247371040072592e-16, -6.938893903907228e-18], 'false': [0.020851515149775957, nan], 'true,true,true': [8.247371040072592e-16, nan], 'true,true,false': [-6.938893903907228e-18, nan]}, {'': [0.027591272613215402, 0.00013925640983763763], 'true': [0.004560528802300175, 0.001751218520700226], 'true,true': [0.004560528802300175, nan], 'true,false': [0.001751218520700226, nan]}, {'': [0.01925917398212382, 9.31052002883214e-05], 'true': [0.01925917398212382, nan], 'true,true': [0.01925917398212382, nan], 'true,true,true': [0.0036970698232902054, 0.0012969810372893418]}, {'': [0.0157647875544775, 6.224537684300392e-05], 'true': [0.0157647875544775, nan], 'true,true': [0.0157647875544775, nan], 'true,true,true': [0.0157647875544775, nan]}, {'': [0.014822385950296958, 1.5519246580781757e-17], 'true': [0.012398762757511667, -2.3129646346357427e-18], 'true,true': [0.002535354540193927, 0.0012608319076047544], 'true,true,false': [0.0012608319076047544, nan], 'false': [1.5519246580781757e-17, nan]}, {'': [0.00887615437548766, 5.346880398676701e-05], 'true': [0.00887615437548766, nan], 'true,true': [0.00887615437548766, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995096;  // std dev = 1.05e-06, 168.000 (wgt'ed) examples reached here.  /* #pos=168 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048743;  // std dev = 2.65e-07, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.719473412210954;  // std dev = 2.79e-08, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.7222767520226567;  // std dev = 0.010, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.24198066537814547;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 2.69e-08, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.5582164369123783;  // std dev = 0.013, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(B) )
%   | then return -0.11231637819360628;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.20039431204882785;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831097;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.41972157887256606;  // std dev = 0.013, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783665;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.17019780377407043;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783627;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601501;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return 0.31900162939411175;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.09269127618926093;  // std dev = 2.63e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926078;  // std dev = 6.66e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | | else return -0.09269127618926061;  // std dev = 8.56e-08, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601494;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.3071021248909795;  // std dev = 0.482, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.09269127618926093;  // std dev = 2.63e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.2570735607614622;  // std dev = 0.011, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 9.31e-10, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.08518475138839685;  // std dev = 1.32e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 5.77e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | | else return -0.08518475138839678;  // std dev = 7.45e-08, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else return -0.0851847513883968;  // std dev = 2.63e-09, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.19041409798453823;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2097577156325357;  // std dev = 7.88e-08, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | | else return 0.21112530369793434;  // std dev = 0.101, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 1.67e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.07877675473109169;  // std dev = 2.98e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.07877675473109146;  // std dev = 5.35e-09, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527716;  // std dev = 8.33e-09, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.17811520277496212;  // std dev = 0.009, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333686;  // std dev = 5.27e-09, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 1.86e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.1523209117235771;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | | else return 0.15352710036539155;  // std dev = 0.080, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06842697784420271;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.10757684453975203;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420328;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801112;  // std dev = 4.17e-09, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.1346257657191622;  // std dev = 0.007, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202612;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06419184008202612;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.1217020192288244;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06187980165014596;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063919
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.097 seconds
Total inference time: 1.302 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064531
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.39 seconds
Refined model CLL: -0.064531


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063919
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.926000000000002 seconds
Total inference time: 1.302 seconds
AUC ROC: 1.0
Total revision time: 12.926000000000002
Best scored revision CLL: -0.064531


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:25:11
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063919, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.926000000000002, 'Inference time': 1.302, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06791, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.07, 'Inference time': 1.522}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.858148935099509;  // std dev = 1.08e-06, 220.000 (wgt'ed) examples reached here.  /* #pos=220 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048782;  // std dev = 0.000, 508.000 (wgt'ed) examples reached here.  /* #neg=508 */
%   | else return 0.5581489350995128;  // std dev = 3.834, 70.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7297493210379548;  // std dev = 0.357, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.17288180531910827;  // std dev = 0.355, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1284806172029981;  // std dev = 0.363, 455.000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5660286668223905;  // std dev = 0.028, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B) )
%   | | then return -0.141666202512323;  // std dev = 0.238, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11502654340983944;  // std dev = 0.367, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.36996381957419333;  // std dev = 0.170, 299.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10321950143363788;  // std dev = 0.297, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3265367909729378;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #pos=220 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13165145414594373;  // std dev = 1.49e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.04978992830169424;  // std dev = 3.303, 523.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2861763442652371;  // std dev = 0.939, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.16222395629086578;  // std dev = 0.260, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09027987223791052;  // std dev = 0.294, 523.000 (wgt'ed) examples reached here.  /* #neg=523 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23222451054779558;  // std dev = 0.839, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.13720661910565998;  // std dev = 0.316, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08302326287043392;  // std dev = 0.257, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.1537453478637946;  // std dev = 2.015, 308.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07770227555446839;  // std dev = 0.286, 492.000 (wgt'ed) examples reached here.  /* #neg=492 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17128685249045197;  // std dev = 0.686, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.11830926270863205;  // std dev = 0.201, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.13131596858845104;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(B) )
%   | then return -0.06982549119790331;  // std dev = 0.000, 451.000 (wgt'ed) examples reached here.  /* #neg=451 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.09629025354823799;  // std dev = 0.114, 333.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06627234346044619;  // std dev = 0.145, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067961
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.682 seconds
Total inference time: 1.388 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072983
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.129 seconds
Parameter learned model CLL: -0.072983


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 220], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 508, 0], 'false,false': [3.834, 21, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.357, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.355, 52, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.363, 455, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.028, 0, 269], 'true,false,true': [0.238, 31, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.367, 511, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.17, 30, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.297, 506, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 220], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [1.49e-08, 30, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.303, 474, 49], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.939, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.26, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.294, 523, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.839, 0, 269], 'true,true,true,false': [0.316, 46, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.257, 486, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.015, 39, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.286, 492, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.686, 0, 269], 'true,true,false,true': [0.201, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 28, 0], 'false,true': [0.0, 451, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.114, 64, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.145, 487, 0]}]]
[{'': [0.10560000000000502, 0.07758827121322885], 'true': [5.296773121120747e-15, 2.590520390792032e-17], 'false': [-5.944501234213437e-17, 0.21000000000000005], 'true,true': [5.296773121120747e-15, nan], 'true,true,true': [5.296773121120747e-15, nan], 'true,false': [2.590520390792032e-17, nan], 'true,false,true': [-3.0839528461809902e-18, -1.1564823173178714e-17]}, {'': [0.11139380317352944, 0.00029034074514872456], 'true': [0.00047409686710827225, 0.0024303075765807524], 'true,false': [0.0024303075765807524, nan], 'true,false,true': [0.0024303075765807524, nan], 'true,true': [0.00047409686710827225, nan]}, {'': [0.047295511817971106, 0.0002637134494709792], 'true': [0.000782435893492593, 0.0018295919173199455], 'true,false': [0.0018295919173199455, nan]}, {'': [0.02897515792639191, 0.0001747208545162103], 'true': [0.02897515792639191, nan], 'true,true': [0.02897515792639191, nan]}, {'': [0.022169291017116392, 0.0208613556821716], 'true': [0.022169291017116392, nan], 'true,true': [0.0, 7.401486830834377e-18], 'false': [0.020861355682171605, nan], 'true,true,false': [7.401486830834377e-18, nan], 'true,true,true': [0.0, nan]}, {'': [0.018363932511627767, 0.00016545437043728652], 'true': [0.003281147804731142, 0.002823291832012335], 'true,true': [0.003281147804731142, nan], 'true,false': [0.002823291832012335, nan]}, {'': [0.019574050039233137, 0.00013609526476334613], 'true': [0.019574050039233137, nan], 'true,true': [0.019574050039233137, nan], 'true,true,true': [0.002619722493394467, 0.0021709685649723277]}, {'': [0.01317790394156761, 0.00016676101416711363], 'true': [0.01317790394156761, nan], 'true,true': [0.01317790394156761, nan], 'true,true,true': [0.01317790394156761, nan]}, {'': [0.014596517498517448, -8.763622988171967e-17], 'true': [0.009666375649516874, -7.93016446160826e-18], 'true,true': [0.001750752237223166, 0.001257152157016687], 'true,true,false': [0.001257152157016687, nan], 'false': [-8.763622988171967e-17, nan]}, {'': [0.012985982449775522, 4.305875793298251e-05], 'true': [0.012985982449775522, nan], 'true,true': [0.012985982449775522, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099509;  // std dev = 1.08e-06, 220.000 (wgt'ed) examples reached here.  /* #pos=220 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048746;  // std dev = 1.93e-07, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995122;  // std dev = 1.69e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.1254446385283923;  // std dev = 0.000, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462833;  // std dev = 4.15e-08, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else return 0.5553664367462834;  // std dev = 4.15e-08, 146.000 (wgt'ed) examples reached here.  /* #pos=146 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.11231637819360586;  // std dev = 0.000, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831114;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( female(B) )
%   | then return -0.10159632948783658;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else return -0.10159632948783662;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | else return 0.32071184716014955;  // std dev = 1.67e-08, 135.000 (wgt'ed) examples reached here.  /* #pos=135 */
%   | else return -0.09269127618926097;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601492;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.09269127618926143;  // std dev = 0.000, 522.000 (wgt'ed) examples reached here.  /* #neg=522 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else return 0.25517224256948917;  // std dev = 8.33e-09, 146.000 (wgt'ed) examples reached here.  /* #pos=146 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 1.83e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.08518475138839678;  // std dev = 2.36e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 2.98e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.08518475138839678;  // std dev = 5.58e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else return -0.08518475138839678;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.209757715632535;  // std dev = 1.49e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | | else return 0.20975771563253517;  // std dev = 1.88e-07, 146.000 (wgt'ed) examples reached here.  /* #pos=146 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109205;  // std dev = 0.000, 524.000 (wgt'ed) examples reached here.  /* #neg=524 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527744;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else return 0.1770964977452776;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #pos=146 */
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( actor(A) )
%   | then return -0.07324622576333728;  // std dev = 0.000, 433.000 (wgt'ed) examples reached here.  /* #neg=433 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367141;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return -0.0684269778442027;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.06842697784420262;  // std dev = 4.56e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420351;  // std dev = 0.000, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( female(B) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.549 seconds
Total inference time: 1.226 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064058
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.69 seconds
Refined model CLL: -0.064058


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.049999999999999 seconds
Total inference time: 1.226 seconds
AUC ROC: 1.0
Total revision time: 14.049999999999999
Best scored revision CLL: -0.064058


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:25:29
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.049999999999999, 'Inference time': 1.226, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067961, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.682, 'Inference time': 1.388}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995086;  // std dev = 1.07e-06, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004885;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
%   | else return 0.49945328292560004;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7311077164080778;  // std dev = 0.464, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14575530922451974;  // std dev = 0.258, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12833626597437828;  // std dev = 0.390, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5675729480672759;  // std dev = 0.033, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B) )
%   | | then return -0.13294585015947818;  // std dev = 0.226, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1144068970215927;  // std dev = 0.349, 649.000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.35975198933786573;  // std dev = 0.184, 384.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10340578264022122;  // std dev = 0.330, 662.000 (wgt'ed) examples reached here.  /* #neg=662 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.32814618404585;  // std dev = 6.39e-07, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13460980531843708;  // std dev = 3.80e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.054347182903055576;  // std dev = 3.787, 692.000 (wgt'ed) examples reached here.  /* #neg=633 #pos=59 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.289030418816525;  // std dev = 1.147, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14486389485065196;  // std dev = 0.320, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0886757805345928;  // std dev = 0.198, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23436309635217534;  // std dev = 1.029, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.1295475312551314;  // std dev = 0.306, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08238690663882928;  // std dev = 0.246, 643.000 (wgt'ed) examples reached here.  /* #neg=643 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.15437234949305428;  // std dev = 2.259, 390.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0770854597926024;  // std dev = 0.269, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1727487096900082;  // std dev = 0.845, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1352852783373297;  // std dev = 0.314, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12464159900759758;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(B) )
%   | then return -0.06975263477155642;  // std dev = 5.16e-08, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11465124201267374;  // std dev = 0.098, 389.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06654561978265874;  // std dev = 0.183, 625.000 (wgt'ed) examples reached here.  /* #neg=625 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06809
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.221 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072952
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.187 seconds
Parameter learned model CLL: -0.072952


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.07e-06, 0, 278], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.11e-08, 26, 0], 'true,false,true,false': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 586, 0], 'false,false': [4.6, 33, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.464, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.258, 48, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.39, 613, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.033, 0, 337], 'true,false,true': [0.226, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.349, 649, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.184, 47, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.33, 662, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [6.39e-07, 0, 278], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [3.8e-08, 42, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.787, 633, 59], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [1.147, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.32, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.198, 600, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [1.029, 0, 337], 'true,true,true,false': [0.306, 59, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.246, 643, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.259, 53, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.269, 594, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.845, 0, 337], 'true,true,false,true': [0.314, 56, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 21, 0], 'false,true': [5.16e-08, 590, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.098, 52, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.183, 625, 0]}]]
[{'': [0.1036633912824428, 0.07944805562081883], 'true': [4.089454594302735e-15, 3.900783600034334e-17], 'false': [-3.2738317176659905e-16, 0.23003308128544375], 'true,true': [4.089454594302735e-15, nan], 'true,true,true': [4.089454594302735e-15, nan], 'true,false': [3.900783600034334e-17, nan], 'true,false,true': [1.708035422500241e-17, -1.0092936587501423e-17]}, {'': [0.08464116315972264, 0.00024791875034088103], 'true': [0.0006377839914210865, 0.0013875785211530562], 'true,false': [0.0013875785211530562, nan], 'true,false,true': [0.0013875785211530562, nan], 'true,true': [0.0006377839914210865, nan]}, {'': [0.04671616752853238, 0.0001875821375769758], 'true': [0.0010716846884940407, 0.0013045595795211705], 'true,false': [0.0013045595795211705, nan]}, {'': [0.03382873283433857, 0.0001644322948452231], 'true': [0.03382873283433857, nan], 'true,true': [0.03382873283433857, nan]}, {'': [0.024417333027987865, 0.02072368089997609], 'true': [0.024417333027987865, nan], 'true,true': [1.4696477448275453e-15, 3.4364046000302466e-17], 'false': [0.02072368089997599, nan], 'true,true,true': [1.4696477448275453e-15, nan], 'true,true,false': [3.4364046000302466e-17, nan]}, {'': [0.026326889341058157, 6.564000002524069e-05], 'true': [0.0039059351194660878, 0.0018565457113703862], 'true,true': [0.0039059351194660878, nan], 'true,false': [0.0018565457113703862, nan]}, {'': [0.01970191320908421, 9.408502621438527e-05], 'true': [0.01970191320908421, nan], 'true,true': [0.01970191320908421, nan], 'true,true,true': [0.003142413822459273, 0.001587456565726163]}, {'': [0.0130831612034089, 0.00012153390259926963], 'true': [0.0130831612034089, nan], 'true,true': [0.0130831612034089, nan], 'true,true,true': [0.0130831612034089, nan]}, {'': [0.016061441938203313, 4.516161456102331e-18], 'true': [0.013660073803767962, -5.28677630773884e-18], 'true,true': [0.002117393392410423, 0.0017578378248479956], 'true,true,false': [0.0017578378248479956, nan], 'false': [4.516161456102331e-18, nan]}, {'': [0.009625504447940875, 5.348768403151851e-05], 'true': [0.009625504447940875, nan], 'true,true': [0.009625504447940875, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004884;  // std dev = 0.000, 574.000 (wgt'ed) examples reached here.  /* #neg=574 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.12544463852839235;  // std dev = 0.000, 657.000 (wgt'ed) examples reached here.  /* #neg=657 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360635;  // std dev = 0.000, 675.000 (wgt'ed) examples reached here.  /* #neg=675 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( female(B) )
%   | then return -0.10159632948783659;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783641;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else return -0.10159632948783658;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.3207118471601505;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( actor(B) )
%   | then return -0.09269127618926182;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.3207118471601487;  // std dev = 8.43e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.09269127618926087;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926094;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694888;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.25517224256948856;  // std dev = 1.24e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839675;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else return -0.08518475138839675;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839675;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else return -0.08518475138839675;  // std dev = 2.58e-08, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253484;  // std dev = 2.09e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return 0.20975771563253492;  // std dev = 2.60e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109261;  // std dev = 0.000, 645.000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527766;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.17709649774527778;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333688;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | | else return -0.07324622576333688;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333686;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.07324622576333668;  // std dev = 3.49e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else return -0.07324622576333689;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367158;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420276;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.06842697784420261;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( female(B) )
%   | then return -0.0684269778442023;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420258;  // std dev = 1.05e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420258;  // std dev = 4.34e-08, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | | | else return -0.06842697784420256;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801148;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( female(B) )
%   | then return -0.06419184008202614;  // std dev = 0.000, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202608;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else return -0.06419184008202619;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.095 seconds
Total inference time: 1.401 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.723 seconds
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.225999999999999 seconds
Total inference time: 1.401 seconds
AUC ROC: 1.0
Total revision time: 15.225999999999999
Best scored revision CLL: -0.064062


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:25:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.225999999999999, 'Inference time': 1.401, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06809, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.221, 'Inference time': 1.431}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004879;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else return 0.44638422921715937;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7307042661828059;  // std dev = 0.219, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12668239399582124;  // std dev = 0.112, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5672614515199851;  // std dev = 0.035, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B) )
%   | | then return -0.11964167846064377;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11446246883071355;  // std dev = 0.144, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.36282341475503793;  // std dev = 0.179, 76.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10333113748800951;  // std dev = 0.133, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.327626870544922;  // std dev = 1.40e-07, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13894096139648185;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.056178108648937575;  // std dev = 1.598, 127.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.28640665686590094;  // std dev = 0.518, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.15084723483892043;  // std dev = 0.134, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08868635804357085;  // std dev = 0.084, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2325673455481419;  // std dev = 0.467, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return -0.1299777609755036;  // std dev = 0.143, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08251814799961714;  // std dev = 0.110, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.1375073816507971;  // std dev = 1.172, 82.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07695558082909001;  // std dev = 0.103, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.1739855264456833;  // std dev = 0.389, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.13361409107371364;  // std dev = 0.121, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11894802710028038;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.069741609922316;  // std dev = 5.87e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11393900565493265;  // std dev = 0.100, 78.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06647712106861768;  // std dev = 0.071, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069046
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.977 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.494 seconds
Parameter learned model CLL: -0.072467


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [0.0, 0, 57], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 133, 0], 'false,false': [2.029, 7, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.219, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.112, 129, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.035, 0, 67], 'true,false,true': [0.069, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.144, 129, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.179, 9, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.133, 132, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [1.4e-07, 0, 57], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.598, 117, 10], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.518, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.134, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.084, 117, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.467, 0, 67], 'true,true,true,false': [0.143, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.11, 132, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.172, 15, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.103, 102, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.389, 0, 67], 'true,true,false,true': [0.121, 10, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 4, 0], 'false,true': [5.87e-08, 122, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.1, 11, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.071, 111, 0]}]]
[{'': [0.16493055555555516, 0.062222222222221846], 'true': [-3.739698609263685e-16, -1.4802973661668754e-17], 'false': [-5.0085249231210067e-17, 0.24221453287197228], 'true,false': [-1.4802973661668754e-17, nan], 'true,false,true': [-1.1102230246251566e-17, -2.7755575615628915e-18], 'true,true': [-3.739698609263685e-16, nan], 'true,true,true': [-3.739698609263685e-16, nan]}, {'': [0.08345640282125931, 9.728445091928922e-05], 'true': [0.0007189528613416803, 2.7755575615628915e-18], 'true,true': [0.0007189528613416803, nan], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.05444938752060257, 0.0001609483155997833], 'true': [0.0012266902420246934, 0.000482940216020325], 'true,false': [0.000482940216020325, nan]}, {'': [0.032038389412545984, 0.0001335959620806389], 'true': [0.032038389412545984, nan], 'true,true': [0.032038389412545984, nan]}, {'': [0.02349458155312241, 0.02010009571804555], 'true': [0.02349458155312241, nan], 'true,true': [3.428057058491711e-16, 0.0], 'false': [0.02010009571804555, nan], 'true,true,true': [3.428057058491711e-16, nan], 'true,true,false': [0.0, nan]}, {'': [0.025326609036283077, 6.017662936465309e-05], 'true': [0.004009287868589313, 0.0017916906086910822], 'true,true': [0.004009287868589313, nan], 'true,false': [0.0017916906086910822, nan]}, {'': [0.02255405278463812, 9.174668730996849e-05], 'true': [0.02255405278463812, nan], 'true,true': [0.02255405278463812, nan], 'true,true,true': [0.003255649658763778, 0.0013583436285332393]}, {'': [0.016748818367625026, 0.0001032556886262555], 'true': [0.016748818367625026, nan], 'true,true': [0.016748818367625026, nan], 'true,true,true': [0.016748818367625026, nan]}, {'': [0.015221070341893421, 2.82105850519507e-17], 'true': [0.012851198052657387, 0.0], 'true,true': [0.002261276450803621, 0.0014741383075280833], 'true,true,false': [0.0014741383075280833, nan], 'false': [2.82105850519507e-17, nan]}, {'': [0.009943193744964968, 4.5695729970959305e-05], 'true': [0.009943193744964968, nan], 'true,true': [0.009943193744964968, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.7194734122109548;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 1.86e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( actor(A) )
%   | | | then return -0.12544463852839122;  // std dev = 4.94e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 2.58e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.11231637819360626;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.1410366438935132;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(B) )
%   | then return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return -0.18633241492425587;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.3207118471601496;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926103;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.08965433107554581;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.2551722425694892;  // std dev = 6.45e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08525245491268264;  // std dev = 0.000107, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1.67e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08518475138839685;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.1658084417063703;  // std dev = 0.178, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, B), movie(D, A) )
%   | | then return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return -0.07884703382365271;  // std dev = 0.000252, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.07877675473109168;  // std dev = 3.73e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14522933857029777;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527725;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( female(A) )
%   | | then return -0.07331025744789572;  // std dev = 0.000169, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07326265921089035;  // std dev = 6.83e-05, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.10511995471214856;  // std dev = 0.165, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.1527438580936709;  // std dev = 3.16e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.15274385809367083;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.06847022785569426;  // std dev = 8.64e-05, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.1509613392188816;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420265;  // std dev = 1.67e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.0684269778442027;  // std dev = 1.39e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.06842697784420272;  // std dev = 9.31e-10, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.1340070300080111;  // std dev = 2.63e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.06420309935167089;  // std dev = 6.03e-05, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202618;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.04515542428129329;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063823
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.181 seconds
Total inference time: 1.597 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06472
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.614 seconds
Refined model CLL: -0.06472


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063823
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.266 seconds
Total inference time: 1.597 seconds
AUC ROC: 1.0
Total revision time: 8.266
Best scored revision CLL: -0.06472


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:25:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063823, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.266, 'Inference time': 1.597, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069046, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.977, 'Inference time': 1.328}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995107;  // std dev = 6.19e-07, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048824;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | else return 0.49148226843284554;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7290856541176299;  // std dev = 0.274, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12880195962243599;  // std dev = 0.086, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12795917531487788;  // std dev = 0.228, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5654614269598115;  // std dev = 0.031, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B) )
%   | | then return -0.13632341800089806;  // std dev = 0.176, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11466837793275048;  // std dev = 0.223, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.34834231632462354;  // std dev = 0.193, 156.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1040146855403451;  // std dev = 0.217, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3315820563661099;  // std dev = 2.86e-07, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13486233511087245;  // std dev = 1.29e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.05878095074483488;  // std dev = 2.175, 262.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2865332329514101;  // std dev = 0.682, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14008927321217476;  // std dev = 0.193, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08897329179543506;  // std dev = 0.158, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23252513837413458;  // std dev = 0.614, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return -0.11604431226870775;  // std dev = 0.144, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08259624408541492;  // std dev = 0.180, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.1582833847848562;  // std dev = 1.333, 152.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0763417005683952;  // std dev = 0.169, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17091049047845033;  // std dev = 0.505, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.123903524728588;  // std dev = 0.167, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12326674138827251;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then return -0.069448917452918;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11192187922304961;  // std dev = 0.098, 156.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06624567710114322;  // std dev = 0.119, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069029
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.531 seconds
Total inference time: 1.481 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072959
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.159 seconds
Parameter learned model CLL: -0.072959


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [6.19e-07, 0, 115], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 249, 0], 'false,false': [2.639, 11, 19]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.274, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.086, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.228, 243, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.031, 0, 134], 'true,false,true': [0.176, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.223, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.193, 22, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.217, 232, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [2.86e-07, 0, 115], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [1.29e-08, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.175, 243, 19], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.682, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.193, 24, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.158, 232, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.614, 0, 134], 'true,true,true,false': [0.144, 26, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.18, 256, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.333, 18, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.169, 287, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.505, 0, 134], 'true,true,false,true': [0.167, 26, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.27e-09, 10, 0], 'false,true': [0.0, 241, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.098, 22, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.119, 276, 0]}]]
[{'': [0.15039484935365796, 0.0634626996056067], 'true': [3.3364615418300357e-15, 1.708035422500241e-17], 'false': [-1.319783193931913e-16, 0.2322222222222219], 'true,true': [3.3364615418300357e-15, nan], 'true,true,true': [3.3364615418300357e-15, nan], 'true,false': [1.708035422500241e-17, nan], 'true,false,true': [0.0, -7.93016446160826e-18]}, {'': [0.10067522418817579, 0.00021317189701989628], 'true': [0.0005592340718052712, 0.00028179012321292036], 'true,true': [0.0005592340718052712, nan], 'true,false': [0.00028179012321292036, nan], 'true,false,true': [0.00028179012321292036, nan]}, {'': [0.0625819143673282, 0.00020149048042470745], 'true': [0.0009411640733035748, 0.0013542869537409503], 'true,false': [0.0013542869537409503, nan]}, {'': [0.0373757235817767, 0.00020291139189514953], 'true': [0.0373757235817767, nan], 'true,true': [0.0373757235817767, nan]}, {'': [0.02546049333509533, 0.018049518195293972], 'true': [0.02546049333509533, nan], 'true,true': [7.105427357601002e-16, 9.25185853854297e-18], 'false': [0.018049518195293972, nan], 'true,true,true': [7.105427357601002e-16, nan], 'true,true,false': [9.25185853854297e-18, nan]}, {'': [0.02662880491599196, 0.00010765853548937309], 'true': [0.0034737851487648954, 0.0015508327267851826], 'true,true': [0.0034737851487648954, nan], 'true,false': [0.0015508327267851826, nan]}, {'': [0.019021905588057116, 0.00012641037472087887], 'true': [0.019021905588057116, nan], 'true,true': [0.019021905588057116, nan], 'true,true,true': [0.002815031416890196, 0.0007928373417771015]}, {'': [0.011691404132211872, 9.941694397730599e-05], 'true': [0.011691404132211872, nan], 'true,true': [0.011691404132211872, nan], 'true,true,true': [0.011691404132211872, nan]}, {'': [0.016156300830073602, -3.5932529427702164e-17], 'true': [0.01359848784148263, 2.7755575615628915e-18], 'true,true': [0.001905209613789645, 0.001072278127540518], 'true,true,false': [0.001072278127540518, nan], 'false': [-3.5932529427702164e-17, nan]}, {'': [0.009515883439572806, 5.108221861220825e-05], 'true': [0.009515883439572806, nan], 'true,true': [0.009515883439572806, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995107;  // std dev = 6.19e-07, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048818;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.7210469698657473;  // std dev = 0.010, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A) )
%   | then return -0.12544463852839177;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.199785776045442;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462838;  // std dev = 3.07e-08, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.557006119106195;  // std dev = 0.013, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then return -0.11231637819360686;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.1861883471194198;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1051153187458979;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583105;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.4188222304521767;  // std dev = 0.013, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(B) )
%   | then return -0.10159632948783655;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.15960654052493345;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09562998535267207;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601495;  // std dev = 1.54e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return 0.3197275278748701;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else return -0.09269127618926096;  // std dev = 1.86e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32864872624134067;  // std dev = 0.023, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926053;  // std dev = 5.77e-08, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | | else return -0.0926912761892609;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.13934209692065672;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08767318790038257;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2547068923582022;  // std dev = 0.000696, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.2561776120223077;  // std dev = 0.010, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 2.28e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.08518475138839685;  // std dev = 2.08e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 3.80e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | | else return -0.08518475138839678;  // std dev = 5.05e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.12345545098842671;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08090935239465576;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.20942904526662123;  // std dev = 0.004, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.21049064384469557;  // std dev = 0.082, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(F, A), movie(F, B) )
%   | then if ( actor(A) )
%   | | then return -0.0787767547310917;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.0867587520155265;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109148;  // std dev = 6.59e-09, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else return -0.07835171541410343;  // std dev = 0.001, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17685545975601732;  // std dev = 0.000533, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.17764879844433853;  // std dev = 0.008, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333703;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( female(B) )
%   | | | then return -0.07270624032516772;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07865448822133261;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.0732462257633368;  // std dev = 6.45e-09, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( actor(B) )
%   | | | then return -0.07327508318302642;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.0698291716834969;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.1525610241379376;  // std dev = 0.004, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return 0.15317276855984513;  // std dev = 0.065, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.07142961614614167;  // std dev = 0.012, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420265;  // std dev = 1.05e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06842697784420264;  // std dev = 1.75e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.06842697784420261;  // std dev = 2.46e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.0676618414917203;  // std dev = 0.000156, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06845223666936834;  // std dev = 6.45e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13386430728373558;  // std dev = 0.000425, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.1343488268740147;  // std dev = 0.007, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06370333606532166;  // std dev = 0.000307, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06421412549599868;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.08944703012940412;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06119311074923707;  // std dev = 1.14e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063809
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.312 seconds
Total inference time: 1.57 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064267
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.461 seconds
Refined model CLL: -0.064267


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063809
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.463 seconds
Total inference time: 1.57 seconds
AUC ROC: 1.0
Total revision time: 11.463
Best scored revision CLL: -0.064267


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:26:15
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063809, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.463, 'Inference time': 1.57, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069029, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.531, 'Inference time': 1.481}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995095;  // std dev = 1.09e-06, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048746;  // std dev = 2.53e-07, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
%   | else return 0.3966104735610497;  // std dev = 3.595, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7310127101310061;  // std dev = 0.409, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14340317780918002;  // std dev = 0.176, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12720145215368672;  // std dev = 0.213, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5676961810383008;  // std dev = 0.038, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B) )
%   | | then return -0.13040299071295106;  // std dev = 0.180, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11412877153360433;  // std dev = 0.215, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.35095973228189686;  // std dev = 0.193, 235.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10285616801704127;  // std dev = 0.189, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.33008125918728654;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13415645890700392;  // std dev = 1.83e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.05848955368209076;  // std dev = 2.747, 401.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2881188162576265;  // std dev = 0.941, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.13550886777104013;  // std dev = 0.177, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09023556312401346;  // std dev = 0.222, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2338544896796089;  // std dev = 0.852, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return -0.11849557353280203;  // std dev = 0.150, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08242545836304874;  // std dev = 0.183, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.14694020574618194;  // std dev = 1.917, 239.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07638036008650537;  // std dev = 0.166, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17360053990112587;  // std dev = 0.709, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.13062008447363407;  // std dev = 0.200, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11353737833907095;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.06955349650453259;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11583673480393591;  // std dev = 0.098, 233.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06648542974632098;  // std dev = 0.133, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068779
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.907 seconds
Total inference time: 1.455 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.133 seconds
Parameter learned model CLL: -0.072432


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.09e-06, 0, 174], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.53e-07, 366, 0], 'false,false': [3.595, 24, 28]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.409, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.176, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.213, 368, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.038, 0, 202], 'true,false,true': [0.18, 36, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.215, 364, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.193, 33, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.189, 382, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [0.0, 0, 174], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [1.83e-08, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.747, 373, 28], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [0.941, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.177, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.222, 353, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [0.852, 0, 202], 'true,true,true,false': [0.15, 29, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.183, 375, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.917, 37, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.166, 354, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.709, 0, 202], 'true,true,false,true': [0.2, 34, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 11, 0], 'false,true': [0.0, 373, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.098, 31, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.133, 374, 0]}]]
[{'': [0.09246466149432044, 0.062498569171952185], 'true': [6.860412621132002e-15, 2.7755575615628915e-18], 'false': [1.7472362354756562e-16, 0.24852071005917306], 'true,true': [6.860412621132002e-15, nan], 'true,true,true': [6.860412621132002e-15, nan], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [-1.1564823173178714e-17, -6.938893903907228e-18]}, {'': [0.0911087775340271, 0.00012311283188136583], 'true': [0.00082746567816991, 0.0009675273992988953], 'true,false': [0.0009675273992988953, nan], 'true,false,true': [0.0009675273992988953, nan], 'true,true': [0.00082746567816991, nan]}, {'': [0.06391658127577209, 0.00012675528739650806], 'true': [0.001432158747307274, 0.000896830447201029], 'true,false': [0.000896830447201029, nan]}, {'': [0.03738977547433889, 9.347284001676257e-05], 'true': [0.03738977547433889, nan], 'true,true': [0.03738977547433889, nan]}, {'': [0.02827780084746342, 0.01882179284459457], 'true': [0.02827780084746342, nan], 'true,true': [-3.471042099977501e-16, 1.0408340855860843e-17], 'false': [0.01882179284459457, nan], 'true,true,false': [1.0408340855860843e-17, nan], 'true,true,true': [-3.471042099977501e-16, nan]}, {'': [0.024158621730828233, 0.00013909153850128752], 'true': [0.004384820481806813, 0.0010478902366699017], 'true,true': [0.004384820481806813, nan], 'true,false': [0.0010478902366699017, nan]}, {'': [0.016865783605496447, 8.973284062310682e-05], 'true': [0.016865783605496447, nan], 'true,true': [0.016865783605496447, nan], 'true,true,true': [0.003590064816594072, 0.0007734665990055658]}, {'': [0.015371109368965775, 7.745455300249661e-05], 'true': [0.015371109368965775, nan], 'true,true': [0.015371109368965775, nan], 'true,true,true': [0.015371109368965775, nan]}, {'': [0.015622149274342769, -1.4882346174599954e-17], 'true': [0.013713884247636095, -7.569702440626067e-18], 'true,true': [0.0024914126555261313, 0.0011718818210680164], 'true,true,false': [0.0011718818210680164, nan], 'false': [-1.4882346174599954e-17, nan]}, {'': [0.009674433870396435, 4.6972567415674305e-05], 'true': [0.009674433870396435, nan], 'true,true': [0.009674433870396435, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004875;  // std dev = 2.44e-07, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
%   | else if ( actor(A) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109568;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.12544463852839216;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 3.73e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.5553664367462834;  // std dev = 4.21e-08, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.11231637819360638;  // std dev = 2.28e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.11231637819360654;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583101;  // std dev = 1.58e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.41751358415830936;  // std dev = 3.12e-08, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( female(A) )
%   | then return -0.1015963294878364;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else return -0.10159632948783658;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014983;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | else return 0.3207118471601501;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | else return -0.09269127618926093;  // std dev = 2.63e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014933;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.092691276189261;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.09269127618926094;  // std dev = 1.05e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926104;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.09269127618926065;  // std dev = 7.74e-08, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.2551722425694897;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.0851847513883968;  // std dev = 3.48e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 2.36e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 5.05e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | | else return -0.08518475138839679;  // std dev = 1.39e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.2097577156325357;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | | else return 0.20975771563253545;  // std dev = 1.76e-07, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.07877675473109165;  // std dev = 2.98e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109169;  // std dev = 1.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.07877675473109154;  // std dev = 6.66e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1770964977452775;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333686;  // std dev = 6.14e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | | else return -0.07324622576333667;  // std dev = 1.14e-07, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.07324622576333698;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367147;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.06842697784420267;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420328;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801084;  // std dev = 6.97e-09, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.13400703000801084;  // std dev = 6.97e-09, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06419184008202618;  // std dev = 1.86e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(B) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.556 seconds
Total inference time: 1.506 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.159 seconds
Refined model CLL: -0.064085


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.754999999999999 seconds
Total inference time: 1.506 seconds
AUC ROC: 1.0
Total revision time: 11.754999999999999
Best scored revision CLL: -0.064085


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:26:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.754999999999999, 'Inference time': 1.506, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068779, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.907, 'Inference time': 1.455}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.858148935099509;  // std dev = 1.08e-06, 230.000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004879;  // std dev = 0.000, 517.000 (wgt'ed) examples reached here.  /* #neg=517 */
%   | else return 0.35181982117546096;  // std dev = 4.444, 79.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=39 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7325572295682479;  // std dev = 0.521, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14353872906187384;  // std dev = 0.191, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12854986638974183;  // std dev = 0.316, 522.000 (wgt'ed) examples reached here.  /* #neg=522 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5694598979569871;  // std dev = 0.042, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B) )
%   | | then return -0.12448146531669561;  // std dev = 0.162, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11376835899578867;  // std dev = 0.218, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.341425179042186;  // std dev = 0.204, 321.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10322296855622874;  // std dev = 0.221, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.33145952353750524;  // std dev = 6.08e-07, 230.000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13372162640479543;  // std dev = 2.79e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.05631968151617533;  // std dev = 3.320, 532.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2918992345483318;  // std dev = 1.171, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1430101201639457;  // std dev = 0.219, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08924606309792617;  // std dev = 0.196, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23666227177791302;  // std dev = 1.062, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return -0.1222216405795934;  // std dev = 0.199, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08208365329880696;  // std dev = 0.172, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.15295347066616163;  // std dev = 2.142, 315.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07631072929726217;  // std dev = 0.181, 534.000 (wgt'ed) examples reached here.  /* #neg=534 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17476825640849247;  // std dev = 0.884, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1193692788301924;  // std dev = 0.165, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.10932237143816569;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(B) )
%   | then return -0.06969704397727557;  // std dev = 1.15e-07, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.10310501062657947;  // std dev = 0.112, 329.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06643130922512289;  // std dev = 0.133, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068776
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.62 seconds
Total inference time: 1.43 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072305
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.511 seconds
Parameter learned model CLL: -0.072305


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 230], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 17, 0], 'true,false,true,false': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 517, 0], 'false,false': [4.444, 40, 39]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.521, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.191, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.316, 522, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.042, 0, 269], 'true,false,true': [0.162, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.218, 471, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.204, 52, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.221, 454, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [6.08e-07, 0, 230], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [2.79e-08, 41, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.32, 493, 39], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [1.171, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.219, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.196, 489, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [1.062, 0, 269], 'true,true,true,false': [0.199, 46, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.172, 486, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.142, 46, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.181, 534, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.884, 0, 269], 'true,true,false,true': [0.165, 41, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 12, 0], 'false,true': [1.15e-07, 470, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.112, 60, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.133, 483, 0]}]]
[{'': [0.1020710059171646, 0.06115433989460038], 'true': [5.066478637593758e-15, 2.590520390792032e-17], 'false': [-9.620501257873697e-17, 0.24995994231693772], 'true,true': [5.066478637593758e-15, nan], 'true,true,true': [5.066478637593758e-15, nan], 'true,false': [2.590520390792032e-17, nan], 'true,false,true': [-3.2653618371328133e-18, -1.2810265668751807e-17]}, {'': [0.09219120018634988, 0.0001916917086094006], 'true': [0.0010095600929959038, 0.0008457732899375178], 'true,true': [0.0010095600929959038, nan], 'true,false': [0.0008457732899375178, nan], 'true,false,true': [0.0008457732899375178, nan]}, {'': [0.057866047242324685, 0.00010125289210871211], 'true': [0.0017704763119841195, 0.0006233065219728783], 'true,false': [0.0006233065219728783, nan]}, {'': [0.041509944619706404, 0.00010717082543850541], 'true': [0.041509944619706404, nan], 'true,true': [0.041509944619706404, nan]}, {'': [0.027785443094829446, 0.02071804768795693], 'true': [0.027785443094829446, nan], 'true,true': [1.6064444460663135e-15, 1.8955027249697796e-17], 'false': [0.02071804768795694, nan], 'true,true,true': [1.6064444460663135e-15, nan], 'true,true,false': [1.8955027249697796e-17, nan]}, {'': [0.02591017065478895, 7.828687883136181e-05], 'true': [0.005099643047809654, 0.0011997600946634906], 'true,true': [0.005099643047809654, nan], 'true,false': [0.0011997600946634906, nan]}, {'': [0.019768962030311157, 6.0658326420616544e-05], 'true': [0.019768962030311157, nan], 'true,true': [0.019768962030311157, nan], 'true,true,true': [0.00419363271957846, 0.0008616640843657498]}, {'': [0.014565212936592613, 6.101294671121515e-05], 'true': [0.014565212936592613, nan], 'true,true': [0.014565212936592613, nan], 'true,true,true': [0.014565212936592613, nan]}, {'': [0.014227445330020733, 2.834611977766357e-17], 'true': [0.012537783909845166, -4.625929269271485e-18], 'true,true': [0.0029053929315883513, 0.0006613329167846207], 'true,true,false': [0.0006613329167846207, nan], 'false': [2.834611977766357e-17, nan]}, {'': [0.01254676960349812, 3.6617259299042557e-05], 'true': [0.01254676960349812, nan], 'true,true': [0.01254676960349812, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099509;  // std dev = 1.08e-06, 230.000 (wgt'ed) examples reached here.  /* #pos=230 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 5.96e-08, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995116;  // std dev = 2.46e-07, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.1254446385283923;  // std dev = 0.000, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462833;  // std dev = 4.08e-08, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | else return 0.5553664367462833;  // std dev = 4.28e-08, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.112316378193606;  // std dev = 0.000, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583111;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( female(B) )
%   | then return -0.10159632948783655;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | | else return 0.32071184716014944;  // std dev = 1.94e-08, 142.000 (wgt'ed) examples reached here.  /* #pos=142 */
%   | else return -0.092691276189261;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(B) )
%   | then return -0.09269127618926142;  // std dev = 0.000, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
%   | else if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.3207118471601493;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.0926912761892609;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0926912761892609;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | else return 0.25517224256948917;  // std dev = 9.13e-09, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839683;  // std dev = 2.95e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.08518475138839683;  // std dev = 3.09e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.08518475138839678;  // std dev = 3.65e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 4.21e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.08518475138839678;  // std dev = 7.15e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else return -0.08518475138839678;  // std dev = 1.86e-09, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253517;  // std dev = 1.26e-07, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | | else return 0.20975771563253517;  // std dev = 2.04e-07, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109148;  // std dev = 7.60e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | | else return -0.07877675473109143;  // std dev = 6.14e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | | else return -0.0787767547310917;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1770964977452774;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | | else return 0.17709649774527766;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #pos=149 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A) )
%   | then return -0.07324622576333724;  // std dev = 0.000, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.15274385809367141;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.0684269778442027;  // std dev = 9.31e-10, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06842697784420355;  // std dev = 0.000, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( female(A) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202619;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.903 seconds
Total inference time: 1.492 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.921 seconds
Refined model CLL: -0.064083


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.954999999999998 seconds
Total inference time: 1.492 seconds
AUC ROC: 1.0
Total revision time: 13.954999999999998
Best scored revision CLL: -0.064083


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:26:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.954999999999998, 'Inference time': 1.492, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068776, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.62, 'Inference time': 1.43}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A).;true;true
0;true,false,true;hasposition(H, C), publication(G, H).;false;false
0;true,false,false;ta(I, A, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;publication(C, D), tempadvisedby(E, D).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;publication(G, H), professor(H).;false;false
1;true,false,false;publication(I, A).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;ta(D, A, E).;true;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true,false;ta(I, A, J).;true;true
2;true,false,true;publication(K, B).;false;false
2;true,false,false;publication(L, A), publication(M, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B).;true;true
3;true,true;publication(C, D), tempadvisedby(E, D).;true;false
3;true,true,true;ta(F, E, G).;false;false
3;true,false;projectmember(H, B), publication(I, A).;false;true
3;true,false,false;projectmember(J, B).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;true;true
4;true,true,true;publication(F, G), ta(H, G, I).;false;false
4;true,true,false;publication(J, A), publication(K, B).;false;false
4;true,false;publication(L, B).;true;false
4;true,false,true;publication(L, A).;false;false
4;false;publication(M, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true;tempadvisedby(C, B).;true;true
5;true,true;publication(D, A), publication(D, B).;true;true
5;true,true,true;publication(D, E), ta(F, E, G).;false;false
5;true,true,false;ta(H, C, I), publication(J, A).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;publication(K, L), ta(M, L, N).;false;false
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(C, D), professor(D).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;ta(E, A, F).;false;false
6;true,false;tempadvisedby(G, B), publication(H, B).;true;true
6;true,false,true;publication(I, G).;false;false
6;true,false,false;tempadvisedby(J, B), ta(K, A, L).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,true;publication(F, A).;true;true
7;true,true,true;publication(E, G), ta(H, G, I).;false;false
7;true,true,false;tempadvisedby(J, B).;false;false
7;true,false;publication(K, A), publication(K, B).;true;true
7;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
7;true,false,false;projectmember(N, B).;false;false
8;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
8;true;student(A).;true;false
8;true,true;tempadvisedby(D, B).;true;true
8;true,true,true;publication(C, A).;false;false
8;true,true,false;publication(E, A).;false;false
8;false;student(B).;false;true
8;false,false;publication(F, A), ta(G, A, H).;false;true
8;false,false,false;student(A), hasposition(B, I).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,true;publication(E, F), ta(G, F, H).;true;true
9;true,true,true;samecourse(C, G).;false;false
9;true,true,false;publication(E, I), inphase(I, J).;false;false
9;true,false;tempadvisedby(K, B), publication(L, B).;true;true
9;true,false,true;publication(L, A), ta(M, K, N).;false;false
9;true,false,false;ta(P, A, Q), publication(R, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995085;  // std dev = 1.08e-06, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( genre(H, C), movie(G, H) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048865;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
%   | else return 0.4149671169176949;  // std dev = 4.660, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7311526676143493;  // std dev = 0.520, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.13764990780895342;  // std dev = 0.193, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1276761989565548;  // std dev = 0.312, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.567806357334754;  // std dev = 0.037, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B) )
%   | | then return -0.12709619750720666;  // std dev = 0.206, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11401095196874837;  // std dev = 0.278, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.34843167806133074;  // std dev = 0.196, 394.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10382792189913137;  // std dev = 0.315, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3305851651410024;  // std dev = 3.95e-07, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, A), movie(H, B) )
%   | | | then return -0.13491702210372955;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(I, A) )
%   | then return -0.059355128247637244;  // std dev = 3.639, 677.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2891645798063994;  // std dev = 1.213, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1388750112430816;  // std dev = 0.222, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08920621550227519;  // std dev = 0.251, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2345768128216848;  // std dev = 1.096, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return -0.11917073462212345;  // std dev = 0.231, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08172819523332785;  // std dev = 0.199, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.15138155028990744;  // std dev = 2.370, 394.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07673217890037809;  // std dev = 0.248, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then return 0.17344009407255687;  // std dev = 0.910, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.13033412291422972;  // std dev = 0.267, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11531443497129337;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(B) )
%   | then return -0.06950048294897418;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11022901277244852;  // std dev = 0.105, 396.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06642742807268183;  // std dev = 0.175, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068787
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.028 seconds
Total inference time: 1.516 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072397
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.401 seconds
Parameter learned model CLL: -0.072397


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A)', 'true,false,true': 'genre(H, C), movie(G, H)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 288], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.58e-08, 28, 0], 'true,false,true,false': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 609, 0], 'false,false': [4.66, 39, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B), movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.52, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.193, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.312, 603, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.037, 0, 337], 'true,false,true': [0.206, 51, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.278, 607, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.196, 57, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.315, 633, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'true,true,true': 'movie(E, F)', 'true,true,false': 'movie(G, A), movie(H, B)', 'false': 'movie(I, A)'}, {'true,true,true,true': [3.95e-07, 0, 288], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 32, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.639, 628, 49], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)'}, {'true,true,true': [1.213, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.222, 40, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.251, 623, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, D), director(D)', 'true,true,true': 'movie(C, B)'}, {'true,true,true,true': [1.096, 0, 337], 'true,true,true,false': [0.231, 64, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.199, 622, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.37, 57, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.248, 626, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)', 'false': 'actor(B)'}, {'true,true,true': [0.91, 0, 337], 'true,true,false,true': [0.267, 59, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 19, 0], 'false,true': [0.0, 586, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.105, 59, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.175, 634, 0]}]]
[{'': [0.10707911957168734, 0.06535901969704253], 'true': [4.046146134189459e-15, 4.163336342344337e-17], 'false': [-3.9377368361089297e-16, 0.2467716942148761], 'true,true': [4.046146134189459e-15, nan], 'true,true,true': [4.046146134189459e-15, nan], 'true,false': [4.163336342344337e-17, nan], 'true,false,true': [2.3790493384824782e-17, -1.1564823173178714e-17]}, {'': [0.0844521912849266, 0.00016184551319731877], 'true': [0.000801727386772031, 0.000763464065831546], 'true,true': [0.000801727386772031, nan], 'true,false': [0.000763464065831546, nan], 'true,false,true': [0.000763464065831546, nan]}, {'': [0.056437841152711804, 0.00012752311207581347], 'true': [0.0013805138515461846, 0.0008310596889732282], 'true,false': [0.0008310596889732282, nan]}, {'': [0.03849125992776146, 0.00015653436723239762], 'true': [0.03849125992776146, nan], 'true,true': [0.03849125992776146, nan]}, {'': [0.01950230576966754, 0.019559808420279864], 'false': [0.019559808420279885, nan], 'true': [0.01950230576966754, nan], 'true,true': [5.427757009278544e-16, -1.3877787807814457e-17], 'true,true,true': [5.427757009278544e-16, nan], 'true,true,false': [-1.3877787807814457e-17, nan]}, {'': [0.021414172740135455, 0.00010126328960725854], 'true': [0.004369630925753881, 0.0012361101059884555], 'true,true': [0.004369630925753881, nan], 'true,false': [0.0012361101059884555, nan]}, {'': [0.01991551142995743, 6.367917992209343e-05], 'true': [0.01991551142995743, nan], 'true,true': [0.01991551142995743, nan], 'true,true,true': [0.0035676209919668534, 0.0008320869609271721]}, {'': [0.014254755349460019, 9.80693681029894e-05], 'true': [0.014254755349460019, nan], 'true,true': [0.014254755349460019, nan], 'true,true,true': [0.014254755349460019, nan]}, {'': [0.01592036489643238, -4.9259042048215136e-17], 'true': [0.013969741997117775, -5.843279076974508e-18], 'true,true': [0.0024551579166576278, 0.0012093154113815595], 'true,true,false': [0.0012093154113815595, nan], 'false': [-4.9259042048215136e-17, nan]}, {'': [0.01105197780322973, 4.8521394758254756e-05], 'true': [0.01105197780322973, nan], 'true,true': [0.01105197780322973, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(H, C), movie(G, H).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(E, B), movie(E, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;true;actor(A).;true;true
8;true,true;movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995085;  // std dev = 1.08e-06, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004886;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995122;  // std dev = 1.69e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1254446385283923;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.11231637819360608;  // std dev = 0.000, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( female(B) )
%   | then return -0.10159632948783658;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878364;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else return -0.10159632948783659;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.32071184716015066;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601492;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.09269127618926179;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.255172242569489;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.25517224256948845;  // std dev = 1.29e-08, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839683;  // std dev = 2.95e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.0851847513883968;  // std dev = 3.84e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( female(A) )
%   | then return -0.08518475138839675;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839675;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839675;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | | else return -0.08518475138839673;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.209757715632535;  // std dev = 1.74e-07, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return -0.07877675473109175;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.16816716134588558;  // std dev = 0.101, 222.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=190 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109258;  // std dev = 0.000, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527758;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.18323923757932883;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.09187798693434694;  // std dev = 3.23e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333686;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return -0.07324622576333698;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return -0.0732462257633372;  // std dev = 0.000, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A) )
%   | then if ( movie(C, A) )
%   | | then if ( female(A) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | | else return 0.15738795225940283;  // std dev = 1.63e-07, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.0844940872320382;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.06842697784420257;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(B) )
%   | then return -0.06842697784420258;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420258;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return -0.06842697784420246;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080108;  // std dev = 7.21e-09, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.13762224734048437;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202618;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07818337031102467;  // std dev = 2.08e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( female(B) )
%   | then return -0.06419184008202618;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202611;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else return -0.064191840082026;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064027
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.856 seconds
Total inference time: 1.492 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064717
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.971 seconds
Refined model CLL: -0.064717


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064027
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.256 seconds
Total inference time: 1.492 seconds
AUC ROC: 1.0
Total revision time: 15.256
Best scored revision CLL: -0.064717


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:27:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064027, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.256, 'Inference time': 1.492, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068787, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.028, 'Inference time': 1.516}}


