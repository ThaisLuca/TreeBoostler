Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( hasposition(I, C), publication(G, I) )
%   | | | then return 0.00814893509951222;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.524815601766179;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.6048156017661781;  // std dev = 3.767, 75.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=56 */
%   else if ( student(B) )
%   | then return -0.14185106490048796;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return -0.10185106490048777;  // std dev = 0.196, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, H) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5348917811753144;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7220431403716812;  // std dev = 0.053, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A) )
%   | | then if ( publication(I, J), professor(J) )
%   | | | then return 0.08248279580040851;  // std dev = 2.645, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.5563040657088547;  // std dev = 1.254, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.5199489032101643;  // std dev = 2.607, 36.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=27 */
%   | | | else return 0.676847076088478;  // std dev = 1.661, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else return -0.12599780865583945;  // std dev = 0.018, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F), ta(G, A, F) )
%   | | | then return 0.3053664367462845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4984796033851967;  // std dev = 1.357, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return 0.5547317921136533;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(H, B), ta(I, A, J) )
%   | | then if ( tempadvisedby(K, B), ta(L, K, J) )
%   | | | then return 0.27322548996615464;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.47969034711174063;  // std dev = 2.434, 38.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=30 */
%   | | else if ( publication(M, A) )
%   | | | then return 0.16100180939470332;  // std dev = 2.338, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.31355731741348686;  // std dev = 3.057, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   else return -0.11283960935634985;  // std dev = 0.019, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), publication(C, G) )
%   | | | then return 0.26540557160741723;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.44502805159657655;  // std dev = 0.095, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( publication(C, H), tempadvisedby(I, H) )
%   | | | then return 0.2900261229301285;  // std dev = 1.587, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.4170430548534592;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( ta(L, K, M), publication(N, B) )
%   | | | then return -0.2082044603707408;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.15717628005458442;  // std dev = 1.998, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( tempadvisedby(P, B), ta(Q, P, R) )
%   | | | then return 0.4387641376173567;  // std dev = 1.613, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.2169464440030989;  // std dev = 3.943, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   else return -0.1018846845081189;  // std dev = 0.014, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( publication(F, A) )
%   | | then if ( publication(C, G), ta(H, G, I) )
%   | | | then return 0.34685947185300564;  // std dev = 1.334, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.0569275948604457;  // std dev = 0.972, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( ta(J, K, E), publication(C, K) )
%   | | | then return 0.49369053540749086;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3616088952471264;  // std dev = 1.643, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else if ( publication(L, A), publication(L, B) )
%   | | then if ( tempadvisedby(M, B) )
%   | | | then return 0.36324198228026716;  // std dev = 0.086, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.2392103121567177;  // std dev = 0.935, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( tempadvisedby(N, B), publication(P, B) )
%   | | | then return 0.056800125874536034;  // std dev = 2.262, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.2865914231875005;  // std dev = 2.730, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else return -0.09306171391022491;  // std dev = 0.016, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.08500394033110378;  // std dev = 0.918, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2686068021050484;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.28190962753013626;  // std dev = 0.087, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(H, B), publication(I, A) )
%   | | then if ( publication(I, J), professor(J) )
%   | | | then return -0.0277823108061932;  // std dev = 1.751, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.2721822025481462;  // std dev = 1.132, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.22616212486041642;  // std dev = 2.959, 58.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=47 */
%   | | | else return 0.11903526034361808;  // std dev = 2.375, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   else return -0.08539260623561719;  // std dev = 0.014, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then if ( ta(F, C, G) )
%   | | then if ( ta(F, H, E), inphase(H, I) )
%   | | | then return 0.19534351064423428;  // std dev = 1.107, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.1369865573883738;  // std dev = 1.259, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( publication(J, B), publication(J, A) )
%   | | | then return 0.08683785237435226;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.31839593473294875;  // std dev = 1.054, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | then if ( ta(L, N, P), publication(Q, N) )
%   | | | then return 0.2568812169161968;  // std dev = 0.510, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.11265534530359428;  // std dev = 1.253, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( publication(R, B), tempadvisedby(S, B) )
%   | | | then return -0.031200563248481448;  // std dev = 1.946, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.09316292226270104;  // std dev = 3.605, 71.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=48 */
%   else return -0.07887102397227598;  // std dev = 0.011, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), hasposition(B, D) )
%   | then if ( publication(C, B) )
%   | | then return 0.21394307042901764;  // std dev = 0.228, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return -0.09277980377930413;  // std dev = 0.711, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.136314980518843;  // std dev = 2.359, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( projectmember(H, B), ta(I, A, J) )
%   | | then return -0.45064263637797036;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.08176129237195498;  // std dev = 3.373, 62.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | | | else return -0.06547677992527991;  // std dev = 1.886, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else return -0.07338819817422157;  // std dev = 0.011, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( sameperson(A, D) )
%   | | | then return 0.05380156626647609;  // std dev = 1.351, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.22245692531199734;  // std dev = 2.000, 57.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=53 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return -0.013860535336018014;  // std dev = 2.146, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return 0.2041174798092297;  // std dev = 1.259, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( projectmember(H, B), publication(I, A) )
%   | | then return 0.5210311640984021;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(J, A, K) )
%   | | | then return -0.29705671540416717;  // std dev = 1.308, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.0045527607458035815;  // std dev = 1.924, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   else return -0.06861018381285804;  // std dev = 0.012, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.39283257235045493;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19167588119770673;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( ta(E, A, F), hasposition(B, G) )
%   | | then if ( ta(E, H, I), publication(J, H) )
%   | | | then return 0.08484126770864091;  // std dev = 2.452, 44.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=34 */
%   | | | else return 0.27509969917316235;  // std dev = 0.185, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(K, A), publication(K, B) )
%   | | | then return 0.1532780377598077;  // std dev = 0.117, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.03694241868933667;  // std dev = 3.372, 54.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=30 */
%   else return -0.06431018359120501;  // std dev = 0.011, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 1.46e-07, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return 0.6476226193100386;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7288129833844738;  // std dev = 0.017, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.17638262705079294;  // std dev = 0.171, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1281308215168773;  // std dev = 0.196, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5648921203848087;  // std dev = 0.022, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, B) )
%   | | then return -0.12434175272085178;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11763902418982139;  // std dev = 0.271, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42488532460626594;  // std dev = 0.176, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.133404955616949;  // std dev = 0.229, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10495348106714208;  // std dev = 0.213, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2530527013505357;  // std dev = 1.454, 78.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09566258641001513;  // std dev = 0.197, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2730002166832215;  // std dev = 0.145, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13739836426295562;  // std dev = 0.147, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.086388235499692;  // std dev = 0.144, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22234846336265188;  // std dev = 0.127, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( movie(D, E) )
%   | | then return -0.13644002726269444;  // std dev = 0.153, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08191350393809098;  // std dev = 0.188, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17870576559782786;  // std dev = 6.14e-08, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return -0.0834196309103992;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(E, B) )
%   | | then return 0.1319934814177659;  // std dev = 0.673, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07582128557446184;  // std dev = 0.190, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11303818830311105;  // std dev = 0.110, 79.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06931262262908183;  // std dev = 0.137, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10570876912805666;  // std dev = 0.850, 78.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=65 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06441830731613771;  // std dev = 0.113, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063683
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.89 seconds
Total inference time: 1.693 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072469
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.525 seconds
Parameter learned model CLL: -0.072469


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.46e-07, 0, 50], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [6.32e-08, 116, 0], 'false,false': [1.777, 4, 15]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.017, 0, 65], 'true,false,true,true': [0.171, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.196, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.022, 0, 65], 'true,false,true': [0.038, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.271, 132, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.176, 0, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.229, 25, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.213, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.454, 13, 65], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.197, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.145, 0, 65], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.147, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.144, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.127, 0, 65], 'true,false,true': [0.153, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.188, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [6.14e-08, 0, 50], 'true,true,false': [1.32e-09, 9, 0], 'true,false,true': [0.673, 4, 15], 'true,false,false': [0.0, 0, 0], 'false': [0.19, 135, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.11, 14, 65], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.137, 125, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.85, 13, 65], 'true,false': [0.0, 0, 0], 'false': [0.113, 128, 0]}]]
[{'': [0.10772545398584199, 0.09876543209876489], 'true': [4.263256414560601e-16, -7.93016446160826e-18], 'false': [3.4455197315953135e-17, 0.16620498614958412], 'true,true': [4.263256414560601e-16, nan], 'true,true,true': [4.263256414560601e-16, nan], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.08818396430091277, 0.000300649126984652], 'true': [0.0002907586323510932, 0.0032433483433853857], 'true,false': [0.0032433483433853857, nan], 'true,false,true': [0.0032433483433853857, nan]}, {'': [0.03730149117415153, 0.0005580384117061319], 'true': [0.00046674265986078686, 0.0014457751584773873], 'true,false': [0.0014457751584773873, nan]}, {'': [0.06345715726568607, 0.0003806223593148887], 'true': [0.00047620200677319903, 0.002099614222620285], 'true,false': [0.002099614222620285, nan], 'true,false,true': [0.002099614222620285, nan], 'true,true': [0.00047620200677319903, nan], 'true,true,true': [0.00047620200677319903, nan]}, {'': [0.027109639411325447, 0.00033853868495583005], 'true': [0.027109639411325447, nan], 'true,true': [0.027109639411325447, nan], 'true,true,true': [0.027109639411325447, nan]}, {'': [0.020034035216757905, 0.00018921869826709416], 'true': [0.000325104617824524, 0.002172021566206844], 'true,false': [0.002172021566206844, nan], 'true,false,true': [0.002172021566206844, nan], 'true,true': [0.000325104617824524, nan]}, {'': [0.016454648943921263, 0.0003171658439041099], 'true': [0.0002495818094711256, 0.002114537969585495], 'true,false': [0.002114537969585495, nan]}, {'': [0.012532646919290355, 0.00026863077288376703], 'true': [0.008882325645667355, 0.023833625056062478], 'true,false': [0.023833625056062478, nan], 'true,true': [7.549516567451065e-17, 1.5419764230904951e-18]}, {'': [0.01199058282033424, 0.00015016349070567258], 'true': [0.01199058282033424, nan], 'true,true': [0.01199058282033424, nan]}, {'': [0.009259227652968506, 9.927624303442909e-05], 'true': [0.009259227652968506, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995122;  // std dev = 1.46e-07, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004879;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.7194734122109548;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.12544463852839138;  // std dev = 1.86e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.12544463852839127;  // std dev = 3.65e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.1409528334544568;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.5553664367462843;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11077946047446317;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.18187761611351969;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.10159632948783631;  // std dev = 1.97e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09928858428705102;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.09171502666720224;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.11537025977854093;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694891;  // std dev = 7.45e-09, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.25517224256948917;  // std dev = 6.45e-09, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1.75e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.0851847513883968;  // std dev = 1.49e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08435559328639029;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09535388622550887;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07877675473109177;  // std dev = 7.45e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07806430520284524;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09093757994565713;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527744;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07262782413336935;  // std dev = 4.56e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.10262221305378513;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.15274385809367083;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420271;  // std dev = 7.45e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.06842697784420265;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06788540548869605;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.10241178108084335;  // std dev = 0.106, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.13400703000801084;  // std dev = 5.89e-09, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06371379531464046;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06203197165547603;  // std dev = 0.013, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063457
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.774 seconds
Total inference time: 1.721 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064656
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.513 seconds
Refined model CLL: -0.064656


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063457
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.702 seconds
Total inference time: 1.721 seconds
AUC ROC: 1.0
Total revision time: 8.702
Best scored revision CLL: -0.064656


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063457, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.702, 'Inference time': 1.721, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063683, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.89, 'Inference time': 1.693}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995112;  // std dev = 4.77e-07, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004885;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | else return 0.4263307532813295;  // std dev = 3.286, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7345693577000871;  // std dev = 0.031, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14633092017852903;  // std dev = 0.160, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1284836477632002;  // std dev = 0.237, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5714268868854013;  // std dev = 0.041, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, B) )
%   | | then return -0.14070349856474867;  // std dev = 0.034, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11485526466765086;  // std dev = 0.206, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.43052483155771104;  // std dev = 0.481, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12098873837532727;  // std dev = 0.139, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10370087255242737;  // std dev = 0.200, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.27509877519681303;  // std dev = 1.819, 149.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0944154596767544;  // std dev = 0.176, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.27280530665135305;  // std dev = 0.406, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13153604522156404;  // std dev = 0.145, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0867990937844465;  // std dev = 0.172, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22242516681207508;  // std dev = 0.358, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( movie(D, E) )
%   | | then return -0.11575938172555011;  // std dev = 0.134, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07916944092994432;  // std dev = 0.126, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1729304557488728;  // std dev = 8.43e-08, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else return -0.08931148162555619;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( movie(E, B) )
%   | | then return 0.1678715799623536;  // std dev = 0.860, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07355008071884689;  // std dev = 0.118, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1281092925011872;  // std dev = 0.095, 148.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06978611662777584;  // std dev = 0.155, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.11470297499501592;  // std dev = 1.107, 146.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=130 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0649645892265108;  // std dev = 0.128, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064276
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.579 seconds
Total inference time: 1.699 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072732
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.018 seconds
Parameter learned model CLL: -0.072732


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [4.77e-07, 0, 105], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 14, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 220, 0], 'false,false': [3.286, 19, 25]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.031, 0, 130], 'true,false,true,true': [0.16, 22, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.237, 252, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.041, 0, 130], 'true,false,true': [0.034, 25, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.206, 222, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.481, 0, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.139, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.2, 247, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.819, 19, 130], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.176, 227, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.406, 0, 130], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.145, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.172, 237, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.358, 0, 130], 'true,false,true': [0.134, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.126, 262, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [8.43e-08, 0, 105], 'true,true,false': [0.0, 23, 0], 'true,false,true': [0.86, 6, 25], 'true,false,false': [0.0, 0, 0], 'false': [0.118, 272, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.095, 18, 130], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.155, 262, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.107, 16, 130], 'true,false': [0.0, 0, 0], 'false': [0.128, 251, 0]}]]
[{'': [0.12492563950030028, 0.08572945362718194], 'true': [2.1654635756498293e-15, -3.0839528461809902e-18], 'false': [-2.34156128830033e-16, 0.24535123966942282], 'true,true': [2.1654635756498293e-15, nan], 'true,true,true': [2.1654635756498293e-15, nan], 'true,false': [-3.0839528461809902e-18, nan], 'true,false,true': [-1.1895246692412391e-17, 0.0]}, {'': [0.09704470527177204, 0.0002235009665277916], 'true': [0.0009571277948832237, 0.0011632980297836624], 'true,false': [0.0011632980297836624, nan], 'true,false,true': [0.0011632980297836624, nan]}, {'': [0.07017248594017021, 0.0001910906784228128], 'true': [0.0016451060578537872, 0.001180286072872081], 'true,false': [0.001180286072872081, nan]}, {'': [0.03807618748437679, 0.00016176023922587302], 'true': [0.0017768351847635153, 0.0009206469583727606], 'true,true': [0.0017768351847635153, nan], 'true,true,true': [0.0017768351847635153, nan], 'true,false': [0.0009206469583727606, nan], 'true,false,true': [0.0009206469583727606, nan]}, {'': [0.022203838516474343, 0.00013585352388703045], 'true': [0.022203838516474343, nan], 'true,true': [0.022203838516474343, nan], 'true,true,true': [0.022203838516474343, nan]}, {'': [0.0208032117054442, 0.00012477783313990325], 'true': [0.001265497077627104, 0.0009963282068903925], 'true,true': [0.001265497077627104, nan], 'true,false': [0.0009963282068903925, nan], 'true,false,true': [0.0009963282068903925, nan]}, {'': [0.015564720784536981, 6.029691025957337e-05], 'true': [0.0009880804792160938, 0.0007783317401310161], 'true,false': [0.0007783317401310161, nan]}, {'': [0.013093785947171827, 5.12197120763295e-05], 'true': [0.010136814174115941, 0.023878897695535355], 'true,false': [0.023878897695535355, nan], 'true,true': [6.767073673905717e-17, -6.033820786006285e-18]}, {'': [0.009065222298327852, 9.207647771471966e-05], 'true': [0.009065222298327852, nan], 'true,true': [0.009065222298327852, nan]}, {'': [0.008386787599716169, 6.491912688433344e-05], 'true': [0.008386787599716169, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995112;  // std dev = 4.77e-07, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048843;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109556;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( actor(B) )
%   | then return -0.1254446385283918;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | else return -0.15364135657578304;  // std dev = 0.060, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 1.67e-08, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.5553664367462836;  // std dev = 2.69e-08, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(B) )
%   | then return -0.11231637819360683;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else return -0.1271669221312526;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.4175135841583105;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(B) )
%   | then return -0.10159632948783655;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.22746879412534657;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0977340467893065;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.32071184716015;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926086;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.09269127618926087;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926086;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.09269127618926086;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.1397149299708534;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839686;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 1.83e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.08518475138839675;  // std dev = 4.59e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else return -0.08518475138839675;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.09004041951017608;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253576;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.20975771563253573;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return -0.07877675473109161;  // std dev = 3.73e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109164;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09836029047711026;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0787767547310915;  // std dev = 6.83e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | | else return -0.0787767547310916;  // std dev = 1.05e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.07241649351967905;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527728;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | else return -0.07324622576333704;  // std dev = 9.31e-10, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527744;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( movie(F, A), movie(F, B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333699;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333693;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08402663050885344;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( director(B) )
%   | | then return -0.06770020437136498;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333674;  // std dev = 7.27e-09, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #pos=130 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420261;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.06842697784420261;  // std dev = 3.16e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06738496305006032;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06842697784420265;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.0714267106510175;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 5.89e-09, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return 0.1340070300080109;  // std dev = 6.45e-09, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06335362330496828;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419184008202611;  // std dev = 9.13e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.07429909055009534;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063454
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.012 seconds
Total inference time: 1.614 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064731
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.091 seconds
Refined model CLL: -0.064731


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063454
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.7 seconds
Total inference time: 1.614 seconds
AUC ROC: 1.0
Total revision time: 10.7
Best scored revision CLL: -0.064731


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063454, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.7, 'Inference time': 1.614, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064276, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.579, 'Inference time': 1.699}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995097;  // std dev = 9.90e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048757;  // std dev = 2.17e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | else return 0.48972788246793225;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7320430014811773;  // std dev = 0.026, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.16350568342393446;  // std dev = 0.244, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12903742152738143;  // std dev = 0.319, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5685803345694058;  // std dev = 0.034, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, B) )
%   | | then return -0.134507870474229;  // std dev = 0.037, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1149187200991818;  // std dev = 0.282, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42808548241832184;  // std dev = 0.494, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11699185801347008;  // std dev = 0.230, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10389638367677397;  // std dev = 0.269, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.28971161396236594;  // std dev = 1.872, 214.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=195 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09422838047817968;  // std dev = 0.232, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2681592903266537;  // std dev = 0.411, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13834586423201642;  // std dev = 0.246, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08640846641890568;  // std dev = 0.207, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21908271566124635;  // std dev = 0.362, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( movie(D, E) )
%   | | then return -0.12339215213034653;  // std dev = 0.213, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0802487531701;  // std dev = 0.209, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17310041982333857;  // std dev = 6.66e-08, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return -0.08875897540042123;  // std dev = 2.28e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( movie(E, B) )
%   | | then return 0.14814105398032051;  // std dev = 1.083, 46.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07397919350569378;  // std dev = 0.182, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12277114544859465;  // std dev = 0.094, 228.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06992569581189884;  // std dev = 0.198, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10039527391054888;  // std dev = 1.543, 235.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=195 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06540648117539104;  // std dev = 0.187, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064118
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.076 seconds
Total inference time: 1.841 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072682
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.453 seconds
Parameter learned model CLL: -0.072682


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [9.9e-07, 0, 159], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 17, 0], 'true,false,true,false': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.17e-07, 345, 0], 'false,false': [3.642, 21, 36]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.026, 0, 195], 'true,false,true,true': [0.244, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.319, 339, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.034, 0, 195], 'true,false,true': [0.037, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.282, 350, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.494, 0, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.23, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.269, 359, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.872, 19, 195], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.232, 363, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.411, 0, 195], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.246, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.207, 348, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.362, 0, 195], 'true,false,true': [0.213, 39, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.209, 337, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [6.66e-08, 0, 159], 'true,true,false': [2.28e-09, 14, 0], 'true,false,true': [1.083, 10, 36], 'true,false,false': [0.0, 0, 0], 'false': [0.182, 384, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.094, 33, 195], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.198, 334, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.543, 40, 195], 'true,false': [0.0, 0, 0], 'false': [0.187, 352, 0]}]]
[{'': [0.1174090264650343, 0.08153263533080969], 'true': [6.166974687729172e-15, 1.3322676295501878e-17], 'false': [1.3644480070755548e-16, 0.23268698060942006], 'true,true': [6.166974687729172e-15, nan], 'true,true,true': [6.166974687729172e-15, nan], 'true,false': [1.3322676295501878e-17, nan], 'true,false,true': [-3.2653618371328133e-18, -6.938893903907228e-18]}, {'': [0.09798258263108292, 0.0002996520818065777], 'true': [0.0006978093703614774, 0.001862541178123598], 'true,false': [0.001862541178123598, nan], 'true,false,true': [0.001862541178123598, nan]}, {'': [0.06986177071170535, 0.00022713512184466823], 'true': [0.0011763289431737343, 0.0013447928281321404], 'true,false': [0.0013447928281321404, nan]}, {'': [0.05003199995489401, 0.00020214948215472388], 'true': [0.0012508205606757464, 0.0010347990069076599], 'true,true': [0.0012508205606757464, nan], 'true,true,true': [0.0012508205606757464, nan], 'true,false': [0.0010347990069076599, nan], 'true,false,true': [0.0010347990069076599, nan]}, {'': [0.016379353764659575, 0.00014795674667437574], 'true': [0.016379353764659575, nan], 'true,true': [0.016379353764659575, nan], 'true,true,true': [0.016379353764659575, nan]}, {'': [0.025424291946957, 0.00012282347224857793], 'true': [0.0008661007287263472, 0.0014018422022900176], 'true,false': [0.0014018422022900176, nan], 'true,false,true': [0.0014018422022900176, nan], 'true,true': [0.0008661007287263472, nan]}, {'': [0.01704558361499287, 0.00013012831098918384], 'true': [0.0006735546082747663, 0.0011648660911922027], 'true,false': [0.0011648660911922027, nan]}, {'': [0.00938634686812244, 8.597165751062993e-05], 'true': [0.005099989415678402, 0.025495559951372558], 'true,false': [0.025495559951372558, nan], 'true,true': [2.793013898428067e-17, 3.96508223080413e-18]}, {'': [0.008918496453705368, 0.00011762661429276611], 'true': [0.008918496453705368, nan], 'true,true': [0.008918496453705368, nan]}, {'': [0.01013219085633184, 9.978227850815243e-05], 'true': [0.01013219085633184, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995097;  // std dev = 9.90e-07, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048754;  // std dev = 2.29e-07, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.12544463852839213;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3.65e-08, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return 0.5553664367462834;  // std dev = 4.01e-08, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.11231637819360658;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return 0.4175135841583094;  // std dev = 2.98e-08, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( female(A) )
%   | then return -0.10159632948783638;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else return -0.1015963294878366;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015005;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return 0.32071184716015005;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926101;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926103;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( actor(A) )
%   | | | then return -0.0926912761892609;  // std dev = 3.33e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return 0.2551722425694897;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839685;  // std dev = 1.86e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.08518475138839678;  // std dev = 2.79e-09, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 4.59e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return 0.20975771563253548;  // std dev = 1.58e-08, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.07877675473109162;  // std dev = 3.16e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.07877675473109154;  // std dev = 6.23e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109166;  // std dev = 5.27e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527772;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.177096497745277;  // std dev = 2.11e-08, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.17709649774527714;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333699;  // std dev = 2.11e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | | else return -0.07324622576333673;  // std dev = 9.94e-08, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.07324622576333699;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936713;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #pos=195 */
%   | else return -0.06842697784420271;  // std dev = 5.27e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06842697784420311;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801079;  // std dev = 7.21e-09, 82.000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return 0.13400703000801084;  // std dev = 7.21e-09, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( female(B) )
%   | then return -0.06419184008202622;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.788 seconds
Total inference time: 1.726 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.326 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.643 seconds
Total inference time: 1.726 seconds
AUC ROC: 1.0
Total revision time: 11.643
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:04
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.643, 'Inference time': 1.726, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064118, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.076, 'Inference time': 1.841}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995091;  // std dev = 1.08e-06, 215.000 (wgt'ed) examples reached here.  /* #pos=215 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048718;  // std dev = 2.95e-07, 447.000 (wgt'ed) examples reached here.  /* #neg=447 */
%   | else return 0.406929422904391;  // std dev = 4.506, 82.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7335979739027769;  // std dev = 0.031, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.15156850362947685;  // std dev = 0.236, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12840853245904887;  // std dev = 0.314, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.570441189068702;  // std dev = 0.041, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, B) )
%   | | then return -0.13061926695719817;  // std dev = 0.031, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11414851073414115;  // std dev = 0.256, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42978227195883045;  // std dev = 0.682, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1145671049415165;  // std dev = 0.169, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10468888060015268;  // std dev = 0.307, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2699917552674033;  // std dev = 2.663, 302.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=260 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09379129385065872;  // std dev = 0.225, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.27336921341414194;  // std dev = 0.579, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13461866379727935;  // std dev = 0.220, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08601203699696415;  // std dev = 0.189, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22282556075301108;  // std dev = 0.513, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( movie(D, E) )
%   | | then return -0.10778522011471948;  // std dev = 0.139, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0791265127391081;  // std dev = 0.156, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17391127904722728;  // std dev = 1.91e-07, 215.000 (wgt'ed) examples reached here.  /* #pos=215 */
%   | | else return -0.0902145509147454;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( movie(E, B) )
%   | | then return 0.13119073744238136;  // std dev = 1.444, 64.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07417773322468743;  // std dev = 0.178, 433.000 (wgt'ed) examples reached here.  /* #neg=433 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12384803482893697;  // std dev = 0.100, 304.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=260 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06969534204890453;  // std dev = 0.192, 446.000 (wgt'ed) examples reached here.  /* #neg=446 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10184879960652157;  // std dev = 1.830, 314.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=260 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06530435975799449;  // std dev = 0.186, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064315
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.34 seconds
Total inference time: 1.51 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072136
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.488 seconds
Parameter learned model CLL: -0.072136


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 215], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.95e-07, 447, 0], 'false,false': [4.506, 37, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.031, 0, 260], 'true,false,true,true': [0.236, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.314, 471, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.041, 0, 260], 'true,false,true': [0.031, 38, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.256, 474, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.682, 0, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.169, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.307, 456, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.663, 42, 260], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.225, 520, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.579, 0, 260], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.22, 48, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.189, 454, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.513, 0, 260], 'true,false,true': [0.139, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.156, 470, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [1.91e-07, 0, 215], 'true,true,false': [0.0, 30, 0], 'true,false,true': [1.444, 19, 45], 'true,false,false': [0.0, 0, 0], 'false': [0.178, 433, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.1, 44, 260], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.192, 446, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.83, 54, 260], 'true,false': [0.0, 0, 0], 'false': [0.186, 471, 0]}]]
[{'': [0.11013616233723833, 0.07782991055635269], 'true': [5.419953891379369e-15, 2.5069552168955147e-17], 'false': [1.9472368038168294e-16, 0.2476204640095184], 'true,true': [5.419953891379369e-15, nan], 'true,true,true': [5.419953891379369e-15, nan], 'true,false': [2.5069552168955147e-17, nan], 'true,false,true': [0.0, -1.1564823173178714e-17]}, {'': [0.09954039151123584, 0.00020898260994443117], 'true': [0.000953182160930383, 0.0012369520941732542], 'true,false': [0.0012369520941732542, nan], 'true,false,true': [0.0012369520941732542, nan]}, {'': [0.05623809445643547, 0.00013847708502973848], 'true': [0.0016467524385408712, 0.0009447211850203317], 'true,false': [0.0009447211850203317, nan]}, {'': [0.035260027159879546, 0.0002060222855520982], 'true': [0.0017893289989896306, 0.0007317156541064715], 'true,true': [0.0017893289989896306, nan], 'true,true,true': [0.0017893289989896306, nan], 'true,false': [0.0007317156541064715, nan], 'true,false,true': [0.0007317156541064715, nan]}, {'': [0.02348896417225504, 9.772033616690314e-05], 'true': [0.02348896417225504, nan], 'true,true': [0.02348896417225504, nan], 'true,true,true': [0.02348896417225504, nan]}, {'': [0.023144366785786914, 7.890734858926056e-05], 'true': [0.001290450369929261, 0.0010065393606888638], 'true,true': [0.001290450369929261, nan], 'true,false': [0.0010065393606888638, nan], 'true,false,true': [0.0010065393606888638, nan]}, {'': [0.01445867280981084, 5.16044176312191e-05], 'true': [0.00101100792378644, 0.00043890045621103324], 'true,false': [0.00043890045621103324, nan]}, {'': [0.01270539076546412, 7.30048396794337e-05], 'true': [0.00749634033556862, 0.03256088152399792], 'true,false': [0.03256088152399792, nan], 'true,true': [1.6937355910560529e-16, 9.251858538542971e-19]}, {'': [0.010036166913785873, 8.286217582435775e-05], 'true': [0.010036166913785873, nan], 'true,true': [0.010036166913785873, nan]}, {'': [0.010666843347634495, 7.344559961317323e-05], 'true': [0.010666843347634495, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995091;  // std dev = 1.08e-06, 215.000 (wgt'ed) examples reached here.  /* #pos=215 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048743;  // std dev = 1.98e-07, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109575;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.12544463852839227;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462833;  // std dev = 4.01e-08, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0.5553664367462833;  // std dev = 4.34e-08, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.11231637819360601;  // std dev = 0.000, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831097;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( female(B) )
%   | then return -0.1015963294878365;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else return -0.10159632948783665;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601495;  // std dev = 3.73e-09, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0.3207118471601493;  // std dev = 2.04e-08, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926123;  // std dev = 0.000, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0.25517224256948917;  // std dev = 8.33e-09, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 2.63e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.0851847513883968;  // std dev = 3.84e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 2.79e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | | else return -0.08518475138839679;  // std dev = 2.36e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 2.58e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | | else return -0.08518475138839678;  // std dev = 6.32e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else return -0.08518475138839678;  // std dev = 2.46e-09, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325353;  // std dev = 7.90e-09, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | | else return 0.20975771563253515;  // std dev = 1.62e-08, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.07877675473109176;  // std dev = 0.000, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #pos=215 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527694;  // std dev = 4.21e-08, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.17709649774527703;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then return -0.07324622576333724;  // std dev = 0.000, 415.000 (wgt'ed) examples reached here.  /* #neg=415 */
%   | else return -0.07324622576333703;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.06842697784420347;  // std dev = 0.000, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801106;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #pos=260 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( female(B) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.886 seconds
Total inference time: 1.45 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.514 seconds
Refined model CLL: -0.064211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.227999999999998 seconds
Total inference time: 1.45 seconds
AUC ROC: 1.0
Total revision time: 12.227999999999998
Best scored revision CLL: -0.064211


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.227999999999998, 'Inference time': 1.45, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064315, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.34, 'Inference time': 1.51}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995086;  // std dev = 1.08e-06, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048804;  // std dev = 0.000, 532.000 (wgt'ed) examples reached here.  /* #neg=532 */
%   | else return 0.4792015666784605;  // std dev = 4.728, 95.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7321133662788704;  // std dev = 0.027, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.15659033266937622;  // std dev = 0.296, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12845313901507568;  // std dev = 0.384, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.568679859424783;  // std dev = 0.035, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, B) )
%   | | then return -0.13430890252037592;  // std dev = 0.036, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11507170810772345;  // std dev = 0.367, 588.000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4281891074044142;  // std dev = 0.652, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12512112716312626;  // std dev = 0.262, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10375453984317812;  // std dev = 0.331, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26842839863240486;  // std dev = 2.966, 379.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=326 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09419199465161306;  // std dev = 0.286, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2724309315213027;  // std dev = 0.548, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13311002494851762;  // std dev = 0.266, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08692308614921361;  // std dev = 0.298, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22208560366671165;  // std dev = 0.484, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( movie(D, E) )
%   | | then return -0.12692200114639596;  // std dev = 0.239, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08042392794049297;  // std dev = 0.284, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17507526249633526;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | | else return -0.0871075069318485;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( movie(E, B) )
%   | | then return 0.14998668427886006;  // std dev = 1.408, 76.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07449752504637734;  // std dev = 0.244, 540.000 (wgt'ed) examples reached here.  /* #neg=540 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11786109556114095;  // std dev = 0.105, 388.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=326 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07000733730402664;  // std dev = 0.274, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10970081561018341;  // std dev = 1.837, 380.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=326 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06493853262127952;  // std dev = 0.213, 576.000 (wgt'ed) examples reached here.  /* #neg=576 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064071
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.865 seconds
Total inference time: 1.578 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0722
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.081 seconds
Parameter learned model CLL: -0.0722


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 267], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.98e-08, 32, 0], 'true,false,true,false': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 532, 0], 'false,false': [4.728, 36, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.027, 0, 326], 'true,false,true,true': [0.296, 52, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.384, 595, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.035, 0, 326], 'true,false,true': [0.036, 55, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.367, 588, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.652, 0, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.262, 59, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.331, 590, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.966, 53, 326], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.286, 585, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.548, 0, 326], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.266, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.298, 603, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.484, 0, 326], 'true,false,true': [0.239, 48, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.284, 591, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 267], 'true,true,false': [0.0, 32, 0], 'true,false,true': [1.408, 17, 59], 'true,false,false': [0.0, 0, 0], 'false': [0.244, 540, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.105, 62, 326], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.274, 622, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.837, 54, 326], 'true,false': [0.0, 0, 0], 'false': [0.213, 576, 0]}]]
[{'': [0.1272769686397055, 0.08524428368296513], 'true': [4.364382346990877e-15, 5.196788625904988e-17], 'false': [-1.502557476936302e-16, 0.2353462603878112], 'true,true': [4.364382346990877e-15, nan], 'true,true,true': [4.364382346990877e-15, nan], 'true,false': [5.196788625904988e-17, nan], 'true,false,true': [2.7755575615628914e-17, -1.4802973661668754e-17]}, {'': [0.09455786306654962, 0.00024739605487533115], 'true': [0.0007230198842319657, 0.0016848310892782193], 'true,false': [0.0016848310892782193, nan], 'true,false,true': [0.0016848310892782193, nan]}, {'': [0.06227425807681973, 0.00022925757985012643], 'true': [0.0012226277112964007, 0.0012909479149727954], 'true,false': [0.0012909479149727954, nan]}, {'': [0.041009597108018374, 0.00018586497913943093], 'true': [0.0013037646758517671, 0.0011657631756466936], 'true,true': [0.0013037646758517671, nan], 'true,true,true': [0.0013037646758517671, nan], 'true,false': [0.0011657631756466936, nan], 'true,false,true': [0.0011657631756466936, nan]}, {'': [0.023213678153266488, 0.0001396057985696021], 'true': [0.023213678153266488, nan], 'true,true': [0.023213678153266488, nan], 'true,true,true': [0.023213678153266488, nan]}, {'': [0.02180316915698772, 0.00014715681266316632], 'true': [0.0009217846979055344, 0.0012428535525702263], 'true,false': [0.0012428535525702263, nan], 'true,false,true': [0.0012428535525702263, nan], 'true,true': [0.0009217846979055344, nan]}, {'': [0.014405129720080293, 0.0001362680754391417], 'true': [0.0007177340749998194, 0.001191945431154769], 'true,false': [0.001191945431154769, nan]}, {'': [0.010522268659476855, 0.00011065731221713529], 'true': [0.006569421934592546, 0.026066561368478593], 'true,false': [0.026066561368478593, nan], 'true,true': [-6.653021870412923e-17, -1.734723475976807e-18]}, {'': [0.010972829323634184, 0.00012050447793306256], 'true': [0.010972829323634184, nan], 'true,true': [0.010972829323634184, nan]}, {'': [0.008880739309239011, 7.844620247803873e-05], 'true': [0.008880739309239011, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 1.08e-06, 267.000 (wgt'ed) examples reached here.  /* #pos=267 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048827;  // std dev = 0.000, 558.000 (wgt'ed) examples reached here.  /* #neg=558 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839235;  // std dev = 0.000, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360568;  // std dev = 0.000, 577.000 (wgt'ed) examples reached here.  /* #neg=577 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583116;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( female(B) )
%   | then return -0.10159632948783658;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783642;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else return -0.10159632948783662;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015105;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926173;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948895;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.2551722425694885;  // std dev = 1.12e-08, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else return -0.08518475138839679;  // std dev = 1.05e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839675;  // std dev = 2.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.08518475138839675;  // std dev = 4.47e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839675;  // std dev = 5.37e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | | else return -0.08518475138839675;  // std dev = 1.49e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | else return -0.08518475138839676;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325349;  // std dev = 1.47e-08, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else return 0.2097577156325349;  // std dev = 1.95e-08, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.0787767547310924;  // std dev = 0.000, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527716;  // std dev = 2.98e-08, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | | else return 0.17709649774527775;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #pos=172 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1770964977452767;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333698;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return -0.073246225763337;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return -0.0732462257633372;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367153;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420258;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420258;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.06842697784420258;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420258;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420258;  // std dev = 6.05e-08, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | | | else return -0.06842697784420258;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801134;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( female(A) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202611;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202618;  // std dev = 2.98e-08, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | | | else return -0.06419184008202607;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.611 seconds
Total inference time: 1.501 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.139 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.695999999999998 seconds
Total inference time: 1.501 seconds
AUC ROC: 1.0
Total revision time: 14.695999999999998
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.695999999999998, 'Inference time': 1.501, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064071, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.865, 'Inference time': 1.578}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 1.69e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0.4581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7366579679998828;  // std dev = 0.031, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.16260881029864585;  // std dev = 0.135, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.13118226504730782;  // std dev = 0.223, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5735544608656482;  // std dev = 0.041, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, B) )
%   | | then return -0.1418900959970829;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11524886871596307;  // std dev = 0.179, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4321335876452466;  // std dev = 0.335, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1231389815591939;  // std dev = 0.113, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1020150314611307;  // std dev = 0.096, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25625487513373935;  // std dev = 1.498, 77.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09452351588747981;  // std dev = 0.140, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2775105189571346;  // std dev = 0.283, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13959841125410716;  // std dev = 0.144, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08687477547297613;  // std dev = 0.130, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22570685273844446;  // std dev = 0.249, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( movie(D, E) )
%   | | then return -0.11440573713349066;  // std dev = 0.123, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08278795080614589;  // std dev = 0.176, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1736513538797364;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.08570530431197178;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(E, B) )
%   | | then return 0.23867324542267102;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07401456560595228;  // std dev = 0.102, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12342933175649975;  // std dev = 0.095, 75.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06936488773234396;  // std dev = 0.107, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10129887801062636;  // std dev = 0.919, 76.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=64 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06414969434046047;  // std dev = 0.079, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064558
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.882 seconds
Total inference time: 1.449 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072681
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.513 seconds
Parameter learned model CLL: -0.072681


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.69e-07, 0, 49], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [7.6e-08, 113, 0], 'false,false': [2.449, 10, 15]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.031, 0, 64], 'true,false,true,true': [0.135, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.223, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.041, 0, 64], 'true,false,true': [0.036, 11, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.179, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.335, 0, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.113, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.096, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.498, 13, 64], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.14, 123, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.283, 0, 64], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.144, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.13, 117, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.249, 0, 64], 'true,false,true': [0.123, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.176, 124, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 49], 'true,true,false': [0.0, 6, 0], 'true,false,true': [1.49e-08, 0, 15], 'true,false,false': [0.0, 0, 0], 'false': [0.102, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.095, 11, 64], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.107, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.919, 12, 64], 'true,false': [0.0, 0, 0], 'false': [0.079, 132, 0]}]]
[{'': [0.08401920438957504, 0.09688090737240022], 'false': [5.1089909097794814e-17, 0.23999999999999955], 'true': [5.800348863347756e-16, -2.7755575615628915e-18], 'true,true': [5.800348863347756e-16, nan], 'true,true,true': [5.800348863347756e-16, nan], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.10227716414277031, 0.0004361947444350963], 'true': [0.0009646759283649109, 0.0016574107960427727], 'true,false': [0.0016574107960427727, nan], 'true,false,true': [0.0016574107960427727, nan]}, {'': [0.0656596461021941, 0.00024954880652440503], 'true': [0.0016442705770267074, 0.0013247601674880065], 'true,false': [0.0013247601674880065, nan]}, {'': [0.04264352107410572, 8.162865669667001e-05], 'true': [0.0017577284717424924, 0.0010567648950737876], 'true,true': [0.0017577284717424924, nan], 'true,true,true': [0.0017577284717424924, nan], 'true,false': [0.0010567648950737876, nan], 'true,false,true': [0.0010567648950737876, nan]}, {'': [0.0291284383699606, 0.00015877375848318416], 'true': [0.0291284383699606, nan], 'true,true': [0.0291284383699606, nan], 'true,true,true': [0.0291284383699606, nan]}, {'': [0.029098339155531217, 0.00014420163147367679], 'true': [0.0012522941061810233, 0.0012986316233587307], 'true,false': [0.0012986316233587307, nan], 'true,false,true': [0.0012986316233587307, nan], 'true,true': [0.0012522941061810233, nan]}, {'': [0.02013823723524345, 0.0002488221222515465], 'true': [0.000972186887368505, 0.0008940053692460896], 'true,false': [0.0008940053692460896, nan]}, {'': [0.0066027682845520436, 9.453118369508614e-05], 'true': [0.006537576062023395, 1.4802973661668754e-17], 'true,true': [-6.344131569286608e-17, 0.0], 'true,false': [1.4802973661668754e-17, nan]}, {'': [0.008933108143654576, 9.554650720844196e-05], 'true': [0.008933108143654576, nan], 'true,true': [0.008933108143654576, nan]}, {'': [0.011110186315409365, 4.7418027368214844e-05], 'true': [0.011110186315409365, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995122;  // std dev = 1.69e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.7194734122109548;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(A) )
%   | | | then return -0.1254446385283913;  // std dev = 2.58e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.5553664367462843;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1.05e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.16018348769345106;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831036;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.11347398140849041;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601498;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14757045365229035;  // std dev = 0.146, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694891;  // std dev = 7.45e-09, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.25517224256948917;  // std dev = 6.45e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 2.24e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.08518475138839679;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.16623062920005438;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253567;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.06569658746156525;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527744;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( movie(F, A), movie(F, B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.09288794466397529;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return -0.06177732984712541;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.15274385809367083;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420271;  // std dev = 7.45e-09, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( female(B) )
%   | | | then return -0.06793038097964613;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06827179132402879;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07877786284128281;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.13400703000801084;  // std dev = 5.89e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.0630412365477839;  // std dev = 2.02e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.06422167773218816;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06420116296042885;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06345
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.441 seconds
Total inference time: 1.837 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064509
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.716 seconds
Refined model CLL: -0.064509


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06345
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.552 seconds
Total inference time: 1.837 seconds
AUC ROC: 1.0
Total revision time: 8.552
Best scored revision CLL: -0.064509


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06345, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.552, 'Inference time': 1.837, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064558, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.882, 'Inference time': 1.449}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995114;  // std dev = 3.77e-07, 98.000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048846;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else return 0.4781489350995113;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=31 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7362989862497515;  // std dev = 0.030, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1754833743173007;  // std dev = 0.173, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12805630938754972;  // std dev = 0.222, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5731087663169974;  // std dev = 0.039, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, B) )
%   | | then return -0.14889340466094092;  // std dev = 0.038, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11455954330552942;  // std dev = 0.203, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4317157031185657;  // std dev = 0.456, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12356034711534983;  // std dev = 0.134, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1044066473027809;  // std dev = 0.233, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2715540473998204;  // std dev = 1.894, 149.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09355375720425897;  // std dev = 0.147, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2741351160743965;  // std dev = 0.381, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13052234797350493;  // std dev = 0.177, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08668723637108845;  // std dev = 0.172, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22332251351843566;  // std dev = 0.336, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(D, E) )
%   | | then return -0.10851278122630881;  // std dev = 0.123, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0792896404509048;  // std dev = 0.128, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17246114904340315;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | | else return -0.0864897036796046;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( movie(E, B) )
%   | | then return 0.18034012361519797;  // std dev = 0.795, 36.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07456506029219673;  // std dev = 0.160, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12320100505916341;  // std dev = 0.100, 150.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06997142605404458;  // std dev = 0.158, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.0932443088979081;  // std dev = 1.431, 159.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=129 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06578179355135491;  // std dev = 0.170, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064758
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.399 seconds
Total inference time: 1.596 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07263
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.034 seconds
Parameter learned model CLL: -0.07263


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [3.77e-07, 0, 98], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 215, 0], 'false,false': [3.432, 19, 31]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.03, 0, 129], 'true,false,true,true': [0.173, 17, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.222, 228, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.039, 0, 129], 'true,false,true': [0.038, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.203, 218, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.456, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.134, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.233, 243, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.894, 20, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.147, 221, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.381, 0, 129], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.177, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.172, 229, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.336, 0, 129], 'true,false,true': [0.123, 21, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.128, 234, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 98], 'true,true,false': [0.0, 17, 0], 'true,false,true': [0.795, 5, 31], 'true,false,false': [0.0, 0, 0], 'false': [0.16, 241, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.1, 21, 129], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.158, 223, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.431, 30, 129], 'true,false': [0.0, 0, 0], 'false': [0.17, 263, 0]}]]
[{'': [0.12597353497164684, 0.10329654681381377], 'true': [1.4500872158369392e-15, -3.2653618371328133e-18], 'false': [-2.354705577809634e-16, 0.23560000000000159], 'true,true': [1.4500872158369392e-15, nan], 'true,true,true': [1.4500872158369392e-15, nan], 'true,false': [-3.2653618371328133e-18, nan], 'true,false,true': [-1.2810265668751807e-17, 0.0]}, {'': [0.08652421004011601, 0.00021534317907466094], 'true': [0.0008949611061296111, 0.0017527125555466016], 'true,false': [0.0017527125555466016, nan], 'true,false,true': [0.0017527125555466016, nan]}, {'': [0.062080941078861356, 0.0001888888604295652], 'true': [0.0015163140041991045, 0.001407078316516333], 'true,false': [0.001407078316516333, nan]}, {'': [0.031827340250145615, 0.00022312715511702385], 'true': [0.001612397982233243, 0.0011266056419100903], 'true,true': [0.001612397982233243, nan], 'true,true,true': [0.001612397982233243, nan], 'true,false': [0.0011266056419100903, nan], 'true,false,true': [0.0011266056419100903, nan]}, {'': [0.024079402799816685, 9.786311454302132e-05], 'true': [0.024079402799816685, nan], 'true,true': [0.024079402799816685, nan], 'true,true,true': [0.024079402799816685, nan]}, {'': [0.024001552248913594, 0.00012944663684061645], 'true': [0.0011279502376262923, 0.0012094951299138367], 'true,false': [0.0012094951299138367, nan], 'true,false,true': [0.0012094951299138367, nan], 'true,true': [0.0011279502376262923, nan]}, {'': [0.014110853046014522, 7.016254219179375e-05], 'true': [0.0008739819262104068, 0.0007244513124172418], 'true,false': [0.0007244513124172418, nan]}, {'': [0.011007748390546312, 0.00010636315850407114], 'true': [0.008447223932995794, 0.017564542050381455], 'true,false': [0.017564542050381455, nan], 'true,true': [-8.156740589082783e-17, -9.79608551139844e-18]}, {'': [0.010041568185766113, 0.00011235566698452312], 'true': [0.010041568185766113, nan], 'true,true': [0.010041568185766113, nan]}, {'': [0.012874166410235217, 0.0001099028818233709], 'true': [0.012874166410235217, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995114;  // std dev = 3.77e-07, 98.000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004882;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995116;  // std dev = 2.06e-07, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109554;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839172;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 1.97e-08, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.5553664367462837;  // std dev = 2.36e-08, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360636;  // std dev = 2.95e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.11231637819360679;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831036;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.41751358415831036;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10159632948783653;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601498;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.3207118471601499;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926097;  // std dev = 1.32e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return -0.09269127618926092;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926075;  // std dev = 2.47e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.09269127618926085;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926089;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839687;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 1.05e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.08518475138839678;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253567;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.2097577156325357;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109158;  // std dev = 4.34e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.07877675473109151;  // std dev = 6.41e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109168;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109165;  // std dev = 1.12e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.0787767547310917;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0787767547310917;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1770964977452772;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #pos=98 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1770964977452775;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367066;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06842697784420262;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420261;  // std dev = 6.45e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06842697784420262;  // std dev = 2.46e-09, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420261;  // std dev = 2.04e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.06842697784420262;  // std dev = 1.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.06842697784420265;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420262;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 5.89e-09, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else return 0.13400703000801095;  // std dev = 5.59e-09, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( female(B) )
%   | then return -0.06419184008202622;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.793 seconds
Total inference time: 1.712 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.57 seconds
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.796 seconds
Total inference time: 1.712 seconds
AUC ROC: 1.0
Total revision time: 9.796
Best scored revision CLL: -0.064216


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.796, 'Inference time': 1.712, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064758, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.399, 'Inference time': 1.596}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995098;  // std dev = 9.39e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 1.98e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | else return 0.46378273791641417;  // std dev = 4.118, 71.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=43 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7355194542540084;  // std dev = 0.030, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.16678872761974115;  // std dev = 0.241, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12898210069663602;  // std dev = 0.324, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.572327770270949;  // std dev = 0.039, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, B) )
%   | | then return -0.1328324802313586;  // std dev = 0.035, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11492868897213081;  // std dev = 0.268, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.43113810744404946;  // std dev = 0.565, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11153632865472579;  // std dev = 0.144, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1035207964785773;  // std dev = 0.256, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25973349401544393;  // std dev = 2.527, 231.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09380389579988405;  // std dev = 0.201, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2761434567049477;  // std dev = 0.476, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13104469492828894;  // std dev = 0.178, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08649896444404498;  // std dev = 0.205, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22473404958341936;  // std dev = 0.420, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( movie(D, E) )
%   | | then return -0.11752844088639067;  // std dev = 0.180, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08004277004173199;  // std dev = 0.199, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17397042458167541;  // std dev = 1.69e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   | | else return -0.08771590229544618;  // std dev = 3.09e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( movie(E, B) )
%   | | then return 0.13287464842740923;  // std dev = 1.324, 59.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07380039336294775;  // std dev = 0.156, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12093833972796941;  // std dev = 0.106, 230.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06988579330050526;  // std dev = 0.194, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.09621319137223301;  // std dev = 1.735, 240.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=194 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06556318354568953;  // std dev = 0.194, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064828
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.977 seconds
Total inference time: 1.651 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072132
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.192 seconds
Parameter learned model CLL: -0.072132


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [9.39e-07, 0, 151], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.98e-07, 335, 0], 'false,false': [4.118, 28, 43]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.03, 0, 194], 'true,false,true,true': [0.241, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.324, 374, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.039, 0, 194], 'true,false,true': [0.035, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.268, 332, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.565, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.144, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.256, 393, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.527, 37, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.201, 361, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.476, 0, 194], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.178, 28, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.205, 356, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.42, 0, 194], 'true,false,true': [0.18, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.199, 361, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [1.69e-07, 0, 151], 'true,true,false': [3.09e-09, 26, 0], 'true,false,true': [1.324, 16, 43], 'true,false,false': [0.0, 0, 0], 'false': [0.156, 352, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.106, 36, 194], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.194, 355, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.735, 46, 194], 'true,false': [0.0, 0, 0], 'false': [0.194, 385, 0]}]]
[{'': [0.12531520316640093, 0.09469412021645862], 'true': [5.834920479089564e-15, 1.708035422500241e-17], 'false': [1.166562700501657e-16, 0.2388414997024403], 'true,true': [5.834920479089564e-15, nan], 'true,true,true': [5.834920479089564e-15, nan], 'true,false': [1.708035422500241e-17, nan], 'true,false,true': [0.0, -7.93016446160826e-18]}, {'': [0.10432908579738964, 0.00027999266349042646], 'true': [0.0009041580291213717, 0.0017093337027935089], 'true,false': [0.0017093337027935089, nan], 'true,false,true': [0.0017093337027935089, nan]}, {'': [0.059170651930634026, 0.00021565291084432825], 'true': [0.0015378937789713837, 0.0012076223335619012], 'true,false': [0.0012076223335619012, nan]}, {'': [0.03223351067621326, 0.00016709290565229942], 'true': [0.0016428275061794824, 0.0007955449075451401], 'true,true': [0.0016428275061794824, nan], 'true,true,true': [0.0016428275061794824, nan], 'true,false': [0.0007955449075451401, nan], 'true,false,true': [0.0007955449075451401, nan]}, {'': [0.02764397473966258, 0.00011239235632320834], 'true': [0.02764397473966258, nan], 'true,true': [0.02764397473966258, nan], 'true,true,true': [0.02764397473966258, nan]}, {'': [0.019437788040513538, 0.00011783082238079933], 'true': [0.0011676661845318214, 0.001133429530570902], 'true,true': [0.0011676661845318214, nan], 'true,false': [0.001133429530570902, nan], 'true,false,true': [0.001133429530570902, nan]}, {'': [0.015777951767551594, 0.00010974081288455228], 'true': [0.0009071239922043874, 0.0009543174646041218], 'true,false': [0.0009543174646041218, nan]}, {'': [0.013870211709236021, 6.934760939558757e-05], 'true': [0.008581551738193237, 0.02973090096308778], 'true,false': [0.02973090096308778, nan], 'true,true': [1.882232412609537e-16, 9.607699251563854e-18]}, {'': [0.01117878493257791, 0.00010631669498456618], 'true': [0.01117878493257791, nan], 'true,true': [0.01117878493257791, nan]}, {'': [0.012538819987382856, 9.816034790763873e-05], 'true': [0.012538819987382856, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995098;  // std dev = 9.39e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 2.00e-07, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995115;  // std dev = 2.60e-07, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.719473412210954;  // std dev = 2.79e-08, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.7222733269183527;  // std dev = 0.011, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(B) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.23292803776327828;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462843;  // std dev = 2.98e-08, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.5582401621515402;  // std dev = 0.014, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(B) )
%   | then return -0.11231637819360674;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
%   | else return -0.13044906396835784;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831086;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.41976469007305867;  // std dev = 0.015, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(B) )
%   | then return -0.1015963294878365;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
%   | else return -0.10671494246147867;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601503;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.3223157637992195;  // std dev = 0.013, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926075;  // std dev = 5.89e-09, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.09269127618926087;  // std dev = 4.47e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.15950133008234738;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0907542826615157;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.25631384526971773;  // std dev = 0.012, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839682;  // std dev = 3.48e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08518475138839683;  // std dev = 2.95e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 4.21e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.08518475138839678;  // std dev = 6.83e-08, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.10406763587027053;  // std dev = 0.027, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 9.86e-09, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.21059322694612936;  // std dev = 0.010, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109151;  // std dev = 6.99e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | | else return -0.07877675473109147;  // std dev = 7.88e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else return -0.0787767547310917;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.08194850909872661;  // std dev = 0.017, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527741;  // std dev = 4.94e-08, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return 0.17542594756596944;  // std dev = 7.60e-08, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | | else return -0.07324622576333704;  // std dev = 1.32e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527697;  // std dev = 3.94e-08, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.21456079215133061;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07324622576333704;  // std dev = 9.31e-10, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(B) )
%   | then return -0.07324622576333714;  // std dev = 3.23e-09, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then return -0.11842183122098457;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07035622970006256;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367094;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.15318927503496244;  // std dev = 0.007, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( actor(B) )
%   | then return -0.06842697784420322;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.10660652214048293;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06589130189820462;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801084;  // std dev = 6.72e-09, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | | else return 0.13436080496710814;  // std dev = 0.006, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202622;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | else return -0.06419184008202611;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.09687067335478156;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.061949882341905536;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.064 seconds
Total inference time: 1.658 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064461
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.281 seconds
Refined model CLL: -0.064461


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.514000000000001 seconds
Total inference time: 1.658 seconds
AUC ROC: 1.0
Total revision time: 12.514000000000001
Best scored revision CLL: -0.064461


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063436, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.514000000000001, 'Inference time': 1.658, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064828, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.977, 'Inference time': 1.651}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995092;  // std dev = 1.08e-06, 207.000 (wgt'ed) examples reached here.  /* #pos=207 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048724;  // std dev = 2.70e-07, 458.000 (wgt'ed) examples reached here.  /* #neg=458 */
%   | else return 0.4922952765629276;  // std dev = 4.362, 82.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=52 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7330567372446131;  // std dev = 0.027, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.16131193776181882;  // std dev = 0.269, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12965335608067355;  // std dev = 0.400, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5696426320595497;  // std dev = 0.035, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, B) )
%   | | then return -0.13412288678199139;  // std dev = 0.037, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11435319425923376;  // std dev = 0.305, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42892353382926174;  // std dev = 0.583, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12715040054453572;  // std dev = 0.234, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10241454416376031;  // std dev = 0.219, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2703154472820822;  // std dev = 2.614, 300.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=259 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09489293218059869;  // std dev = 0.300, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.27251114082355987;  // std dev = 0.489, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.14082370596134822;  // std dev = 0.253, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08779649135007397;  // std dev = 0.304, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.222141449695202;  // std dev = 0.431, 259.000 (wgt'ed) examples reached here.  /* #pos=259 */
%   | else if ( movie(D, E) )
%   | | then return -0.11984201622715909;  // std dev = 0.219, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0801183749543361;  // std dev = 0.241, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1744027367644705;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #pos=207 */
%   | | else return -0.08668606201658605;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( movie(E, B) )
%   | | then return 0.14720888556833928;  // std dev = 1.314, 67.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07391201163549352;  // std dev = 0.199, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13401549650343458;  // std dev = 0.088, 288.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=259 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06961714390560218;  // std dev = 0.225, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10408581470307315;  // std dev = 1.755, 305.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=259 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06475418765704165;  // std dev = 0.183, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064818
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.436 seconds
Total inference time: 1.672 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07242
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.764 seconds
Parameter learned model CLL: -0.07242


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 207], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [1.83e-08, 25, 0], 'true,false,true,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.7e-07, 458, 0], 'false,false': [4.362, 30, 52]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.027, 0, 259], 'true,false,true,true': [0.269, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.4, 457, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.035, 0, 259], 'true,false,true': [0.037, 34, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.305, 489, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.583, 0, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.234, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.219, 479, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.614, 41, 259], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.3, 490, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.489, 0, 259], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.253, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.304, 459, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.431, 0, 259], 'true,false,true': [0.219, 43, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.241, 460, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 207], 'true,true,false': [0.0, 30, 0], 'true,false,true': [1.314, 15, 52], 'true,false,false': [0.0, 0, 0], 'false': [0.199, 466, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.088, 29, 259], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.225, 483, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.755, 46, 259], 'true,false': [0.0, 0, 0], 'false': [0.183, 476, 0]}]]
[{'': [0.12117559959367617, 0.08702331961591325], 'true': [5.6294207084375085e-15, 3.2653618371328135e-17], 'false': [1.5901884370176915e-16, 0.23200475907198082], 'true,true': [5.6294207084375085e-15, nan], 'true,true,true': [5.6294207084375085e-15, nan], 'true,false': [3.2653618371328135e-17, nan], 'true,false,true': [1.3322676295501878e-17, -9.25185853854297e-18]}, {'': [0.09186437194857353, 0.000350240317916824], 'true': [0.0007344786697430056, 0.0018492907843065832], 'true,false': [0.0018492907843065832, nan], 'true,false,true': [0.0018492907843065832, nan]}, {'': [0.0520539572168109, 0.0001905699044971634], 'true': [0.0012376918864775474, 0.0013418756266981695], 'true,false': [0.0013418756266981695, nan]}, {'': [0.03968579107126041, 0.00010044262752773871], 'true': [0.0013141457472461762, 0.0012400041967614193], 'true,true': [0.0013141457472461762, nan], 'true,true,true': [0.0013141457472461762, nan], 'true,false': [0.0012400041967614193, nan], 'true,false,true': [0.0012400041967614193, nan]}, {'': [0.0227819159451589, 0.000183452255634348], 'true': [0.0227819159451589, nan], 'true,true': [0.0227819159451589, nan], 'true,true,true': [0.0227819159451589, nan]}, {'': [0.021864145553238033, 0.0002011079672505819], 'true': [0.0009219408523420302, 0.001484417828632904], 'true,false': [0.001484417828632904, nan], 'true,false,true': [0.001484417828632904, nan], 'true,true': [0.0009219408523420302, nan]}, {'': [0.015053822445605613, 0.00012603934797241948], 'true': [0.0007160217809174915, 0.0011135770368182578], 'true,false': [0.0011135770368182578, nan]}, {'': [0.011565022422354588, 8.458921947603888e-05], 'true': [0.0075365292398278366, 0.025788336481819784], 'true,false': [0.025788336481819784, nan], 'true,true': [-9.439577407440945e-17, -4.625929269271485e-18]}, {'': [0.0077926245930787195, 0.00010463640715799839], 'true': [0.0077926245930787195, nan], 'true,true': [0.0077926245930787195, nan]}, {'': [0.010103196405463779, 7.053345963606365e-05], 'true': [0.010103196405463779, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 207.000 (wgt'ed) examples reached here.  /* #pos=207 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048752;  // std dev = 1.69e-07, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 0.6763307532813305;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109552;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.7217199192768826;  // std dev = 0.009, 141.000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(A) )
%   | then return -0.12544463852839227;  // std dev = 0.000, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.24533131042286072;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462839;  // std dev = 3.25e-08, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.5576421142754592;  // std dev = 0.011, 141.000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( actor(B) )
%   | then return -0.11231637819360603;  // std dev = 0.000, 444.000 (wgt'ed) examples reached here.  /* #neg=444 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.20278136945433237;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583112;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.41927002872933683;  // std dev = 0.011, 141.000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783652;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | | else return -0.10159632948783658;  // std dev = 0.000, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.17196251236410195;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601499;  // std dev = 5.27e-09, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.32194642120833605;  // std dev = 0.010, 141.000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926062;  // std dev = 8.69e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | | else return -0.09269127618926057;  // std dev = 9.19e-08, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.1488379454789411;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.2560409045605761;  // std dev = 0.009, 141.000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else return -0.0851847513883968;  // std dev = 3.84e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 5.67e-09, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3.94e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.08518475138839678;  // std dev = 5.67e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839683;  // std dev = 5.02e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.13095030790518142;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253534;  // std dev = 1.54e-08, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.2103873980742678;  // std dev = 0.008, 141.000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( actor(B) )
%   | then return -0.07877675473109172;  // std dev = 2.11e-08, 446.000 (wgt'ed) examples reached here.  /* #neg=446 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.11675419675290111;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527791;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | | else return 0.17578703413188396;  // std dev = 6.66e-08, 132.000 (wgt'ed) examples reached here.  /* #pos=132 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527694;  // std dev = 4.71e-08, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 0.20369840010292362;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.07324622576333696;  // std dev = 6.38e-09, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then return -0.10524237114520772;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367108;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.15308314823653063;  // std dev = 0.005, 141.000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( actor(B) )
%   | then return -0.06842697784420343;  // std dev = 0.000, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
%   | else return -0.0771161485273221;  // std dev = 0.013, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801095;  // std dev = 6.18e-09, 118.000 (wgt'ed) examples reached here.  /* #pos=118 */
%   | | else return 0.13427525410585722;  // std dev = 0.005, 141.000 (wgt'ed) examples reached here.  /* #pos=141 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202625;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | | else return -0.06419184008202625;  // std dev = 2.11e-08, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.08926476288009355;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06367184315922451;  // std dev = 4.56e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.101 seconds
Total inference time: 1.572 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064462
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.426 seconds
Refined model CLL: -0.064462


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.726999999999999 seconds
Total inference time: 1.572 seconds
AUC ROC: 1.0
Total revision time: 13.726999999999999
Best scored revision CLL: -0.064462


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063436, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.726999999999999, 'Inference time': 1.572, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064818, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.436, 'Inference time': 1.672}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995086;  // std dev = 1.08e-06, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048838;  // std dev = 0.000, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
%   | else return 0.4727322684328465;  // std dev = 4.769, 96.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7323869305362845;  // std dev = 0.027, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.15304038773079504;  // std dev = 0.309, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12860654861142262;  // std dev = 0.378, 559.000 (wgt'ed) examples reached here.  /* #neg=559 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5689847309292686;  // std dev = 0.036, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, B) )
%   | | then return -0.13430734177975862;  // std dev = 0.036, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11559610188727229;  // std dev = 0.405, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4284474853096578;  // std dev = 0.663, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12217340981341454;  // std dev = 0.220, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10339317103507914;  // std dev = 0.304, 566.000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2623516553705293;  // std dev = 3.154, 381.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09338307901865972;  // std dev = 0.225, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2738181707609161;  // std dev = 0.559, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13645783943272433;  // std dev = 0.268, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08662869749907769;  // std dev = 0.276, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22306479578633578;  // std dev = 0.493, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( movie(D, E) )
%   | | then return -0.11340388804810703;  // std dev = 0.210, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08032231537716349;  // std dev = 0.263, 549.000 (wgt'ed) examples reached here.  /* #neg=549 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17549065191221827;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | | else return -0.08795353477853303;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( movie(E, B) )
%   | | then return 0.16361336582930897;  // std dev = 1.311, 73.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07461063410314457;  // std dev = 0.268, 644.000 (wgt'ed) examples reached here.  /* #neg=644 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12629309050131887;  // std dev = 0.097, 372.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=324 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07029374194003521;  // std dev = 0.274, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10605953168871035;  // std dev = 1.947, 379.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=324 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06567162749870223;  // std dev = 0.255, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06482
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.872 seconds
Total inference time: 1.662 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.019 seconds
Parameter learned model CLL: -0.072216


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 265], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.79e-08, 30, 0], 'true,false,true,false': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 570, 0], 'false,false': [4.769, 37, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.027, 0, 324], 'true,false,true,true': [0.309, 61, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.378, 559, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.036, 0, 324], 'true,false,true': [0.036, 46, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.405, 622, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.663, 0, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.22, 44, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.304, 566, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [3.154, 57, 324], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.225, 571, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.559, 0, 324], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.268, 55, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.276, 602, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.493, 0, 324], 'true,false,true': [0.21, 52, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.263, 549, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 265], 'true,true,false': [0.0, 35, 0], 'true,false,true': [1.311, 14, 59], 'true,false,false': [0.0, 0, 0], 'false': [0.268, 644, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.097, 48, 324], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.274, 579, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.947, 55, 324], 'true,false': [0.0, 0, 0], 'false': [0.255, 601, 0]}]]
[{'': [0.10750624972589336, 0.0807406505604714], 'true': [4.397321081685148e-15, 3.900783600034334e-17], 'false': [-2.8047739569477637e-16, 0.23687065972222185], 'true,true': [4.397321081685148e-15, nan], 'true,true,true': [4.397321081685148e-15, nan], 'true,false': [3.900783600034334e-17, nan], 'true,false,true': [2.590520390792032e-17, -7.93016446160826e-18]}, {'': [0.10541207397330264, 0.0002561309214648156], 'true': [0.0007490020884324376, 0.001561127016786047], 'true,false': [0.001561127016786047, nan], 'true,false,true': [0.001561127016786047, nan]}, {'': [0.05511639243336615, 0.0002642129233312057], 'true': [0.0012690958537115527, 0.0012621806786128633], 'true,false': [0.0012621806786128633, nan]}, {'': [0.03324024472714062, 0.00016352646308499498], 'true': [0.0013554600498167527, 0.0010950200386179469], 'true,true': [0.0013554600498167527, nan], 'true,true,true': [0.0013554600498167527, nan], 'true,false': [0.0010950200386179469, nan], 'true,false,true': [0.0010950200386179469, nan]}, {'': [0.02611057102484735, 8.901367254772943e-05], 'true': [0.02611057102484735, nan], 'true,true': [0.02611057102484735, nan], 'true,true,true': [0.02611057102484735, nan]}, {'': [0.021897079820706756, 0.00012638210570990244], 'true': [0.0009645699146156762, 0.0013095028246992116], 'true,false': [0.0013095028246992116, nan], 'true,false,true': [0.0013095028246992116, nan], 'true,true': [0.0009645699146156762, nan]}, {'': [0.014255840942947826, 0.0001261852359630311], 'true': [0.0007513936817558734, 0.0008446248707437581], 'true,false': [0.0008446248707437581, nan]}, {'': [0.010414522039391444, 0.00011186847777363514], 'true': [0.0071523481819241305, 0.02353469515028243], 'true,false': [0.02353469515028243, nan], 'true,true': [-1.2736143376831984e-16, -1.2688263138573217e-17]}, {'': [0.009383304093886066, 0.00012970231253764823], 'true': [0.009383304093886066, nan], 'true,true': [0.009383304093886066, nan]}, {'': [0.010006695053943807, 0.0001081693965859179], 'true': [0.010006695053943807, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 1.08e-06, 265.000 (wgt'ed) examples reached here.  /* #pos=265 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048802;  // std dev = 0.000, 528.000 (wgt'ed) examples reached here.  /* #neg=528 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.12544463852839233;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1123163781936057;  // std dev = 0.000, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583116;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( female(B) )
%   | then return -0.10159632948783662;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else return -0.10159632948783659;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.320711847160151;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926193;  // std dev = 0.000, 667.000 (wgt'ed) examples reached here.  /* #neg=667 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694888;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.2551722425694886;  // std dev = 1.05e-08, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else return -0.08518475138839679;  // std dev = 1.05e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839675;  // std dev = 2.11e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.08518475138839675;  // std dev = 5.05e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 4.47e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | | else return -0.08518475138839675;  // std dev = 6.83e-08, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839675;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.08518475138839676;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253479;  // std dev = 1.73e-08, 150.000 (wgt'ed) examples reached here.  /* #pos=150 */
%   | | else return 0.20975771563253492;  // std dev = 1.90e-08, 174.000 (wgt'ed) examples reached here.  /* #pos=174 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.0787767547310923;  // std dev = 0.000, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527725;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #pos=102 */
%   | | | else return 0.17709649774527772;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1770964977452767;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.073246225763337;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else return -0.07324622576333678;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else return -0.07324622576333711;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420276;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.06842697784420286;  // std dev = 0.000, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080115;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06419184008202608;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | | else return -0.06419184008202615;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else return -0.06419184008202604;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.477 seconds
Total inference time: 1.49 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.808 seconds
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.176 seconds
Total inference time: 1.49 seconds
AUC ROC: 1.0
Total revision time: 14.176
Best scored revision CLL: -0.064225


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.176, 'Inference time': 1.49, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06482, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.872, 'Inference time': 1.662}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.722581188579172;  // std dev = 0.014, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1352884943516492;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5586059107354677;  // std dev = 0.017, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, B) )
%   | | then return -0.11504559784689941;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11347043135019227;  // std dev = 0.085, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4200971991531156;  // std dev = 0.114, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1004544629514789;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10149104226585322;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26799778132133956;  // std dev = 0.962, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09339032572266152;  // std dev = 0.073, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.26705944284641725;  // std dev = 0.096, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.12435425774461892;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0850486457976168;  // std dev = 1.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21817136684690142;  // std dev = 0.085, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( movie(D, E) )
%   | | then return -0.11494735155222463;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07967446656625762;  // std dev = 0.063, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.18054464586816446;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.09628925407002979;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(E, B) )
%   | | then return 0.23517295677735772;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07307606548042861;  // std dev = 3.57e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13521596226503016;  // std dev = 0.071, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06827801272153343;  // std dev = 1.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.11325305207466117;  // std dev = 0.515, 45.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06474719405069077;  // std dev = 0.053, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.091366
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.603 seconds
Total inference time: 1.663 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066868
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.41 seconds
Parameter learned model CLL: -0.066868


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [2.6e-07, 0, 38], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [8.16e-08, 88, 0], 'false,false': [0.816, 1, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.014, 0, 40], 'true,false,true,true': [0.018, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 40], 'true,false,true': [0.006, 8, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.085, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.114, 0, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.962, 6, 40], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.073, 93, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.096, 0, 40], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.015, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.83e-08, 66, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.085, 0, 40], 'true,false,true': [0.012, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.063, 63, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 38], 'true,true,false': [0.005, 6, 0], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0], 'false': [3.57e-08, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.071, 4, 40], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 69, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.515, 5, 40], 'true,false': [0.0, 0, 0], 'false': [0.053, 78, 0]}]]
[{'': [0.04750000000000139, 0.02149498852795548], 'true': [1.7763568394002505e-15, 0.0], 'false': [7.569702440626067e-17, 0.22222222222222224], 'true,true': [1.7763568394002505e-15, nan], 'true,true,true': [1.7763568394002505e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.07285576630727957, -2.5953265510717945e-17], 'true': [0.00018350720514144215, 6.460099831272492e-05], 'true,false': [6.460099831272492e-05, nan], 'true,false,true': [6.460099831272492e-05, nan]}, {'': [0.0632897547439663, 9.722422424055641e-05], 'true': [0.000305068406287079, 4.122391961327611e-05], 'true,false': [4.122391961327611e-05, nan]}, {'': [0.012597186775292831, -1.1686558153949016e-17], 'true': [0.0003235207369214566, 0.0], 'true,true': [0.0003235207369214566, nan], 'true,true,true': [0.0003235207369214566, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.020109132799355965, 5.701274758238872e-05], 'true': [0.020109132799355965, nan], 'true,true': [0.020109132799355965, nan], 'true,true,true': [0.020109132799355965, nan]}, {'': [0.012875771631570882, 5.046468293750712e-18], 'true': [0.0002296989753421963, 5.9511820794694303e-05], 'true,true': [0.0002296989753421963, nan], 'true,false': [5.9511820794694303e-05, nan], 'true,false,true': [5.9511820794694303e-05, nan]}, {'': [0.009337876134875063, 6.3823090034315e-05], 'true': [0.0001799658131592996, 3.6906126690675056e-05], 'true,false': [3.6906126690675056e-05, nan]}, {'': [0.008990898962805716, 1.4846005561848022e-17], 'true': [0.009028542857886384, 0.0], 'true,true': [-5.258951169277057e-17, 2.2807248221115805e-05], 'true,false': [0.0, nan]}, {'': [0.00497465729974149, 3.2180377525366857e-18], 'true': [0.00497465729974149, nan], 'true,true': [0.00497465729974149, nan]}, {'': [0.005897116015005036, 3.632069703249719e-05], 'true': [0.005897116015005036, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462842;  // std dev = 1.33e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360624;  // std dev = 6.32e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583102;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.3000416909926791;  // std dev = 0.090, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else return -0.09269127618926107;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.257047731445475;  // std dev = 0.012, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12193411919670838;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839678;  // std dev = 4.71e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21108247684167997;  // std dev = 0.011, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.10960397279570402;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08008426238753054;  // std dev = 0.109, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1780640723136879;  // std dev = 0.009, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1781437098591085;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else return -0.073157520062444;  // std dev = 2.79e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1522047776335959;  // std dev = 1.00e-05, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.15489118826515966;  // std dev = 1.01e-05, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.15314385194140387;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06834932650120872;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return -0.08466875521862922;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1335860374321372;  // std dev = 8.99e-06, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.1356811937231684;  // std dev = 9.09e-06, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.12318698353725048;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06403492244544767;  // std dev = 0.003, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087364
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.505 seconds
Total inference time: 1.552 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065189
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.107 seconds
Refined model CLL: -0.065189


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087364
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.625 seconds
Total inference time: 1.552 seconds
AUC ROC: 1.0
Total revision time: 5.625
Best scored revision CLL: -0.065189


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.087364, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.625, 'Inference time': 1.552, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.091366, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.603, 'Inference time': 1.663}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048804;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.722188996335624;  // std dev = 0.014, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14588493300203134;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839122;  // std dev = 6.66e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5582307989303359;  // std dev = 0.018, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, B) )
%   | | then return -0.11029454417592262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11280682017765535;  // std dev = 0.075, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4198311098568138;  // std dev = 0.169, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11359340000208853;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10155157337941545;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.3076792997377931;  // std dev = 0.719, 84.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=81 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09353356485596498;  // std dev = 0.090, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.25923187904312006;  // std dev = 0.141, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11878938159814402;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08508443531949125;  // std dev = 2.11e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2126745887111931;  // std dev = 0.126, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else if ( movie(D, E) )
%   | | then return -0.11291946163735801;  // std dev = 0.069, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07903831470896416;  // std dev = 0.056, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17682829896801222;  // std dev = 1.17e-07, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else return -0.09659417031322179;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(E, B) )
%   | | then return 0.14125345795789923;  // std dev = 0.351, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07348711008355617;  // std dev = 0.052, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1345113964483023;  // std dev = 0.071, 88.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06861077112318353;  // std dev = 0.049, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.11319228784333174;  // std dev = 0.725, 90.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06407936469509225;  // std dev = 2.79e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088603
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.424 seconds
Total inference time: 1.687 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066646
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.856 seconds
Parameter learned model CLL: -0.066646


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [0.0, 0, 78], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 148, 0], 'false,false': [1.095, 2, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.014, 0, 81], 'true,false,true,true': [0.071, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.66e-08, 141, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.018, 0, 81], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.075, 153, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.169, 0, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.061, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 178, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.719, 3, 81], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 146, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.141, 0, 81], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.11e-08, 156, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.126, 0, 81], 'true,false,true': [0.069, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.056, 161, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [1.17e-07, 0, 78], 'true,true,false': [0.0, 4, 0], 'true,false,true': [0.351, 1, 3], 'true,false,false': [0.0, 0, 0], 'false': [0.052, 155, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.071, 7, 81], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.049, 170, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.725, 9, 81], 'true,false': [0.0, 0, 0], 'false': [2.79e-08, 137, 0]}]]
[{'': [0.056611990129191186, 0.0192233756247597], 'true': [-1.002047447866808e-15, -2.7755575615628915e-18], 'false': [-1.0802169969325848e-16, 0.23999999999999994], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [0.0, 0.0], 'true,true': [-1.002047447866808e-15, nan], 'true,true,true': [-1.002047447866808e-15, nan]}, {'': [0.034034216324491655, 3.1495688641848415e-17], 'true': [0.0001917343255929665, 0.001253416914507345], 'true,false': [0.001253416914507345, nan], 'true,false,true': [0.001253416914507345, nan]}, {'': [0.028999303595104234, 3.656106763718883e-05], 'true': [0.00032490813181911763, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan]}, {'': [0.015955281126975758, -9.979532805619384e-18], 'true': [0.000350939595438048, 0.0007470287614347648], 'true,false': [0.0007470287614347648, nan], 'true,false,true': [0.0007470287614347648, nan], 'true,true': [0.000350939595438048, nan], 'true,true,true': [0.000350939595438048, nan]}, {'': [0.006155549870459774, 5.5726881440380586e-05], 'true': [0.006155549870459774, nan], 'true,true': [0.006155549870459774, nan], 'true,true,true': [0.006155549870459774, nan]}, {'': [0.017242498961274368, 2.846725704167068e-18], 'true': [0.000247037487480693, 4.270088556250602e-18], 'true,true': [0.000247037487480693, nan], 'true,false': [4.270088556250602e-18, nan], 'true,false,true': [4.270088556250602e-18, nan]}, {'': [0.012135026656802453, 1.9343959369808402e-05], 'true': [0.00019499152920030873, 0.0003976795163708584], 'true,false': [0.0003976795163708584, nan]}, {'': [0.004765249994391706, 1.771853564004942e-05], 'true': [0.0034689280447426202, 0.030868358289712662], 'true,false': [0.030868358289712662, nan], 'true,true': [1.764969936583582e-16, 0.0]}, {'': [0.00506198526017596, 1.4355371255016154e-05], 'true': [0.00506198526017596, nan], 'true,true': [0.00506198526017596, nan]}, {'': [0.005833608825448527, 5.67267238859569e-18], 'true': [0.005833608825448527, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048807;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7214550546803087;  // std dev = 0.012, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.7228061745457773;  // std dev = 0.015, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.14179687410730335;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.12544463852839136;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839133;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.12544463852839124;  // std dev = 3.80e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839136;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5574562786205814;  // std dev = 0.015, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.5588823105755026;  // std dev = 0.020, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else if ( female(A) )
%   | | then return -0.11069634355855197;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12305979493874265;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.1167303560500481;  // std dev = 0.018, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4192049922913659;  // std dev = 0.016, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.4203574765285586;  // std dev = 0.021, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.09933471048230452;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.10159632948783641;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.11500053281980427;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10119415369553844;  // std dev = 1.32e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3219551340152166;  // std dev = 0.015, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.32279979143296694;  // std dev = 0.019, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.09703156584384892;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.09120361031155995;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09235443608895352;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2564155436915987;  // std dev = 0.016, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | else return -0.08320865177175871;  // std dev = 0.000427, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1.18e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.0851847513883968;  // std dev = 1.49e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1.49e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.08518475138839679;  // std dev = 2.11e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( female(B) )
%   | | then return -0.08475907956254032;  // std dev = 0.000342, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09652794369228257;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.21038252191086065;  // std dev = 0.012, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.21094399089479854;  // std dev = 0.015, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.07711924777879565;  // std dev = 0.000720, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.07877675473109169;  // std dev = 2.98e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( female(B) )
%   | | then return -0.078313512303376;  // std dev = 0.000789, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08759773609532286;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17580692219534286;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0.17503511327969162;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.07212090165030816;  // std dev = 0.000373, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.14945219151472258;  // std dev = 0.316, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.07115661262921004;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07769600245699339;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15347656048665567;  // std dev = 0.010, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.15404279907231785;  // std dev = 0.013, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.06714552443826448;  // std dev = 0.000896, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420262;  // std dev = 3.48e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420265;  // std dev = 1.83e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.06842697784420267;  // std dev = 2.98e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( female(B) )
%   | | then return -0.06777395898038009;  // std dev = 0.000386, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06626613370690466;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06664557631395372;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13459265390232922;  // std dev = 0.009, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return 0.13504301155351797;  // std dev = 0.012, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.06306001555982504;  // std dev = 0.000845, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else return -0.06280214399682796;  // std dev = 0.000455, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074747
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.849 seconds
Total inference time: 2.038 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063852
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.344 seconds
Refined model CLL: -0.063852


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074747
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.473 seconds
Total inference time: 2.038 seconds
AUC ROC: 1.0
Total revision time: 10.473
Best scored revision CLL: -0.063852


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074747, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.473, 'Inference time': 2.038, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.088603, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.424, 'Inference time': 1.687}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995106;  // std dev = 6.53e-07, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004883;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7206438683591299;  // std dev = 0.007, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12584871145784637;  // std dev = 0.107, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5565673604641074;  // std dev = 0.009, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, B) )
%   | | then return -0.12645240556758433;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11368931425574583;  // std dev = 0.170, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.41845508353222766;  // std dev = 0.106, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11038579373246085;  // std dev = 0.121, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10254946927134308;  // std dev = 0.157, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.29242800857273904;  // std dev = 1.227, 131.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=122 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09246192694165607;  // std dev = 6.99e-08, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2611983611594538;  // std dev = 0.087, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13167281643127532;  // std dev = 0.135, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08534266585503227;  // std dev = 0.079, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2140189591945621;  // std dev = 0.077, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( movie(D, E) )
%   | | then return -0.10495158054871812;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0785840252109175;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17924654279581528;  // std dev = 5.16e-08, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | else return -0.09549358789653582;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(E, B) )
%   | | then return 0.11858682426085466;  // std dev = 0.348, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07307900779778168;  // std dev = 4.47e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.131235809228991;  // std dev = 0.075, 135.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06828058889656097;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.12101811127138964;  // std dev = 0.726, 132.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=122 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06406266529520556;  // std dev = 1.22e-07, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.091651
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.75 seconds
Total inference time: 1.688 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066782
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.362 seconds
Parameter learned model CLL: -0.066782


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [6.53e-07, 0, 119], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 245, 0], 'false,false': [0.866, 1, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.007, 0, 122], 'true,false,true,true': [5.27e-09, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.107, 266, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.009, 0, 122], 'true,false,true': [0.035, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.17, 210, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.106, 0, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.121, 18, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.157, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.227, 9, 122], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.99e-08, 235, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.087, 0, 122], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.135, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.079, 225, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.077, 0, 122], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 243, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [5.16e-08, 0, 119], 'true,true,false': [0.0, 13, 0], 'true,false,true': [0.348, 1, 3], 'true,false,false': [0.0, 0, 0], 'false': [4.47e-08, 244, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.075, 13, 122], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 241, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.726, 10, 122], 'true,false': [0.0, 0, 0], 'false': [1.22e-07, 234, 0]}]]
[{'': [0.05246913580247288, 0.011903033822035078], 'true': [3.582568415597144e-15, -7.93016446160826e-18], 'false': [-1.4863393962328627e-16, 0.18750000000000006], 'true,true': [3.582568415597144e-15, nan], 'true,true,true': [3.582568415597144e-15, nan], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-2.7755575615628915e-18, 0.0]}, {'': [0.0501739757434648, 4.3267857064174986e-05], 'true': [5.434204792581408e-05, 2.7755575615628915e-18], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [2.7755575615628915e-18, nan]}, {'': [0.043282507115649724, 0.00013780545939976886], 'true': [8.80602416951557e-05, 0.0011989636195071374], 'true,false': [0.0011989636195071374, nan]}, {'': [0.031518771040101715, 0.00010074108087247849], 'true': [9.141646096958754e-05, 0.0008116382147271438], 'true,false': [0.0008116382147271438, nan], 'true,false,true': [0.0008116382147271438, nan], 'true,true': [9.141646096958754e-05, nan], 'true,true,true': [9.141646096958754e-05, nan]}, {'': [0.011484636712596792, 2.078715450361995e-17], 'true': [0.011484636712596792, nan], 'true,true': [0.011484636712596792, nan], 'true,true,true': [0.011484636712596792, nan]}, {'': [0.015237839581557416, 2.7848481600622044e-05], 'true': [6.20992280697565e-05, 0.0012188222949401177], 'true,false': [0.0012188222949401177, nan], 'true,false,true': [0.0012188222949401177, nan], 'true,true': [6.20992280697565e-05, nan]}, {'': [0.008339302254587594, -1.5533984706689433e-17], 'true': [4.831923386737423e-05, -4.625929269271485e-18], 'true,false': [-4.625929269271485e-18, nan]}, {'': [0.00742663727053325, 8.190169853792138e-18], 'true': [0.006701725761689551, 0.030252832726813266], 'true,false': [0.030252832726813266, nan], 'true,true': [2.239105259748215e-17, -1.0675221390626506e-18]}, {'': [0.0056481884504687805, -3.501118251929954e-17], 'true': [0.0056481884504687805, nan], 'true,true': [0.0056481884504687805, nan]}, {'': [0.003992129023997573, 6.357687405973118e-17], 'true': [0.003992129023997573, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995106;  // std dev = 6.53e-07, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004885;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7209110743946037;  // std dev = 0.010, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return 0.7215387860522524;  // std dev = 0.012, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( female(A) )
%   | | then return -0.139071501510818;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283918;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5568823981985571;  // std dev = 0.013, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return 0.5575446256285844;  // std dev = 0.016, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( female(A) )
%   | | then return -0.14069419738395184;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11913798033537999;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then return -0.11231637819360658;  // std dev = 0.000, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360629;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.11231637819360629;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12303603870210769;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4187408124499883;  // std dev = 0.014, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return 0.41927643174831014;  // std dev = 0.016, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else return -0.10828221488873332;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.10159632948783655;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783623;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.10159632948783621;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10749358387295338;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3216143650372269;  // std dev = 0.013, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return 0.32200755090757394;  // std dev = 0.015, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( female(A) )
%   | | then return -0.09641728617102216;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10216072209156084;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926089;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926079;  // std dev = 1.83e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.09269127618926092;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926087;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10127773849573758;  // std dev = 0.023, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25583241801424456;  // std dev = 0.011, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return 0.25611944324420644;  // std dev = 0.014, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( female(A) )
%   | | then return -0.08118783688689955;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08341118006629666;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.08518475138839678;  // std dev = 5.59e-09, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0944310709114629;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08324111788557641;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.21025207022566791;  // std dev = 0.010, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return 0.21046659004396603;  // std dev = 0.012, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( female(A) )
%   | | then return -0.07533378610331569;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07725168408731624;  // std dev = 9.31e-10, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109164;  // std dev = 3.23e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109168;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.0787767547310916;  // std dev = 4.01e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( female(B) )
%   | | then return -0.0787767547310917;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07715360839717418;  // std dev = 0.000128, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1761892581798284;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | | else return 0.17579476516273101;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | else if ( female(A) )
%   | | | then return -0.07025114542010753;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07192160602216703;  // std dev = 3.23e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.09598052866889265;  // std dev = 0.399, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( actor(A) )
%   | then return -0.07324622576333663;  // std dev = 8.64e-09, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333699;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07192281106809574;  // std dev = 0.000578, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.12352140839950042;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15366491391010434;  // std dev = 0.011, 122.000 (wgt'ed) examples reached here.  /* #pos=122 */
%   | else if ( female(A) )
%   | | then return -0.06579887365506182;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06726625467084825;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420264;  // std dev = 9.13e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06842697784420262;  // std dev = 1.58e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420262;  // std dev = 2.11e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.06842697784420262;  // std dev = 7.45e-09, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420268;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07030743576591053;  // std dev = 0.011, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1345733997367791;  // std dev = 0.009, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return 0.13486364357352595;  // std dev = 0.011, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( female(A) )
%   | | then return -0.06186798107628314;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06316674432589899;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202615;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06319197426901467;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07658790051515478;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073856
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.624 seconds
Total inference time: 1.841 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063799
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.454 seconds
Refined model CLL: -0.063799


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073856
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.190000000000001 seconds
Total inference time: 1.841 seconds
AUC ROC: 1.0
Total revision time: 12.190000000000001
Best scored revision CLL: -0.063799


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073856, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.190000000000001, 'Inference time': 1.841, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.091651, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.75, 'Inference time': 1.688}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995097;  // std dev = 9.83e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048788;  // std dev = 5.96e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7204666409014854;  // std dev = 0.006, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839197;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.556369390556487;  // std dev = 0.007, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, B) )
%   | | then return -0.12740601720984973;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11387201108187946;  // std dev = 0.225, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4182856022015156;  // std dev = 0.090, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10022728634657406;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1021281913083829;  // std dev = 0.148, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2791334745773895;  // std dev = 1.712, 181.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09251586791734835;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2636466314226847;  // std dev = 0.074, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.1248704004564769;  // std dev = 0.113, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08560727080512892;  // std dev = 0.128, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2157336336235717;  // std dev = 0.065, 163.000 (wgt'ed) examples reached here.  /* #pos=163 */
%   | else if ( movie(D, E) )
%   | | then return -0.1052066832931232;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07889150085062578;  // std dev = 0.085, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.18067450927355722;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | | else return -0.09570607963845716;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( movie(E, B) )
%   | | then return 0.13958579433747545;  // std dev = 0.367, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07361308851858284;  // std dev = 0.113, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14148402430642734;  // std dev = 0.061, 173.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=163 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06824767704754565;  // std dev = 9.54e-08, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.11850099078193548;  // std dev = 0.885, 178.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=163 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06470212489466043;  // std dev = 0.124, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094367
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.018 seconds
Total inference time: 1.82 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066846
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.452 seconds
Parameter learned model CLL: -0.066846


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [9.83e-07, 0, 158], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 15, 0], 'true,false,true,false': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [5.96e-08, 293, 0], 'false,false': [0.913, 1, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.006, 0, 163], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 287, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.007, 0, 163], 'true,false,true': [0.038, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.225, 291, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.09, 0, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 12, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.148, 311, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.712, 18, 163], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 282, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.074, 0, 163], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.113, 16, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.128, 319, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.065, 0, 163], 'true,false,true': [5.27e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.085, 301, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 158], 'true,true,false': [0.0, 15, 0], 'true,false,true': [0.367, 1, 5], 'true,false,false': [0.0, 0, 0], 'false': [0.113, 302, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.061, 10, 163], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.54e-08, 329, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.885, 15, 163], 'true,false': [0.0, 0, 0], 'false': [0.124, 323, 0]}]]
[{'': [0.09973488195935447, 0.016442769096542485], 'true': [6.1160640546439006e-15, 2.7755575615628915e-18], 'false': [1.2125302658022188e-17, 0.1388888888888887], 'true,true': [6.1160640546439006e-15, nan], 'true,true,true': [6.1160640546439006e-15, nan], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [-1.4802973661668754e-17, -2.7755575615628915e-18]}, {'': [0.06693129944157059, -8.046215648851309e-17], 'true': [3.117350211886001e-05, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036249748540978406, 0.00017363454676052538], 'true': [4.9235250500775436e-05, 0.0014800318366634813], 'true,false': [0.0014800318366634813, nan]}, {'': [0.017218179087014025, 7.013639228758223e-05], 'true': [4.9961452929170174e-05, -3.469446951953614e-18], 'true,true': [4.9961452929170174e-05, nan], 'true,true,true': [4.9961452929170174e-05, nan], 'true,false': [-3.469446951953614e-18, nan], 'true,false,true': [-3.469446951953614e-18, nan]}, {'': [0.01619443562658959, -3.622004193812568e-17], 'true': [0.01619443562658959, nan], 'true,true': [0.01619443562658959, nan], 'true,true,true': [0.01619443562658959, nan]}, {'': [0.012388507385878324, 5.1751184285677545e-05], 'true': [3.3416186486705235e-05, 0.0008028486902317677], 'true,false': [0.0008028486902317677, nan], 'true,false,true': [0.0008028486902317677, nan], 'true,true': [3.3416186486705235e-05, nan]}, {'': [0.0051320871293706145, 2.4197519962409303e-05], 'true': [2.5778419644785e-05, 3.0839528461809902e-18], 'true,false': [3.0839528461809902e-18, nan]}, {'': [0.006609806890104346, 4.260600334414196e-05], 'true': [0.006048827723205446, 0.02250126805991128], 'true,false': [0.02250126805991128, nan], 'true,true': [-3.4852570899625166e-16, 0.0]}, {'': [0.0037157701423444394, 2.7671212163909677e-17], 'true': [0.0037157701423444394, nan], 'true,true': [0.0037157701423444394, nan]}, {'': [0.004402371172005343, 4.766930609029717e-05], 'true': [0.004402371172005343, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995097;  // std dev = 9.83e-07, 158.000 (wgt'ed) examples reached here.  /* #pos=158 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 1.79e-07, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
%   | else if ( actor(A) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7209019087688037;  // std dev = 0.007, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.7201550807438227;  // std dev = 0.005, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else return -0.12544463852839138;  // std dev = 1.86e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.1254446385283922;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5568090297067575;  // std dev = 0.008, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.5560547423740526;  // std dev = 0.006, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( female(A) )
%   | | then return -0.15004047573421483;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.13495083671797145;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360688;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.418623753743339;  // std dev = 0.008, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.4180434916078252;  // std dev = 0.006, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( female(A) )
%   | | then return -0.09820446082388412;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10987358645423886;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10159632948783662;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3214903079828302;  // std dev = 0.008, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.321083684253104;  // std dev = 0.005, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( female(A) )
%   | | then return -0.10889408537729443;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09967279916008047;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(A) )
%   | then return -0.09269127618926072;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926085;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926072;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | | else return -0.09269127618926086;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25571894482109014;  // std dev = 0.007, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.25543357255368676;  // std dev = 0.005, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( female(A) )
%   | | then return -0.10330347646965812;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08227783610981486;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 4.08e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | | else return -0.08518475138839678;  // std dev = 6.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2101534094680353;  // std dev = 0.006, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.20994699029824848;  // std dev = 0.004, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( female(A) )
%   | | then return -0.07393636225681005;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07627488838351963;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109169;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07877675473109162;  // std dev = 3.16e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( female(A) )
%   | | | then return -0.0787767547310916;  // std dev = 3.87e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.07877675473109154;  // std dev = 5.67e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return -0.07877675473109165;  // std dev = 2.46e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17626703887538223;  // std dev = 6.99e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0.17670011318827314;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else if ( female(A) )
%   | | | then return -0.06903072597383351;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07107148075847468;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.2019764388915896;  // std dev = 0.000526, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | | else return -0.07324622576333699;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15295629255249932;  // std dev = 0.004, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.15284685724344896;  // std dev = 0.003, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( female(A) )
%   | | then return -0.07672548033242424;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.0942045062690305;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.06842697784420315;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13417485412144636;  // std dev = 0.004, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.13408842214872999;  // std dev = 0.002, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | else if ( female(A) )
%   | | then return -0.060231914717273835;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06090384094849079;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(B) )
%   | then return -0.06419184008202622;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072509
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.379 seconds
Total inference time: 1.831 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063761
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.799 seconds
Refined model CLL: -0.063761


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072509
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.648 seconds
Total inference time: 1.831 seconds
AUC ROC: 1.0
Total revision time: 12.648
Best scored revision CLL: -0.063761


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072509, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.648, 'Inference time': 1.831, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094367, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.018, 'Inference time': 1.82}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004872;  // std dev = 2.98e-07, 435.000 (wgt'ed) examples reached here.  /* #neg=435 */
%   | else return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.72252025178764;  // std dev = 0.013, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839224;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5585423488249555;  // std dev = 0.017, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, B) )
%   | | then return -0.11841637344984678;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11251874770447665;  // std dev = 0.085, 422.000 (wgt'ed) examples reached here.  /* #neg=422 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42004657778266064;  // std dev = 0.255, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10627832183435068;  // std dev = 0.076, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10179762275148485;  // std dev = 0.079, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2931723685468229;  // std dev = 1.624, 219.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=204 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09324644225498308;  // std dev = 0.126, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.262132829902921;  // std dev = 0.212, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11932707713940567;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08528789537569897;  // std dev = 0.068, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21471068772303237;  // std dev = 0.188, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else if ( movie(D, E) )
%   | | then return -0.1128409120343801;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07917575234571798;  // std dev = 0.110, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17809993313217376;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else return -0.09700223846129756;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( movie(E, B) )
%   | | then return 0.2321981364057642;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07331219106626925;  // std dev = 0.060, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14624121490527997;  // std dev = 0.047, 212.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=204 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06862406629693459;  // std dev = 0.080, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.11727571944841057;  // std dev = 1.015, 222.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=204 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06408835357689109;  // std dev = 0.000, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.091932
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.097 seconds
Total inference time: 1.747 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066815
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.499 seconds
Parameter learned model CLL: -0.066815


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.09e-06, 0, 194], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 20, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.98e-07, 435, 0], 'false,false': [1.826, 5, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.013, 0, 204], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 392, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 204], 'true,false,true': [0.022, 14, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.085, 422, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.255, 0, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.076, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.079, 359, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.624, 15, 204], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.126, 373, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.212, 0, 204], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.068, 384, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.188, 0, 204], 'true,false,true': [0.08, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.11, 403, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 194], 'true,true,false': [0.0, 19, 0], 'true,false,true': [0.0, 0, 10], 'true,false,false': [0.0, 0, 0], 'false': [0.06, 364, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.047, 8, 204], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.08, 385, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.015, 18, 204], 'true,false': [0.0, 0, 0], 'false': [0.0, 400, 0]}]]
[{'': [0.09475673724224923, 0.021728395061727954], 'true': [6.15315358802561e-15, 9.654113257610057e-18], 'false': [2.0417894705750005e-16, 0.22222222222222215], 'true,true': [6.15315358802561e-15, nan], 'true,true,true': [6.15315358802561e-15, nan], 'true,false': [9.654113257610057e-18, nan], 'true,false,true': [2.7755575615628915e-18, 0.0]}, {'': [0.05620883540777561, -1.2461687011098695e-16], 'true': [0.00018009468927395047, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.027851585521690016, 1.7241389369506215e-05], 'true': [0.0002993884187081396, 0.00048372924764003767], 'true,false': [0.00048372924764003767, nan]}, {'': [0.017996318614123392, 1.7289880550725214e-05], 'true': [0.0003175112767568671, 0.0003840272096225968], 'true,false': [0.0003840272096225968, nan], 'true,false,true': [0.0003840272096225968, nan], 'true,true': [0.0003175112767568671, nan], 'true,true,true': [0.0003175112767568671, nan]}, {'': [0.012045813534993259, 4.2802668613450834e-05], 'true': [0.012045813534993259, nan], 'true,true': [0.012045813534993259, nan], 'true,true,true': [0.012045813534993259, nan]}, {'': [0.009489653580578981, 1.2112374010800805e-05], 'true': [0.00022087012478933183, -1.8503717077085942e-18], 'true,true': [0.00022087012478933183, nan], 'true,false': [-1.8503717077085942e-18, nan], 'true,false,true': [-1.8503717077085942e-18, nan]}, {'': [0.007035434197375027, 3.0214138758789414e-05], 'true': [0.00017302621932409798, 0.00042276579136733366], 'true,false': [0.00042276579136733366, nan]}, {'': [0.006137855249515095, 9.891774274382672e-06], 'true': [0.006148712137136022, -3.3306690738754695e-17], 'true,true': [-1.2819069975053353e-16, -8.764918615461762e-18], 'true,false': [-3.3306690738754695e-17, nan]}, {'': [0.0022383813022336073, 1.6592879210262723e-05], 'true': [0.0022383813022336073, nan], 'true,true': [0.0022383813022336073, nan]}, {'': [0.004639207516983983, -6.050715484207104e-17], 'true': [0.004639207516983983, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995093;  // std dev = 1.09e-06, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048752;  // std dev = 2.37e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
%   | else if ( female(A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109542;  // std dev = 2.79e-08, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.720726938143017;  // std dev = 0.007, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.14759920270848484;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.13603882278745993;  // std dev = 0.034, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then return -0.12544463852839222;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
%   | else if ( female(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1322996989313181;  // std dev = 0.113, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5561346005908864;  // std dev = 0.007, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.11117691357471918;  // std dev = 0.000303, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then return -0.11231637819360665;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360642;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11186194820812449;  // std dev = 0.001, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.2188407869892945;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41732678163628695;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.4186244891631594;  // std dev = 0.009, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return -0.10980057260295978;  // std dev = 0.029, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.1015963294878364;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else return -0.10159632948783659;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.101273691287414;  // std dev = 0.001, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.18347313652424413;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3205852074517776;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.3214929218516938;  // std dev = 0.008, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.11845199658319136;  // std dev = 0.051, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11152296444290334;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926067;  // std dev = 6.04e-09, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else return -0.09269127618926051;  // std dev = 6.72e-09, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926098;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.10370991211031345;  // std dev = 0.060, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10152178145749068;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2550858280882172;  // std dev = 8.33e-09, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.25572211108362997;  // std dev = 0.007, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.08099681535668081;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0823838050239556;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 5.19e-09, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else return -0.08518475138839678;  // std dev = 5.67e-09, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08405780449774328;  // std dev = 0.000346, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.14484096995717755;  // std dev = 0.000578, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20969667178331217;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.21015653955889593;  // std dev = 0.006, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.08839223958581867;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08101600431007693;  // std dev = 0.019, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109153;  // std dev = 6.32e-09, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else return -0.07877675473109146;  // std dev = 4.17e-09, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.08850298604901681;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08110001550114707;  // std dev = 0.048, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17664520869989986;  // std dev = 0.000323, 194.000 (wgt'ed) examples reached here.  /* #pos=194 */
%   | | else if ( female(A) )
%   | | | then return -0.06924992022949274;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0708444096293359;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.12772666140389813;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.20734458289666413;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( actor(A) )
%   | then return -0.0732462257633371;  // std dev = 3.84e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.073058370288329;  // std dev = 0.000786, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07206901062068648;  // std dev = 0.000317, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.1186958109283258;  // std dev = 0.000234, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15323949312173757;  // std dev = 0.002, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.1529267482941101;  // std dev = 0.004, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else if ( female(A) )
%   | | then return -0.06491742728836555;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0788385024264294;  // std dev = 0.034, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then return -0.06842697784420321;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.0681539537526668;  // std dev = 0.001, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06742420764613265;  // std dev = 0.000281, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.10672159735058752;  // std dev = 0.000226, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1343942164022843;  // std dev = 0.002, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.13415199192268396;  // std dev = 0.004, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | else return -0.06650641816396895;  // std dev = 0.022, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.06334465938743153;  // std dev = 0.000507, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.06421953125407279;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0689913623282853;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075587
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.98 seconds
Total inference time: 1.929 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063888
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.9 seconds
Refined model CLL: -0.063888


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075587
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.476 seconds
Total inference time: 1.929 seconds
AUC ROC: 1.0
Total revision time: 14.476
Best scored revision CLL: -0.063888


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075587, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.476, 'Inference time': 1.929, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.091932, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.097, 'Inference time': 1.747}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7244723115417526;  // std dev = 0.011, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.17313392402727804;  // std dev = 0.174, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1272877027022614;  // std dev = 0.179, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5603942351070098;  // std dev = 0.013, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B) )
%   | | then return -0.10764886835913187;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11521736742764412;  // std dev = 0.200, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4213547152397728;  // std dev = 0.110, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1279114444921639;  // std dev = 0.179, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10870894011763445;  // std dev = 0.296, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.263824414123838;  // std dev = 1.365, 77.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09251583915267905;  // std dev = 0.100, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.26856358204222175;  // std dev = 0.090, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11039419601012915;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08585773498657825;  // std dev = 0.132, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21920057272406177;  // std dev = 0.079, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.14778975311663808;  // std dev = 0.160, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07875720874321332;  // std dev = 0.088, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1800573827243136;  // std dev = 4.21e-08, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else return -0.08747161614188224;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( movie(E, B) )
%   | | then return 0.10552492614655148;  // std dev = 0.669, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07570544894632622;  // std dev = 0.182, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11378400831227078;  // std dev = 0.109, 80.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06887413726581182;  // std dev = 0.110, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10922523134695115;  // std dev = 0.818, 78.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06720920003929355;  // std dev = 0.191, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0662
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.873 seconds
Total inference time: 1.347 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072953
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.648 seconds
Parameter learned model CLL: -0.072953


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [0.0, 0, 55], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [6.32e-08, 116, 0], 'false,false': [1.309, 2, 12]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.011, 0, 67], 'true,false,true,true': [0.174, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.179, 138, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.013, 0, 67], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.2, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.11, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.179, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.296, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.365, 10, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.1, 123, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.09, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.132, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.079, 0, 67], 'true,false,true': [0.16, 9, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.088, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [4.21e-08, 0, 55], 'true,true,false': [0.0, 10, 0], 'true,false,true': [0.669, 4, 12], 'true,false,false': [0.0, 0, 0], 'false': [0.182, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.109, 13, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.11, 113, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.818, 11, 67], 'true,false': [0.0, 0, 0], 'false': [0.191, 132, 0]}]]
[{'': [0.12084960937499978, 0.08378698224852016], 'true': [-1.291895883200182e-16, -9.25185853854297e-18], 'false': [3.4455197315953135e-17, 0.1224489795918365], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-6.938893903907228e-18, 0.0], 'true,true': [-1.291895883200182e-16, nan], 'true,true,true': [-1.291895883200182e-16, nan]}, {'': [0.07728059789269139, 0.00023098821733220096], 'true': [0.00011453289154724783, 0.0037904465856571992], 'true,false': [0.0037904465856571992, nan], 'true,false,true': [0.0037904465856571992, nan]}, {'': [0.03838518859400651, 0.0003520492272571902], 'true': [0.00017975553190599224, -3.96508223080413e-18], 'true,false': [-3.96508223080413e-18, nan]}, {'': [0.04367473310002073, 0.0007613594273086466], 'true': [0.00018061822320964617, 0.002276349230388854], 'true,false': [0.002276349230388854, nan], 'true,false,true': [0.002276349230388854, nan], 'true,true': [0.00018061822320964617, nan], 'true,true,true': [0.00018061822320964617, nan]}, {'': [0.02419680487092244, 8.141367818102345e-05], 'true': [0.02419680487092244, nan], 'true,true': [0.02419680487092244, nan], 'true,true,true': [0.02419680487092244, nan]}, {'': [0.0163333001298777, 0.00014583279846987267], 'true': [0.00012058695754474132, -4.163336342344337e-18], 'true,true': [0.00012058695754474132, nan], 'true,false': [-4.163336342344337e-18, nan], 'true,false,true': [-4.163336342344337e-18, nan]}, {'': [0.014479825237797603, 7.610092567457579e-05], 'true': [9.23782109803459e-05, 0.0028536483465311235], 'true,false': [0.0028536483465311235, nan]}, {'': [0.013182346314790587, 0.0002622809727699634], 'true': [0.009317034527548371, 0.02799135818310832], 'true,false': [0.02799135818310832, nan], 'true,true': [3.229739708000455e-17, -2.7755575615628915e-18]}, {'': [0.011904637428582268, 0.00010633731279865483], 'true': [0.011904637428582268, nan], 'true,true': [0.011904637428582268, nan]}, {'': [0.00857962955210224, 0.00027535984977345644], 'true': [0.00857962955210224, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7222066067495401;  // std dev = 0.006, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.12544463852839124;  // std dev = 4.34e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.12544463852839124;  // std dev = 4.34e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.17205184289068629;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5580786017751171;  // std dev = 0.007, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.15789621135460546;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4228617111970126;  // std dev = 0.009, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.41671218121936265;  // std dev = 0.003, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.10159632948783641;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else return -0.1059960461017531;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3243692337323758;  // std dev = 0.008, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.32017200551286806;  // std dev = 0.003, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926104;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.09269127618926105;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.10228080889524428;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2576837492636042;  // std dev = 0.007, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.2548058914060116;  // std dev = 0.002, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1.18e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08518475138839682;  // std dev = 1.75e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.08518475138839679;  // std dev = 2.24e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839683;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08386509036739849;  // std dev = 0.003, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.21154079165106246;  // std dev = 0.006, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.20950014263712746;  // std dev = 0.002, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.09969339988527703;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07759514920770377;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17438117535459613;  // std dev = 2.36e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.17658988777614845;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.1489031701781855;  // std dev = 0.091, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( female(B) )
%   | | | then return -0.07221086208231466;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07308527106826565;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.10787736042138119;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15549914298443307;  // std dev = 0.006, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.1527485053578422;  // std dev = 0.002, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( female(A) )
%   | | then return -0.07154529969948518;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.06842697784420268;  // std dev = 2.24e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.06837953413645767;  // std dev = 0.000504, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.09808827003278259;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13615995357209892;  // std dev = 0.006, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.13401134725280162;  // std dev = 0.002, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.06701734044358085;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return -0.06405306795395507;  // std dev = 0.000550, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07234118687439531;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063865
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.48 seconds
Total inference time: 1.614 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064808
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.809 seconds
Refined model CLL: -0.064808


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063865
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.809999999999999 seconds
Total inference time: 1.614 seconds
AUC ROC: 1.0
Total revision time: 8.809999999999999
Best scored revision CLL: -0.064808


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063865, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.809999999999999, 'Inference time': 1.614, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0662, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.873, 'Inference time': 1.347}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.858148935099511;  // std dev = 5.46e-07, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004882;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
%   | else return 0.5854216623722389;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7287214035411653;  // std dev = 0.020, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1599270821951637;  // std dev = 0.189, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12785975131439148;  // std dev = 0.250, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5649111830740052;  // std dev = 0.025, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B) )
%   | | then return -0.13752989587456416;  // std dev = 0.043, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11282410937304868;  // std dev = 0.134, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42500353329759744;  // std dev = 0.299, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12037905138091942;  // std dev = 0.175, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10437127625219209;  // std dev = 0.259, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25780926876437227;  // std dev = 2.018, 159.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0945319135503027;  // std dev = 0.213, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.27223257964620706;  // std dev = 0.249, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.1295727519612852;  // std dev = 0.201, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08608248104509024;  // std dev = 0.168, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2218430979578315;  // std dev = 0.219, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.13016047421381005;  // std dev = 0.199, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07995201341008504;  // std dev = 0.172, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17818836380158978;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | else return -0.08614727836369583;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( movie(E, B) )
%   | | then return 0.13475794914801653;  // std dev = 0.896, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07379383455480347;  // std dev = 0.148, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11242273737054781;  // std dev = 0.111, 162.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06901284219328661;  // std dev = 0.140, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.11117177909804382;  // std dev = 1.245, 152.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06591418307582858;  // std dev = 0.185, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066267
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.87 seconds
Total inference time: 1.462 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07138
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.138 seconds
Parameter learned model CLL: -0.07138


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [5.46e-07, 0, 110], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 254, 0], 'false,false': [2.558, 9, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.02, 0, 134], 'true,false,true,true': [0.189, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.25, 257, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.025, 0, 134], 'true,false,true': [0.043, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.134, 254, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.299, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.175, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.259, 260, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.018, 25, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.213, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.249, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.201, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.168, 256, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.219, 0, 134], 'true,false,true': [0.199, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.172, 239, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 110], 'true,true,false': [0.0, 17, 0], 'true,false,true': [0.896, 7, 24], 'true,false,false': [0.0, 0, 0], 'false': [0.148, 279, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.111, 28, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.14, 256, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.245, 18, 134], 'true,false': [0.0, 0, 0], 'false': [0.185, 252, 0]}]]
[{'': [0.1056000000000032, 0.0766307712853147], 'true': [2.7129813547203826e-15, -1.4802973661668754e-17], 'false': [-1.1189649382048822e-16, 0.1983471074380176], 'true,true': [2.7129813547203826e-15, nan], 'true,true,true': [2.7129813547203826e-15, nan], 'true,false': [-1.4802973661668754e-17, nan], 'true,false,true': [-1.2810265668751807e-17, 0.0]}, {'': [0.07208822679882697, 0.00024400420200723584], 'true': [0.0003919911583647197, 0.002378077842464232], 'true,false': [0.002378077842464232, nan], 'true,false,true': [0.002378077842464232, nan]}, {'': [0.0679881965153069, 7.055330426671232e-05], 'true': [0.0006413835060700162, 0.001841154098926654], 'true,false': [0.001841154098926654, nan]}, {'': [0.03561122108768893, 0.0002579783595874211], 'true': [0.000665849484013174, 0.0014524252779256539], 'true,false': [0.0014524252779256539, nan], 'true,false,true': [0.0014524252779256539, nan], 'true,true': [0.000665849484013174, nan], 'true,true,true': [0.000665849484013174, nan]}, {'': [0.02561287841621242, 0.00018356597136921343], 'true': [0.02561287841621242, nan], 'true,true': [0.02561287841621242, nan], 'true,true,true': [0.02561287841621242, nan]}, {'': [0.02316939804848922, 0.0001104568087106671], 'true': [0.0004618426966513237, 0.0014936804248078055], 'true,false': [0.0014936804248078055, nan], 'true,false,true': [0.0014936804248078055, nan], 'true,true': [0.0004618426966513237, nan]}, {'': [0.016048525574210878, 0.00012377436649918598], 'true': [0.0003569363257519338, 0.0017144840147871392], 'true,false': [0.0017144840147871392, nan]}, {'': [0.01160357946629829, 7.856691204988896e-05], 'true': [0.00810113028175381, 0.02590027487887291], 'true,false': [0.02590027487887291, nan], 'true,true': [-2.0185873175002847e-17, 0.0]}, {'': [0.012352044540596067, 7.602370263238515e-05], 'true': [0.012352044540596067, nan], 'true,true': [0.012352044540596067, nan]}, {'': [0.010205103873009637, 0.00013533170547762473], 'true': [0.010205103873009637, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099511;  // std dev = 5.46e-07, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048807;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109542;  // std dev = 1.83e-08, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.7228061745457767;  // std dev = 0.015, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then return -0.1254446385283918;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.20720581642295116;  // std dev = 4.56e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462837;  // std dev = 3.65e-08, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.5588823105755026;  // std dev = 0.020, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( actor(A) )
%   | then return -0.1123163781936067;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360629;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360629;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.12489760766373022;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.4203574765285591;  // std dev = 0.021, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A) )
%   | then return -0.10159632948783653;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.11481470827456894;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.32279979143296755;  // std dev = 0.019, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926094;  // std dev = 2.28e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.09269127618926074;  // std dev = 6.66e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.09712915423774146;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.25669669677178447;  // std dev = 0.017, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08518475138839687;  // std dev = 1.61e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3.33e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.08518475138839678;  // std dev = 3.49e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839682;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.08285775987788603;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253592;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.2108972634462057;  // std dev = 0.015, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109155;  // std dev = 5.16e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.07877675473109153;  // std dev = 6.23e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.12252255547770288;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07677492736869533;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1770964977452775;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.17500126530767157;  // std dev = 4.71e-08, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527714;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.24038158044181834;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07324622576333704;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333666;  // std dev = 8.43e-09, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else return -0.073246225763337;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07791359957589856;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367094;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.1533389279092347;  // std dev = 0.010, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420261;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | | else return -0.06842697784420261;  // std dev = 2.98e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else return -0.06842697784420268;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.07251143217047275;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 6.45e-09, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | else return 0.13448458316621345;  // std dev = 0.009, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202618;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202623;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202615;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06419184008202615;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.06553358263908923;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063873
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.399 seconds
Total inference time: 1.338 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064294
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.067 seconds
Refined model CLL: -0.064294


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063873
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.474 seconds
Total inference time: 1.338 seconds
AUC ROC: 1.0
Total revision time: 12.474
Best scored revision CLL: -0.064294


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063873, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.474, 'Inference time': 1.338, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066267, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.87, 'Inference time': 1.462}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995096;  // std dev = 1.04e-06, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048757;  // std dev = 2.17e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | else return 0.48972788246793225;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7316074216549815;  // std dev = 0.026, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.15070173744524945;  // std dev = 0.220, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1274574150487588;  // std dev = 0.258, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5681211723564689;  // std dev = 0.034, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B) )
%   | | then return -0.12664325842804566;  // std dev = 0.032, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1154217143582981;  // std dev = 0.303, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42772021815150274;  // std dev = 0.496, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12193305359045412;  // std dev = 0.194, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10251322001519325;  // std dev = 0.193, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25025653308011486;  // std dev = 2.663, 246.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09427344481981413;  // std dev = 0.223, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2756950625358381;  // std dev = 0.419, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.14200456658181923;  // std dev = 0.201, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08667113131046797;  // std dev = 0.225, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22435384890845503;  // std dev = 0.370, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.12758758110865825;  // std dev = 0.193, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07989510233192813;  // std dev = 0.185, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17713161955642395;  // std dev = 1.86e-07, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | | else return -0.08623756650883953;  // std dev = 1.86e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( movie(E, B) )
%   | | then return 0.20746112734703012;  // std dev = 0.646, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07440166451581252;  // std dev = 0.190, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12872676523429102;  // std dev = 0.093, 229.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06952455959663105;  // std dev = 0.179, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10859382100185523;  // std dev = 1.443, 234.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06506926386725705;  // std dev = 0.176, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066158
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.905 seconds
Total inference time: 1.171 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071373
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.57 seconds
Parameter learned model CLL: -0.071373


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.04e-06, 0, 166], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.17e-07, 345, 0], 'false,false': [3.642, 21, 36]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.026, 0, 202], 'true,false,true,true': [0.22, 31, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.258, 389, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.034, 0, 202], 'true,false,true': [0.032, 28, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.303, 362, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.496, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.194, 33, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.193, 372, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.663, 44, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.223, 359, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.419, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.201, 27, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.225, 397, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.37, 0, 202], 'true,false,true': [0.193, 30, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.185, 334, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [1.86e-07, 0, 166], 'true,true,false': [1.86e-09, 17, 0], 'true,false,true': [0.646, 3, 36], 'true,false,false': [0.0, 0, 0], 'false': [0.19, 362, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.093, 27, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.179, 346, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.443, 32, 202], 'true,false': [0.0, 0, 0], 'false': [0.176, 397, 0]}]]
[{'': [0.06735120626697681, 0.08153263533080969], 'false': [1.3644480070755548e-16, 0.23268698060942006], 'true': [6.5061744479238086e-15, -1.2810265668751807e-17], 'true,true': [6.5061744479238086e-15, nan], 'true,true,true': [6.5061744479238086e-15, nan], 'true,false': [-1.2810265668751807e-17, nan], 'true,false,true': [-6.938893903907228e-18, -7.93016446160826e-18]}, {'': [0.09058911959498238, 0.0001710535935506325], 'true': [0.0006789131872518696, 0.001559362556145692], 'true,false': [0.001559362556145692, nan], 'true,false,true': [0.001559362556145692, nan]}, {'': [0.05274067988542837, 0.0002528169306539637], 'true': [0.0011442823563123231, 0.0010374070308040123], 'true,false': [0.0010374070308040123, nan]}, {'': [0.03767415621089828, 9.974635944644664e-05], 'true': [0.0012171367655750514, 0.0011417682424547458], 'true,true': [0.0012171367655750514, nan], 'true,true,true': [0.0012171367655750514, nan], 'true,false': [0.0011417682424547458, nan], 'true,false,true': [0.0011417682424547458, nan]}, {'': [0.0288279066570889, 0.0001379877463263556], 'true': [0.0288279066570889, nan], 'true,true': [0.0288279066570889, nan], 'true,true,true': [0.0288279066570889, nan]}, {'': [0.019089816337789625, 0.0001275619223675973], 'true': [0.0008710728401481312, 0.0014910783293529664], 'true,false': [0.0014910783293529664, nan], 'true,false,true': [0.0014910783293529664, nan], 'true,true': [0.0008710728401481312, nan]}, {'': [0.014695866748989051, 0.00010224974951629471], 'true': [0.0006780340276869546, 0.0012365744309448534], 'true,false': [0.0012365744309448534, nan]}, {'': [0.007131268627422481, 9.942338079561814e-05], 'true': [0.005845003197826692, 0.010691749621204028], 'true,false': [0.010691749621204028, nan], 'true,true': [2.0866842390545112e-16, 3.2653618371328133e-18]}, {'': [0.008625272719943672, 9.2121761408253e-05], 'true': [0.008625272719943672, nan], 'true,true': [0.008625272719943672, nan]}, {'': [0.008893531944483252, 7.778377077386151e-05], 'true': [0.008893531944483252, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995096;  // std dev = 1.04e-06, 166.000 (wgt'ed) examples reached here.  /* #pos=166 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004876;  // std dev = 2.06e-07, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 1.83e-08, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.7221424897824933;  // std dev = 0.011, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(B) )
%   | then return -0.12544463852839222;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.23292803776327828;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462843;  // std dev = 2.98e-08, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.5581058050659566;  // std dev = 0.014, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.11231637819360636;  // std dev = 2.95e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.11231637819360656;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
%   | else return -0.14198804582501784;  // std dev = 0.039, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831114;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.4196595835997989;  // std dev = 0.014, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783663;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783631;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.10159632948783631;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.1726777487632495;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09891989767260569;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015033;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.32224106026271393;  // std dev = 0.013, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.092691276189261;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926074;  // std dev = 6.66e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | | else return -0.09269127618926055;  // std dev = 9.31e-08, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.14938345662135516;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09044581367004724;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.25626081575530624;  // std dev = 0.012, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 2.63e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0851847513883968;  // std dev = 3.73e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 5.77e-08, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | | else return -0.08518475138839678;  // std dev = 7.15e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.13137811750597075;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08327573986660088;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 9.86e-09, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.2105545113531576;  // std dev = 0.010, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109154;  // std dev = 6.05e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return -0.07877675473109147;  // std dev = 7.74e-08, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.11709764298249341;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0771350446822396;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1770964977452773;  // std dev = 7.60e-08, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | | else return 0.17550360278877658;  // std dev = 1.40e-07, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527705;  // std dev = 2.36e-08, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.21465126140159185;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07324622576333704;  // std dev = 9.31e-10, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.07324622576333711;  // std dev = 3.61e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then return -0.10552357925364712;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07182016302523232;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.152743858093671;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.15316859879802447;  // std dev = 0.007, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(B) )
%   | then return -0.06842697784420324;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
%   | else return -0.07241229054732694;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801106;  // std dev = 4.17e-09, 95.000 (wgt'ed) examples reached here.  /* #pos=95 */
%   | | else return 0.13434440445298168;  // std dev = 0.006, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202618;  // std dev = 9.31e-10, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.06419184008202619;  // std dev = 1.86e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else return -0.06419184008202611;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.08986863247452209;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06277934080042792;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063867
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.22 seconds
Total inference time: 1.611 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064257
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.326 seconds
Refined model CLL: -0.064257


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063867
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.021 seconds
Total inference time: 1.611 seconds
AUC ROC: 1.0
Total revision time: 13.021
Best scored revision CLL: -0.064257


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063867, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.021, 'Inference time': 1.611, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066158, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.905, 'Inference time': 1.171}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.858148935099509;  // std dev = 1.07e-06, 223.000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004876;  // std dev = 1.12e-07, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
%   | else return 0.42605016966741416;  // std dev = 4.458, 81.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=46 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7329047532216457;  // std dev = 0.030, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.15605975969460792;  // std dev = 0.252, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1276567137571652;  // std dev = 0.292, 519.000 (wgt'ed) examples reached here.  /* #neg=519 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5696508734093352;  // std dev = 0.039, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B) )
%   | | then return -0.13383298629543275;  // std dev = 0.033, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1137377683509213;  // std dev = 0.250, 555.000 (wgt'ed) examples reached here.  /* #neg=555 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4290953037549928;  // std dev = 0.661, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12591772782021926;  // std dev = 0.204, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10336441554786825;  // std dev = 0.262, 523.000 (wgt'ed) examples reached here.  /* #neg=523 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26954760198591243;  // std dev = 2.711, 312.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09420942013680346;  // std dev = 0.228, 455.000 (wgt'ed) examples reached here.  /* #neg=455 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2729442923954732;  // std dev = 0.560, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13060238540666702;  // std dev = 0.225, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08618600102759796;  // std dev = 0.198, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22250021427861083;  // std dev = 0.495, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.12018810554665164;  // std dev = 0.183, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07935952879680959;  // std dev = 0.178, 540.000 (wgt'ed) examples reached here.  /* #neg=540 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17439523547101038;  // std dev = 1.23e-07, 223.000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | | else return -0.08795175786469994;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( movie(E, B) )
%   | | then return 0.19387984099609082;  // std dev = 0.964, 53.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07492542615674737;  // std dev = 0.229, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12651003281021841;  // std dev = 0.093, 309.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07022378328525362;  // std dev = 0.223, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.11915336567069366;  // std dev = 1.410, 298.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06476093691689165;  // std dev = 0.165, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066246
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.62 seconds
Total inference time: 1.382 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071146
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.376 seconds
Parameter learned model CLL: -0.071146


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.07e-06, 0, 223], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 18, 0], 'true,false,true,false': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [1.12e-07, 487, 0], 'false,false': [4.458, 35, 46]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.03, 0, 269], 'true,false,true,true': [0.252, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.292, 519, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.039, 0, 269], 'true,false,true': [0.033, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.25, 555, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.661, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.204, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.262, 523, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.711, 43, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.228, 455, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.56, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.225, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.198, 470, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.495, 0, 269], 'true,false,true': [0.183, 37, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.178, 540, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [1.23e-07, 0, 223], 'true,true,false': [0.0, 25, 0], 'true,false,true': [0.964, 7, 46], 'true,false,false': [0.0, 0, 0], 'false': [0.229, 498, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.093, 40, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.223, 470, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.41, 29, 269], 'true,false': [0.0, 0, 0], 'false': [0.165, 506, 0]}]]
[{'': [0.10715171430343357, 0.07442719698472629], 'true': [5.098064471821346e-15, 2.5069552168955147e-17], 'false': [2.5532849847642203e-17, 0.24538942234415503], 'true,true': [5.098064471821346e-15, nan], 'true,true,true': [5.098064471821346e-15, nan], 'true,false': [2.5069552168955147e-17, nan], 'true,false,true': [-3.0839528461809902e-18, -1.2810265668751807e-17]}, {'': [0.09797362617057534, 0.00016441410107627784], 'true': [0.0008745522926051266, 0.0014059284660332188], 'true,false': [0.0014059284660332188, nan], 'true,false,true': [0.0014059284660332188, nan]}, {'': [0.059253839981209054, 0.00011237481351979034], 'true': [0.0015022628622149683, 0.0010833574749921902], 'true,false': [0.0010833574749921902, nan]}, {'': [0.03813692922054857, 0.00013116849848847291], 'true': [0.0016246032227279722, 0.0009659395190715555], 'true,true': [0.0016246032227279722, nan], 'true,true,true': [0.0016246032227279722, nan], 'true,false': [0.0009659395190715555, nan], 'true,false,true': [0.0009659395190715555, nan]}, {'': [0.023554150275922635, 0.00011400320591398526], 'true': [0.023554150275922635, nan], 'true,true': [0.023554150275922635, nan], 'true,true,true': [0.023554150275922635, nan]}, {'': [0.02295642376886048, 8.325659191456546e-05], 'true': [0.0011662112938042412, 0.0009933981186292767], 'true,true': [0.0011662112938042412, nan], 'true,false': [0.0009933981186292767, nan], 'true,false,true': [0.0009933981186292767, nan]}, {'': [0.013393988057183793, 5.876727982252225e-05], 'true': [0.0009125045050754582, 0.0009021535787555031], 'true,false': [0.0009021535787555031, nan]}, {'': [0.008530929493391744, 0.00010495652015283723], 'true': [0.006238694115602399, 0.01751868157300686], 'true,false': [0.01751868157300686, nan], 'true,true': [6.770866876637726e-17, 0.0]}, {'': [0.008696753776111414, 0.00010624067376272622], 'true': [0.008696753776111414, nan], 'true,true': [0.008696753776111414, nan]}, {'': [0.006670449909848133, 5.404906613971186e-05], 'true': [0.006670449909848133, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099509;  // std dev = 1.07e-06, 223.000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048718;  // std dev = 2.98e-07, 443.000 (wgt'ed) examples reached here.  /* #neg=443 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109557;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | else return 0.7215429143859893;  // std dev = 0.010, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( actor(B) )
%   | then return -0.12544463852839233;  // std dev = 0.000, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.23292803776327828;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462839;  // std dev = 3.33e-08, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | else return 0.5574901877253973;  // std dev = 0.012, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( actor(B) )
%   | then return -0.11231637819360582;  // std dev = 0.000, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.19391346417998787;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583108;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | else return 0.4191778137020955;  // std dev = 0.013, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else return -0.10159632948783623;  // std dev = 4.37e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783652;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | | else return -0.10159632948783659;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.16538526013607177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014967;  // std dev = 1.58e-08, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | else return 0.3218984138378861;  // std dev = 0.012, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926105;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return -0.09269127618926085;  // std dev = 5.87e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( female(A) )
%   | | | then return -0.0926912761892609;  // std dev = 4.71e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | | else return -0.09269127618926072;  // std dev = 7.45e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.0969503644292196;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | else return 0.2560174050038073;  // std dev = 0.010, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else return -0.08518475138839679;  // std dev = 2.95e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 5.67e-09, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3.49e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.08518475138839678;  // std dev = 6.14e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 1.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.1322708179914524;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08485343369308518;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253526;  // std dev = 1.75e-08, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | else return 0.2103766831283732;  // std dev = 0.009, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( actor(B) )
%   | then return -0.07877675473109194;  // std dev = 0.000, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.11781366731542187;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07849218376218413;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.177096497745278;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | | else return 0.1758599770362407;  // std dev = 1.74e-07, 132.000 (wgt'ed) examples reached here.  /* #pos=132 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527753;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.2150663928554893;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.07324622576333721;  // std dev = 3.65e-08, 446.000 (wgt'ed) examples reached here.  /* #neg=446 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then return -0.1061094078009464;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07299930511814921;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1527438580936712;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | else return 0.15307367517012999;  // std dev = 0.006, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else return -0.06842697784420271;  // std dev = 7.45e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( actor(B) )
%   | then return -0.06842697784420353;  // std dev = 0.000, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.09645737509824255;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06821080004125553;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801098;  // std dev = 5.59e-09, 131.000 (wgt'ed) examples reached here.  /* #pos=131 */
%   | | else return 0.13426908325125747;  // std dev = 0.005, 138.000 (wgt'ed) examples reached here.  /* #pos=138 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | | else return -0.06419184008202625;  // std dev = 2.11e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.08837178853377728;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06400107198826961;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063876
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.674 seconds
Total inference time: 1.415 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06427
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.93 seconds
Refined model CLL: -0.06427


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063876
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.600000000000001 seconds
Total inference time: 1.415 seconds
AUC ROC: 1.0
Total revision time: 15.600000000000001
Best scored revision CLL: -0.06427


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063876, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.600000000000001, 'Inference time': 1.415, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066246, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.62, 'Inference time': 1.382}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995086;  // std dev = 1.07e-06, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004883;  // std dev = 0.000, 562.000 (wgt'ed) examples reached here.  /* #neg=562 */
%   | else return 0.5776611302214641;  // std dev = 4.068, 82.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=59 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7287526018325569;  // std dev = 0.020, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1484486895339765;  // std dev = 0.359, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1286988819015608;  // std dev = 0.438, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5649574293457115;  // std dev = 0.026, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B) )
%   | | then return -0.12917068093198672;  // std dev = 0.037, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11440284086596503;  // std dev = 0.370, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4250526243831978;  // std dev = 0.483, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.12213450946995703;  // std dev = 0.267, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10353321352886384;  // std dev = 0.352, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.27115382734116367;  // std dev = 2.874, 386.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09505444114472651;  // std dev = 0.386, 648.000 (wgt'ed) examples reached here.  /* #neg=648 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.26964717739753985;  // std dev = 0.400, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.14140286894407364;  // std dev = 0.311, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08675444743072892;  // std dev = 0.321, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2200380306088535;  // std dev = 0.352, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.13088669397929947;  // std dev = 0.314, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07966013351179473;  // std dev = 0.268, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17686250551472452;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | | else return -0.0876445141140791;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( movie(E, B) )
%   | | then return 0.15171388526893054;  // std dev = 1.261, 72.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07453636096282831;  // std dev = 0.282, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1293378931163123;  // std dev = 0.088, 381.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06944709168521696;  // std dev = 0.259, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10970382473541995;  // std dev = 1.790, 387.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06537658298239324;  // std dev = 0.276, 659.000 (wgt'ed) examples reached here.  /* #neg=659 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066213
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.381 seconds
Total inference time: 1.387 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07193
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.086 seconds
Parameter learned model CLL: -0.07193


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.07e-06, 0, 278], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.11e-08, 26, 0], 'true,false,true,false': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 562, 0], 'false,false': [4.068, 23, 59]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.02, 0, 337], 'true,false,true,true': [0.359, 71, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.438, 596, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.026, 0, 337], 'true,false,true': [0.037, 58, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.37, 622, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.483, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.267, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.352, 607, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.874, 49, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.386, 648, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.4, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.311, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.321, 613, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.352, 0, 337], 'true,false,true': [0.314, 58, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.268, 620, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 278], 'true,true,false': [0.0, 27, 0], 'true,false,true': [1.261, 13, 59], 'true,false,false': [0.0, 0, 0], 'false': [0.282, 593, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.088, 44, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.259, 597, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.79, 50, 337], 'true,false': [0.0, 0, 0], 'false': [0.276, 659, 0]}]]
[{'': [0.10150513205404266, 0.08322161567840851], 'true': [4.089454594302735e-15, 3.700743415417188e-17], 'false': [-2.5286218354451966e-16, 0.20181439619274189], 'true,true': [4.089454594302735e-15, nan], 'true,true,true': [4.089454594302735e-15, nan], 'true,false': [3.700743415417188e-17, nan], 'true,false,true': [1.708035422500241e-17, -1.1102230246251566e-17]}, {'': [0.11125454473005074, 0.00032160461371843883], 'true': [0.00040570735744071613, 0.0018190781216698305], 'true,false': [0.0018190781216698305, nan], 'true,false,true': [0.0018190781216698305, nan]}, {'': [0.061132755516510755, 0.00022007421116567184], 'true': [0.0006653987832248916, 0.0014024631724036062], 'true,false': [0.0014024631724036062, nan]}, {'': [0.033972560617495984, 0.00020380929558952418], 'true': [0.0006922521570148693, 0.0014543029927399937], 'true,false': [0.0014543029927399937, nan], 'true,false,true': [0.0014543029927399937, nan], 'true,true': [0.0006922521570148693, nan], 'true,true,true': [0.0006922521570148693, nan]}, {'': [0.02139900789304806, 0.00022986815346365743], 'true': [0.02139900789304806, nan], 'true,true': [0.02139900789304806, nan], 'true,true,true': [0.02139900789304806, nan]}, {'': [0.019951656620515235, 0.00016797871969611984], 'true': [0.0004759489851758433, 0.0018908782254348103], 'true,false': [0.0018908782254348103, nan], 'true,false,true': [0.0018908782254348103, nan], 'true,true': [0.0004759489851758433, nan]}, {'': [0.01599048992834178, 0.00011561904842047028], 'true': [0.00036812157970605254, 0.0016961897048489315], 'true,false': [0.0016961897048489315, nan]}, {'': [0.008782198370190316, 0.00013409950049370368], 'true': [0.005645251378956258, 0.02206822397185144], 'true,false': [0.02206822397185144, nan], 'true,true': [-4.472840962518616e-16, -3.0839528461809902e-18]}, {'': [0.0078017306910509445, 0.00011228625847587262], 'true': [0.0078017306910509445, nan], 'true,true': [0.0078017306910509445, nan]}, {'': [0.008274879124495146, 0.0001155969993506735], 'true': [0.008274879124495146, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995086;  // std dev = 1.07e-06, 278.000 (wgt'ed) examples reached here.  /* #pos=278 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048852;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.12544463852839233;  // std dev = 0.000, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360635;  // std dev = 0.000, 669.000 (wgt'ed) examples reached here.  /* #neg=669 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( female(B) )
%   | then return -0.1015963294878366;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return -0.1015963294878364;  // std dev = 3.65e-08, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.09269127618926182;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694887;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.25517224256948856;  // std dev = 1.12e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 1.29e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( female(A) )
%   | then return -0.08518475138839675;  // std dev = 0.000, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839673;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else return -0.08518475138839675;  // std dev = 1.49e-08, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325348;  // std dev = 1.71e-08, 159.000 (wgt'ed) examples reached here.  /* #pos=159 */
%   | | else return 0.20975771563253492;  // std dev = 1.92e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.07877675473109257;  // std dev = 0.000, 647.000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return 0.17709649774527772;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #pos=167 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1770964977452767;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( female(A) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return -0.07324622576333681;  // std dev = 1.61e-09, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333681;  // std dev = 1.67e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.07324622576333688;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return -0.07324622576333711;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367153;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420276;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( female(B) )
%   | then return -0.06842697784420242;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06842697784420254;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06842697784420258;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else return -0.06842697784420258;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801137;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( female(B) )
%   | then return -0.06419184008202619;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202611;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.215 seconds
Total inference time: 1.282 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.148 seconds
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.83 seconds
Total inference time: 1.282 seconds
AUC ROC: 1.0
Total revision time: 14.83
Best scored revision CLL: -0.064062


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063847, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.83, 'Inference time': 1.282, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066213, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.381, 'Inference time': 1.387}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7351738457221995;  // std dev = 0.035, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1509240825523041;  // std dev = 0.110, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12788119738313683;  // std dev = 0.130, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5723913468442007;  // std dev = 0.047, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, B) )
%   | | then return -0.11514320047508061;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11352870070214353;  // std dev = 0.093, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.431625961801154;  // std dev = 0.407, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.1141364008683987;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10321586416740353;  // std dev = 0.110, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.250483168978119;  // std dev = 1.595, 82.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09434962834882107;  // std dev = 0.111, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2787622378765711;  // std dev = 0.353, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11189077345923595;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08643556291526826;  // std dev = 0.094, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22672317447076815;  // std dev = 0.314, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else if ( movie(D, E) )
%   | | then return -0.11623531329246932;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07971232348236001;  // std dev = 0.079, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17460890692593795;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09114800323408556;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(E, B) )
%   | | then return 0.15904565860340933;  // std dev = 0.691, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07342949900260197;  // std dev = 0.053, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13169116873623235;  // std dev = 0.091, 77.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06783675226964275;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10786440236740098;  // std dev = 0.879, 79.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=67 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06480391095979494;  // std dev = 0.066, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067321
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.969 seconds
Total inference time: 1.428 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071399
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.694 seconds
Parameter learned model CLL: -0.071399


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 122, 0], 'false,false': [2.441, 13, 11]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.035, 0, 67], 'true,false,true,true': [0.11, 14, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.13, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.047, 0, 67], 'true,false,true': [0.016, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.093, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.407, 0, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.082, 13, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.11, 128, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.595, 15, 67], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.111, 132, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.353, 0, 67], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.094, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.314, 0, 67], 'true,false,true': [0.072, 10, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.079, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 9, 0], 'true,false,true': [0.691, 4, 11], 'true,false,false': [0.0, 0, 0], 'false': [0.053, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.091, 10, 67], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.879, 12, 67], 'true,false': [0.0, 0, 0], 'false': [0.066, 118, 0]}]]
[{'': [0.14532871972318304, 0.06966597860761814], 'true': [-1.2688263138573217e-16, -1.1564823173178714e-17], 'false': [0.0, 0.24826388888888848], 'true,false': [-1.1564823173178714e-17, nan], 'true,false,true': [-6.938893903907228e-18, 0.0], 'true,true': [-1.2688263138573217e-16, nan], 'true,true,true': [-1.2688263138573217e-16, nan]}, {'': [0.11344019388424131, 0.00013892156583182898], 'true': [0.00125492748151814, 0.0008656027570236036], 'true,false': [0.0008656027570236036, nan], 'true,false,true': [0.0008656027570236036, nan]}, {'': [0.055386634824077574, 7.692084646600658e-05], 'true': [0.002224863084812883, 0.0002568496102121454], 'true,false': [0.0002568496102121454, nan]}, {'': [0.04269251092663937, 9.374315240487374e-05], 'true': [0.002474969783575425, 0.0005126645896482258], 'true,true': [0.002474969783575425, nan], 'true,true,true': [0.002474969783575425, nan], 'true,false': [0.0005126645896482258, nan], 'true,false,true': [0.0005126645896482258, nan]}, {'': [0.031007488188766367, 9.26518203605581e-05], 'true': [0.031007488188766367, nan], 'true,true': [0.031007488188766367, nan], 'true,true,true': [0.031007488188766367, nan]}, {'': [0.018864718290711353, 7.361644035947708e-05], 'true': [0.0018608965531276347, -5.551115123125783e-18], 'true,true': [0.0018608965531276347, nan], 'true,false': [-5.551115123125783e-18, nan], 'true,false,true': [-5.551115123125783e-18, nan]}, {'': [0.014639630169305086, 5.887486427655062e-05], 'true': [0.0014710043477772097, 0.0005242916146752374], 'true,false': [0.0005242916146752374, nan]}, {'': [0.012885270800996834, 2.940204120881993e-05], 'true': [0.008425059074578094, 0.03184651746040091], 'true,false': [0.03184651746040091, nan], 'true,true': [-3.172065784643304e-17, 0.0]}, {'': [0.008355378266862142, -1.460819769243627e-17], 'true': [0.008355378266862142, nan], 'true,true': [0.008355378266862142, nan]}, {'': [0.009780494424790218, 3.6590484815841146e-05], 'true': [0.009780494424790218, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( female(A) )
%   | | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7261988180057797;  // std dev = 0.008, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.7194734122109548;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( female(A) )
%   | | then return -0.17163601687405552;  // std dev = 0.160, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839133;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.562052632994608;  // std dev = 0.010, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.555366436746284;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.1445848492074305;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11231637819360639;  // std dev = 1.86e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 1.86e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.42254808985056563;  // std dev = 0.010, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.4175135841583102;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11678707072755906;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783634;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3241632305285719;  // std dev = 0.009, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.3207118471601494;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( female(A) )
%   | | then return -0.12656359745476917;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08877638701111393;  // std dev = 1.86e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926104;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2575474041282447;  // std dev = 0.008, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.2551722425694896;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( female(A) )
%   | | then return -0.12294074544027613;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08185213894413833;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839683;  // std dev = 2.95e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839679;  // std dev = 1.86e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.08518475138839685;  // std dev = 2.63e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.21144708678862645;  // std dev = 0.007, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.20975771563253542;  // std dev = 9.50e-09, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( female(A) )
%   | | then return -0.11665874683746359;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07590753730258136;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17334462911420617;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.17709649774527753;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( female(A) )
%   | | | then return -0.06059569579151745;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07075141917470196;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1856128424801631;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.11619185759088381;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9.31e-10, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.07324622576333704;  // std dev = 9.31e-10, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15367342926229952;  // std dev = 0.005, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15274385809367083;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.07162928299391617;  // std dev = 0.060, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420271;  // std dev = 9.13e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13473503047815277;  // std dev = 0.004, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1340070300080108;  // std dev = 6.45e-09, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( female(A) )
%   | | then return -0.09215503112905271;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06165607836944288;  // std dev = 0.000813, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202625;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.428 seconds
Total inference time: 1.524 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064301
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.665 seconds
Refined model CLL: -0.064301


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.756 seconds
Total inference time: 1.524 seconds
AUC ROC: 1.0
Total revision time: 8.756
Best scored revision CLL: -0.064301


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064225, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 8.756, 'Inference time': 1.524, 'parameter_0.2': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067321, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.969, 'Inference time': 1.428}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.858148935099511;  // std dev = 5.46e-07, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048832;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | else return 0.45814893509951143;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7326054906645838;  // std dev = 0.028, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1410181962225932;  // std dev = 0.147, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12704153653414496;  // std dev = 0.181, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.569252224727513;  // std dev = 0.037, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, B) )
%   | | then return -0.13056539620191474;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11453674717093094;  // std dev = 0.209, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42869629315792845;  // std dev = 0.440, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.10755876026268055;  // std dev = 0.089, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10322163724920197;  // std dev = 0.180, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2733174738028075;  // std dev = 1.832, 154.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=134 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09363768988748097;  // std dev = 0.141, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.27185411146862287;  // std dev = 0.370, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13030259827196441;  // std dev = 0.135, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08644051856365882;  // std dev = 0.166, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22170488860612514;  // std dev = 0.327, 134.000 (wgt'ed) examples reached here.  /* #pos=134 */
%   | else if ( movie(D, E) )
%   | | then return -0.122138595680294;  // std dev = 0.130, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08019726246499831;  // std dev = 0.164, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17428188723019178;  // std dev = 1.12e-07, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | | else return -0.09111326018282079;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( movie(E, B) )
%   | | then return 0.1606871712204956;  // std dev = 0.863, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07402407489311166;  // std dev = 0.136, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11329743152413906;  // std dev = 0.107, 163.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06977093245163118;  // std dev = 0.152, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.11438745136486854;  // std dev = 1.108, 153.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=134 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06519632451253228;  // std dev = 0.137, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067502
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.515 seconds
Total inference time: 1.47 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071592
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.081 seconds
Parameter learned model CLL: -0.071592


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [5.46e-07, 0, 110], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 13, 0], 'true,false,true,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 243, 0], 'false,false': [3.098, 16, 24]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.028, 0, 134], 'true,false,true,true': [0.147, 21, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.181, 256, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.037, 0, 134], 'true,false,true': [0.033, 15, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.209, 252, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.44, 0, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.089, 15, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.18, 245, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.832, 20, 134], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.141, 228, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.37, 0, 134], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.135, 19, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.166, 272, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.327, 0, 134], 'true,false,true': [0.13, 17, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.164, 254, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [1.12e-07, 0, 110], 'true,true,false': [0.0, 22, 0], 'true,false,true': [0.863, 6, 24], 'true,false,false': [0.0, 0, 0], 'false': [0.136, 263, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.107, 29, 134], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.152, 250, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.108, 19, 134], 'true,false': [0.0, 0, 0], 'false': [0.137, 250, 0]}]]
[{'': [0.11594023188046705, 0.07761365480902599], 'true': [2.7129813547203826e-15, -3.2653618371328133e-18], 'false': [-1.5716737467944603e-16, 0.24000000000000118], 'true,true': [2.7129813547203826e-15, nan], 'true,true,true': [2.7129813547203826e-15, nan], 'true,false': [-3.2653618371328133e-18, nan], 'true,false,true': [-1.2810265668751807e-17, 0.0]}, {'': [0.09021720155955416, 0.00012801417868700884], 'true': [0.0007904026373471968, 0.001030776721832187], 'true,false': [0.001030776721832187, nan], 'true,false,true': [0.001030776721832187, nan]}, {'': [0.045657850491930836, 0.0001726892109058238], 'true': [0.0013450549157340886, 0.0010772797188063862], 'true,false': [0.0010772797188063862, nan]}, {'': [0.027385581634390945, 0.00013237927900387368], 'true': [0.0014421394327245336, 0.0005274642012822294], 'true,true': [0.0014421394327245336, nan], 'true,true,true': [0.0014421394327245336, nan], 'true,false': [0.0005274642012822294, nan], 'true,false,true': [0.0005274642012822294, nan]}, {'': [0.021799271533254273, 8.780587476298258e-05], 'true': [0.021799271533254273, nan], 'true,true': [0.021799271533254273, nan], 'true,true,true': [0.021799271533254273, nan]}, {'': [0.018604300272527064, 0.00010133208707836713], 'true': [0.0010217257170719704, 0.000961821662205206], 'true,true': [0.0010217257170719704, nan], 'true,false': [0.000961821662205206, nan], 'true,false,true': [0.000961821662205206, nan]}, {'': [0.01263147072534658, 0.00010602370455074816], 'true': [0.0007968698777273181, 0.0009981053920805453], 'true,false': [0.0009981053920805453, nan]}, {'': [0.0127103810281693, 7.074453681894783e-05], 'true': [0.009782581148663178, 0.024827853946412574], 'true,false': [0.024827853946412574, nan], 'true,true': [1.1304088978001593e-16, -7.569702440626067e-18]}, {'': [0.011489823475269485, 9.302267830331523e-05], 'true': [0.011489823475269485, nan], 'true,true': [0.011489823475269485, nan]}, {'': [0.008027576200596888, 7.497043215941002e-05], 'true': [0.008027576200596888, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099511;  // std dev = 5.46e-07, 110.000 (wgt'ed) examples reached here.  /* #pos=110 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048835;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.7213773542119847;  // std dev = 0.009, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.1254446385283918;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else return -0.17150895248620007;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462838;  // std dev = 3.49e-08, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.5573202235659651;  // std dev = 0.012, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360635;  // std dev = 3.48e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then return -0.11231637819360615;  // std dev = 4.56e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360629;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.13516097216476614;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360649;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else return -0.10780506363268735;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583106;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.41904475191140805;  // std dev = 0.012, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A) )
%   | then return -0.10159632948783655;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.1015963294878362;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.10048374204372573;  // std dev = 0.004, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.09786589323376951;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.3218037098623135;  // std dev = 0.011, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.09269127618926075;  // std dev = 6.66e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.09165610665503973;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09273028059527925;  // std dev = 0.000226, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.16848720379395762;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0895590405477257;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.25595007737994846;  // std dev = 0.010, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.08518475138839683;  // std dev = 2.46e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.08518475138839678;  // std dev = 2.36e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( actor(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08442556135663708;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08524085230576685;  // std dev = 0.000189, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.08252000592980109;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253587;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.2103274610191901;  // std dev = 0.009, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109158;  // std dev = 4.34e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.0787767547310915;  // std dev = 7.67e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( female(B) )
%   | | | then return -0.07882262946731372;  // std dev = 0.000241, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07834773651910121;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.13617915081893334;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0764837552896188;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1770964977452775;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.17595853014332086;  // std dev = 2.98e-08, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else return -0.07324622576333704;  // std dev = 9.31e-10, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527744;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.21518118077913007;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.07324622576333664;  // std dev = 8.59e-09, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( actor(B) )
%   | | then return -0.07310505322857587;  // std dev = 0.000481, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.10106441591884008;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367094;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.15304741408620512;  // std dev = 0.006, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420261;  // std dev = 1.29e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.06842697784420262;  // std dev = 4.34e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06787510400936206;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06845324345160739;  // std dev = 0.000231, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.11059895039622472;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06484829236506756;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801092;  // std dev = 5.27e-09, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return 0.1342482373927969;  // std dev = 0.005, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | else if ( female(B) )
%   | | | then return -0.06423267048416756;  // std dev = 0.000251, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0636315176412361;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.06972584657121267;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063797
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.596 seconds
Total inference time: 1.504 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064327
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.887 seconds
Refined model CLL: -0.064327


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063797
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 11.079 seconds
Total inference time: 1.504 seconds
AUC ROC: 1.0
Total revision time: 11.079
Best scored revision CLL: -0.064327


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063797, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 11.079, 'Inference time': 1.504, 'parameter_0.4': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067502, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.515, 'Inference time': 1.47}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995096;  // std dev = 1.07e-06, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048752;  // std dev = 2.33e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
%   | else return 0.3914822684328445;  // std dev = 3.864, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7327896313803788;  // std dev = 0.031, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.15002963244312476;  // std dev = 0.172, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12820461193850907;  // std dev = 0.270, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.569613846482093;  // std dev = 0.040, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, B) )
%   | | then return -0.11998848905693953;  // std dev = 0.023, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11420719110203657;  // std dev = 0.221, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42915105277846255;  // std dev = 0.600, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11333962402652;  // std dev = 0.144, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10280679037803184;  // std dev = 0.187, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2697853463003583;  // std dev = 2.359, 234.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=202 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09449415152059375;  // std dev = 0.210, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2730238572693046;  // std dev = 0.512, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.1319691364608457;  // std dev = 0.167, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08691013402113412;  // std dev = 0.201, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2225856840562846;  // std dev = 0.453, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( movie(D, E) )
%   | | then return -0.12177381578057778;  // std dev = 0.127, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07981064230609773;  // std dev = 0.170, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1743511269203317;  // std dev = 8.94e-08, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | | else return -0.09036664231106711;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( movie(E, B) )
%   | | then return 0.18070538350845547;  // std dev = 0.951, 39.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07336609930465228;  // std dev = 0.118, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12302814035186327;  // std dev = 0.098, 236.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06941453506546247;  // std dev = 0.156, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.11811092454514545;  // std dev = 1.233, 227.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06473674090395584;  // std dev = 0.137, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067357
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.372 seconds
Total inference time: 1.252 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071094
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.395 seconds
Parameter learned model CLL: -0.071094


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.07e-06, 0, 170], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 17, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [2.33e-07, 354, 0], 'false,false': [3.864, 28, 32]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.031, 0, 202], 'true,false,true,true': [0.172, 26, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.27, 386, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.04, 0, 202], 'true,false,true': [0.023, 19, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.221, 360, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.6, 0, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.144, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.187, 366, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.359, 32, 202], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.21, 362, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.512, 0, 202], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.167, 32, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.201, 355, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.453, 0, 202], 'true,false,true': [0.127, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.17, 365, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [8.94e-08, 0, 170], 'true,true,false': [0.0, 22, 0], 'true,false,true': [0.951, 7, 32], 'true,false,false': [0.0, 0, 0], 'false': [0.118, 383, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.098, 34, 202], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.156, 359, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.233, 25, 202], 'true,false': [0.0, 0, 0], 'false': [0.137, 390, 0]}]]
[{'': [0.09418282548477096, 0.07132021750799421], 'true': [6.687461042448002e-15, 2.7755575615628915e-18], 'false': [1.5304769379013457e-16, 0.24888888888889046], 'true,true': [6.687461042448002e-15, nan], 'true,true,true': [6.687461042448002e-15, nan], 'true,false': [2.7755575615628915e-18, nan], 'true,false,true': [-3.2653618371328133e-18, 0.0]}, {'': [0.0797053732194256, 0.00018840500975379998], 'true': [0.0009420214938906283, 0.0011416858598208078], 'true,false': [0.0011416858598208078, nan], 'true,false,true': [0.0011416858598208078, nan]}, {'': [0.038909872305623726, 0.00013601641489770314], 'true': [0.001634030497786478, 0.0005440540187092636], 'true,false': [0.0005440540187092636, nan]}, {'': [0.036370039804133295, 9.507059663686537e-05], 'true': [0.0017840070746751439, 0.0006438622083842199], 'true,true': [0.0017840070746751439, nan], 'true,true,true': [0.0017840070746751439, nan], 'true,false': [0.0006438622083842199, nan], 'true,false,true': [0.0006438622083842199, nan]}, {'': [0.023774569471223382, 0.00012180440255811735], 'true': [0.023774569471223382, nan], 'true,true': [0.023774569471223382, nan], 'true,true,true': [0.023774569471223382, nan]}, {'': [0.02060022347275608, 0.00011411227031730455], 'true': [0.0012956198003211568, 0.0008712023428538197], 'true,true': [0.0012956198003211568, nan], 'true,false': [0.0008712023428538197, nan], 'true,false,true': [0.0008712023428538197, nan]}, {'': [0.0107198571384803, 7.941693267020153e-05], 'true': [0.0010178271879006727, 0.0008100895680073245], 'true,false': [0.0008100895680073245, nan]}, {'': [0.010011518271447643, 3.649606376001049e-05], 'true': [0.007109439021191752, 0.023180008064304748], 'true,false': [0.023180008064304748, nan], 'true,true': [4.702121045471251e-17, -1.1354553660939102e-17]}, {'': [0.009559769545137218, 6.762670382647341e-05], 'true': [0.009559769545137218, nan], 'true,true': [0.009559769545137218, nan]}, {'': [0.006702588941990031, 4.7974647243074436e-05], 'true': [0.006702588941990031, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995096;  // std dev = 1.07e-06, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004875;  // std dev = 2.51e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995116;  // std dev = 2.15e-07, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210957;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.12544463852839216;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462834;  // std dev = 3.73e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.5553664367462834;  // std dev = 4.21e-08, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.11231637819360656;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583101;  // std dev = 1.39e-08, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.4175135841583094;  // std dev = 3.07e-08, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( female(B) )
%   | then return -0.10159632948783642;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else return -0.10159632948783659;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014983;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.32071184716015005;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.092691276189261;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926101;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.092691276189261;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | | else return -0.09269127618926076;  // std dev = 6.32e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.2551722425694897;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 1.32e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08518475138839682;  // std dev = 2.95e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.08518475138839678;  // std dev = 2.95e-09, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 5.58e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253567;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.20975771563253545;  // std dev = 1.62e-08, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.07877675473109158;  // std dev = 4.47e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109164;  // std dev = 3.16e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.07877675473109154;  // std dev = 6.05e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527775;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.177096497745277;  // std dev = 2.11e-08, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.17709649774527714;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07324622576333702;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333699;  // std dev = 2.36e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | | else return -0.0732462257633367;  // std dev = 1.07e-07, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.07324622576333696;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367144;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #pos=202 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.06842697784420324;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801084;  // std dev = 6.72e-09, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return 0.13400703000801084;  // std dev = 6.97e-09, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( female(B) )
%   | then return -0.06419184008202622;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.341 seconds
Total inference time: 1.437 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.081 seconds
Refined model CLL: -0.064085


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 12.189 seconds
Total inference time: 1.437 seconds
AUC ROC: 1.0
Total revision time: 12.189
Best scored revision CLL: -0.064085


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 12.189, 'Inference time': 1.437, 'parameter_0.6': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067357, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.372, 'Inference time': 1.252}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.858148935099509;  // std dev = 1.07e-06, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 0.000, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
%   | else return 0.5010060779566556;  // std dev = 4.009, 70.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7305464569656875;  // std dev = 0.025, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14100034449725238;  // std dev = 0.214, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12878900529963258;  // std dev = 0.380, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5669793453823392;  // std dev = 0.032, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, B) )
%   | | then return -0.12615981962049116;  // std dev = 0.032, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11430199626549085;  // std dev = 0.311, 527.000 (wgt'ed) examples reached here.  /* #neg=527 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.4267884107999569;  // std dev = 0.541, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11534889294243032;  // std dev = 0.206, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1030877519021159;  // std dev = 0.267, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2817812287216242;  // std dev = 2.354, 301.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=269 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0951660826106962;  // std dev = 0.312, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2688349442261879;  // std dev = 0.451, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13378859346265;  // std dev = 0.206, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08675040037564424;  // std dev = 0.270, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21953216081470744;  // std dev = 0.398, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( movie(D, E) )
%   | | then return -0.12766142943197206;  // std dev = 0.238, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07954245825036434;  // std dev = 0.207, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1747094090128015;  // std dev = 2.00e-07, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | | else return -0.09078983714121798;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( movie(E, B) )
%   | | then return 0.14977976327088952;  // std dev = 1.206, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07403463801456481;  // std dev = 0.202, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12397223196009804;  // std dev = 0.098, 309.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=269 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0685561305021158;  // std dev = 0.150, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10586171946524436;  // std dev = 1.708, 315.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=269 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06462573812137017;  // std dev = 0.174, 514.000 (wgt'ed) examples reached here.  /* #neg=514 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067549
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.791 seconds
Total inference time: 1.41 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071683
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.678 seconds
Parameter learned model CLL: -0.071683


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.07e-06, 0, 224], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 19, 0], 'true,false,true,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 493, 0], 'false,false': [4.009, 25, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.025, 0, 269], 'true,false,true,true': [0.214, 40, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.38, 505, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.032, 0, 269], 'true,false,true': [0.032, 42, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.311, 527, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.541, 0, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.206, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.267, 494, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [2.354, 32, 269], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.312, 480, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.451, 0, 269], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.206, 35, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.27, 510, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.398, 0, 269], 'true,false,true': [0.238, 44, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.207, 469, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [2e-07, 0, 224], 'true,true,false': [0.0, 27, 0], 'true,false,true': [1.206, 12, 45], 'true,false,false': [0.0, 0, 0], 'false': [0.202, 470, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.098, 40, 269], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.15, 468, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [1.708, 46, 269], 'true,false': [0.0, 0, 0], 'false': [0.174, 514, 0]}]]
[{'': [0.09876543209877038, 0.07354031466799697], 'true': [5.075305255429287e-15, 2.3790493384824782e-17], 'false': [0.0, 0.22959183673469416], 'true,true': [5.075305255429287e-15, nan], 'true,true,true': [5.075305255429287e-15, nan], 'true,false': [2.3790493384824782e-17, nan], 'true,false,true': [0.0, -9.25185853854297e-18]}, {'': [0.08627958672682023, 0.0002860951317303864], 'true': [0.0006103368824714334, 0.0011407628014655196], 'true,false': [0.0011407628014655196, nan], 'true,false,true': [0.0011407628014655196, nan]}, {'': [0.05714284082550308, 0.0001835014017479287], 'true': [0.0010248757939527171, 0.0010059725887410379], 'true,false': [0.0010059725887410379, nan]}, {'': [0.03715149788057315, 0.0001445983368955657], 'true': [0.0010875963982636132, 0.0009418998200287613], 'true,true': [0.0010875963982636132, nan], 'true,true,true': [0.0010875963982636132, nan], 'true,false': [0.0009418998200287613, nan], 'true,false,true': [0.0009418998200287613, nan]}, {'': [0.018406349190773368, 0.0002029119445865461], 'true': [0.018406349190773368, nan], 'true,true': [0.018406349190773368, nan], 'true,true,true': [0.018406349190773368, nan]}, {'': [0.017325034413198156, 0.00014300082501129228], 'true': [0.0007574732513048902, 0.001216349519245966], 'true,false': [0.001216349519245966, nan], 'true,false,true': [0.001216349519245966, nan], 'true,true': [0.0007574732513048902, nan]}, {'': [0.015250328802023986, 9.153792385766058e-05], 'true': [0.0005894250970969526, 0.0012837702598343028], 'true,false': [0.0012837702598343028, nan]}, {'': [0.010240370414477501, 8.707063000018626e-05], 'true': [0.006766918160602554, 0.025525009363548998], 'true,false': [0.025525009363548998, nan], 'true,true': [1.7842870038618588e-16, -5.13992141030165e-18]}, {'': [0.009514201780743895, 4.8285486556265604e-05], 'true': [0.009514201780743895, nan], 'true,true': [0.009514201780743895, nan]}, {'': [0.009258015195071476, 5.858411535265921e-05], 'true': [0.009258015195071476, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.858148935099509;  // std dev = 1.07e-06, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048735;  // std dev = 2.35e-07, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109576;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.12544463852839233;  // std dev = 0.000, 529.000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462833;  // std dev = 4.01e-08, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.5553664367462833;  // std dev = 4.41e-08, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.11231637819360586;  // std dev = 0.000, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583111;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( female(B) )
%   | then return -0.10159632948783653;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else return -0.10159632948783658;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601503;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.09269127618926136;  // std dev = 0.000, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.25517224256948895;  // std dev = 1.05e-08, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.08518475138839682;  // std dev = 3.48e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 2.11e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.08518475138839678;  // std dev = 4.59e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 3.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | | else return -0.08518475138839678;  // std dev = 6.14e-08, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else return -0.08518475138839678;  // std dev = 1.05e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253506;  // std dev = 1.18e-08, 115.000 (wgt'ed) examples reached here.  /* #pos=115 */
%   | | else return 0.209757715632535;  // std dev = 1.81e-08, 154.000 (wgt'ed) examples reached here.  /* #pos=154 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109175;  // std dev = 0.000, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17709649774527722;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #pos=224 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527675;  // std dev = 5.96e-08, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 0.17709649774527692;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A) )
%   | then return -0.07324622576333724;  // std dev = 0.000, 410.000 (wgt'ed) examples reached here.  /* #neg=410 */
%   | else return -0.07324622576333703;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06842697784420268;  // std dev = 2.08e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420354;  // std dev = 0.000, 525.000 (wgt'ed) examples reached here.  /* #neg=525 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #pos=269 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( female(B) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.141 seconds
Total inference time: 1.234 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.894 seconds
Refined model CLL: -0.064083


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.504 seconds
Total inference time: 1.234 seconds
AUC ROC: 1.0
Total revision time: 13.504
Best scored revision CLL: -0.064083


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.504, 'Inference time': 1.234, 'parameter_0.8': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067549, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.791, 'Inference time': 1.41}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
0;true;publication(D, B), publication(D, A).;true;true
0;true,true;tempadvisedby(E, B), publication(F, E).;true;false
0;true,true,true;publication(F, B).;false;false
0;true,false;publication(G, A), publication(H, B).;true;true
0;true,false,true;hasposition(I, C), publication(G, I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
0;false;student(B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E), tempadvisedby(F, B).;true;false
1;true,true,true;ta(G, F, H).;false;false
1;true,false;publication(I, A).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,false,false;ta(K, A, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B).;true;false
2;true,true,true;ta(E, D, F), ta(G, A, F).;false;false
2;true,false;publication(H, B), ta(I, A, J).;true;true
2;true,false,true;tempadvisedby(K, B), ta(L, K, J).;false;false
2;true,false,false;publication(M, A).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;publication(C, D), ta(E, D, F).;true;true
3;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
3;true,true,false;publication(C, H), tempadvisedby(I, H).;false;false
3;true,false;publication(J, A), tempadvisedby(K, B).;true;true
3;true,false,true;ta(L, K, M), publication(N, B).;false;false
3;true,false,false;tempadvisedby(P, B), ta(Q, P, R).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, B), ta(D, A, E).;true;true
4;true,true;publication(F, A).;true;true
4;true,true,true;publication(C, G), ta(H, G, I).;false;false
4;true,true,false;ta(J, K, E), publication(C, K).;false;false
4;true,false;publication(L, A), publication(L, B).;true;true
4;true,false,true;tempadvisedby(M, B).;false;false
4;true,false,false;tempadvisedby(N, B), publication(P, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B), publication(C, A).;true;true
5;true,true;ta(D, A, E).;true;false
5;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
5;true,false;publication(H, B), publication(I, A).;true;true
5;true,false,true;publication(I, J), professor(J).;false;false
5;true,false,false;publication(K, B).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, C, G).;true;true
6;true,true,true;ta(F, H, E), inphase(H, I).;false;false
6;true,true,false;publication(J, B), publication(J, A).;false;false
6;true,false;tempadvisedby(K, B), ta(L, K, M).;true;true
6;true,false,true;ta(L, N, P), publication(Q, N).;false;false
6;true,false,false;publication(R, B), tempadvisedby(S, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A), hasposition(B, D).;true;true
7;true,true;publication(C, B).;false;true
7;true,true,false;tempadvisedby(E, B), ta(F, E, G).;false;false
7;true,false;projectmember(H, B), ta(I, A, J).;false;true
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true;publication(C, B).;true;true
8;true,true;publication(C, D), ta(E, D, F).;true;true
8;true,true,true;sameperson(A, D).;false;false
8;true,true,false;tempadvisedby(G, B).;false;false
8;true,false;projectmember(H, B), publication(I, A).;false;true
8;true,false,false;ta(J, A, K).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;projectmember(C, B).;true;true
9;true,true;publication(D, A).;false;false
9;true,false;ta(E, A, F), hasposition(B, G).;true;true
9;true,false,true;ta(E, H, I), publication(J, H).;false;false
9;true,false,false;publication(K, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.8581489350995085;  // std dev = 1.08e-06, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( genre(I, C), movie(G, I) )
%   | | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004885;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
%   | else return 0.4557099107092691;  // std dev = 4.441, 82.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7301925108237584;  // std dev = 0.026, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14675341991509763;  // std dev = 0.232, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12871542452470722;  // std dev = 0.390, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5666992553826662;  // std dev = 0.034, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, B) )
%   | | then return -0.12492050976546933;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11458076590049873;  // std dev = 0.335, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.42665511464525224;  // std dev = 0.645, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(G, B) )
%   | | | then return -0.11467523446634335;  // std dev = 0.203, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10352884485160506;  // std dev = 0.330, 676.000 (wgt'ed) examples reached here.  /* #neg=676 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.256374651425508;  // std dev = 3.262, 404.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=337 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09392604409412862;  // std dev = 0.273, 649.000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.2738396821020085;  // std dev = 0.548, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.13313117724876808;  // std dev = 0.267, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08677040580380017;  // std dev = 0.284, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2230638034948271;  // std dev = 0.485, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( movie(D, E) )
%   | | then return -0.12185433189077388;  // std dev = 0.234, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07959352110588906;  // std dev = 0.231, 638.000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17726710233522225;  // std dev = 2.92e-07, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | | else return -0.08892668650293746;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( movie(E, B) )
%   | | then return 0.14211160779869614;  // std dev = 1.401, 66.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07420979595195255;  // std dev = 0.234, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13043969424297128;  // std dev = 0.089, 384.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06929638805598924;  // std dev = 0.215, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.10295476837980094;  // std dev = 2.010, 402.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=337 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06483731027400835;  // std dev = 0.193, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067294
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.396 seconds
Total inference time: 1.423 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.24 seconds
Parameter learned model CLL: -0.07116


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(E, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'genre(I, C), movie(G, I)', 'false': 'actor(B)'}, {'true,true,true,true': [1.08e-06, 0, 288], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.11e-08, 26, 0], 'true,false,true,false': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 585, 0], 'false,false': [4.441, 33, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.026, 0, 337], 'true,false,true,true': [0.232, 42, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.39, 597, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, B)'}, {'true,true': [0.034, 0, 337], 'true,false,true': [0.029, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.335, 604, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(G, B)'}, {'true,true,true,true': [0.645, 0, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.203, 50, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.33, 676, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [3.262, 67, 337], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.273, 649, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true': [0.548, 0, 337], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.267, 63, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.284, 628, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,true': [0.485, 0, 337], 'true,false,true': [0.234, 54, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.231, 638, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), genre(B, D)', 'true,true': 'movie(C, B)', 'true,false': 'movie(E, B)'}, {'true,true,true': [2.92e-07, 0, 288], 'true,true,false': [0.0, 41, 0], 'true,false,true': [1.401, 17, 49], 'true,false,false': [0.0, 0, 0], 'false': [0.234, 636, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.089, 47, 337], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.215, 598, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)'}, {'true,true': [2.01, 65, 337], 'true,false': [0.0, 0, 0], 'false': [0.193, 586, 0]}]]
[{'': [0.10707911957168734, 0.06806641656683012], 'true': [4.046146134189459e-15, 4.163336342344337e-17], 'false': [-3.24906293702268e-16, 0.24048185603807262], 'true,true': [4.046146134189459e-15, nan], 'true,true,true': [4.046146134189459e-15, nan], 'true,false': [4.163336342344337e-17, nan], 'true,false,true': [1.708035422500241e-17, -1.1895246692412391e-17]}, {'': [0.07652086361778623, 0.00025541572967910267], 'true': [0.0006753251759220245, 0.001279635371798186], 'true,false': [0.001279635371798186, nan], 'true,false,true': [0.001279635371798186, nan]}, {'': [0.05082632342032129, 0.00018624062134108503], 'true': [0.0011489214398944115, 0.0008656730404546521], 'true,false': [0.0008656730404546521, nan]}, {'': [0.03415053375084898, 0.00016129203652097388], 'true': [0.0012348202721583807, 0.0008241731012389697], 'true,true': [0.0012348202721583807, nan], 'true,true,true': [0.0012348202721583807, nan], 'true,false': [0.0008241731012389697, nan], 'true,false,true': [0.0008241731012389697, nan]}, {'': [0.026343815494692134, 0.00011482288726970921], 'true': [0.026343815494692134, nan], 'true,true': [0.026343815494692134, nan], 'true,true,true': [0.026343815494692134, nan]}, {'': [0.022906765656914355, 0.00012869813559163203], 'true': [0.0008917050821419836, 0.001130568757750767], 'true,false': [0.001130568757750767, nan], 'true,false,true': [0.001130568757750767, nan], 'true,true': [0.0008917050821419836, nan]}, {'': [0.014903176674396402, 8.384082687048931e-05], 'true': [0.0006978533269208761, 0.001016831709996691], 'true,false': [0.001016831709996691, nan]}, {'': [0.01140863327683196, 8.601734645236094e-05], 'true': [0.007730015844409561, 0.029742710516865143], 'true,false': [0.029742710516865143, nan], 'true,true': [2.9605947323337506e-16, -1.3539305178355568e-18]}, {'': [0.00794392827485947, 7.722925376692452e-05], 'true': [0.00794392827485947, nan], 'true,true': [0.00794392827485947, nan]}, {'': [0.010054088335784438, 6.34759317377622e-05], 'true': [0.010054088335784438, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
0;true;movie(D, B), movie(D, A).;true;true
0;true,false;genre(I, C), movie(G, I).;true;true
0;false;actor(B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), genre(B, D).;true;true
7;true,true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.8581489350995085;  // std dev = 1.08e-06, 288.000 (wgt'ed) examples reached here.  /* #pos=288 */
%   | else if ( genre(E, C), movie(F, E) )
%   | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1418510649004887;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
%   | else if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.8581489350995122;  // std dev = 1.69e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.1254446385283913;  // std dev = 4.93e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else return -0.1254446385283923;  // std dev = 0.000, 633.000 (wgt'ed) examples reached here.  /* #neg=633 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.11231637819360636;  // std dev = 3.23e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.11231637819360607;  // std dev = 0.000, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( female(B) )
%   | then return -0.10159632948783658;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else return -0.1015963294878366;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015116;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.09269127618926183;  // std dev = 0.000, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948895;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.25517224256948845;  // std dev = 1.18e-08, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 2.63e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.0851847513883968;  // std dev = 3.73e-09, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839675;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return -0.08518475138839675;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839675;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839675;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | | | else return -0.08518475138839675;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325349;  // std dev = 1.67e-08, 147.000 (wgt'ed) examples reached here.  /* #pos=147 */
%   | | else return 0.20975771563253487;  // std dev = 1.97e-08, 190.000 (wgt'ed) examples reached here.  /* #pos=190 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.07877675473109241;  // std dev = 0.000, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527728;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #pos=105 */
%   | | | else return 0.17709649774527775;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1770964977452767;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333685;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return -0.07324622576333699;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return -0.07324622576333724;  // std dev = 0.000, 434.000 (wgt'ed) examples reached here.  /* #neg=434 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367155;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.06842697784420276;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( female(B) )
%   | then return -0.06842697784420258;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420258;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return -0.06842697784420236;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801162;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( female(B) )
%   | then return -0.06419184008202619;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202608;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else return -0.06419184008202612;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.586 seconds
Total inference time: 1.422 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.126 seconds
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 15.348 seconds
Total inference time: 1.422 seconds
AUC ROC: 1.0
Total revision time: 15.348
Best scored revision CLL: -0.064087


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063719, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 15.348, 'Inference time': 1.422, 'parameter_1.0': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067294, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.396, 'Inference time': 1.423}}


